# (C) 2001-2017 Intel Corporation. All rights reserved.
# Your use of Intel Corporation's design tools, logic functions and other 
# software and tools, and its AMPP partner logic functions, and any output 
# files any of the foregoing (including device programming or simulation 
# files), and any associated documentation or information are expressly subject 
# to the terms and conditions of the Intel Program License Subscription 
# Agreement, Intel MegaCore Function License Agreement, or other applicable 
# license agreement, including, without limitation, that your use is for the 
# sole purpose of programming logic devices manufactured by Intel and sold by 
# Intel or its authorized distributors.  Please refer to the applicable 
# agreement for further details.


# +----------------------------------------------------------------------------+
# |                                                                            |
# | Any megafunction design, and related net list (encrypted or decrypted),    |
# |  support information, device programming or simulation file, and any other |
# |  associated documentation or information provided by Altera or a partner   |
# |  under Altera's Megafunction Partnership Program may be used only to       |
# |  program PLD devices (but not masked PLD devices) from Altera.  Any other  |
# |  use of such megafunction design, net list, support information, device    |
# |  programming or simulation file, or any other related documentation or     |
# |  information is prohibited for any other purpose, including, but not       |
# |  limited to modification, reverse engineering, de-compiling, or use with   |
# |  any other silicon devices, unless such use is explicitly licensed under   |
# |  a separate agreement with Altera or a megafunction partner.  Title to     |
# |  the intellectual property, including patents, copyrights, trademarks,     |
# |  trade secrets, or maskworks, embodied in any such megafunction design,    |
# |  net list, support information, device programming or simulation file, or  |
# |  any other related documentation or information provided by Altera or a    |
# |  megafunction partner, remains with Altera, the megafunction partner, or   |
# |  their respective licensors.  No other licenses, including any licenses    |
# |  needed under any third party's intellectual property, are provided herein.|
# |  Copying or modifying any file, or portion thereof, to which this notice   |
# |  is attached violates this copyright.                                      |
# |                                                                            |
# | THIS FILE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR    |
# | IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,   |
# | FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL    |
# | THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER |
# | LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING    |
# | FROM, OUT OF OR IN CONNECTION WITH THIS FILE OR THE USE OR OTHER DEALINGS  |
# | IN THIS FILE.                                                              |
# |                                                                            |
# | This agreement shall be governed in all respects by the laws of the State  |
# |  of California and by the laws of the United States of America.            |
# |                                                                            |
# +----------------------------------------------------------------------------+

# TCL File Generated by Altera University Program
# DO NOT MODIFY

#package require -exact qsys 13.1

set aup_version 16.1

source "../../lib/aup_ip_generator.tcl"

# +-----------------------------------
# | module altera_up_avalon_audio
# | 
set_module_property DESCRIPTION "Audio Controller for DE-series Boards"
set_module_property NAME altera_up_avalon_audio
set_module_property VERSION $aup_version
set_module_property GROUP "University Program/Audio & Video"
set_module_property AUTHOR "Altera University Program"
set_module_property DISPLAY_NAME Audio
set_module_property DATASHEET_URL "[pwd]/doc/Audio.pdf"
#set_module_property TOP_LEVEL_HDL_FILE altera_up_avalon_audio.v
#set_module_property TOP_LEVEL_HDL_MODULE altera_up_avalon_audio
set_module_property INSTANTIATE_IN_SYSTEM_MODULE true
set_module_property EDITABLE false
set_module_property ANALYZE_HDL false
set_module_property ELABORATION_CALLBACK elaborate
set_module_property GENERATION_CALLBACK generate
# | 
# +-----------------------------------

# +-----------------------------------
# | files
# | 
#add_file altera_up_avalon_audio.v {SYNTHESIS SIMULATION}
add_file "hdl/altera_up_audio_bit_counter.v" {SYNTHESIS SIMULATION}
add_file "hdl/altera_up_audio_in_deserializer.v" {SYNTHESIS SIMULATION}
add_file "hdl/altera_up_audio_out_serializer.v" {SYNTHESIS SIMULATION}
add_file "hdl/altera_up_clock_edge.v" {SYNTHESIS SIMULATION}
add_file "hdl/altera_up_sync_fifo.v" {SYNTHESIS SIMULATION}
# | 
# +-----------------------------------

# +-----------------------------------
# | parameters
# | 
add_parameter avalon_bus_type string "Memory Mapped"
set_parameter_property avalon_bus_type DISPLAY_NAME "Avalon Type"
set_parameter_property avalon_bus_type GROUP "Interface Settings"
set_parameter_property avalon_bus_type UNITS None
set_parameter_property avalon_bus_type AFFECTS_ELABORATION true
set_parameter_property avalon_bus_type AFFECTS_GENERATION true
set_parameter_property avalon_bus_type ALLOWED_RANGES {"Memory Mapped" "Streaming"}
set_parameter_property avalon_bus_type VISIBLE true
set_parameter_property avalon_bus_type ENABLED true

add_parameter audio_in boolean true
set_parameter_property audio_in DISPLAY_NAME "Audio In"
set_parameter_property audio_in GROUP "Audio Direction"
set_parameter_property audio_in UNITS None
set_parameter_property audio_in AFFECTS_ELABORATION true
set_parameter_property audio_in AFFECTS_GENERATION true
set_parameter_property audio_in VISIBLE true
set_parameter_property audio_in ENABLED true

add_parameter audio_out boolean true
set_parameter_property audio_out DISPLAY_NAME "Audio Out"
set_parameter_property audio_out GROUP "Audio Direction"
set_parameter_property audio_out UNITS None
set_parameter_property audio_out AFFECTS_ELABORATION true
set_parameter_property audio_out AFFECTS_GENERATION true
set_parameter_property audio_out VISIBLE true
set_parameter_property audio_out ENABLED true

add_parameter dw integer 16
set_parameter_property dw DISPLAY_NAME "Data Width:"
set_parameter_property dw GROUP "Data Format"
set_parameter_property dw UNITS None
set_parameter_property dw AFFECTS_ELABORATION true
set_parameter_property dw AFFECTS_GENERATION true
set_parameter_property dw ALLOWED_RANGES {16 20 24 32}
set_parameter_property dw VISIBLE true
set_parameter_property dw ENABLED true
# | 
# +-----------------------------------

# +-----------------------------------
# | connection point clk
# | 
add_interface clk clock end
set_interface_property clk enabled true

add_interface_port clk clk clk Input 1
# | 
# +-----------------------------------

# +-----------------------------------
# | connection point reset
# | 
add_interface reset reset end
set_interface_property reset associatedClock clk
set_interface_property reset enabled true
set_interface_property reset synchronousEdges DEASSERT

add_interface_port reset reset reset Input 1
# | 
# +-----------------------------------

# +-----------------------------------
# | Elaboration function
# | 
proc elaborate {} {
	set avalon_bus_type	[ get_parameter_value "avalon_bus_type" ]
	set audio_in			[ get_parameter_value "audio_in" ]
	set audio_out			[ get_parameter_value "audio_out" ]
	set dw					[ get_parameter_value "dw" ]

	if { $avalon_bus_type == "Memory Mapped" } {
		# +-----------------------------------
		# | connection point avalon_audio_slave
		# | 
		add_interface avalon_audio_slave avalon end 
		set_interface_property avalon_audio_slave addressAlignment DYNAMIC
		set_interface_property avalon_audio_slave associatedClock clk
		set_interface_property avalon_audio_slave associatedReset reset
		set_interface_property avalon_audio_slave bridgesToMaster ""
		set_interface_property avalon_audio_slave burstOnBurstBoundariesOnly false
		#set_interface_property avalon_audio_slave explicitAddressSpan 16
		set_interface_property avalon_audio_slave holdTime 0
		set_interface_property avalon_audio_slave isBigEndian  false
		set_interface_property avalon_audio_slave isFlash false
		set_interface_property avalon_audio_slave isMemoryDevice false
		set_interface_property avalon_audio_slave isNonVolatileStorage false
		set_interface_property avalon_audio_slave linewrapBursts false
		set_interface_property avalon_audio_slave maximumPendingReadTransactions 0
		set_interface_property avalon_audio_slave minimumUninterruptedRunLength 1
		set_interface_property avalon_audio_slave printableDevice false
		set_interface_property avalon_audio_slave readLatency 1
		set_interface_property avalon_audio_slave readWaitTime 0
		set_interface_property avalon_audio_slave setupTime 0
		set_interface_property avalon_audio_slave timingUnits cycles
		set_interface_property avalon_audio_slave writeWaitTime 0

		add_interface_port avalon_audio_slave address address Input 2
		add_interface_port avalon_audio_slave chipselect chipselect Input 1
		add_interface_port avalon_audio_slave read read Input 1
		add_interface_port avalon_audio_slave write write Input 1
		add_interface_port avalon_audio_slave writedata writedata Input 32
		add_interface_port avalon_audio_slave readdata readdata Output 32
		# | 
		# +-----------------------------------

		# +-----------------------------------
		# | connection point interrupt
		# | 
		add_interface interrupt interrupt sender 

		set_interface_property interrupt associatedAddressablePoint avalon_audio_slave
		set_interface_property interrupt associatedClock clk
		set_interface_property interrupt associatedReset reset

		add_interface_port interrupt irq irq Output 1
		# | 
		# +-----------------------------------
	} else {
		# +-----------------------------------
		# | connection point avalon_left_channel_source
		# | 
		add_interface avalon_left_channel_source avalon_streaming start 
		set_interface_property avalon_left_channel_source associatedClock clk
		set_interface_property avalon_left_channel_source associatedReset reset
		set_interface_property avalon_left_channel_source errorDescriptor ""
		set_interface_property avalon_left_channel_source maxChannel 0
		set_interface_property avalon_left_channel_source readyLatency 0

		add_interface_port avalon_left_channel_source from_adc_left_channel_ready ready Input 1
		add_interface_port avalon_left_channel_source from_adc_left_channel_data data Output $dw
		add_interface_port avalon_left_channel_source from_adc_left_channel_valid valid Output 1
		# | 
		# +-----------------------------------

		# +-----------------------------------
		# | connection point avalon_right_channel_source
		# | 
		add_interface avalon_right_channel_source avalon_streaming start
		set_interface_property avalon_right_channel_source associatedClock clk
		set_interface_property avalon_right_channel_source associatedReset reset
		set_interface_property avalon_right_channel_source errorDescriptor ""
		set_interface_property avalon_right_channel_source maxChannel 0
		set_interface_property avalon_right_channel_source readyLatency 0

		add_interface_port avalon_right_channel_source from_adc_right_channel_ready ready Input 1
		add_interface_port avalon_right_channel_source from_adc_right_channel_data data Output $dw
		add_interface_port avalon_right_channel_source from_adc_right_channel_valid valid Output 1
		# | 
		# +-----------------------------------

		# +-----------------------------------
		# | connection point avalon_left_channel_sink
		# | 
		add_interface avalon_left_channel_sink avalon_streaming end 
		set_interface_property avalon_left_channel_sink associatedClock clk
		set_interface_property avalon_left_channel_sink associatedReset reset
		set_interface_property avalon_left_channel_sink errorDescriptor ""
		set_interface_property avalon_left_channel_sink maxChannel 0
		set_interface_property avalon_left_channel_sink readyLatency 0

		add_interface_port avalon_left_channel_sink to_dac_left_channel_data data Input $dw
		add_interface_port avalon_left_channel_sink to_dac_left_channel_valid valid Input 1
		add_interface_port avalon_left_channel_sink to_dac_left_channel_ready ready Output 1
		# | 
		# +-----------------------------------

		# +-----------------------------------
		# | connection point avalon_right_channel_sink
		# | 
		add_interface avalon_right_channel_sink avalon_streaming end 
		set_interface_property avalon_right_channel_sink associatedClock clk
		set_interface_property avalon_right_channel_sink associatedReset reset
		set_interface_property avalon_right_channel_sink errorDescriptor ""
		set_interface_property avalon_right_channel_sink maxChannel 0
		set_interface_property avalon_right_channel_sink readyLatency 0

		add_interface_port avalon_right_channel_sink to_dac_right_channel_data data Input $dw
		add_interface_port avalon_right_channel_sink to_dac_right_channel_valid valid Input 1
		add_interface_port avalon_right_channel_sink to_dac_right_channel_ready ready Output 1
		# | 
		# +-----------------------------------
	}
	
	# +-----------------------------------
	# | connection point external_interface
	# | 
	add_interface external_interface conduit end 
		
	if { $audio_in } {
		add_interface_port external_interface AUD_ADCDAT export Input 1
		add_interface_port external_interface AUD_ADCLRCK export Input 1
	}
	add_interface_port external_interface AUD_BCLK export Input 1
	if { $audio_out } {
		add_interface_port external_interface AUD_DACDAT export Output 1
		add_interface_port external_interface AUD_DACLRCK export Input 1
	}
	# | 
	# +-----------------------------------
}
# | 
# +-----------------------------------

# +-----------------------------------
# | Generation function
# | 
proc generate {} {
	send_message info "Starting Generation of Audio Controller"

	# get parameter values
	set avalon_bus_type	[ get_parameter_value "avalon_bus_type" ]
	set audio_in			[ get_parameter_value "audio_in" ]
	set audio_out			[ get_parameter_value "audio_out" ]
	set dw					[ get_parameter_value "dw" ]
	set dw					[ expr $dw - 1 ]
	set bci					"5'd$dw"

	# set section values
	set use_audio_in	[ format "USE_AUDIO_IN:%d" [ string match "true" $audio_in ] ]
	set use_audio_out	[ format "USE_AUDIO_OUT:%d" [ string match "true" $audio_out ] ]

	# set arguments
	set params "DW:$dw;BIT_COUNTER_INIT:$bci"
	set sections "$use_audio_in;$use_audio_out" 

	# get generation settings
#	set dest_language	[ get_generation_property HDL_LANGUAGE ]
	set dest_dir 		[ get_generation_property OUTPUT_DIRECTORY ]
	set dest_name		[ get_generation_property OUTPUT_NAME ]
	
	add_file "$dest_dir$dest_name.v" {SYNTHESIS SIMULATION}
	# add_file "$dest_dir/altera_up_audio_bit_counter.v" SYNTHESIS
	# add_file "$dest_dir/altera_up_audio_in_deserializer.v" SYNTHESIS
	# add_file "$dest_dir/altera_up_audio_out_serializer.v" SYNTHESIS
	# add_file "$dest_dir/altera_up_clock_edge.v" SYNTHESIS
	# add_file "$dest_dir/altera_up_sync_fifo.v" SYNTHESIS

	# Generate HDL
	if { $avalon_bus_type == "Memory Mapped" } {
		alt_up_generate "$dest_dir$dest_name.v" "hdl/altera_up_avalon_mm_audio.v" "altera_up_avalon_mm_audio" $dest_name $params $sections
	} else {
		alt_up_generate "$dest_dir$dest_name.v" "hdl/altera_up_avalon_st_audio.v" "altera_up_avalon_st_audio" $dest_name $params $sections
	}
	# file copy -force "hdl/altera_up_audio_bit_counter.v" $dest_dir
	# file copy -force "hdl/altera_up_audio_in_deserializer.v" $dest_dir
	# file copy -force "hdl/altera_up_audio_out_serializer.v" $dest_dir
	# file copy -force "hdl/altera_up_clock_edge.v" $dest_dir
	# file copy -force "hdl/altera_up_sync_fifo.v" $dest_dir

	# generate top level template
	#alt_up_create_instantiation_template "$dest_dir$dest_name.inst.v" $dest_name "external_interface"
}
# | 
# +-----------------------------------


## Add documentation links for user guide and/or release notes
add_documentation_link "User Guide" file:///ip/altera/university_program/audio_video/altera_up_avalon_audio/doc/Audio.pdf
add_documentation_link "Release Notes" https://documentation.altera.com/#/link/hco1421698042087/hco1421698013408
