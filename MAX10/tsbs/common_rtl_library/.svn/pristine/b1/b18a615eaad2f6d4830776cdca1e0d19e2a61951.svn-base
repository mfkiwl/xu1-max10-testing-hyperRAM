/*
 * This source file contains a Verilog description of an IP core
 * automatically generated by the SPIRAL HDL Generator.
 *
 * This product includes a hardware design developed by Carnegie Mellon University.
 *
 * Copyright (c) 2005-2011 by Peter A. Milder for the SPIRAL Project,
 * Carnegie Mellon University
 *
 * For more information, see the SPIRAL project website at:
 *   http://www.spiral.net
 *
 * This design is provided for internal, non-commercial research use only
 * and is not for redistribution, with or without modifications.
 * 
 * You may not use the name "Carnegie Mellon University" or derivations
 * thereof to endorse or promote products derived from this software.
 *
 * THE SOFTWARE IS PROVIDED "AS-IS" WITHOUT ANY WARRANTY OF ANY KIND, EITHER
 * EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO ANY WARRANTY
 * THAT THE SOFTWARE WILL CONFORM TO SPECIFICATIONS OR BE ERROR-FREE AND ANY
 * IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE,
 * TITLE, OR NON-INFRINGEMENT.  IN NO EVENT SHALL CARNEGIE MELLON UNIVERSITY
 * BE LIABLE FOR ANY DAMAGES, INCLUDING BUT NOT LIMITED TO DIRECT, INDIRECT,
 * SPECIAL OR CONSEQUENTIAL DAMAGES, ARISING OUT OF, RESULTING FROM, OR IN
 * ANY WAY CONNECTED WITH THIS SOFTWARE (WHETHER OR NOT BASED UPON WARRANTY,
 * CONTRACT, TORT OR OTHERWISE).
 *
 */
 
 /*
 
DFT Size = 1024
direction = forward
data type = 20 bit fixed point, scaled 
architecture = fully streaming
radix = 4
streaming width = 4
data ordering = natural input / natural output
BRAM budget = -1

*/

//   Input/output stream: 4 complex words per cycle
//   Throughput: one transform every 256 cycles
//   Latency: 1797 cycles

//   Resources required:
//     48 multipliers (20 x 20 bit)
//     104 adders (20 x 20 bit)
//     8 RAMs (128 words, 40 bits per word)
//     8 RAMs (8 words, 40 bits per word)
//     8 RAMs (32 words, 40 bits per word)
//     24 RAMs (512 words, 40 bits per word)
//     6 ROMs (64 words, 20 bits per word)
//     6 ROMs (256 words, 20 bits per word)
//     8 ROMs (64 words, 6 bits per word)
//     6 ROMs (16 words, 20 bits per word)
//     24 ROMs (256 words, 8 bits per word)

// Generated on Fri Aug 30 01:38:57 EDT 2019

// Latency: 1797 clock cycles
// Throughput: 1 transform every 256 cycles


// We use an interleaved complex data format.  X0 represents the
// real portion of the first input, and X1 represents the imaginary
// portion.  The X variables are system inputs and the Y variables
// are system outputs.

// The design uses a system of flag signals to indicate the
// beginning of the input and output data streams.  The 'next'
// input (asserted high), is used to instruct the system that the
// input stream will begin on the following cycle.

// This system has a 'gap' of 256 cycles.  This means that
// 256 cycles must elapse between the beginning of the input
// vectors.

// The output signal 'next_out' (also asserted high) indicates
// that the output vector will begin streaming out of the system
 // on the following cycle.

// The system has a latency of 1797 cycles.  This means that
// the 'next_out' will be asserted 1797 cycles after the user
// asserts 'next'.

// The simple testbench below will demonstrate the timing for loading
// and unloading data vectors.
// The system reset signal is asserted high.

// Please note: when simulating floating point code, you must include
// Xilinx's DSP slice simulation module.

// Latency: 1797
// Gap: 256
// module_name_is:dft_top
module dft_top(clk, reset, next, next_out,
   X0, Y0,
   X1, Y1,
   X2, Y2,
   X3, Y3,
   X4, Y4,
   X5, Y5,
   X6, Y6,
   X7, Y7);

   output next_out;
   input clk, reset, next;

   input [19:0] X0,
      X1,
      X2,
      X3,
      X4,
      X5,
      X6,
      X7;

   output [19:0] Y0,
      Y1,
      Y2,
      Y3,
      Y4,
      Y5,
      Y6,
      Y7;

   wire [19:0] t0_0;
   wire [19:0] t0_1;
   wire [19:0] t0_2;
   wire [19:0] t0_3;
   wire [19:0] t0_4;
   wire [19:0] t0_5;
   wire [19:0] t0_6;
   wire [19:0] t0_7;
   wire next_0;
   wire [19:0] t1_0;
   wire [19:0] t1_1;
   wire [19:0] t1_2;
   wire [19:0] t1_3;
   wire [19:0] t1_4;
   wire [19:0] t1_5;
   wire [19:0] t1_6;
   wire [19:0] t1_7;
   wire next_1;
   wire [19:0] t2_0;
   wire [19:0] t2_1;
   wire [19:0] t2_2;
   wire [19:0] t2_3;
   wire [19:0] t2_4;
   wire [19:0] t2_5;
   wire [19:0] t2_6;
   wire [19:0] t2_7;
   wire next_2;
   wire [19:0] t3_0;
   wire [19:0] t3_1;
   wire [19:0] t3_2;
   wire [19:0] t3_3;
   wire [19:0] t3_4;
   wire [19:0] t3_5;
   wire [19:0] t3_6;
   wire [19:0] t3_7;
   wire next_3;
   wire [19:0] t4_0;
   wire [19:0] t4_1;
   wire [19:0] t4_2;
   wire [19:0] t4_3;
   wire [19:0] t4_4;
   wire [19:0] t4_5;
   wire [19:0] t4_6;
   wire [19:0] t4_7;
   wire next_4;
   wire [19:0] t5_0;
   wire [19:0] t5_1;
   wire [19:0] t5_2;
   wire [19:0] t5_3;
   wire [19:0] t5_4;
   wire [19:0] t5_5;
   wire [19:0] t5_6;
   wire [19:0] t5_7;
   wire next_5;
   wire [19:0] t6_0;
   wire [19:0] t6_1;
   wire [19:0] t6_2;
   wire [19:0] t6_3;
   wire [19:0] t6_4;
   wire [19:0] t6_5;
   wire [19:0] t6_6;
   wire [19:0] t6_7;
   wire next_6;
   wire [19:0] t7_0;
   wire [19:0] t7_1;
   wire [19:0] t7_2;
   wire [19:0] t7_3;
   wire [19:0] t7_4;
   wire [19:0] t7_5;
   wire [19:0] t7_6;
   wire [19:0] t7_7;
   wire next_7;
   wire [19:0] t8_0;
   wire [19:0] t8_1;
   wire [19:0] t8_2;
   wire [19:0] t8_3;
   wire [19:0] t8_4;
   wire [19:0] t8_5;
   wire [19:0] t8_6;
   wire [19:0] t8_7;
   wire next_8;
   wire [19:0] t9_0;
   wire [19:0] t9_1;
   wire [19:0] t9_2;
   wire [19:0] t9_3;
   wire [19:0] t9_4;
   wire [19:0] t9_5;
   wire [19:0] t9_6;
   wire [19:0] t9_7;
   wire next_9;
   wire [19:0] t10_0;
   wire [19:0] t10_1;
   wire [19:0] t10_2;
   wire [19:0] t10_3;
   wire [19:0] t10_4;
   wire [19:0] t10_5;
   wire [19:0] t10_6;
   wire [19:0] t10_7;
   wire next_10;
   wire [19:0] t11_0;
   wire [19:0] t11_1;
   wire [19:0] t11_2;
   wire [19:0] t11_3;
   wire [19:0] t11_4;
   wire [19:0] t11_5;
   wire [19:0] t11_6;
   wire [19:0] t11_7;
   wire next_11;
   wire [19:0] t12_0;
   wire [19:0] t12_1;
   wire [19:0] t12_2;
   wire [19:0] t12_3;
   wire [19:0] t12_4;
   wire [19:0] t12_5;
   wire [19:0] t12_6;
   wire [19:0] t12_7;
   wire next_12;
   wire [19:0] t13_0;
   wire [19:0] t13_1;
   wire [19:0] t13_2;
   wire [19:0] t13_3;
   wire [19:0] t13_4;
   wire [19:0] t13_5;
   wire [19:0] t13_6;
   wire [19:0] t13_7;
   wire next_13;
   wire [19:0] t14_0;
   wire [19:0] t14_1;
   wire [19:0] t14_2;
   wire [19:0] t14_3;
   wire [19:0] t14_4;
   wire [19:0] t14_5;
   wire [19:0] t14_6;
   wire [19:0] t14_7;
   wire next_14;
   wire [19:0] t15_0;
   wire [19:0] t15_1;
   wire [19:0] t15_2;
   wire [19:0] t15_3;
   wire [19:0] t15_4;
   wire [19:0] t15_5;
   wire [19:0] t15_6;
   wire [19:0] t15_7;
   wire next_15;
   assign t0_0 = X0;
   assign Y0 = t15_0;
   assign t0_1 = X1;
   assign Y1 = t15_1;
   assign t0_2 = X2;
   assign Y2 = t15_2;
   assign t0_3 = X3;
   assign Y3 = t15_3;
   assign t0_4 = X4;
   assign Y4 = t15_4;
   assign t0_5 = X5;
   assign Y5 = t15_5;
   assign t0_6 = X6;
   assign Y6 = t15_6;
   assign t0_7 = X7;
   assign Y7 = t15_7;
   assign next_0 = next;
   assign next_out = next_15;

// latency=517, gap=256
   rc36797 stage0(.clk(clk), .reset(reset), .next(next_0), .next_out(next_1),
    .X0(t0_0), .Y0(t1_0),
    .X1(t0_1), .Y1(t1_1),
    .X2(t0_2), .Y2(t1_2),
    .X3(t0_3), .Y3(t1_3),
    .X4(t0_4), .Y4(t1_4),
    .X5(t0_5), .Y5(t1_5),
    .X6(t0_6), .Y6(t1_6),
    .X7(t0_7), .Y7(t1_7));


// latency=3, gap=256
   codeBlock36799 stage1(.clk(clk), .reset(reset), .next_in(next_1), .next_out(next_2),
       .X0_in(t1_0), .Y0(t2_0),
       .X1_in(t1_1), .Y1(t2_1),
       .X2_in(t1_2), .Y2(t2_2),
       .X3_in(t1_3), .Y3(t2_3),
       .X4_in(t1_4), .Y4(t2_4),
       .X5_in(t1_5), .Y5(t2_5),
       .X6_in(t1_6), .Y6(t2_6),
       .X7_in(t1_7), .Y7(t2_7));


// latency=13, gap=256
   rc37013 stage2(.clk(clk), .reset(reset), .next(next_2), .next_out(next_3),
    .X0(t2_0), .Y0(t3_0),
    .X1(t2_1), .Y1(t3_1),
    .X2(t2_2), .Y2(t3_2),
    .X3(t2_3), .Y3(t3_3),
    .X4(t2_4), .Y4(t3_4),
    .X5(t2_5), .Y5(t3_5),
    .X6(t2_6), .Y6(t3_6),
    .X7(t2_7), .Y7(t3_7));


// latency=12, gap=256
   DirSum_37386 stage3(.next(next_3), .clk(clk), .reset(reset), .next_out(next_4),
       .X0(t3_0), .Y0(t4_0),
       .X1(t3_1), .Y1(t4_1),
       .X2(t3_2), .Y2(t4_2),
       .X3(t3_3), .Y3(t4_3),
       .X4(t3_4), .Y4(t4_4),
       .X5(t3_5), .Y5(t4_5),
       .X6(t3_6), .Y6(t4_6),
       .X7(t3_7), .Y7(t4_7));


// latency=3, gap=256
   codeBlock37389 stage4(.clk(clk), .reset(reset), .next_in(next_4), .next_out(next_5),
       .X0_in(t4_0), .Y0(t5_0),
       .X1_in(t4_1), .Y1(t5_1),
       .X2_in(t4_2), .Y2(t5_2),
       .X3_in(t4_3), .Y3(t5_3),
       .X4_in(t4_4), .Y4(t5_4),
       .X5_in(t4_5), .Y5(t5_5),
       .X6_in(t4_6), .Y6(t5_6),
       .X7_in(t4_7), .Y7(t5_7));


// latency=37, gap=256
   rc37603 stage5(.clk(clk), .reset(reset), .next(next_5), .next_out(next_6),
    .X0(t5_0), .Y0(t6_0),
    .X1(t5_1), .Y1(t6_1),
    .X2(t5_2), .Y2(t6_2),
    .X3(t5_3), .Y3(t6_3),
    .X4(t5_4), .Y4(t6_4),
    .X5(t5_5), .Y5(t6_5),
    .X6(t5_6), .Y6(t6_6),
    .X7(t5_7), .Y7(t6_7));


// latency=12, gap=256
   DirSum_38072 stage6(.next(next_6), .clk(clk), .reset(reset), .next_out(next_7),
       .X0(t6_0), .Y0(t7_0),
       .X1(t6_1), .Y1(t7_1),
       .X2(t6_2), .Y2(t7_2),
       .X3(t6_3), .Y3(t7_3),
       .X4(t6_4), .Y4(t7_4),
       .X5(t6_5), .Y5(t7_5),
       .X6(t6_6), .Y6(t7_6),
       .X7(t6_7), .Y7(t7_7));


// latency=3, gap=256
   codeBlock38075 stage7(.clk(clk), .reset(reset), .next_in(next_7), .next_out(next_8),
       .X0_in(t7_0), .Y0(t8_0),
       .X1_in(t7_1), .Y1(t8_1),
       .X2_in(t7_2), .Y2(t8_2),
       .X3_in(t7_3), .Y3(t8_3),
       .X4_in(t7_4), .Y4(t8_4),
       .X5_in(t7_5), .Y5(t8_5),
       .X6_in(t7_6), .Y6(t8_6),
       .X7_in(t7_7), .Y7(t8_7));


// latency=133, gap=256
   rc38289 stage8(.clk(clk), .reset(reset), .next(next_8), .next_out(next_9),
    .X0(t8_0), .Y0(t9_0),
    .X1(t8_1), .Y1(t9_1),
    .X2(t8_2), .Y2(t9_2),
    .X3(t8_3), .Y3(t9_3),
    .X4(t8_4), .Y4(t9_4),
    .X5(t8_5), .Y5(t9_5),
    .X6(t8_6), .Y6(t9_6),
    .X7(t8_7), .Y7(t9_7));


// latency=12, gap=256
   DirSum_39142 stage9(.next(next_9), .clk(clk), .reset(reset), .next_out(next_10),
       .X0(t9_0), .Y0(t10_0),
       .X1(t9_1), .Y1(t10_1),
       .X2(t9_2), .Y2(t10_2),
       .X3(t9_3), .Y3(t10_3),
       .X4(t9_4), .Y4(t10_4),
       .X5(t9_5), .Y5(t10_5),
       .X6(t9_6), .Y6(t10_6),
       .X7(t9_7), .Y7(t10_7));


// latency=3, gap=256
   codeBlock39145 stage10(.clk(clk), .reset(reset), .next_in(next_10), .next_out(next_11),
       .X0_in(t10_0), .Y0(t11_0),
       .X1_in(t10_1), .Y1(t11_1),
       .X2_in(t10_2), .Y2(t11_2),
       .X3_in(t10_3), .Y3(t11_3),
       .X4_in(t10_4), .Y4(t11_4),
       .X5_in(t10_5), .Y5(t11_5),
       .X6_in(t10_6), .Y6(t11_6),
       .X7_in(t10_7), .Y7(t11_7));


// latency=517, gap=256
   rc39359 stage11(.clk(clk), .reset(reset), .next(next_11), .next_out(next_12),
    .X0(t11_0), .Y0(t12_0),
    .X1(t11_1), .Y1(t12_1),
    .X2(t11_2), .Y2(t12_2),
    .X3(t11_3), .Y3(t12_3),
    .X4(t11_4), .Y4(t12_4),
    .X5(t11_5), .Y5(t12_5),
    .X6(t11_6), .Y6(t12_6),
    .X7(t11_7), .Y7(t12_7));


// latency=12, gap=256
   DirSum_41747 stage12(.next(next_12), .clk(clk), .reset(reset), .next_out(next_13),
       .X0(t12_0), .Y0(t13_0),
       .X1(t12_1), .Y1(t13_1),
       .X2(t12_2), .Y2(t13_2),
       .X3(t12_3), .Y3(t13_3),
       .X4(t12_4), .Y4(t13_4),
       .X5(t12_5), .Y5(t13_5),
       .X6(t12_6), .Y6(t13_6),
       .X7(t12_7), .Y7(t13_7));


// latency=3, gap=256
   codeBlock41750 stage13(.clk(clk), .reset(reset), .next_in(next_13), .next_out(next_14),
       .X0_in(t13_0), .Y0(t14_0),
       .X1_in(t13_1), .Y1(t14_1),
       .X2_in(t13_2), .Y2(t14_2),
       .X3_in(t13_3), .Y3(t14_3),
       .X4_in(t13_4), .Y4(t14_4),
       .X5_in(t13_5), .Y5(t14_5),
       .X6_in(t13_6), .Y6(t14_6),
       .X7_in(t13_7), .Y7(t14_7));


// latency=517, gap=256
   rc41964 stage14(.clk(clk), .reset(reset), .next(next_14), .next_out(next_15),
    .X0(t14_0), .Y0(t15_0),
    .X1(t14_1), .Y1(t15_1),
    .X2(t14_2), .Y2(t15_2),
    .X3(t14_3), .Y3(t15_3),
    .X4(t14_4), .Y4(t15_4),
    .X5(t14_5), .Y5(t15_5),
    .X6(t14_6), .Y6(t15_6),
    .X7(t14_7), .Y7(t15_7));


endmodule

// Latency: 517
// Gap: 256
module rc36797(clk, reset, next, next_out,
   X0, Y0,
   X1, Y1,
   X2, Y2,
   X3, Y3,
   X4, Y4,
   X5, Y5,
   X6, Y6,
   X7, Y7);

   output next_out;
   input clk, reset, next;

   input [19:0] X0,
      X1,
      X2,
      X3,
      X4,
      X5,
      X6,
      X7;

   output [19:0] Y0,
      Y1,
      Y2,
      Y3,
      Y4,
      Y5,
      Y6,
      Y7;

   wire [39:0] t0;
   wire [39:0] s0;
   assign t0 = {X0, X1};
   wire [39:0] t1;
   wire [39:0] s1;
   assign t1 = {X2, X3};
   wire [39:0] t2;
   wire [39:0] s2;
   assign t2 = {X4, X5};
   wire [39:0] t3;
   wire [39:0] s3;
   assign t3 = {X6, X7};
   assign Y0 = s0[39:20];
   assign Y1 = s0[19:0];
   assign Y2 = s1[39:20];
   assign Y3 = s1[19:0];
   assign Y4 = s2[39:20];
   assign Y5 = s2[19:0];
   assign Y6 = s3[39:20];
   assign Y7 = s3[19:0];

   perm36795 instPerm43783(.x0(t0), .y0(s0),
    .x1(t1), .y1(s1),
    .x2(t2), .y2(s2),
    .x3(t3), .y3(s3),
   .clk(clk), .next(next), .next_out(next_out), .reset(reset)
);



endmodule

module swNet36795(itr, clk, ct
,       x0, y0
,       x1, y1
,       x2, y2
,       x3, y3
);

    parameter width = 40;

    input [7:0] ct;
    input clk;
    input [0:0] itr;
    input [width-1:0] x0;
    output reg [width-1:0] y0;
    input [width-1:0] x1;
    output reg [width-1:0] y1;
    input [width-1:0] x2;
    output reg [width-1:0] y2;
    input [width-1:0] x3;
    output reg [width-1:0] y3;
    wire [width-1:0] t0_0, t0_1, t0_2, t0_3;
    wire [width-1:0] t1_0, t1_1, t1_2, t1_3;
    wire [width-1:0] t2_0, t2_1, t2_2, t2_3;
    reg [width-1:0] t3_0, t3_1, t3_2, t3_3;
    wire [width-1:0] t4_0, t4_1, t4_2, t4_3;
    reg [width-1:0] t5_0, t5_1, t5_2, t5_3;

    reg [3:0] control;

    always @(posedge clk) begin
      case(ct)
        8'd0: control <= 4'b1111;
        8'd1: control <= 4'b1111;
        8'd2: control <= 4'b1111;
        8'd3: control <= 4'b1111;
        8'd4: control <= 4'b1111;
        8'd5: control <= 4'b1111;
        8'd6: control <= 4'b1111;
        8'd7: control <= 4'b1111;
        8'd8: control <= 4'b1111;
        8'd9: control <= 4'b1111;
        8'd10: control <= 4'b1111;
        8'd11: control <= 4'b1111;
        8'd12: control <= 4'b1111;
        8'd13: control <= 4'b1111;
        8'd14: control <= 4'b1111;
        8'd15: control <= 4'b1111;
        8'd16: control <= 4'b1111;
        8'd17: control <= 4'b1111;
        8'd18: control <= 4'b1111;
        8'd19: control <= 4'b1111;
        8'd20: control <= 4'b1111;
        8'd21: control <= 4'b1111;
        8'd22: control <= 4'b1111;
        8'd23: control <= 4'b1111;
        8'd24: control <= 4'b1111;
        8'd25: control <= 4'b1111;
        8'd26: control <= 4'b1111;
        8'd27: control <= 4'b1111;
        8'd28: control <= 4'b1111;
        8'd29: control <= 4'b1111;
        8'd30: control <= 4'b1111;
        8'd31: control <= 4'b1111;
        8'd32: control <= 4'b1111;
        8'd33: control <= 4'b1111;
        8'd34: control <= 4'b1111;
        8'd35: control <= 4'b1111;
        8'd36: control <= 4'b1111;
        8'd37: control <= 4'b1111;
        8'd38: control <= 4'b1111;
        8'd39: control <= 4'b1111;
        8'd40: control <= 4'b1111;
        8'd41: control <= 4'b1111;
        8'd42: control <= 4'b1111;
        8'd43: control <= 4'b1111;
        8'd44: control <= 4'b1111;
        8'd45: control <= 4'b1111;
        8'd46: control <= 4'b1111;
        8'd47: control <= 4'b1111;
        8'd48: control <= 4'b1111;
        8'd49: control <= 4'b1111;
        8'd50: control <= 4'b1111;
        8'd51: control <= 4'b1111;
        8'd52: control <= 4'b1111;
        8'd53: control <= 4'b1111;
        8'd54: control <= 4'b1111;
        8'd55: control <= 4'b1111;
        8'd56: control <= 4'b1111;
        8'd57: control <= 4'b1111;
        8'd58: control <= 4'b1111;
        8'd59: control <= 4'b1111;
        8'd60: control <= 4'b1111;
        8'd61: control <= 4'b1111;
        8'd62: control <= 4'b1111;
        8'd63: control <= 4'b1111;
        8'd64: control <= 4'b0011;
        8'd65: control <= 4'b0011;
        8'd66: control <= 4'b0011;
        8'd67: control <= 4'b0011;
        8'd68: control <= 4'b0011;
        8'd69: control <= 4'b0011;
        8'd70: control <= 4'b0011;
        8'd71: control <= 4'b0011;
        8'd72: control <= 4'b0011;
        8'd73: control <= 4'b0011;
        8'd74: control <= 4'b0011;
        8'd75: control <= 4'b0011;
        8'd76: control <= 4'b0011;
        8'd77: control <= 4'b0011;
        8'd78: control <= 4'b0011;
        8'd79: control <= 4'b0011;
        8'd80: control <= 4'b0011;
        8'd81: control <= 4'b0011;
        8'd82: control <= 4'b0011;
        8'd83: control <= 4'b0011;
        8'd84: control <= 4'b0011;
        8'd85: control <= 4'b0011;
        8'd86: control <= 4'b0011;
        8'd87: control <= 4'b0011;
        8'd88: control <= 4'b0011;
        8'd89: control <= 4'b0011;
        8'd90: control <= 4'b0011;
        8'd91: control <= 4'b0011;
        8'd92: control <= 4'b0011;
        8'd93: control <= 4'b0011;
        8'd94: control <= 4'b0011;
        8'd95: control <= 4'b0011;
        8'd96: control <= 4'b0011;
        8'd97: control <= 4'b0011;
        8'd98: control <= 4'b0011;
        8'd99: control <= 4'b0011;
        8'd100: control <= 4'b0011;
        8'd101: control <= 4'b0011;
        8'd102: control <= 4'b0011;
        8'd103: control <= 4'b0011;
        8'd104: control <= 4'b0011;
        8'd105: control <= 4'b0011;
        8'd106: control <= 4'b0011;
        8'd107: control <= 4'b0011;
        8'd108: control <= 4'b0011;
        8'd109: control <= 4'b0011;
        8'd110: control <= 4'b0011;
        8'd111: control <= 4'b0011;
        8'd112: control <= 4'b0011;
        8'd113: control <= 4'b0011;
        8'd114: control <= 4'b0011;
        8'd115: control <= 4'b0011;
        8'd116: control <= 4'b0011;
        8'd117: control <= 4'b0011;
        8'd118: control <= 4'b0011;
        8'd119: control <= 4'b0011;
        8'd120: control <= 4'b0011;
        8'd121: control <= 4'b0011;
        8'd122: control <= 4'b0011;
        8'd123: control <= 4'b0011;
        8'd124: control <= 4'b0011;
        8'd125: control <= 4'b0011;
        8'd126: control <= 4'b0011;
        8'd127: control <= 4'b0011;
        8'd128: control <= 4'b1100;
        8'd129: control <= 4'b1100;
        8'd130: control <= 4'b1100;
        8'd131: control <= 4'b1100;
        8'd132: control <= 4'b1100;
        8'd133: control <= 4'b1100;
        8'd134: control <= 4'b1100;
        8'd135: control <= 4'b1100;
        8'd136: control <= 4'b1100;
        8'd137: control <= 4'b1100;
        8'd138: control <= 4'b1100;
        8'd139: control <= 4'b1100;
        8'd140: control <= 4'b1100;
        8'd141: control <= 4'b1100;
        8'd142: control <= 4'b1100;
        8'd143: control <= 4'b1100;
        8'd144: control <= 4'b1100;
        8'd145: control <= 4'b1100;
        8'd146: control <= 4'b1100;
        8'd147: control <= 4'b1100;
        8'd148: control <= 4'b1100;
        8'd149: control <= 4'b1100;
        8'd150: control <= 4'b1100;
        8'd151: control <= 4'b1100;
        8'd152: control <= 4'b1100;
        8'd153: control <= 4'b1100;
        8'd154: control <= 4'b1100;
        8'd155: control <= 4'b1100;
        8'd156: control <= 4'b1100;
        8'd157: control <= 4'b1100;
        8'd158: control <= 4'b1100;
        8'd159: control <= 4'b1100;
        8'd160: control <= 4'b1100;
        8'd161: control <= 4'b1100;
        8'd162: control <= 4'b1100;
        8'd163: control <= 4'b1100;
        8'd164: control <= 4'b1100;
        8'd165: control <= 4'b1100;
        8'd166: control <= 4'b1100;
        8'd167: control <= 4'b1100;
        8'd168: control <= 4'b1100;
        8'd169: control <= 4'b1100;
        8'd170: control <= 4'b1100;
        8'd171: control <= 4'b1100;
        8'd172: control <= 4'b1100;
        8'd173: control <= 4'b1100;
        8'd174: control <= 4'b1100;
        8'd175: control <= 4'b1100;
        8'd176: control <= 4'b1100;
        8'd177: control <= 4'b1100;
        8'd178: control <= 4'b1100;
        8'd179: control <= 4'b1100;
        8'd180: control <= 4'b1100;
        8'd181: control <= 4'b1100;
        8'd182: control <= 4'b1100;
        8'd183: control <= 4'b1100;
        8'd184: control <= 4'b1100;
        8'd185: control <= 4'b1100;
        8'd186: control <= 4'b1100;
        8'd187: control <= 4'b1100;
        8'd188: control <= 4'b1100;
        8'd189: control <= 4'b1100;
        8'd190: control <= 4'b1100;
        8'd191: control <= 4'b1100;
        8'd192: control <= 4'b0000;
        8'd193: control <= 4'b0000;
        8'd194: control <= 4'b0000;
        8'd195: control <= 4'b0000;
        8'd196: control <= 4'b0000;
        8'd197: control <= 4'b0000;
        8'd198: control <= 4'b0000;
        8'd199: control <= 4'b0000;
        8'd200: control <= 4'b0000;
        8'd201: control <= 4'b0000;
        8'd202: control <= 4'b0000;
        8'd203: control <= 4'b0000;
        8'd204: control <= 4'b0000;
        8'd205: control <= 4'b0000;
        8'd206: control <= 4'b0000;
        8'd207: control <= 4'b0000;
        8'd208: control <= 4'b0000;
        8'd209: control <= 4'b0000;
        8'd210: control <= 4'b0000;
        8'd211: control <= 4'b0000;
        8'd212: control <= 4'b0000;
        8'd213: control <= 4'b0000;
        8'd214: control <= 4'b0000;
        8'd215: control <= 4'b0000;
        8'd216: control <= 4'b0000;
        8'd217: control <= 4'b0000;
        8'd218: control <= 4'b0000;
        8'd219: control <= 4'b0000;
        8'd220: control <= 4'b0000;
        8'd221: control <= 4'b0000;
        8'd222: control <= 4'b0000;
        8'd223: control <= 4'b0000;
        8'd224: control <= 4'b0000;
        8'd225: control <= 4'b0000;
        8'd226: control <= 4'b0000;
        8'd227: control <= 4'b0000;
        8'd228: control <= 4'b0000;
        8'd229: control <= 4'b0000;
        8'd230: control <= 4'b0000;
        8'd231: control <= 4'b0000;
        8'd232: control <= 4'b0000;
        8'd233: control <= 4'b0000;
        8'd234: control <= 4'b0000;
        8'd235: control <= 4'b0000;
        8'd236: control <= 4'b0000;
        8'd237: control <= 4'b0000;
        8'd238: control <= 4'b0000;
        8'd239: control <= 4'b0000;
        8'd240: control <= 4'b0000;
        8'd241: control <= 4'b0000;
        8'd242: control <= 4'b0000;
        8'd243: control <= 4'b0000;
        8'd244: control <= 4'b0000;
        8'd245: control <= 4'b0000;
        8'd246: control <= 4'b0000;
        8'd247: control <= 4'b0000;
        8'd248: control <= 4'b0000;
        8'd249: control <= 4'b0000;
        8'd250: control <= 4'b0000;
        8'd251: control <= 4'b0000;
        8'd252: control <= 4'b0000;
        8'd253: control <= 4'b0000;
        8'd254: control <= 4'b0000;
        8'd255: control <= 4'b0000;
      endcase
   end

// synthesis attribute rom_style of control is "block"
   reg [3:0] control0;
   reg [3:0] control1;
    always @(posedge clk) begin
       control0 <= control;
        control1 <= control0;
    end
    assign t0_0 = x0;
    assign t0_1 = x2;
    assign t0_2 = x1;
    assign t0_3 = x3;
     assign t1_0 = t0_0;
     assign t1_1 = t0_1;
     assign t1_2 = t0_2;
     assign t1_3 = t0_3;
    assign t2_0 = t1_0;
    assign t2_1 = t1_2;
    assign t2_2 = t1_1;
    assign t2_3 = t1_3;
   always @(posedge clk) begin
         t3_0 <= (control0[3] == 0) ? t2_0 : t2_1;
         t3_1 <= (control0[3] == 0) ? t2_1 : t2_0;
         t3_2 <= (control0[2] == 0) ? t2_2 : t2_3;
         t3_3 <= (control0[2] == 0) ? t2_3 : t2_2;
   end
    assign t4_0 = t3_0;
    assign t4_1 = t3_2;
    assign t4_2 = t3_1;
    assign t4_3 = t3_3;
   always @(posedge clk) begin
         t5_0 <= (control1[1] == 0) ? t4_0 : t4_1;
         t5_1 <= (control1[1] == 0) ? t4_1 : t4_0;
         t5_2 <= (control1[0] == 0) ? t4_2 : t4_3;
         t5_3 <= (control1[0] == 0) ? t4_3 : t4_2;
   end
    always @(posedge clk) begin
        y0 <= t5_0;
        y1 <= t5_2;
        y2 <= t5_1;
        y3 <= t5_3;
    end
endmodule

// Latency: 517
// Gap: 256
module perm36795(clk, next, reset, next_out,
   x0, y0,
   x1, y1,
   x2, y2,
   x3, y3);
   parameter width = 40;

   parameter depth = 256;

   parameter addrbits = 8;

   parameter muxbits = 2;

   input [width-1:0]  x0;
   output [width-1:0]  y0;
   wire [width-1:0]  t0;
   wire [width-1:0]  s0;
   input [width-1:0]  x1;
   output [width-1:0]  y1;
   wire [width-1:0]  t1;
   wire [width-1:0]  s1;
   input [width-1:0]  x2;
   output [width-1:0]  y2;
   wire [width-1:0]  t2;
   wire [width-1:0]  s2;
   input [width-1:0]  x3;
   output [width-1:0]  y3;
   wire [width-1:0]  t3;
   wire [width-1:0]  s3;
   input next, reset, clk;
   output next_out;
   reg [addrbits-1:0] s1rdloc, s2rdloc;

    reg [addrbits-1:0] s1wr0;
   reg [addrbits-1:0] s1rd0, s2wr0, s2rd0;
   reg [addrbits-1:0] s1rd1, s2wr1, s2rd1;
   reg [addrbits-1:0] s1rd2, s2wr2, s2rd2;
   reg [addrbits-1:0] s1rd3, s2wr3, s2rd3;
   reg s1wr_en, state1, state2, state3;
   wire 	      next2, next3, next4;
   reg 		      inFlip0, outFlip0_z, outFlip1;
   wire 	      inFlip1, outFlip0;

   wire [0:0] tm0;
   assign tm0 = 0;

shiftRegFIFO #(4, 1) shiftFIFO_43788(.X(outFlip0), .Y(inFlip1), .clk(clk));
shiftRegFIFO #(1, 1) shiftFIFO_43789(.X(outFlip0_z), .Y(outFlip0), .clk(clk));
//   shiftRegFIFO #(2, 1) inFlip1Reg(outFlip0, inFlip1, clk);
//   shiftRegFIFO #(1, 1) outFlip0Reg(outFlip0_z, outFlip0, clk);
   
   memMod #(depth*2, width, addrbits+1) s1mem0(x0, t0, {inFlip0, s1wr0}, {outFlip0, s1rd0}, s1wr_en, clk);
   memMod #(depth*2, width, addrbits+1) s1mem1(x1, t1, {inFlip0, s1wr0}, {outFlip0, s1rd1}, s1wr_en, clk);
   memMod #(depth*2, width, addrbits+1) s1mem2(x2, t2, {inFlip0, s1wr0}, {outFlip0, s1rd2}, s1wr_en, clk);
   memMod #(depth*2, width, addrbits+1) s1mem3(x3, t3, {inFlip0, s1wr0}, {outFlip0, s1rd3}, s1wr_en, clk);

nextReg #(255, 8) nextReg_43800(.X(next), .Y(next2), .reset(reset), .clk(clk));
shiftRegFIFO #(5, 1) shiftFIFO_43801(.X(next2), .Y(next3), .clk(clk));
nextReg #(256, 8) nextReg_43804(.X(next3), .Y(next4), .reset(reset), .clk(clk));
shiftRegFIFO #(1, 1) shiftFIFO_43805(.X(next4), .Y(next_out), .clk(clk));
shiftRegFIFO #(255, 1) shiftFIFO_43808(.X(tm0), .Y(tm0_d), .clk(clk));
shiftRegFIFO #(4, 1) shiftFIFO_43811(.X(tm0_d), .Y(tm0_dd), .clk(clk));
   
   wire [addrbits-1:0] 	      muxCycle, writeCycle;
assign muxCycle = s1rdloc;
shiftRegFIFO #(4, 8) shiftFIFO_43816(.X(muxCycle), .Y(writeCycle), .clk(clk));
        
   wire 		      readInt, s2wr_en;   
   assign 		      readInt = (state2 == 1);

   shiftRegFIFO #(5, 1) writeIntReg(readInt, s2wr_en, clk);

   memMod #(depth*2, width, addrbits+1) s2mem0(s0, y0, {inFlip1, s2wr0}, {outFlip1, s2rdloc}, s2wr_en, clk);
   memMod #(depth*2, width, addrbits+1) s2mem1(s1, y1, {inFlip1, s2wr1}, {outFlip1, s2rdloc}, s2wr_en, clk);
   memMod #(depth*2, width, addrbits+1) s2mem2(s2, y2, {inFlip1, s2wr2}, {outFlip1, s2rdloc}, s2wr_en, clk);
   memMod #(depth*2, width, addrbits+1) s2mem3(s3, y3, {inFlip1, s2wr3}, {outFlip1, s2rdloc}, s2wr_en, clk);
   always @(posedge clk) begin
      if (reset == 1) begin
	 state1 <= 0;
	 inFlip0 <= 0;	 
	 s1wr0 <= 0;
      end
      else if (next == 1) begin
	 s1wr0 <= 0;
	 state1 <= 1;
	 s1wr_en <= 1;
	 inFlip0 <= (s1wr0 == depth-1) ? ~inFlip0 : inFlip0;
      end
      else begin
	 case(state1)
	   0: begin
	      s1wr0 <= 0;
	      state1 <= 0;
	      s1wr_en <= 0;
	      inFlip0 <= inFlip0;	      
	   end
	   1: begin
	      s1wr0 <= (s1wr0 == depth-1) ? 0 : s1wr0 + 1;
	      state1 <= 1;
         s1wr_en <= 1;
	      inFlip0 <= (s1wr0 == depth-1) ? ~inFlip0 : inFlip0;
	   end
	 endcase
      end      
   end
   
   always @(posedge clk) begin
      if (reset == 1) begin
	       state2 <= 0;
	       outFlip0_z <= 0;	 
      end
      else if (next2 == 1) begin
	       s1rdloc <= 0;
	       state2 <= 1;
	       outFlip0_z <= (s1rdloc == depth-1) ? ~outFlip0_z : outFlip0_z;
      end
      else begin
	 case(state2)
	   0: begin
	      s1rdloc <= 0;
	      state2 <= 0;
	      outFlip0_z <= outFlip0_z;	 
	   end
	   1: begin
	      s1rdloc <= (s1rdloc == depth-1) ? 0 : s1rdloc + 1;
         state2 <= 1;
	      outFlip0_z <= (s1rdloc == depth-1) ? ~outFlip0_z : outFlip0_z;
	   end	     
	 endcase
      end
   end
   
   always @(posedge clk) begin
      if (reset == 1) begin
	 state3 <= 0;
	 outFlip1 <= 0;	 
      end
      else if (next4 == 1) begin
	 s2rdloc <= 0;
	 state3 <= 1;
	 outFlip1 <= (s2rdloc == depth-1) ? ~outFlip1 : outFlip1;	      
      end
      else begin
	 case(state3)
	   0: begin
	      s2rdloc <= 0;
	      state3 <= 0;
	      outFlip1 <= outFlip1;
	   end
	   1: begin
	      s2rdloc <= (s2rdloc == depth-1) ? 0 : s2rdloc + 1;
         state3 <= 1;
	      outFlip1 <= (s2rdloc == depth-1) ? ~outFlip1 : outFlip1;
	   end	     
	 endcase
      end
   end
   always @(posedge clk) begin
      case({tm0_d, s1rdloc})
	     {1'd0,  8'd0}: s1rd0 <= 192;
	     {1'd0,  8'd1}: s1rd0 <= 208;
	     {1'd0,  8'd2}: s1rd0 <= 224;
	     {1'd0,  8'd3}: s1rd0 <= 240;
	     {1'd0,  8'd4}: s1rd0 <= 196;
	     {1'd0,  8'd5}: s1rd0 <= 212;
	     {1'd0,  8'd6}: s1rd0 <= 228;
	     {1'd0,  8'd7}: s1rd0 <= 244;
	     {1'd0,  8'd8}: s1rd0 <= 200;
	     {1'd0,  8'd9}: s1rd0 <= 216;
	     {1'd0,  8'd10}: s1rd0 <= 232;
	     {1'd0,  8'd11}: s1rd0 <= 248;
	     {1'd0,  8'd12}: s1rd0 <= 204;
	     {1'd0,  8'd13}: s1rd0 <= 220;
	     {1'd0,  8'd14}: s1rd0 <= 236;
	     {1'd0,  8'd15}: s1rd0 <= 252;
	     {1'd0,  8'd16}: s1rd0 <= 193;
	     {1'd0,  8'd17}: s1rd0 <= 209;
	     {1'd0,  8'd18}: s1rd0 <= 225;
	     {1'd0,  8'd19}: s1rd0 <= 241;
	     {1'd0,  8'd20}: s1rd0 <= 197;
	     {1'd0,  8'd21}: s1rd0 <= 213;
	     {1'd0,  8'd22}: s1rd0 <= 229;
	     {1'd0,  8'd23}: s1rd0 <= 245;
	     {1'd0,  8'd24}: s1rd0 <= 201;
	     {1'd0,  8'd25}: s1rd0 <= 217;
	     {1'd0,  8'd26}: s1rd0 <= 233;
	     {1'd0,  8'd27}: s1rd0 <= 249;
	     {1'd0,  8'd28}: s1rd0 <= 205;
	     {1'd0,  8'd29}: s1rd0 <= 221;
	     {1'd0,  8'd30}: s1rd0 <= 237;
	     {1'd0,  8'd31}: s1rd0 <= 253;
	     {1'd0,  8'd32}: s1rd0 <= 194;
	     {1'd0,  8'd33}: s1rd0 <= 210;
	     {1'd0,  8'd34}: s1rd0 <= 226;
	     {1'd0,  8'd35}: s1rd0 <= 242;
	     {1'd0,  8'd36}: s1rd0 <= 198;
	     {1'd0,  8'd37}: s1rd0 <= 214;
	     {1'd0,  8'd38}: s1rd0 <= 230;
	     {1'd0,  8'd39}: s1rd0 <= 246;
	     {1'd0,  8'd40}: s1rd0 <= 202;
	     {1'd0,  8'd41}: s1rd0 <= 218;
	     {1'd0,  8'd42}: s1rd0 <= 234;
	     {1'd0,  8'd43}: s1rd0 <= 250;
	     {1'd0,  8'd44}: s1rd0 <= 206;
	     {1'd0,  8'd45}: s1rd0 <= 222;
	     {1'd0,  8'd46}: s1rd0 <= 238;
	     {1'd0,  8'd47}: s1rd0 <= 254;
	     {1'd0,  8'd48}: s1rd0 <= 195;
	     {1'd0,  8'd49}: s1rd0 <= 211;
	     {1'd0,  8'd50}: s1rd0 <= 227;
	     {1'd0,  8'd51}: s1rd0 <= 243;
	     {1'd0,  8'd52}: s1rd0 <= 199;
	     {1'd0,  8'd53}: s1rd0 <= 215;
	     {1'd0,  8'd54}: s1rd0 <= 231;
	     {1'd0,  8'd55}: s1rd0 <= 247;
	     {1'd0,  8'd56}: s1rd0 <= 203;
	     {1'd0,  8'd57}: s1rd0 <= 219;
	     {1'd0,  8'd58}: s1rd0 <= 235;
	     {1'd0,  8'd59}: s1rd0 <= 251;
	     {1'd0,  8'd60}: s1rd0 <= 207;
	     {1'd0,  8'd61}: s1rd0 <= 223;
	     {1'd0,  8'd62}: s1rd0 <= 239;
	     {1'd0,  8'd63}: s1rd0 <= 255;
	     {1'd0,  8'd64}: s1rd0 <= 128;
	     {1'd0,  8'd65}: s1rd0 <= 144;
	     {1'd0,  8'd66}: s1rd0 <= 160;
	     {1'd0,  8'd67}: s1rd0 <= 176;
	     {1'd0,  8'd68}: s1rd0 <= 132;
	     {1'd0,  8'd69}: s1rd0 <= 148;
	     {1'd0,  8'd70}: s1rd0 <= 164;
	     {1'd0,  8'd71}: s1rd0 <= 180;
	     {1'd0,  8'd72}: s1rd0 <= 136;
	     {1'd0,  8'd73}: s1rd0 <= 152;
	     {1'd0,  8'd74}: s1rd0 <= 168;
	     {1'd0,  8'd75}: s1rd0 <= 184;
	     {1'd0,  8'd76}: s1rd0 <= 140;
	     {1'd0,  8'd77}: s1rd0 <= 156;
	     {1'd0,  8'd78}: s1rd0 <= 172;
	     {1'd0,  8'd79}: s1rd0 <= 188;
	     {1'd0,  8'd80}: s1rd0 <= 129;
	     {1'd0,  8'd81}: s1rd0 <= 145;
	     {1'd0,  8'd82}: s1rd0 <= 161;
	     {1'd0,  8'd83}: s1rd0 <= 177;
	     {1'd0,  8'd84}: s1rd0 <= 133;
	     {1'd0,  8'd85}: s1rd0 <= 149;
	     {1'd0,  8'd86}: s1rd0 <= 165;
	     {1'd0,  8'd87}: s1rd0 <= 181;
	     {1'd0,  8'd88}: s1rd0 <= 137;
	     {1'd0,  8'd89}: s1rd0 <= 153;
	     {1'd0,  8'd90}: s1rd0 <= 169;
	     {1'd0,  8'd91}: s1rd0 <= 185;
	     {1'd0,  8'd92}: s1rd0 <= 141;
	     {1'd0,  8'd93}: s1rd0 <= 157;
	     {1'd0,  8'd94}: s1rd0 <= 173;
	     {1'd0,  8'd95}: s1rd0 <= 189;
	     {1'd0,  8'd96}: s1rd0 <= 130;
	     {1'd0,  8'd97}: s1rd0 <= 146;
	     {1'd0,  8'd98}: s1rd0 <= 162;
	     {1'd0,  8'd99}: s1rd0 <= 178;
	     {1'd0,  8'd100}: s1rd0 <= 134;
	     {1'd0,  8'd101}: s1rd0 <= 150;
	     {1'd0,  8'd102}: s1rd0 <= 166;
	     {1'd0,  8'd103}: s1rd0 <= 182;
	     {1'd0,  8'd104}: s1rd0 <= 138;
	     {1'd0,  8'd105}: s1rd0 <= 154;
	     {1'd0,  8'd106}: s1rd0 <= 170;
	     {1'd0,  8'd107}: s1rd0 <= 186;
	     {1'd0,  8'd108}: s1rd0 <= 142;
	     {1'd0,  8'd109}: s1rd0 <= 158;
	     {1'd0,  8'd110}: s1rd0 <= 174;
	     {1'd0,  8'd111}: s1rd0 <= 190;
	     {1'd0,  8'd112}: s1rd0 <= 131;
	     {1'd0,  8'd113}: s1rd0 <= 147;
	     {1'd0,  8'd114}: s1rd0 <= 163;
	     {1'd0,  8'd115}: s1rd0 <= 179;
	     {1'd0,  8'd116}: s1rd0 <= 135;
	     {1'd0,  8'd117}: s1rd0 <= 151;
	     {1'd0,  8'd118}: s1rd0 <= 167;
	     {1'd0,  8'd119}: s1rd0 <= 183;
	     {1'd0,  8'd120}: s1rd0 <= 139;
	     {1'd0,  8'd121}: s1rd0 <= 155;
	     {1'd0,  8'd122}: s1rd0 <= 171;
	     {1'd0,  8'd123}: s1rd0 <= 187;
	     {1'd0,  8'd124}: s1rd0 <= 143;
	     {1'd0,  8'd125}: s1rd0 <= 159;
	     {1'd0,  8'd126}: s1rd0 <= 175;
	     {1'd0,  8'd127}: s1rd0 <= 191;
	     {1'd0,  8'd128}: s1rd0 <= 64;
	     {1'd0,  8'd129}: s1rd0 <= 80;
	     {1'd0,  8'd130}: s1rd0 <= 96;
	     {1'd0,  8'd131}: s1rd0 <= 112;
	     {1'd0,  8'd132}: s1rd0 <= 68;
	     {1'd0,  8'd133}: s1rd0 <= 84;
	     {1'd0,  8'd134}: s1rd0 <= 100;
	     {1'd0,  8'd135}: s1rd0 <= 116;
	     {1'd0,  8'd136}: s1rd0 <= 72;
	     {1'd0,  8'd137}: s1rd0 <= 88;
	     {1'd0,  8'd138}: s1rd0 <= 104;
	     {1'd0,  8'd139}: s1rd0 <= 120;
	     {1'd0,  8'd140}: s1rd0 <= 76;
	     {1'd0,  8'd141}: s1rd0 <= 92;
	     {1'd0,  8'd142}: s1rd0 <= 108;
	     {1'd0,  8'd143}: s1rd0 <= 124;
	     {1'd0,  8'd144}: s1rd0 <= 65;
	     {1'd0,  8'd145}: s1rd0 <= 81;
	     {1'd0,  8'd146}: s1rd0 <= 97;
	     {1'd0,  8'd147}: s1rd0 <= 113;
	     {1'd0,  8'd148}: s1rd0 <= 69;
	     {1'd0,  8'd149}: s1rd0 <= 85;
	     {1'd0,  8'd150}: s1rd0 <= 101;
	     {1'd0,  8'd151}: s1rd0 <= 117;
	     {1'd0,  8'd152}: s1rd0 <= 73;
	     {1'd0,  8'd153}: s1rd0 <= 89;
	     {1'd0,  8'd154}: s1rd0 <= 105;
	     {1'd0,  8'd155}: s1rd0 <= 121;
	     {1'd0,  8'd156}: s1rd0 <= 77;
	     {1'd0,  8'd157}: s1rd0 <= 93;
	     {1'd0,  8'd158}: s1rd0 <= 109;
	     {1'd0,  8'd159}: s1rd0 <= 125;
	     {1'd0,  8'd160}: s1rd0 <= 66;
	     {1'd0,  8'd161}: s1rd0 <= 82;
	     {1'd0,  8'd162}: s1rd0 <= 98;
	     {1'd0,  8'd163}: s1rd0 <= 114;
	     {1'd0,  8'd164}: s1rd0 <= 70;
	     {1'd0,  8'd165}: s1rd0 <= 86;
	     {1'd0,  8'd166}: s1rd0 <= 102;
	     {1'd0,  8'd167}: s1rd0 <= 118;
	     {1'd0,  8'd168}: s1rd0 <= 74;
	     {1'd0,  8'd169}: s1rd0 <= 90;
	     {1'd0,  8'd170}: s1rd0 <= 106;
	     {1'd0,  8'd171}: s1rd0 <= 122;
	     {1'd0,  8'd172}: s1rd0 <= 78;
	     {1'd0,  8'd173}: s1rd0 <= 94;
	     {1'd0,  8'd174}: s1rd0 <= 110;
	     {1'd0,  8'd175}: s1rd0 <= 126;
	     {1'd0,  8'd176}: s1rd0 <= 67;
	     {1'd0,  8'd177}: s1rd0 <= 83;
	     {1'd0,  8'd178}: s1rd0 <= 99;
	     {1'd0,  8'd179}: s1rd0 <= 115;
	     {1'd0,  8'd180}: s1rd0 <= 71;
	     {1'd0,  8'd181}: s1rd0 <= 87;
	     {1'd0,  8'd182}: s1rd0 <= 103;
	     {1'd0,  8'd183}: s1rd0 <= 119;
	     {1'd0,  8'd184}: s1rd0 <= 75;
	     {1'd0,  8'd185}: s1rd0 <= 91;
	     {1'd0,  8'd186}: s1rd0 <= 107;
	     {1'd0,  8'd187}: s1rd0 <= 123;
	     {1'd0,  8'd188}: s1rd0 <= 79;
	     {1'd0,  8'd189}: s1rd0 <= 95;
	     {1'd0,  8'd190}: s1rd0 <= 111;
	     {1'd0,  8'd191}: s1rd0 <= 127;
	     {1'd0,  8'd192}: s1rd0 <= 0;
	     {1'd0,  8'd193}: s1rd0 <= 16;
	     {1'd0,  8'd194}: s1rd0 <= 32;
	     {1'd0,  8'd195}: s1rd0 <= 48;
	     {1'd0,  8'd196}: s1rd0 <= 4;
	     {1'd0,  8'd197}: s1rd0 <= 20;
	     {1'd0,  8'd198}: s1rd0 <= 36;
	     {1'd0,  8'd199}: s1rd0 <= 52;
	     {1'd0,  8'd200}: s1rd0 <= 8;
	     {1'd0,  8'd201}: s1rd0 <= 24;
	     {1'd0,  8'd202}: s1rd0 <= 40;
	     {1'd0,  8'd203}: s1rd0 <= 56;
	     {1'd0,  8'd204}: s1rd0 <= 12;
	     {1'd0,  8'd205}: s1rd0 <= 28;
	     {1'd0,  8'd206}: s1rd0 <= 44;
	     {1'd0,  8'd207}: s1rd0 <= 60;
	     {1'd0,  8'd208}: s1rd0 <= 1;
	     {1'd0,  8'd209}: s1rd0 <= 17;
	     {1'd0,  8'd210}: s1rd0 <= 33;
	     {1'd0,  8'd211}: s1rd0 <= 49;
	     {1'd0,  8'd212}: s1rd0 <= 5;
	     {1'd0,  8'd213}: s1rd0 <= 21;
	     {1'd0,  8'd214}: s1rd0 <= 37;
	     {1'd0,  8'd215}: s1rd0 <= 53;
	     {1'd0,  8'd216}: s1rd0 <= 9;
	     {1'd0,  8'd217}: s1rd0 <= 25;
	     {1'd0,  8'd218}: s1rd0 <= 41;
	     {1'd0,  8'd219}: s1rd0 <= 57;
	     {1'd0,  8'd220}: s1rd0 <= 13;
	     {1'd0,  8'd221}: s1rd0 <= 29;
	     {1'd0,  8'd222}: s1rd0 <= 45;
	     {1'd0,  8'd223}: s1rd0 <= 61;
	     {1'd0,  8'd224}: s1rd0 <= 2;
	     {1'd0,  8'd225}: s1rd0 <= 18;
	     {1'd0,  8'd226}: s1rd0 <= 34;
	     {1'd0,  8'd227}: s1rd0 <= 50;
	     {1'd0,  8'd228}: s1rd0 <= 6;
	     {1'd0,  8'd229}: s1rd0 <= 22;
	     {1'd0,  8'd230}: s1rd0 <= 38;
	     {1'd0,  8'd231}: s1rd0 <= 54;
	     {1'd0,  8'd232}: s1rd0 <= 10;
	     {1'd0,  8'd233}: s1rd0 <= 26;
	     {1'd0,  8'd234}: s1rd0 <= 42;
	     {1'd0,  8'd235}: s1rd0 <= 58;
	     {1'd0,  8'd236}: s1rd0 <= 14;
	     {1'd0,  8'd237}: s1rd0 <= 30;
	     {1'd0,  8'd238}: s1rd0 <= 46;
	     {1'd0,  8'd239}: s1rd0 <= 62;
	     {1'd0,  8'd240}: s1rd0 <= 3;
	     {1'd0,  8'd241}: s1rd0 <= 19;
	     {1'd0,  8'd242}: s1rd0 <= 35;
	     {1'd0,  8'd243}: s1rd0 <= 51;
	     {1'd0,  8'd244}: s1rd0 <= 7;
	     {1'd0,  8'd245}: s1rd0 <= 23;
	     {1'd0,  8'd246}: s1rd0 <= 39;
	     {1'd0,  8'd247}: s1rd0 <= 55;
	     {1'd0,  8'd248}: s1rd0 <= 11;
	     {1'd0,  8'd249}: s1rd0 <= 27;
	     {1'd0,  8'd250}: s1rd0 <= 43;
	     {1'd0,  8'd251}: s1rd0 <= 59;
	     {1'd0,  8'd252}: s1rd0 <= 15;
	     {1'd0,  8'd253}: s1rd0 <= 31;
	     {1'd0,  8'd254}: s1rd0 <= 47;
	     {1'd0,  8'd255}: s1rd0 <= 63;
      endcase      
   end

// synthesis attribute rom_style of s1rd0 is "distributed"
   always @(posedge clk) begin
      case({tm0_d, s1rdloc})
	     {1'd0,  8'd0}: s1rd1 <= 128;
	     {1'd0,  8'd1}: s1rd1 <= 144;
	     {1'd0,  8'd2}: s1rd1 <= 160;
	     {1'd0,  8'd3}: s1rd1 <= 176;
	     {1'd0,  8'd4}: s1rd1 <= 132;
	     {1'd0,  8'd5}: s1rd1 <= 148;
	     {1'd0,  8'd6}: s1rd1 <= 164;
	     {1'd0,  8'd7}: s1rd1 <= 180;
	     {1'd0,  8'd8}: s1rd1 <= 136;
	     {1'd0,  8'd9}: s1rd1 <= 152;
	     {1'd0,  8'd10}: s1rd1 <= 168;
	     {1'd0,  8'd11}: s1rd1 <= 184;
	     {1'd0,  8'd12}: s1rd1 <= 140;
	     {1'd0,  8'd13}: s1rd1 <= 156;
	     {1'd0,  8'd14}: s1rd1 <= 172;
	     {1'd0,  8'd15}: s1rd1 <= 188;
	     {1'd0,  8'd16}: s1rd1 <= 129;
	     {1'd0,  8'd17}: s1rd1 <= 145;
	     {1'd0,  8'd18}: s1rd1 <= 161;
	     {1'd0,  8'd19}: s1rd1 <= 177;
	     {1'd0,  8'd20}: s1rd1 <= 133;
	     {1'd0,  8'd21}: s1rd1 <= 149;
	     {1'd0,  8'd22}: s1rd1 <= 165;
	     {1'd0,  8'd23}: s1rd1 <= 181;
	     {1'd0,  8'd24}: s1rd1 <= 137;
	     {1'd0,  8'd25}: s1rd1 <= 153;
	     {1'd0,  8'd26}: s1rd1 <= 169;
	     {1'd0,  8'd27}: s1rd1 <= 185;
	     {1'd0,  8'd28}: s1rd1 <= 141;
	     {1'd0,  8'd29}: s1rd1 <= 157;
	     {1'd0,  8'd30}: s1rd1 <= 173;
	     {1'd0,  8'd31}: s1rd1 <= 189;
	     {1'd0,  8'd32}: s1rd1 <= 130;
	     {1'd0,  8'd33}: s1rd1 <= 146;
	     {1'd0,  8'd34}: s1rd1 <= 162;
	     {1'd0,  8'd35}: s1rd1 <= 178;
	     {1'd0,  8'd36}: s1rd1 <= 134;
	     {1'd0,  8'd37}: s1rd1 <= 150;
	     {1'd0,  8'd38}: s1rd1 <= 166;
	     {1'd0,  8'd39}: s1rd1 <= 182;
	     {1'd0,  8'd40}: s1rd1 <= 138;
	     {1'd0,  8'd41}: s1rd1 <= 154;
	     {1'd0,  8'd42}: s1rd1 <= 170;
	     {1'd0,  8'd43}: s1rd1 <= 186;
	     {1'd0,  8'd44}: s1rd1 <= 142;
	     {1'd0,  8'd45}: s1rd1 <= 158;
	     {1'd0,  8'd46}: s1rd1 <= 174;
	     {1'd0,  8'd47}: s1rd1 <= 190;
	     {1'd0,  8'd48}: s1rd1 <= 131;
	     {1'd0,  8'd49}: s1rd1 <= 147;
	     {1'd0,  8'd50}: s1rd1 <= 163;
	     {1'd0,  8'd51}: s1rd1 <= 179;
	     {1'd0,  8'd52}: s1rd1 <= 135;
	     {1'd0,  8'd53}: s1rd1 <= 151;
	     {1'd0,  8'd54}: s1rd1 <= 167;
	     {1'd0,  8'd55}: s1rd1 <= 183;
	     {1'd0,  8'd56}: s1rd1 <= 139;
	     {1'd0,  8'd57}: s1rd1 <= 155;
	     {1'd0,  8'd58}: s1rd1 <= 171;
	     {1'd0,  8'd59}: s1rd1 <= 187;
	     {1'd0,  8'd60}: s1rd1 <= 143;
	     {1'd0,  8'd61}: s1rd1 <= 159;
	     {1'd0,  8'd62}: s1rd1 <= 175;
	     {1'd0,  8'd63}: s1rd1 <= 191;
	     {1'd0,  8'd64}: s1rd1 <= 192;
	     {1'd0,  8'd65}: s1rd1 <= 208;
	     {1'd0,  8'd66}: s1rd1 <= 224;
	     {1'd0,  8'd67}: s1rd1 <= 240;
	     {1'd0,  8'd68}: s1rd1 <= 196;
	     {1'd0,  8'd69}: s1rd1 <= 212;
	     {1'd0,  8'd70}: s1rd1 <= 228;
	     {1'd0,  8'd71}: s1rd1 <= 244;
	     {1'd0,  8'd72}: s1rd1 <= 200;
	     {1'd0,  8'd73}: s1rd1 <= 216;
	     {1'd0,  8'd74}: s1rd1 <= 232;
	     {1'd0,  8'd75}: s1rd1 <= 248;
	     {1'd0,  8'd76}: s1rd1 <= 204;
	     {1'd0,  8'd77}: s1rd1 <= 220;
	     {1'd0,  8'd78}: s1rd1 <= 236;
	     {1'd0,  8'd79}: s1rd1 <= 252;
	     {1'd0,  8'd80}: s1rd1 <= 193;
	     {1'd0,  8'd81}: s1rd1 <= 209;
	     {1'd0,  8'd82}: s1rd1 <= 225;
	     {1'd0,  8'd83}: s1rd1 <= 241;
	     {1'd0,  8'd84}: s1rd1 <= 197;
	     {1'd0,  8'd85}: s1rd1 <= 213;
	     {1'd0,  8'd86}: s1rd1 <= 229;
	     {1'd0,  8'd87}: s1rd1 <= 245;
	     {1'd0,  8'd88}: s1rd1 <= 201;
	     {1'd0,  8'd89}: s1rd1 <= 217;
	     {1'd0,  8'd90}: s1rd1 <= 233;
	     {1'd0,  8'd91}: s1rd1 <= 249;
	     {1'd0,  8'd92}: s1rd1 <= 205;
	     {1'd0,  8'd93}: s1rd1 <= 221;
	     {1'd0,  8'd94}: s1rd1 <= 237;
	     {1'd0,  8'd95}: s1rd1 <= 253;
	     {1'd0,  8'd96}: s1rd1 <= 194;
	     {1'd0,  8'd97}: s1rd1 <= 210;
	     {1'd0,  8'd98}: s1rd1 <= 226;
	     {1'd0,  8'd99}: s1rd1 <= 242;
	     {1'd0,  8'd100}: s1rd1 <= 198;
	     {1'd0,  8'd101}: s1rd1 <= 214;
	     {1'd0,  8'd102}: s1rd1 <= 230;
	     {1'd0,  8'd103}: s1rd1 <= 246;
	     {1'd0,  8'd104}: s1rd1 <= 202;
	     {1'd0,  8'd105}: s1rd1 <= 218;
	     {1'd0,  8'd106}: s1rd1 <= 234;
	     {1'd0,  8'd107}: s1rd1 <= 250;
	     {1'd0,  8'd108}: s1rd1 <= 206;
	     {1'd0,  8'd109}: s1rd1 <= 222;
	     {1'd0,  8'd110}: s1rd1 <= 238;
	     {1'd0,  8'd111}: s1rd1 <= 254;
	     {1'd0,  8'd112}: s1rd1 <= 195;
	     {1'd0,  8'd113}: s1rd1 <= 211;
	     {1'd0,  8'd114}: s1rd1 <= 227;
	     {1'd0,  8'd115}: s1rd1 <= 243;
	     {1'd0,  8'd116}: s1rd1 <= 199;
	     {1'd0,  8'd117}: s1rd1 <= 215;
	     {1'd0,  8'd118}: s1rd1 <= 231;
	     {1'd0,  8'd119}: s1rd1 <= 247;
	     {1'd0,  8'd120}: s1rd1 <= 203;
	     {1'd0,  8'd121}: s1rd1 <= 219;
	     {1'd0,  8'd122}: s1rd1 <= 235;
	     {1'd0,  8'd123}: s1rd1 <= 251;
	     {1'd0,  8'd124}: s1rd1 <= 207;
	     {1'd0,  8'd125}: s1rd1 <= 223;
	     {1'd0,  8'd126}: s1rd1 <= 239;
	     {1'd0,  8'd127}: s1rd1 <= 255;
	     {1'd0,  8'd128}: s1rd1 <= 0;
	     {1'd0,  8'd129}: s1rd1 <= 16;
	     {1'd0,  8'd130}: s1rd1 <= 32;
	     {1'd0,  8'd131}: s1rd1 <= 48;
	     {1'd0,  8'd132}: s1rd1 <= 4;
	     {1'd0,  8'd133}: s1rd1 <= 20;
	     {1'd0,  8'd134}: s1rd1 <= 36;
	     {1'd0,  8'd135}: s1rd1 <= 52;
	     {1'd0,  8'd136}: s1rd1 <= 8;
	     {1'd0,  8'd137}: s1rd1 <= 24;
	     {1'd0,  8'd138}: s1rd1 <= 40;
	     {1'd0,  8'd139}: s1rd1 <= 56;
	     {1'd0,  8'd140}: s1rd1 <= 12;
	     {1'd0,  8'd141}: s1rd1 <= 28;
	     {1'd0,  8'd142}: s1rd1 <= 44;
	     {1'd0,  8'd143}: s1rd1 <= 60;
	     {1'd0,  8'd144}: s1rd1 <= 1;
	     {1'd0,  8'd145}: s1rd1 <= 17;
	     {1'd0,  8'd146}: s1rd1 <= 33;
	     {1'd0,  8'd147}: s1rd1 <= 49;
	     {1'd0,  8'd148}: s1rd1 <= 5;
	     {1'd0,  8'd149}: s1rd1 <= 21;
	     {1'd0,  8'd150}: s1rd1 <= 37;
	     {1'd0,  8'd151}: s1rd1 <= 53;
	     {1'd0,  8'd152}: s1rd1 <= 9;
	     {1'd0,  8'd153}: s1rd1 <= 25;
	     {1'd0,  8'd154}: s1rd1 <= 41;
	     {1'd0,  8'd155}: s1rd1 <= 57;
	     {1'd0,  8'd156}: s1rd1 <= 13;
	     {1'd0,  8'd157}: s1rd1 <= 29;
	     {1'd0,  8'd158}: s1rd1 <= 45;
	     {1'd0,  8'd159}: s1rd1 <= 61;
	     {1'd0,  8'd160}: s1rd1 <= 2;
	     {1'd0,  8'd161}: s1rd1 <= 18;
	     {1'd0,  8'd162}: s1rd1 <= 34;
	     {1'd0,  8'd163}: s1rd1 <= 50;
	     {1'd0,  8'd164}: s1rd1 <= 6;
	     {1'd0,  8'd165}: s1rd1 <= 22;
	     {1'd0,  8'd166}: s1rd1 <= 38;
	     {1'd0,  8'd167}: s1rd1 <= 54;
	     {1'd0,  8'd168}: s1rd1 <= 10;
	     {1'd0,  8'd169}: s1rd1 <= 26;
	     {1'd0,  8'd170}: s1rd1 <= 42;
	     {1'd0,  8'd171}: s1rd1 <= 58;
	     {1'd0,  8'd172}: s1rd1 <= 14;
	     {1'd0,  8'd173}: s1rd1 <= 30;
	     {1'd0,  8'd174}: s1rd1 <= 46;
	     {1'd0,  8'd175}: s1rd1 <= 62;
	     {1'd0,  8'd176}: s1rd1 <= 3;
	     {1'd0,  8'd177}: s1rd1 <= 19;
	     {1'd0,  8'd178}: s1rd1 <= 35;
	     {1'd0,  8'd179}: s1rd1 <= 51;
	     {1'd0,  8'd180}: s1rd1 <= 7;
	     {1'd0,  8'd181}: s1rd1 <= 23;
	     {1'd0,  8'd182}: s1rd1 <= 39;
	     {1'd0,  8'd183}: s1rd1 <= 55;
	     {1'd0,  8'd184}: s1rd1 <= 11;
	     {1'd0,  8'd185}: s1rd1 <= 27;
	     {1'd0,  8'd186}: s1rd1 <= 43;
	     {1'd0,  8'd187}: s1rd1 <= 59;
	     {1'd0,  8'd188}: s1rd1 <= 15;
	     {1'd0,  8'd189}: s1rd1 <= 31;
	     {1'd0,  8'd190}: s1rd1 <= 47;
	     {1'd0,  8'd191}: s1rd1 <= 63;
	     {1'd0,  8'd192}: s1rd1 <= 64;
	     {1'd0,  8'd193}: s1rd1 <= 80;
	     {1'd0,  8'd194}: s1rd1 <= 96;
	     {1'd0,  8'd195}: s1rd1 <= 112;
	     {1'd0,  8'd196}: s1rd1 <= 68;
	     {1'd0,  8'd197}: s1rd1 <= 84;
	     {1'd0,  8'd198}: s1rd1 <= 100;
	     {1'd0,  8'd199}: s1rd1 <= 116;
	     {1'd0,  8'd200}: s1rd1 <= 72;
	     {1'd0,  8'd201}: s1rd1 <= 88;
	     {1'd0,  8'd202}: s1rd1 <= 104;
	     {1'd0,  8'd203}: s1rd1 <= 120;
	     {1'd0,  8'd204}: s1rd1 <= 76;
	     {1'd0,  8'd205}: s1rd1 <= 92;
	     {1'd0,  8'd206}: s1rd1 <= 108;
	     {1'd0,  8'd207}: s1rd1 <= 124;
	     {1'd0,  8'd208}: s1rd1 <= 65;
	     {1'd0,  8'd209}: s1rd1 <= 81;
	     {1'd0,  8'd210}: s1rd1 <= 97;
	     {1'd0,  8'd211}: s1rd1 <= 113;
	     {1'd0,  8'd212}: s1rd1 <= 69;
	     {1'd0,  8'd213}: s1rd1 <= 85;
	     {1'd0,  8'd214}: s1rd1 <= 101;
	     {1'd0,  8'd215}: s1rd1 <= 117;
	     {1'd0,  8'd216}: s1rd1 <= 73;
	     {1'd0,  8'd217}: s1rd1 <= 89;
	     {1'd0,  8'd218}: s1rd1 <= 105;
	     {1'd0,  8'd219}: s1rd1 <= 121;
	     {1'd0,  8'd220}: s1rd1 <= 77;
	     {1'd0,  8'd221}: s1rd1 <= 93;
	     {1'd0,  8'd222}: s1rd1 <= 109;
	     {1'd0,  8'd223}: s1rd1 <= 125;
	     {1'd0,  8'd224}: s1rd1 <= 66;
	     {1'd0,  8'd225}: s1rd1 <= 82;
	     {1'd0,  8'd226}: s1rd1 <= 98;
	     {1'd0,  8'd227}: s1rd1 <= 114;
	     {1'd0,  8'd228}: s1rd1 <= 70;
	     {1'd0,  8'd229}: s1rd1 <= 86;
	     {1'd0,  8'd230}: s1rd1 <= 102;
	     {1'd0,  8'd231}: s1rd1 <= 118;
	     {1'd0,  8'd232}: s1rd1 <= 74;
	     {1'd0,  8'd233}: s1rd1 <= 90;
	     {1'd0,  8'd234}: s1rd1 <= 106;
	     {1'd0,  8'd235}: s1rd1 <= 122;
	     {1'd0,  8'd236}: s1rd1 <= 78;
	     {1'd0,  8'd237}: s1rd1 <= 94;
	     {1'd0,  8'd238}: s1rd1 <= 110;
	     {1'd0,  8'd239}: s1rd1 <= 126;
	     {1'd0,  8'd240}: s1rd1 <= 67;
	     {1'd0,  8'd241}: s1rd1 <= 83;
	     {1'd0,  8'd242}: s1rd1 <= 99;
	     {1'd0,  8'd243}: s1rd1 <= 115;
	     {1'd0,  8'd244}: s1rd1 <= 71;
	     {1'd0,  8'd245}: s1rd1 <= 87;
	     {1'd0,  8'd246}: s1rd1 <= 103;
	     {1'd0,  8'd247}: s1rd1 <= 119;
	     {1'd0,  8'd248}: s1rd1 <= 75;
	     {1'd0,  8'd249}: s1rd1 <= 91;
	     {1'd0,  8'd250}: s1rd1 <= 107;
	     {1'd0,  8'd251}: s1rd1 <= 123;
	     {1'd0,  8'd252}: s1rd1 <= 79;
	     {1'd0,  8'd253}: s1rd1 <= 95;
	     {1'd0,  8'd254}: s1rd1 <= 111;
	     {1'd0,  8'd255}: s1rd1 <= 127;
      endcase      
   end

// synthesis attribute rom_style of s1rd1 is "distributed"
   always @(posedge clk) begin
      case({tm0_d, s1rdloc})
	     {1'd0,  8'd0}: s1rd2 <= 64;
	     {1'd0,  8'd1}: s1rd2 <= 80;
	     {1'd0,  8'd2}: s1rd2 <= 96;
	     {1'd0,  8'd3}: s1rd2 <= 112;
	     {1'd0,  8'd4}: s1rd2 <= 68;
	     {1'd0,  8'd5}: s1rd2 <= 84;
	     {1'd0,  8'd6}: s1rd2 <= 100;
	     {1'd0,  8'd7}: s1rd2 <= 116;
	     {1'd0,  8'd8}: s1rd2 <= 72;
	     {1'd0,  8'd9}: s1rd2 <= 88;
	     {1'd0,  8'd10}: s1rd2 <= 104;
	     {1'd0,  8'd11}: s1rd2 <= 120;
	     {1'd0,  8'd12}: s1rd2 <= 76;
	     {1'd0,  8'd13}: s1rd2 <= 92;
	     {1'd0,  8'd14}: s1rd2 <= 108;
	     {1'd0,  8'd15}: s1rd2 <= 124;
	     {1'd0,  8'd16}: s1rd2 <= 65;
	     {1'd0,  8'd17}: s1rd2 <= 81;
	     {1'd0,  8'd18}: s1rd2 <= 97;
	     {1'd0,  8'd19}: s1rd2 <= 113;
	     {1'd0,  8'd20}: s1rd2 <= 69;
	     {1'd0,  8'd21}: s1rd2 <= 85;
	     {1'd0,  8'd22}: s1rd2 <= 101;
	     {1'd0,  8'd23}: s1rd2 <= 117;
	     {1'd0,  8'd24}: s1rd2 <= 73;
	     {1'd0,  8'd25}: s1rd2 <= 89;
	     {1'd0,  8'd26}: s1rd2 <= 105;
	     {1'd0,  8'd27}: s1rd2 <= 121;
	     {1'd0,  8'd28}: s1rd2 <= 77;
	     {1'd0,  8'd29}: s1rd2 <= 93;
	     {1'd0,  8'd30}: s1rd2 <= 109;
	     {1'd0,  8'd31}: s1rd2 <= 125;
	     {1'd0,  8'd32}: s1rd2 <= 66;
	     {1'd0,  8'd33}: s1rd2 <= 82;
	     {1'd0,  8'd34}: s1rd2 <= 98;
	     {1'd0,  8'd35}: s1rd2 <= 114;
	     {1'd0,  8'd36}: s1rd2 <= 70;
	     {1'd0,  8'd37}: s1rd2 <= 86;
	     {1'd0,  8'd38}: s1rd2 <= 102;
	     {1'd0,  8'd39}: s1rd2 <= 118;
	     {1'd0,  8'd40}: s1rd2 <= 74;
	     {1'd0,  8'd41}: s1rd2 <= 90;
	     {1'd0,  8'd42}: s1rd2 <= 106;
	     {1'd0,  8'd43}: s1rd2 <= 122;
	     {1'd0,  8'd44}: s1rd2 <= 78;
	     {1'd0,  8'd45}: s1rd2 <= 94;
	     {1'd0,  8'd46}: s1rd2 <= 110;
	     {1'd0,  8'd47}: s1rd2 <= 126;
	     {1'd0,  8'd48}: s1rd2 <= 67;
	     {1'd0,  8'd49}: s1rd2 <= 83;
	     {1'd0,  8'd50}: s1rd2 <= 99;
	     {1'd0,  8'd51}: s1rd2 <= 115;
	     {1'd0,  8'd52}: s1rd2 <= 71;
	     {1'd0,  8'd53}: s1rd2 <= 87;
	     {1'd0,  8'd54}: s1rd2 <= 103;
	     {1'd0,  8'd55}: s1rd2 <= 119;
	     {1'd0,  8'd56}: s1rd2 <= 75;
	     {1'd0,  8'd57}: s1rd2 <= 91;
	     {1'd0,  8'd58}: s1rd2 <= 107;
	     {1'd0,  8'd59}: s1rd2 <= 123;
	     {1'd0,  8'd60}: s1rd2 <= 79;
	     {1'd0,  8'd61}: s1rd2 <= 95;
	     {1'd0,  8'd62}: s1rd2 <= 111;
	     {1'd0,  8'd63}: s1rd2 <= 127;
	     {1'd0,  8'd64}: s1rd2 <= 0;
	     {1'd0,  8'd65}: s1rd2 <= 16;
	     {1'd0,  8'd66}: s1rd2 <= 32;
	     {1'd0,  8'd67}: s1rd2 <= 48;
	     {1'd0,  8'd68}: s1rd2 <= 4;
	     {1'd0,  8'd69}: s1rd2 <= 20;
	     {1'd0,  8'd70}: s1rd2 <= 36;
	     {1'd0,  8'd71}: s1rd2 <= 52;
	     {1'd0,  8'd72}: s1rd2 <= 8;
	     {1'd0,  8'd73}: s1rd2 <= 24;
	     {1'd0,  8'd74}: s1rd2 <= 40;
	     {1'd0,  8'd75}: s1rd2 <= 56;
	     {1'd0,  8'd76}: s1rd2 <= 12;
	     {1'd0,  8'd77}: s1rd2 <= 28;
	     {1'd0,  8'd78}: s1rd2 <= 44;
	     {1'd0,  8'd79}: s1rd2 <= 60;
	     {1'd0,  8'd80}: s1rd2 <= 1;
	     {1'd0,  8'd81}: s1rd2 <= 17;
	     {1'd0,  8'd82}: s1rd2 <= 33;
	     {1'd0,  8'd83}: s1rd2 <= 49;
	     {1'd0,  8'd84}: s1rd2 <= 5;
	     {1'd0,  8'd85}: s1rd2 <= 21;
	     {1'd0,  8'd86}: s1rd2 <= 37;
	     {1'd0,  8'd87}: s1rd2 <= 53;
	     {1'd0,  8'd88}: s1rd2 <= 9;
	     {1'd0,  8'd89}: s1rd2 <= 25;
	     {1'd0,  8'd90}: s1rd2 <= 41;
	     {1'd0,  8'd91}: s1rd2 <= 57;
	     {1'd0,  8'd92}: s1rd2 <= 13;
	     {1'd0,  8'd93}: s1rd2 <= 29;
	     {1'd0,  8'd94}: s1rd2 <= 45;
	     {1'd0,  8'd95}: s1rd2 <= 61;
	     {1'd0,  8'd96}: s1rd2 <= 2;
	     {1'd0,  8'd97}: s1rd2 <= 18;
	     {1'd0,  8'd98}: s1rd2 <= 34;
	     {1'd0,  8'd99}: s1rd2 <= 50;
	     {1'd0,  8'd100}: s1rd2 <= 6;
	     {1'd0,  8'd101}: s1rd2 <= 22;
	     {1'd0,  8'd102}: s1rd2 <= 38;
	     {1'd0,  8'd103}: s1rd2 <= 54;
	     {1'd0,  8'd104}: s1rd2 <= 10;
	     {1'd0,  8'd105}: s1rd2 <= 26;
	     {1'd0,  8'd106}: s1rd2 <= 42;
	     {1'd0,  8'd107}: s1rd2 <= 58;
	     {1'd0,  8'd108}: s1rd2 <= 14;
	     {1'd0,  8'd109}: s1rd2 <= 30;
	     {1'd0,  8'd110}: s1rd2 <= 46;
	     {1'd0,  8'd111}: s1rd2 <= 62;
	     {1'd0,  8'd112}: s1rd2 <= 3;
	     {1'd0,  8'd113}: s1rd2 <= 19;
	     {1'd0,  8'd114}: s1rd2 <= 35;
	     {1'd0,  8'd115}: s1rd2 <= 51;
	     {1'd0,  8'd116}: s1rd2 <= 7;
	     {1'd0,  8'd117}: s1rd2 <= 23;
	     {1'd0,  8'd118}: s1rd2 <= 39;
	     {1'd0,  8'd119}: s1rd2 <= 55;
	     {1'd0,  8'd120}: s1rd2 <= 11;
	     {1'd0,  8'd121}: s1rd2 <= 27;
	     {1'd0,  8'd122}: s1rd2 <= 43;
	     {1'd0,  8'd123}: s1rd2 <= 59;
	     {1'd0,  8'd124}: s1rd2 <= 15;
	     {1'd0,  8'd125}: s1rd2 <= 31;
	     {1'd0,  8'd126}: s1rd2 <= 47;
	     {1'd0,  8'd127}: s1rd2 <= 63;
	     {1'd0,  8'd128}: s1rd2 <= 192;
	     {1'd0,  8'd129}: s1rd2 <= 208;
	     {1'd0,  8'd130}: s1rd2 <= 224;
	     {1'd0,  8'd131}: s1rd2 <= 240;
	     {1'd0,  8'd132}: s1rd2 <= 196;
	     {1'd0,  8'd133}: s1rd2 <= 212;
	     {1'd0,  8'd134}: s1rd2 <= 228;
	     {1'd0,  8'd135}: s1rd2 <= 244;
	     {1'd0,  8'd136}: s1rd2 <= 200;
	     {1'd0,  8'd137}: s1rd2 <= 216;
	     {1'd0,  8'd138}: s1rd2 <= 232;
	     {1'd0,  8'd139}: s1rd2 <= 248;
	     {1'd0,  8'd140}: s1rd2 <= 204;
	     {1'd0,  8'd141}: s1rd2 <= 220;
	     {1'd0,  8'd142}: s1rd2 <= 236;
	     {1'd0,  8'd143}: s1rd2 <= 252;
	     {1'd0,  8'd144}: s1rd2 <= 193;
	     {1'd0,  8'd145}: s1rd2 <= 209;
	     {1'd0,  8'd146}: s1rd2 <= 225;
	     {1'd0,  8'd147}: s1rd2 <= 241;
	     {1'd0,  8'd148}: s1rd2 <= 197;
	     {1'd0,  8'd149}: s1rd2 <= 213;
	     {1'd0,  8'd150}: s1rd2 <= 229;
	     {1'd0,  8'd151}: s1rd2 <= 245;
	     {1'd0,  8'd152}: s1rd2 <= 201;
	     {1'd0,  8'd153}: s1rd2 <= 217;
	     {1'd0,  8'd154}: s1rd2 <= 233;
	     {1'd0,  8'd155}: s1rd2 <= 249;
	     {1'd0,  8'd156}: s1rd2 <= 205;
	     {1'd0,  8'd157}: s1rd2 <= 221;
	     {1'd0,  8'd158}: s1rd2 <= 237;
	     {1'd0,  8'd159}: s1rd2 <= 253;
	     {1'd0,  8'd160}: s1rd2 <= 194;
	     {1'd0,  8'd161}: s1rd2 <= 210;
	     {1'd0,  8'd162}: s1rd2 <= 226;
	     {1'd0,  8'd163}: s1rd2 <= 242;
	     {1'd0,  8'd164}: s1rd2 <= 198;
	     {1'd0,  8'd165}: s1rd2 <= 214;
	     {1'd0,  8'd166}: s1rd2 <= 230;
	     {1'd0,  8'd167}: s1rd2 <= 246;
	     {1'd0,  8'd168}: s1rd2 <= 202;
	     {1'd0,  8'd169}: s1rd2 <= 218;
	     {1'd0,  8'd170}: s1rd2 <= 234;
	     {1'd0,  8'd171}: s1rd2 <= 250;
	     {1'd0,  8'd172}: s1rd2 <= 206;
	     {1'd0,  8'd173}: s1rd2 <= 222;
	     {1'd0,  8'd174}: s1rd2 <= 238;
	     {1'd0,  8'd175}: s1rd2 <= 254;
	     {1'd0,  8'd176}: s1rd2 <= 195;
	     {1'd0,  8'd177}: s1rd2 <= 211;
	     {1'd0,  8'd178}: s1rd2 <= 227;
	     {1'd0,  8'd179}: s1rd2 <= 243;
	     {1'd0,  8'd180}: s1rd2 <= 199;
	     {1'd0,  8'd181}: s1rd2 <= 215;
	     {1'd0,  8'd182}: s1rd2 <= 231;
	     {1'd0,  8'd183}: s1rd2 <= 247;
	     {1'd0,  8'd184}: s1rd2 <= 203;
	     {1'd0,  8'd185}: s1rd2 <= 219;
	     {1'd0,  8'd186}: s1rd2 <= 235;
	     {1'd0,  8'd187}: s1rd2 <= 251;
	     {1'd0,  8'd188}: s1rd2 <= 207;
	     {1'd0,  8'd189}: s1rd2 <= 223;
	     {1'd0,  8'd190}: s1rd2 <= 239;
	     {1'd0,  8'd191}: s1rd2 <= 255;
	     {1'd0,  8'd192}: s1rd2 <= 128;
	     {1'd0,  8'd193}: s1rd2 <= 144;
	     {1'd0,  8'd194}: s1rd2 <= 160;
	     {1'd0,  8'd195}: s1rd2 <= 176;
	     {1'd0,  8'd196}: s1rd2 <= 132;
	     {1'd0,  8'd197}: s1rd2 <= 148;
	     {1'd0,  8'd198}: s1rd2 <= 164;
	     {1'd0,  8'd199}: s1rd2 <= 180;
	     {1'd0,  8'd200}: s1rd2 <= 136;
	     {1'd0,  8'd201}: s1rd2 <= 152;
	     {1'd0,  8'd202}: s1rd2 <= 168;
	     {1'd0,  8'd203}: s1rd2 <= 184;
	     {1'd0,  8'd204}: s1rd2 <= 140;
	     {1'd0,  8'd205}: s1rd2 <= 156;
	     {1'd0,  8'd206}: s1rd2 <= 172;
	     {1'd0,  8'd207}: s1rd2 <= 188;
	     {1'd0,  8'd208}: s1rd2 <= 129;
	     {1'd0,  8'd209}: s1rd2 <= 145;
	     {1'd0,  8'd210}: s1rd2 <= 161;
	     {1'd0,  8'd211}: s1rd2 <= 177;
	     {1'd0,  8'd212}: s1rd2 <= 133;
	     {1'd0,  8'd213}: s1rd2 <= 149;
	     {1'd0,  8'd214}: s1rd2 <= 165;
	     {1'd0,  8'd215}: s1rd2 <= 181;
	     {1'd0,  8'd216}: s1rd2 <= 137;
	     {1'd0,  8'd217}: s1rd2 <= 153;
	     {1'd0,  8'd218}: s1rd2 <= 169;
	     {1'd0,  8'd219}: s1rd2 <= 185;
	     {1'd0,  8'd220}: s1rd2 <= 141;
	     {1'd0,  8'd221}: s1rd2 <= 157;
	     {1'd0,  8'd222}: s1rd2 <= 173;
	     {1'd0,  8'd223}: s1rd2 <= 189;
	     {1'd0,  8'd224}: s1rd2 <= 130;
	     {1'd0,  8'd225}: s1rd2 <= 146;
	     {1'd0,  8'd226}: s1rd2 <= 162;
	     {1'd0,  8'd227}: s1rd2 <= 178;
	     {1'd0,  8'd228}: s1rd2 <= 134;
	     {1'd0,  8'd229}: s1rd2 <= 150;
	     {1'd0,  8'd230}: s1rd2 <= 166;
	     {1'd0,  8'd231}: s1rd2 <= 182;
	     {1'd0,  8'd232}: s1rd2 <= 138;
	     {1'd0,  8'd233}: s1rd2 <= 154;
	     {1'd0,  8'd234}: s1rd2 <= 170;
	     {1'd0,  8'd235}: s1rd2 <= 186;
	     {1'd0,  8'd236}: s1rd2 <= 142;
	     {1'd0,  8'd237}: s1rd2 <= 158;
	     {1'd0,  8'd238}: s1rd2 <= 174;
	     {1'd0,  8'd239}: s1rd2 <= 190;
	     {1'd0,  8'd240}: s1rd2 <= 131;
	     {1'd0,  8'd241}: s1rd2 <= 147;
	     {1'd0,  8'd242}: s1rd2 <= 163;
	     {1'd0,  8'd243}: s1rd2 <= 179;
	     {1'd0,  8'd244}: s1rd2 <= 135;
	     {1'd0,  8'd245}: s1rd2 <= 151;
	     {1'd0,  8'd246}: s1rd2 <= 167;
	     {1'd0,  8'd247}: s1rd2 <= 183;
	     {1'd0,  8'd248}: s1rd2 <= 139;
	     {1'd0,  8'd249}: s1rd2 <= 155;
	     {1'd0,  8'd250}: s1rd2 <= 171;
	     {1'd0,  8'd251}: s1rd2 <= 187;
	     {1'd0,  8'd252}: s1rd2 <= 143;
	     {1'd0,  8'd253}: s1rd2 <= 159;
	     {1'd0,  8'd254}: s1rd2 <= 175;
	     {1'd0,  8'd255}: s1rd2 <= 191;
      endcase      
   end

// synthesis attribute rom_style of s1rd2 is "distributed"
   always @(posedge clk) begin
      case({tm0_d, s1rdloc})
	     {1'd0,  8'd0}: s1rd3 <= 0;
	     {1'd0,  8'd1}: s1rd3 <= 16;
	     {1'd0,  8'd2}: s1rd3 <= 32;
	     {1'd0,  8'd3}: s1rd3 <= 48;
	     {1'd0,  8'd4}: s1rd3 <= 4;
	     {1'd0,  8'd5}: s1rd3 <= 20;
	     {1'd0,  8'd6}: s1rd3 <= 36;
	     {1'd0,  8'd7}: s1rd3 <= 52;
	     {1'd0,  8'd8}: s1rd3 <= 8;
	     {1'd0,  8'd9}: s1rd3 <= 24;
	     {1'd0,  8'd10}: s1rd3 <= 40;
	     {1'd0,  8'd11}: s1rd3 <= 56;
	     {1'd0,  8'd12}: s1rd3 <= 12;
	     {1'd0,  8'd13}: s1rd3 <= 28;
	     {1'd0,  8'd14}: s1rd3 <= 44;
	     {1'd0,  8'd15}: s1rd3 <= 60;
	     {1'd0,  8'd16}: s1rd3 <= 1;
	     {1'd0,  8'd17}: s1rd3 <= 17;
	     {1'd0,  8'd18}: s1rd3 <= 33;
	     {1'd0,  8'd19}: s1rd3 <= 49;
	     {1'd0,  8'd20}: s1rd3 <= 5;
	     {1'd0,  8'd21}: s1rd3 <= 21;
	     {1'd0,  8'd22}: s1rd3 <= 37;
	     {1'd0,  8'd23}: s1rd3 <= 53;
	     {1'd0,  8'd24}: s1rd3 <= 9;
	     {1'd0,  8'd25}: s1rd3 <= 25;
	     {1'd0,  8'd26}: s1rd3 <= 41;
	     {1'd0,  8'd27}: s1rd3 <= 57;
	     {1'd0,  8'd28}: s1rd3 <= 13;
	     {1'd0,  8'd29}: s1rd3 <= 29;
	     {1'd0,  8'd30}: s1rd3 <= 45;
	     {1'd0,  8'd31}: s1rd3 <= 61;
	     {1'd0,  8'd32}: s1rd3 <= 2;
	     {1'd0,  8'd33}: s1rd3 <= 18;
	     {1'd0,  8'd34}: s1rd3 <= 34;
	     {1'd0,  8'd35}: s1rd3 <= 50;
	     {1'd0,  8'd36}: s1rd3 <= 6;
	     {1'd0,  8'd37}: s1rd3 <= 22;
	     {1'd0,  8'd38}: s1rd3 <= 38;
	     {1'd0,  8'd39}: s1rd3 <= 54;
	     {1'd0,  8'd40}: s1rd3 <= 10;
	     {1'd0,  8'd41}: s1rd3 <= 26;
	     {1'd0,  8'd42}: s1rd3 <= 42;
	     {1'd0,  8'd43}: s1rd3 <= 58;
	     {1'd0,  8'd44}: s1rd3 <= 14;
	     {1'd0,  8'd45}: s1rd3 <= 30;
	     {1'd0,  8'd46}: s1rd3 <= 46;
	     {1'd0,  8'd47}: s1rd3 <= 62;
	     {1'd0,  8'd48}: s1rd3 <= 3;
	     {1'd0,  8'd49}: s1rd3 <= 19;
	     {1'd0,  8'd50}: s1rd3 <= 35;
	     {1'd0,  8'd51}: s1rd3 <= 51;
	     {1'd0,  8'd52}: s1rd3 <= 7;
	     {1'd0,  8'd53}: s1rd3 <= 23;
	     {1'd0,  8'd54}: s1rd3 <= 39;
	     {1'd0,  8'd55}: s1rd3 <= 55;
	     {1'd0,  8'd56}: s1rd3 <= 11;
	     {1'd0,  8'd57}: s1rd3 <= 27;
	     {1'd0,  8'd58}: s1rd3 <= 43;
	     {1'd0,  8'd59}: s1rd3 <= 59;
	     {1'd0,  8'd60}: s1rd3 <= 15;
	     {1'd0,  8'd61}: s1rd3 <= 31;
	     {1'd0,  8'd62}: s1rd3 <= 47;
	     {1'd0,  8'd63}: s1rd3 <= 63;
	     {1'd0,  8'd64}: s1rd3 <= 64;
	     {1'd0,  8'd65}: s1rd3 <= 80;
	     {1'd0,  8'd66}: s1rd3 <= 96;
	     {1'd0,  8'd67}: s1rd3 <= 112;
	     {1'd0,  8'd68}: s1rd3 <= 68;
	     {1'd0,  8'd69}: s1rd3 <= 84;
	     {1'd0,  8'd70}: s1rd3 <= 100;
	     {1'd0,  8'd71}: s1rd3 <= 116;
	     {1'd0,  8'd72}: s1rd3 <= 72;
	     {1'd0,  8'd73}: s1rd3 <= 88;
	     {1'd0,  8'd74}: s1rd3 <= 104;
	     {1'd0,  8'd75}: s1rd3 <= 120;
	     {1'd0,  8'd76}: s1rd3 <= 76;
	     {1'd0,  8'd77}: s1rd3 <= 92;
	     {1'd0,  8'd78}: s1rd3 <= 108;
	     {1'd0,  8'd79}: s1rd3 <= 124;
	     {1'd0,  8'd80}: s1rd3 <= 65;
	     {1'd0,  8'd81}: s1rd3 <= 81;
	     {1'd0,  8'd82}: s1rd3 <= 97;
	     {1'd0,  8'd83}: s1rd3 <= 113;
	     {1'd0,  8'd84}: s1rd3 <= 69;
	     {1'd0,  8'd85}: s1rd3 <= 85;
	     {1'd0,  8'd86}: s1rd3 <= 101;
	     {1'd0,  8'd87}: s1rd3 <= 117;
	     {1'd0,  8'd88}: s1rd3 <= 73;
	     {1'd0,  8'd89}: s1rd3 <= 89;
	     {1'd0,  8'd90}: s1rd3 <= 105;
	     {1'd0,  8'd91}: s1rd3 <= 121;
	     {1'd0,  8'd92}: s1rd3 <= 77;
	     {1'd0,  8'd93}: s1rd3 <= 93;
	     {1'd0,  8'd94}: s1rd3 <= 109;
	     {1'd0,  8'd95}: s1rd3 <= 125;
	     {1'd0,  8'd96}: s1rd3 <= 66;
	     {1'd0,  8'd97}: s1rd3 <= 82;
	     {1'd0,  8'd98}: s1rd3 <= 98;
	     {1'd0,  8'd99}: s1rd3 <= 114;
	     {1'd0,  8'd100}: s1rd3 <= 70;
	     {1'd0,  8'd101}: s1rd3 <= 86;
	     {1'd0,  8'd102}: s1rd3 <= 102;
	     {1'd0,  8'd103}: s1rd3 <= 118;
	     {1'd0,  8'd104}: s1rd3 <= 74;
	     {1'd0,  8'd105}: s1rd3 <= 90;
	     {1'd0,  8'd106}: s1rd3 <= 106;
	     {1'd0,  8'd107}: s1rd3 <= 122;
	     {1'd0,  8'd108}: s1rd3 <= 78;
	     {1'd0,  8'd109}: s1rd3 <= 94;
	     {1'd0,  8'd110}: s1rd3 <= 110;
	     {1'd0,  8'd111}: s1rd3 <= 126;
	     {1'd0,  8'd112}: s1rd3 <= 67;
	     {1'd0,  8'd113}: s1rd3 <= 83;
	     {1'd0,  8'd114}: s1rd3 <= 99;
	     {1'd0,  8'd115}: s1rd3 <= 115;
	     {1'd0,  8'd116}: s1rd3 <= 71;
	     {1'd0,  8'd117}: s1rd3 <= 87;
	     {1'd0,  8'd118}: s1rd3 <= 103;
	     {1'd0,  8'd119}: s1rd3 <= 119;
	     {1'd0,  8'd120}: s1rd3 <= 75;
	     {1'd0,  8'd121}: s1rd3 <= 91;
	     {1'd0,  8'd122}: s1rd3 <= 107;
	     {1'd0,  8'd123}: s1rd3 <= 123;
	     {1'd0,  8'd124}: s1rd3 <= 79;
	     {1'd0,  8'd125}: s1rd3 <= 95;
	     {1'd0,  8'd126}: s1rd3 <= 111;
	     {1'd0,  8'd127}: s1rd3 <= 127;
	     {1'd0,  8'd128}: s1rd3 <= 128;
	     {1'd0,  8'd129}: s1rd3 <= 144;
	     {1'd0,  8'd130}: s1rd3 <= 160;
	     {1'd0,  8'd131}: s1rd3 <= 176;
	     {1'd0,  8'd132}: s1rd3 <= 132;
	     {1'd0,  8'd133}: s1rd3 <= 148;
	     {1'd0,  8'd134}: s1rd3 <= 164;
	     {1'd0,  8'd135}: s1rd3 <= 180;
	     {1'd0,  8'd136}: s1rd3 <= 136;
	     {1'd0,  8'd137}: s1rd3 <= 152;
	     {1'd0,  8'd138}: s1rd3 <= 168;
	     {1'd0,  8'd139}: s1rd3 <= 184;
	     {1'd0,  8'd140}: s1rd3 <= 140;
	     {1'd0,  8'd141}: s1rd3 <= 156;
	     {1'd0,  8'd142}: s1rd3 <= 172;
	     {1'd0,  8'd143}: s1rd3 <= 188;
	     {1'd0,  8'd144}: s1rd3 <= 129;
	     {1'd0,  8'd145}: s1rd3 <= 145;
	     {1'd0,  8'd146}: s1rd3 <= 161;
	     {1'd0,  8'd147}: s1rd3 <= 177;
	     {1'd0,  8'd148}: s1rd3 <= 133;
	     {1'd0,  8'd149}: s1rd3 <= 149;
	     {1'd0,  8'd150}: s1rd3 <= 165;
	     {1'd0,  8'd151}: s1rd3 <= 181;
	     {1'd0,  8'd152}: s1rd3 <= 137;
	     {1'd0,  8'd153}: s1rd3 <= 153;
	     {1'd0,  8'd154}: s1rd3 <= 169;
	     {1'd0,  8'd155}: s1rd3 <= 185;
	     {1'd0,  8'd156}: s1rd3 <= 141;
	     {1'd0,  8'd157}: s1rd3 <= 157;
	     {1'd0,  8'd158}: s1rd3 <= 173;
	     {1'd0,  8'd159}: s1rd3 <= 189;
	     {1'd0,  8'd160}: s1rd3 <= 130;
	     {1'd0,  8'd161}: s1rd3 <= 146;
	     {1'd0,  8'd162}: s1rd3 <= 162;
	     {1'd0,  8'd163}: s1rd3 <= 178;
	     {1'd0,  8'd164}: s1rd3 <= 134;
	     {1'd0,  8'd165}: s1rd3 <= 150;
	     {1'd0,  8'd166}: s1rd3 <= 166;
	     {1'd0,  8'd167}: s1rd3 <= 182;
	     {1'd0,  8'd168}: s1rd3 <= 138;
	     {1'd0,  8'd169}: s1rd3 <= 154;
	     {1'd0,  8'd170}: s1rd3 <= 170;
	     {1'd0,  8'd171}: s1rd3 <= 186;
	     {1'd0,  8'd172}: s1rd3 <= 142;
	     {1'd0,  8'd173}: s1rd3 <= 158;
	     {1'd0,  8'd174}: s1rd3 <= 174;
	     {1'd0,  8'd175}: s1rd3 <= 190;
	     {1'd0,  8'd176}: s1rd3 <= 131;
	     {1'd0,  8'd177}: s1rd3 <= 147;
	     {1'd0,  8'd178}: s1rd3 <= 163;
	     {1'd0,  8'd179}: s1rd3 <= 179;
	     {1'd0,  8'd180}: s1rd3 <= 135;
	     {1'd0,  8'd181}: s1rd3 <= 151;
	     {1'd0,  8'd182}: s1rd3 <= 167;
	     {1'd0,  8'd183}: s1rd3 <= 183;
	     {1'd0,  8'd184}: s1rd3 <= 139;
	     {1'd0,  8'd185}: s1rd3 <= 155;
	     {1'd0,  8'd186}: s1rd3 <= 171;
	     {1'd0,  8'd187}: s1rd3 <= 187;
	     {1'd0,  8'd188}: s1rd3 <= 143;
	     {1'd0,  8'd189}: s1rd3 <= 159;
	     {1'd0,  8'd190}: s1rd3 <= 175;
	     {1'd0,  8'd191}: s1rd3 <= 191;
	     {1'd0,  8'd192}: s1rd3 <= 192;
	     {1'd0,  8'd193}: s1rd3 <= 208;
	     {1'd0,  8'd194}: s1rd3 <= 224;
	     {1'd0,  8'd195}: s1rd3 <= 240;
	     {1'd0,  8'd196}: s1rd3 <= 196;
	     {1'd0,  8'd197}: s1rd3 <= 212;
	     {1'd0,  8'd198}: s1rd3 <= 228;
	     {1'd0,  8'd199}: s1rd3 <= 244;
	     {1'd0,  8'd200}: s1rd3 <= 200;
	     {1'd0,  8'd201}: s1rd3 <= 216;
	     {1'd0,  8'd202}: s1rd3 <= 232;
	     {1'd0,  8'd203}: s1rd3 <= 248;
	     {1'd0,  8'd204}: s1rd3 <= 204;
	     {1'd0,  8'd205}: s1rd3 <= 220;
	     {1'd0,  8'd206}: s1rd3 <= 236;
	     {1'd0,  8'd207}: s1rd3 <= 252;
	     {1'd0,  8'd208}: s1rd3 <= 193;
	     {1'd0,  8'd209}: s1rd3 <= 209;
	     {1'd0,  8'd210}: s1rd3 <= 225;
	     {1'd0,  8'd211}: s1rd3 <= 241;
	     {1'd0,  8'd212}: s1rd3 <= 197;
	     {1'd0,  8'd213}: s1rd3 <= 213;
	     {1'd0,  8'd214}: s1rd3 <= 229;
	     {1'd0,  8'd215}: s1rd3 <= 245;
	     {1'd0,  8'd216}: s1rd3 <= 201;
	     {1'd0,  8'd217}: s1rd3 <= 217;
	     {1'd0,  8'd218}: s1rd3 <= 233;
	     {1'd0,  8'd219}: s1rd3 <= 249;
	     {1'd0,  8'd220}: s1rd3 <= 205;
	     {1'd0,  8'd221}: s1rd3 <= 221;
	     {1'd0,  8'd222}: s1rd3 <= 237;
	     {1'd0,  8'd223}: s1rd3 <= 253;
	     {1'd0,  8'd224}: s1rd3 <= 194;
	     {1'd0,  8'd225}: s1rd3 <= 210;
	     {1'd0,  8'd226}: s1rd3 <= 226;
	     {1'd0,  8'd227}: s1rd3 <= 242;
	     {1'd0,  8'd228}: s1rd3 <= 198;
	     {1'd0,  8'd229}: s1rd3 <= 214;
	     {1'd0,  8'd230}: s1rd3 <= 230;
	     {1'd0,  8'd231}: s1rd3 <= 246;
	     {1'd0,  8'd232}: s1rd3 <= 202;
	     {1'd0,  8'd233}: s1rd3 <= 218;
	     {1'd0,  8'd234}: s1rd3 <= 234;
	     {1'd0,  8'd235}: s1rd3 <= 250;
	     {1'd0,  8'd236}: s1rd3 <= 206;
	     {1'd0,  8'd237}: s1rd3 <= 222;
	     {1'd0,  8'd238}: s1rd3 <= 238;
	     {1'd0,  8'd239}: s1rd3 <= 254;
	     {1'd0,  8'd240}: s1rd3 <= 195;
	     {1'd0,  8'd241}: s1rd3 <= 211;
	     {1'd0,  8'd242}: s1rd3 <= 227;
	     {1'd0,  8'd243}: s1rd3 <= 243;
	     {1'd0,  8'd244}: s1rd3 <= 199;
	     {1'd0,  8'd245}: s1rd3 <= 215;
	     {1'd0,  8'd246}: s1rd3 <= 231;
	     {1'd0,  8'd247}: s1rd3 <= 247;
	     {1'd0,  8'd248}: s1rd3 <= 203;
	     {1'd0,  8'd249}: s1rd3 <= 219;
	     {1'd0,  8'd250}: s1rd3 <= 235;
	     {1'd0,  8'd251}: s1rd3 <= 251;
	     {1'd0,  8'd252}: s1rd3 <= 207;
	     {1'd0,  8'd253}: s1rd3 <= 223;
	     {1'd0,  8'd254}: s1rd3 <= 239;
	     {1'd0,  8'd255}: s1rd3 <= 255;
      endcase      
   end

// synthesis attribute rom_style of s1rd3 is "distributed"
    swNet36795 sw(tm0_d, clk, muxCycle, t0, s0, t1, s1, t2, s2, t3, s3);

   always @(posedge clk) begin
      case({tm0_dd, writeCycle})
	      {1'd0, 8'd0}: s2wr0 <= 192;
	      {1'd0, 8'd1}: s2wr0 <= 193;
	      {1'd0, 8'd2}: s2wr0 <= 194;
	      {1'd0, 8'd3}: s2wr0 <= 195;
	      {1'd0, 8'd4}: s2wr0 <= 196;
	      {1'd0, 8'd5}: s2wr0 <= 197;
	      {1'd0, 8'd6}: s2wr0 <= 198;
	      {1'd0, 8'd7}: s2wr0 <= 199;
	      {1'd0, 8'd8}: s2wr0 <= 200;
	      {1'd0, 8'd9}: s2wr0 <= 201;
	      {1'd0, 8'd10}: s2wr0 <= 202;
	      {1'd0, 8'd11}: s2wr0 <= 203;
	      {1'd0, 8'd12}: s2wr0 <= 204;
	      {1'd0, 8'd13}: s2wr0 <= 205;
	      {1'd0, 8'd14}: s2wr0 <= 206;
	      {1'd0, 8'd15}: s2wr0 <= 207;
	      {1'd0, 8'd16}: s2wr0 <= 208;
	      {1'd0, 8'd17}: s2wr0 <= 209;
	      {1'd0, 8'd18}: s2wr0 <= 210;
	      {1'd0, 8'd19}: s2wr0 <= 211;
	      {1'd0, 8'd20}: s2wr0 <= 212;
	      {1'd0, 8'd21}: s2wr0 <= 213;
	      {1'd0, 8'd22}: s2wr0 <= 214;
	      {1'd0, 8'd23}: s2wr0 <= 215;
	      {1'd0, 8'd24}: s2wr0 <= 216;
	      {1'd0, 8'd25}: s2wr0 <= 217;
	      {1'd0, 8'd26}: s2wr0 <= 218;
	      {1'd0, 8'd27}: s2wr0 <= 219;
	      {1'd0, 8'd28}: s2wr0 <= 220;
	      {1'd0, 8'd29}: s2wr0 <= 221;
	      {1'd0, 8'd30}: s2wr0 <= 222;
	      {1'd0, 8'd31}: s2wr0 <= 223;
	      {1'd0, 8'd32}: s2wr0 <= 224;
	      {1'd0, 8'd33}: s2wr0 <= 225;
	      {1'd0, 8'd34}: s2wr0 <= 226;
	      {1'd0, 8'd35}: s2wr0 <= 227;
	      {1'd0, 8'd36}: s2wr0 <= 228;
	      {1'd0, 8'd37}: s2wr0 <= 229;
	      {1'd0, 8'd38}: s2wr0 <= 230;
	      {1'd0, 8'd39}: s2wr0 <= 231;
	      {1'd0, 8'd40}: s2wr0 <= 232;
	      {1'd0, 8'd41}: s2wr0 <= 233;
	      {1'd0, 8'd42}: s2wr0 <= 234;
	      {1'd0, 8'd43}: s2wr0 <= 235;
	      {1'd0, 8'd44}: s2wr0 <= 236;
	      {1'd0, 8'd45}: s2wr0 <= 237;
	      {1'd0, 8'd46}: s2wr0 <= 238;
	      {1'd0, 8'd47}: s2wr0 <= 239;
	      {1'd0, 8'd48}: s2wr0 <= 240;
	      {1'd0, 8'd49}: s2wr0 <= 241;
	      {1'd0, 8'd50}: s2wr0 <= 242;
	      {1'd0, 8'd51}: s2wr0 <= 243;
	      {1'd0, 8'd52}: s2wr0 <= 244;
	      {1'd0, 8'd53}: s2wr0 <= 245;
	      {1'd0, 8'd54}: s2wr0 <= 246;
	      {1'd0, 8'd55}: s2wr0 <= 247;
	      {1'd0, 8'd56}: s2wr0 <= 248;
	      {1'd0, 8'd57}: s2wr0 <= 249;
	      {1'd0, 8'd58}: s2wr0 <= 250;
	      {1'd0, 8'd59}: s2wr0 <= 251;
	      {1'd0, 8'd60}: s2wr0 <= 252;
	      {1'd0, 8'd61}: s2wr0 <= 253;
	      {1'd0, 8'd62}: s2wr0 <= 254;
	      {1'd0, 8'd63}: s2wr0 <= 255;
	      {1'd0, 8'd64}: s2wr0 <= 128;
	      {1'd0, 8'd65}: s2wr0 <= 129;
	      {1'd0, 8'd66}: s2wr0 <= 130;
	      {1'd0, 8'd67}: s2wr0 <= 131;
	      {1'd0, 8'd68}: s2wr0 <= 132;
	      {1'd0, 8'd69}: s2wr0 <= 133;
	      {1'd0, 8'd70}: s2wr0 <= 134;
	      {1'd0, 8'd71}: s2wr0 <= 135;
	      {1'd0, 8'd72}: s2wr0 <= 136;
	      {1'd0, 8'd73}: s2wr0 <= 137;
	      {1'd0, 8'd74}: s2wr0 <= 138;
	      {1'd0, 8'd75}: s2wr0 <= 139;
	      {1'd0, 8'd76}: s2wr0 <= 140;
	      {1'd0, 8'd77}: s2wr0 <= 141;
	      {1'd0, 8'd78}: s2wr0 <= 142;
	      {1'd0, 8'd79}: s2wr0 <= 143;
	      {1'd0, 8'd80}: s2wr0 <= 144;
	      {1'd0, 8'd81}: s2wr0 <= 145;
	      {1'd0, 8'd82}: s2wr0 <= 146;
	      {1'd0, 8'd83}: s2wr0 <= 147;
	      {1'd0, 8'd84}: s2wr0 <= 148;
	      {1'd0, 8'd85}: s2wr0 <= 149;
	      {1'd0, 8'd86}: s2wr0 <= 150;
	      {1'd0, 8'd87}: s2wr0 <= 151;
	      {1'd0, 8'd88}: s2wr0 <= 152;
	      {1'd0, 8'd89}: s2wr0 <= 153;
	      {1'd0, 8'd90}: s2wr0 <= 154;
	      {1'd0, 8'd91}: s2wr0 <= 155;
	      {1'd0, 8'd92}: s2wr0 <= 156;
	      {1'd0, 8'd93}: s2wr0 <= 157;
	      {1'd0, 8'd94}: s2wr0 <= 158;
	      {1'd0, 8'd95}: s2wr0 <= 159;
	      {1'd0, 8'd96}: s2wr0 <= 160;
	      {1'd0, 8'd97}: s2wr0 <= 161;
	      {1'd0, 8'd98}: s2wr0 <= 162;
	      {1'd0, 8'd99}: s2wr0 <= 163;
	      {1'd0, 8'd100}: s2wr0 <= 164;
	      {1'd0, 8'd101}: s2wr0 <= 165;
	      {1'd0, 8'd102}: s2wr0 <= 166;
	      {1'd0, 8'd103}: s2wr0 <= 167;
	      {1'd0, 8'd104}: s2wr0 <= 168;
	      {1'd0, 8'd105}: s2wr0 <= 169;
	      {1'd0, 8'd106}: s2wr0 <= 170;
	      {1'd0, 8'd107}: s2wr0 <= 171;
	      {1'd0, 8'd108}: s2wr0 <= 172;
	      {1'd0, 8'd109}: s2wr0 <= 173;
	      {1'd0, 8'd110}: s2wr0 <= 174;
	      {1'd0, 8'd111}: s2wr0 <= 175;
	      {1'd0, 8'd112}: s2wr0 <= 176;
	      {1'd0, 8'd113}: s2wr0 <= 177;
	      {1'd0, 8'd114}: s2wr0 <= 178;
	      {1'd0, 8'd115}: s2wr0 <= 179;
	      {1'd0, 8'd116}: s2wr0 <= 180;
	      {1'd0, 8'd117}: s2wr0 <= 181;
	      {1'd0, 8'd118}: s2wr0 <= 182;
	      {1'd0, 8'd119}: s2wr0 <= 183;
	      {1'd0, 8'd120}: s2wr0 <= 184;
	      {1'd0, 8'd121}: s2wr0 <= 185;
	      {1'd0, 8'd122}: s2wr0 <= 186;
	      {1'd0, 8'd123}: s2wr0 <= 187;
	      {1'd0, 8'd124}: s2wr0 <= 188;
	      {1'd0, 8'd125}: s2wr0 <= 189;
	      {1'd0, 8'd126}: s2wr0 <= 190;
	      {1'd0, 8'd127}: s2wr0 <= 191;
	      {1'd0, 8'd128}: s2wr0 <= 64;
	      {1'd0, 8'd129}: s2wr0 <= 65;
	      {1'd0, 8'd130}: s2wr0 <= 66;
	      {1'd0, 8'd131}: s2wr0 <= 67;
	      {1'd0, 8'd132}: s2wr0 <= 68;
	      {1'd0, 8'd133}: s2wr0 <= 69;
	      {1'd0, 8'd134}: s2wr0 <= 70;
	      {1'd0, 8'd135}: s2wr0 <= 71;
	      {1'd0, 8'd136}: s2wr0 <= 72;
	      {1'd0, 8'd137}: s2wr0 <= 73;
	      {1'd0, 8'd138}: s2wr0 <= 74;
	      {1'd0, 8'd139}: s2wr0 <= 75;
	      {1'd0, 8'd140}: s2wr0 <= 76;
	      {1'd0, 8'd141}: s2wr0 <= 77;
	      {1'd0, 8'd142}: s2wr0 <= 78;
	      {1'd0, 8'd143}: s2wr0 <= 79;
	      {1'd0, 8'd144}: s2wr0 <= 80;
	      {1'd0, 8'd145}: s2wr0 <= 81;
	      {1'd0, 8'd146}: s2wr0 <= 82;
	      {1'd0, 8'd147}: s2wr0 <= 83;
	      {1'd0, 8'd148}: s2wr0 <= 84;
	      {1'd0, 8'd149}: s2wr0 <= 85;
	      {1'd0, 8'd150}: s2wr0 <= 86;
	      {1'd0, 8'd151}: s2wr0 <= 87;
	      {1'd0, 8'd152}: s2wr0 <= 88;
	      {1'd0, 8'd153}: s2wr0 <= 89;
	      {1'd0, 8'd154}: s2wr0 <= 90;
	      {1'd0, 8'd155}: s2wr0 <= 91;
	      {1'd0, 8'd156}: s2wr0 <= 92;
	      {1'd0, 8'd157}: s2wr0 <= 93;
	      {1'd0, 8'd158}: s2wr0 <= 94;
	      {1'd0, 8'd159}: s2wr0 <= 95;
	      {1'd0, 8'd160}: s2wr0 <= 96;
	      {1'd0, 8'd161}: s2wr0 <= 97;
	      {1'd0, 8'd162}: s2wr0 <= 98;
	      {1'd0, 8'd163}: s2wr0 <= 99;
	      {1'd0, 8'd164}: s2wr0 <= 100;
	      {1'd0, 8'd165}: s2wr0 <= 101;
	      {1'd0, 8'd166}: s2wr0 <= 102;
	      {1'd0, 8'd167}: s2wr0 <= 103;
	      {1'd0, 8'd168}: s2wr0 <= 104;
	      {1'd0, 8'd169}: s2wr0 <= 105;
	      {1'd0, 8'd170}: s2wr0 <= 106;
	      {1'd0, 8'd171}: s2wr0 <= 107;
	      {1'd0, 8'd172}: s2wr0 <= 108;
	      {1'd0, 8'd173}: s2wr0 <= 109;
	      {1'd0, 8'd174}: s2wr0 <= 110;
	      {1'd0, 8'd175}: s2wr0 <= 111;
	      {1'd0, 8'd176}: s2wr0 <= 112;
	      {1'd0, 8'd177}: s2wr0 <= 113;
	      {1'd0, 8'd178}: s2wr0 <= 114;
	      {1'd0, 8'd179}: s2wr0 <= 115;
	      {1'd0, 8'd180}: s2wr0 <= 116;
	      {1'd0, 8'd181}: s2wr0 <= 117;
	      {1'd0, 8'd182}: s2wr0 <= 118;
	      {1'd0, 8'd183}: s2wr0 <= 119;
	      {1'd0, 8'd184}: s2wr0 <= 120;
	      {1'd0, 8'd185}: s2wr0 <= 121;
	      {1'd0, 8'd186}: s2wr0 <= 122;
	      {1'd0, 8'd187}: s2wr0 <= 123;
	      {1'd0, 8'd188}: s2wr0 <= 124;
	      {1'd0, 8'd189}: s2wr0 <= 125;
	      {1'd0, 8'd190}: s2wr0 <= 126;
	      {1'd0, 8'd191}: s2wr0 <= 127;
	      {1'd0, 8'd192}: s2wr0 <= 0;
	      {1'd0, 8'd193}: s2wr0 <= 1;
	      {1'd0, 8'd194}: s2wr0 <= 2;
	      {1'd0, 8'd195}: s2wr0 <= 3;
	      {1'd0, 8'd196}: s2wr0 <= 4;
	      {1'd0, 8'd197}: s2wr0 <= 5;
	      {1'd0, 8'd198}: s2wr0 <= 6;
	      {1'd0, 8'd199}: s2wr0 <= 7;
	      {1'd0, 8'd200}: s2wr0 <= 8;
	      {1'd0, 8'd201}: s2wr0 <= 9;
	      {1'd0, 8'd202}: s2wr0 <= 10;
	      {1'd0, 8'd203}: s2wr0 <= 11;
	      {1'd0, 8'd204}: s2wr0 <= 12;
	      {1'd0, 8'd205}: s2wr0 <= 13;
	      {1'd0, 8'd206}: s2wr0 <= 14;
	      {1'd0, 8'd207}: s2wr0 <= 15;
	      {1'd0, 8'd208}: s2wr0 <= 16;
	      {1'd0, 8'd209}: s2wr0 <= 17;
	      {1'd0, 8'd210}: s2wr0 <= 18;
	      {1'd0, 8'd211}: s2wr0 <= 19;
	      {1'd0, 8'd212}: s2wr0 <= 20;
	      {1'd0, 8'd213}: s2wr0 <= 21;
	      {1'd0, 8'd214}: s2wr0 <= 22;
	      {1'd0, 8'd215}: s2wr0 <= 23;
	      {1'd0, 8'd216}: s2wr0 <= 24;
	      {1'd0, 8'd217}: s2wr0 <= 25;
	      {1'd0, 8'd218}: s2wr0 <= 26;
	      {1'd0, 8'd219}: s2wr0 <= 27;
	      {1'd0, 8'd220}: s2wr0 <= 28;
	      {1'd0, 8'd221}: s2wr0 <= 29;
	      {1'd0, 8'd222}: s2wr0 <= 30;
	      {1'd0, 8'd223}: s2wr0 <= 31;
	      {1'd0, 8'd224}: s2wr0 <= 32;
	      {1'd0, 8'd225}: s2wr0 <= 33;
	      {1'd0, 8'd226}: s2wr0 <= 34;
	      {1'd0, 8'd227}: s2wr0 <= 35;
	      {1'd0, 8'd228}: s2wr0 <= 36;
	      {1'd0, 8'd229}: s2wr0 <= 37;
	      {1'd0, 8'd230}: s2wr0 <= 38;
	      {1'd0, 8'd231}: s2wr0 <= 39;
	      {1'd0, 8'd232}: s2wr0 <= 40;
	      {1'd0, 8'd233}: s2wr0 <= 41;
	      {1'd0, 8'd234}: s2wr0 <= 42;
	      {1'd0, 8'd235}: s2wr0 <= 43;
	      {1'd0, 8'd236}: s2wr0 <= 44;
	      {1'd0, 8'd237}: s2wr0 <= 45;
	      {1'd0, 8'd238}: s2wr0 <= 46;
	      {1'd0, 8'd239}: s2wr0 <= 47;
	      {1'd0, 8'd240}: s2wr0 <= 48;
	      {1'd0, 8'd241}: s2wr0 <= 49;
	      {1'd0, 8'd242}: s2wr0 <= 50;
	      {1'd0, 8'd243}: s2wr0 <= 51;
	      {1'd0, 8'd244}: s2wr0 <= 52;
	      {1'd0, 8'd245}: s2wr0 <= 53;
	      {1'd0, 8'd246}: s2wr0 <= 54;
	      {1'd0, 8'd247}: s2wr0 <= 55;
	      {1'd0, 8'd248}: s2wr0 <= 56;
	      {1'd0, 8'd249}: s2wr0 <= 57;
	      {1'd0, 8'd250}: s2wr0 <= 58;
	      {1'd0, 8'd251}: s2wr0 <= 59;
	      {1'd0, 8'd252}: s2wr0 <= 60;
	      {1'd0, 8'd253}: s2wr0 <= 61;
	      {1'd0, 8'd254}: s2wr0 <= 62;
	      {1'd0, 8'd255}: s2wr0 <= 63;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr0 is "distributed"
   always @(posedge clk) begin
      case({tm0_dd, writeCycle})
	      {1'd0, 8'd0}: s2wr1 <= 128;
	      {1'd0, 8'd1}: s2wr1 <= 129;
	      {1'd0, 8'd2}: s2wr1 <= 130;
	      {1'd0, 8'd3}: s2wr1 <= 131;
	      {1'd0, 8'd4}: s2wr1 <= 132;
	      {1'd0, 8'd5}: s2wr1 <= 133;
	      {1'd0, 8'd6}: s2wr1 <= 134;
	      {1'd0, 8'd7}: s2wr1 <= 135;
	      {1'd0, 8'd8}: s2wr1 <= 136;
	      {1'd0, 8'd9}: s2wr1 <= 137;
	      {1'd0, 8'd10}: s2wr1 <= 138;
	      {1'd0, 8'd11}: s2wr1 <= 139;
	      {1'd0, 8'd12}: s2wr1 <= 140;
	      {1'd0, 8'd13}: s2wr1 <= 141;
	      {1'd0, 8'd14}: s2wr1 <= 142;
	      {1'd0, 8'd15}: s2wr1 <= 143;
	      {1'd0, 8'd16}: s2wr1 <= 144;
	      {1'd0, 8'd17}: s2wr1 <= 145;
	      {1'd0, 8'd18}: s2wr1 <= 146;
	      {1'd0, 8'd19}: s2wr1 <= 147;
	      {1'd0, 8'd20}: s2wr1 <= 148;
	      {1'd0, 8'd21}: s2wr1 <= 149;
	      {1'd0, 8'd22}: s2wr1 <= 150;
	      {1'd0, 8'd23}: s2wr1 <= 151;
	      {1'd0, 8'd24}: s2wr1 <= 152;
	      {1'd0, 8'd25}: s2wr1 <= 153;
	      {1'd0, 8'd26}: s2wr1 <= 154;
	      {1'd0, 8'd27}: s2wr1 <= 155;
	      {1'd0, 8'd28}: s2wr1 <= 156;
	      {1'd0, 8'd29}: s2wr1 <= 157;
	      {1'd0, 8'd30}: s2wr1 <= 158;
	      {1'd0, 8'd31}: s2wr1 <= 159;
	      {1'd0, 8'd32}: s2wr1 <= 160;
	      {1'd0, 8'd33}: s2wr1 <= 161;
	      {1'd0, 8'd34}: s2wr1 <= 162;
	      {1'd0, 8'd35}: s2wr1 <= 163;
	      {1'd0, 8'd36}: s2wr1 <= 164;
	      {1'd0, 8'd37}: s2wr1 <= 165;
	      {1'd0, 8'd38}: s2wr1 <= 166;
	      {1'd0, 8'd39}: s2wr1 <= 167;
	      {1'd0, 8'd40}: s2wr1 <= 168;
	      {1'd0, 8'd41}: s2wr1 <= 169;
	      {1'd0, 8'd42}: s2wr1 <= 170;
	      {1'd0, 8'd43}: s2wr1 <= 171;
	      {1'd0, 8'd44}: s2wr1 <= 172;
	      {1'd0, 8'd45}: s2wr1 <= 173;
	      {1'd0, 8'd46}: s2wr1 <= 174;
	      {1'd0, 8'd47}: s2wr1 <= 175;
	      {1'd0, 8'd48}: s2wr1 <= 176;
	      {1'd0, 8'd49}: s2wr1 <= 177;
	      {1'd0, 8'd50}: s2wr1 <= 178;
	      {1'd0, 8'd51}: s2wr1 <= 179;
	      {1'd0, 8'd52}: s2wr1 <= 180;
	      {1'd0, 8'd53}: s2wr1 <= 181;
	      {1'd0, 8'd54}: s2wr1 <= 182;
	      {1'd0, 8'd55}: s2wr1 <= 183;
	      {1'd0, 8'd56}: s2wr1 <= 184;
	      {1'd0, 8'd57}: s2wr1 <= 185;
	      {1'd0, 8'd58}: s2wr1 <= 186;
	      {1'd0, 8'd59}: s2wr1 <= 187;
	      {1'd0, 8'd60}: s2wr1 <= 188;
	      {1'd0, 8'd61}: s2wr1 <= 189;
	      {1'd0, 8'd62}: s2wr1 <= 190;
	      {1'd0, 8'd63}: s2wr1 <= 191;
	      {1'd0, 8'd64}: s2wr1 <= 192;
	      {1'd0, 8'd65}: s2wr1 <= 193;
	      {1'd0, 8'd66}: s2wr1 <= 194;
	      {1'd0, 8'd67}: s2wr1 <= 195;
	      {1'd0, 8'd68}: s2wr1 <= 196;
	      {1'd0, 8'd69}: s2wr1 <= 197;
	      {1'd0, 8'd70}: s2wr1 <= 198;
	      {1'd0, 8'd71}: s2wr1 <= 199;
	      {1'd0, 8'd72}: s2wr1 <= 200;
	      {1'd0, 8'd73}: s2wr1 <= 201;
	      {1'd0, 8'd74}: s2wr1 <= 202;
	      {1'd0, 8'd75}: s2wr1 <= 203;
	      {1'd0, 8'd76}: s2wr1 <= 204;
	      {1'd0, 8'd77}: s2wr1 <= 205;
	      {1'd0, 8'd78}: s2wr1 <= 206;
	      {1'd0, 8'd79}: s2wr1 <= 207;
	      {1'd0, 8'd80}: s2wr1 <= 208;
	      {1'd0, 8'd81}: s2wr1 <= 209;
	      {1'd0, 8'd82}: s2wr1 <= 210;
	      {1'd0, 8'd83}: s2wr1 <= 211;
	      {1'd0, 8'd84}: s2wr1 <= 212;
	      {1'd0, 8'd85}: s2wr1 <= 213;
	      {1'd0, 8'd86}: s2wr1 <= 214;
	      {1'd0, 8'd87}: s2wr1 <= 215;
	      {1'd0, 8'd88}: s2wr1 <= 216;
	      {1'd0, 8'd89}: s2wr1 <= 217;
	      {1'd0, 8'd90}: s2wr1 <= 218;
	      {1'd0, 8'd91}: s2wr1 <= 219;
	      {1'd0, 8'd92}: s2wr1 <= 220;
	      {1'd0, 8'd93}: s2wr1 <= 221;
	      {1'd0, 8'd94}: s2wr1 <= 222;
	      {1'd0, 8'd95}: s2wr1 <= 223;
	      {1'd0, 8'd96}: s2wr1 <= 224;
	      {1'd0, 8'd97}: s2wr1 <= 225;
	      {1'd0, 8'd98}: s2wr1 <= 226;
	      {1'd0, 8'd99}: s2wr1 <= 227;
	      {1'd0, 8'd100}: s2wr1 <= 228;
	      {1'd0, 8'd101}: s2wr1 <= 229;
	      {1'd0, 8'd102}: s2wr1 <= 230;
	      {1'd0, 8'd103}: s2wr1 <= 231;
	      {1'd0, 8'd104}: s2wr1 <= 232;
	      {1'd0, 8'd105}: s2wr1 <= 233;
	      {1'd0, 8'd106}: s2wr1 <= 234;
	      {1'd0, 8'd107}: s2wr1 <= 235;
	      {1'd0, 8'd108}: s2wr1 <= 236;
	      {1'd0, 8'd109}: s2wr1 <= 237;
	      {1'd0, 8'd110}: s2wr1 <= 238;
	      {1'd0, 8'd111}: s2wr1 <= 239;
	      {1'd0, 8'd112}: s2wr1 <= 240;
	      {1'd0, 8'd113}: s2wr1 <= 241;
	      {1'd0, 8'd114}: s2wr1 <= 242;
	      {1'd0, 8'd115}: s2wr1 <= 243;
	      {1'd0, 8'd116}: s2wr1 <= 244;
	      {1'd0, 8'd117}: s2wr1 <= 245;
	      {1'd0, 8'd118}: s2wr1 <= 246;
	      {1'd0, 8'd119}: s2wr1 <= 247;
	      {1'd0, 8'd120}: s2wr1 <= 248;
	      {1'd0, 8'd121}: s2wr1 <= 249;
	      {1'd0, 8'd122}: s2wr1 <= 250;
	      {1'd0, 8'd123}: s2wr1 <= 251;
	      {1'd0, 8'd124}: s2wr1 <= 252;
	      {1'd0, 8'd125}: s2wr1 <= 253;
	      {1'd0, 8'd126}: s2wr1 <= 254;
	      {1'd0, 8'd127}: s2wr1 <= 255;
	      {1'd0, 8'd128}: s2wr1 <= 0;
	      {1'd0, 8'd129}: s2wr1 <= 1;
	      {1'd0, 8'd130}: s2wr1 <= 2;
	      {1'd0, 8'd131}: s2wr1 <= 3;
	      {1'd0, 8'd132}: s2wr1 <= 4;
	      {1'd0, 8'd133}: s2wr1 <= 5;
	      {1'd0, 8'd134}: s2wr1 <= 6;
	      {1'd0, 8'd135}: s2wr1 <= 7;
	      {1'd0, 8'd136}: s2wr1 <= 8;
	      {1'd0, 8'd137}: s2wr1 <= 9;
	      {1'd0, 8'd138}: s2wr1 <= 10;
	      {1'd0, 8'd139}: s2wr1 <= 11;
	      {1'd0, 8'd140}: s2wr1 <= 12;
	      {1'd0, 8'd141}: s2wr1 <= 13;
	      {1'd0, 8'd142}: s2wr1 <= 14;
	      {1'd0, 8'd143}: s2wr1 <= 15;
	      {1'd0, 8'd144}: s2wr1 <= 16;
	      {1'd0, 8'd145}: s2wr1 <= 17;
	      {1'd0, 8'd146}: s2wr1 <= 18;
	      {1'd0, 8'd147}: s2wr1 <= 19;
	      {1'd0, 8'd148}: s2wr1 <= 20;
	      {1'd0, 8'd149}: s2wr1 <= 21;
	      {1'd0, 8'd150}: s2wr1 <= 22;
	      {1'd0, 8'd151}: s2wr1 <= 23;
	      {1'd0, 8'd152}: s2wr1 <= 24;
	      {1'd0, 8'd153}: s2wr1 <= 25;
	      {1'd0, 8'd154}: s2wr1 <= 26;
	      {1'd0, 8'd155}: s2wr1 <= 27;
	      {1'd0, 8'd156}: s2wr1 <= 28;
	      {1'd0, 8'd157}: s2wr1 <= 29;
	      {1'd0, 8'd158}: s2wr1 <= 30;
	      {1'd0, 8'd159}: s2wr1 <= 31;
	      {1'd0, 8'd160}: s2wr1 <= 32;
	      {1'd0, 8'd161}: s2wr1 <= 33;
	      {1'd0, 8'd162}: s2wr1 <= 34;
	      {1'd0, 8'd163}: s2wr1 <= 35;
	      {1'd0, 8'd164}: s2wr1 <= 36;
	      {1'd0, 8'd165}: s2wr1 <= 37;
	      {1'd0, 8'd166}: s2wr1 <= 38;
	      {1'd0, 8'd167}: s2wr1 <= 39;
	      {1'd0, 8'd168}: s2wr1 <= 40;
	      {1'd0, 8'd169}: s2wr1 <= 41;
	      {1'd0, 8'd170}: s2wr1 <= 42;
	      {1'd0, 8'd171}: s2wr1 <= 43;
	      {1'd0, 8'd172}: s2wr1 <= 44;
	      {1'd0, 8'd173}: s2wr1 <= 45;
	      {1'd0, 8'd174}: s2wr1 <= 46;
	      {1'd0, 8'd175}: s2wr1 <= 47;
	      {1'd0, 8'd176}: s2wr1 <= 48;
	      {1'd0, 8'd177}: s2wr1 <= 49;
	      {1'd0, 8'd178}: s2wr1 <= 50;
	      {1'd0, 8'd179}: s2wr1 <= 51;
	      {1'd0, 8'd180}: s2wr1 <= 52;
	      {1'd0, 8'd181}: s2wr1 <= 53;
	      {1'd0, 8'd182}: s2wr1 <= 54;
	      {1'd0, 8'd183}: s2wr1 <= 55;
	      {1'd0, 8'd184}: s2wr1 <= 56;
	      {1'd0, 8'd185}: s2wr1 <= 57;
	      {1'd0, 8'd186}: s2wr1 <= 58;
	      {1'd0, 8'd187}: s2wr1 <= 59;
	      {1'd0, 8'd188}: s2wr1 <= 60;
	      {1'd0, 8'd189}: s2wr1 <= 61;
	      {1'd0, 8'd190}: s2wr1 <= 62;
	      {1'd0, 8'd191}: s2wr1 <= 63;
	      {1'd0, 8'd192}: s2wr1 <= 64;
	      {1'd0, 8'd193}: s2wr1 <= 65;
	      {1'd0, 8'd194}: s2wr1 <= 66;
	      {1'd0, 8'd195}: s2wr1 <= 67;
	      {1'd0, 8'd196}: s2wr1 <= 68;
	      {1'd0, 8'd197}: s2wr1 <= 69;
	      {1'd0, 8'd198}: s2wr1 <= 70;
	      {1'd0, 8'd199}: s2wr1 <= 71;
	      {1'd0, 8'd200}: s2wr1 <= 72;
	      {1'd0, 8'd201}: s2wr1 <= 73;
	      {1'd0, 8'd202}: s2wr1 <= 74;
	      {1'd0, 8'd203}: s2wr1 <= 75;
	      {1'd0, 8'd204}: s2wr1 <= 76;
	      {1'd0, 8'd205}: s2wr1 <= 77;
	      {1'd0, 8'd206}: s2wr1 <= 78;
	      {1'd0, 8'd207}: s2wr1 <= 79;
	      {1'd0, 8'd208}: s2wr1 <= 80;
	      {1'd0, 8'd209}: s2wr1 <= 81;
	      {1'd0, 8'd210}: s2wr1 <= 82;
	      {1'd0, 8'd211}: s2wr1 <= 83;
	      {1'd0, 8'd212}: s2wr1 <= 84;
	      {1'd0, 8'd213}: s2wr1 <= 85;
	      {1'd0, 8'd214}: s2wr1 <= 86;
	      {1'd0, 8'd215}: s2wr1 <= 87;
	      {1'd0, 8'd216}: s2wr1 <= 88;
	      {1'd0, 8'd217}: s2wr1 <= 89;
	      {1'd0, 8'd218}: s2wr1 <= 90;
	      {1'd0, 8'd219}: s2wr1 <= 91;
	      {1'd0, 8'd220}: s2wr1 <= 92;
	      {1'd0, 8'd221}: s2wr1 <= 93;
	      {1'd0, 8'd222}: s2wr1 <= 94;
	      {1'd0, 8'd223}: s2wr1 <= 95;
	      {1'd0, 8'd224}: s2wr1 <= 96;
	      {1'd0, 8'd225}: s2wr1 <= 97;
	      {1'd0, 8'd226}: s2wr1 <= 98;
	      {1'd0, 8'd227}: s2wr1 <= 99;
	      {1'd0, 8'd228}: s2wr1 <= 100;
	      {1'd0, 8'd229}: s2wr1 <= 101;
	      {1'd0, 8'd230}: s2wr1 <= 102;
	      {1'd0, 8'd231}: s2wr1 <= 103;
	      {1'd0, 8'd232}: s2wr1 <= 104;
	      {1'd0, 8'd233}: s2wr1 <= 105;
	      {1'd0, 8'd234}: s2wr1 <= 106;
	      {1'd0, 8'd235}: s2wr1 <= 107;
	      {1'd0, 8'd236}: s2wr1 <= 108;
	      {1'd0, 8'd237}: s2wr1 <= 109;
	      {1'd0, 8'd238}: s2wr1 <= 110;
	      {1'd0, 8'd239}: s2wr1 <= 111;
	      {1'd0, 8'd240}: s2wr1 <= 112;
	      {1'd0, 8'd241}: s2wr1 <= 113;
	      {1'd0, 8'd242}: s2wr1 <= 114;
	      {1'd0, 8'd243}: s2wr1 <= 115;
	      {1'd0, 8'd244}: s2wr1 <= 116;
	      {1'd0, 8'd245}: s2wr1 <= 117;
	      {1'd0, 8'd246}: s2wr1 <= 118;
	      {1'd0, 8'd247}: s2wr1 <= 119;
	      {1'd0, 8'd248}: s2wr1 <= 120;
	      {1'd0, 8'd249}: s2wr1 <= 121;
	      {1'd0, 8'd250}: s2wr1 <= 122;
	      {1'd0, 8'd251}: s2wr1 <= 123;
	      {1'd0, 8'd252}: s2wr1 <= 124;
	      {1'd0, 8'd253}: s2wr1 <= 125;
	      {1'd0, 8'd254}: s2wr1 <= 126;
	      {1'd0, 8'd255}: s2wr1 <= 127;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr1 is "distributed"
   always @(posedge clk) begin
      case({tm0_dd, writeCycle})
	      {1'd0, 8'd0}: s2wr2 <= 64;
	      {1'd0, 8'd1}: s2wr2 <= 65;
	      {1'd0, 8'd2}: s2wr2 <= 66;
	      {1'd0, 8'd3}: s2wr2 <= 67;
	      {1'd0, 8'd4}: s2wr2 <= 68;
	      {1'd0, 8'd5}: s2wr2 <= 69;
	      {1'd0, 8'd6}: s2wr2 <= 70;
	      {1'd0, 8'd7}: s2wr2 <= 71;
	      {1'd0, 8'd8}: s2wr2 <= 72;
	      {1'd0, 8'd9}: s2wr2 <= 73;
	      {1'd0, 8'd10}: s2wr2 <= 74;
	      {1'd0, 8'd11}: s2wr2 <= 75;
	      {1'd0, 8'd12}: s2wr2 <= 76;
	      {1'd0, 8'd13}: s2wr2 <= 77;
	      {1'd0, 8'd14}: s2wr2 <= 78;
	      {1'd0, 8'd15}: s2wr2 <= 79;
	      {1'd0, 8'd16}: s2wr2 <= 80;
	      {1'd0, 8'd17}: s2wr2 <= 81;
	      {1'd0, 8'd18}: s2wr2 <= 82;
	      {1'd0, 8'd19}: s2wr2 <= 83;
	      {1'd0, 8'd20}: s2wr2 <= 84;
	      {1'd0, 8'd21}: s2wr2 <= 85;
	      {1'd0, 8'd22}: s2wr2 <= 86;
	      {1'd0, 8'd23}: s2wr2 <= 87;
	      {1'd0, 8'd24}: s2wr2 <= 88;
	      {1'd0, 8'd25}: s2wr2 <= 89;
	      {1'd0, 8'd26}: s2wr2 <= 90;
	      {1'd0, 8'd27}: s2wr2 <= 91;
	      {1'd0, 8'd28}: s2wr2 <= 92;
	      {1'd0, 8'd29}: s2wr2 <= 93;
	      {1'd0, 8'd30}: s2wr2 <= 94;
	      {1'd0, 8'd31}: s2wr2 <= 95;
	      {1'd0, 8'd32}: s2wr2 <= 96;
	      {1'd0, 8'd33}: s2wr2 <= 97;
	      {1'd0, 8'd34}: s2wr2 <= 98;
	      {1'd0, 8'd35}: s2wr2 <= 99;
	      {1'd0, 8'd36}: s2wr2 <= 100;
	      {1'd0, 8'd37}: s2wr2 <= 101;
	      {1'd0, 8'd38}: s2wr2 <= 102;
	      {1'd0, 8'd39}: s2wr2 <= 103;
	      {1'd0, 8'd40}: s2wr2 <= 104;
	      {1'd0, 8'd41}: s2wr2 <= 105;
	      {1'd0, 8'd42}: s2wr2 <= 106;
	      {1'd0, 8'd43}: s2wr2 <= 107;
	      {1'd0, 8'd44}: s2wr2 <= 108;
	      {1'd0, 8'd45}: s2wr2 <= 109;
	      {1'd0, 8'd46}: s2wr2 <= 110;
	      {1'd0, 8'd47}: s2wr2 <= 111;
	      {1'd0, 8'd48}: s2wr2 <= 112;
	      {1'd0, 8'd49}: s2wr2 <= 113;
	      {1'd0, 8'd50}: s2wr2 <= 114;
	      {1'd0, 8'd51}: s2wr2 <= 115;
	      {1'd0, 8'd52}: s2wr2 <= 116;
	      {1'd0, 8'd53}: s2wr2 <= 117;
	      {1'd0, 8'd54}: s2wr2 <= 118;
	      {1'd0, 8'd55}: s2wr2 <= 119;
	      {1'd0, 8'd56}: s2wr2 <= 120;
	      {1'd0, 8'd57}: s2wr2 <= 121;
	      {1'd0, 8'd58}: s2wr2 <= 122;
	      {1'd0, 8'd59}: s2wr2 <= 123;
	      {1'd0, 8'd60}: s2wr2 <= 124;
	      {1'd0, 8'd61}: s2wr2 <= 125;
	      {1'd0, 8'd62}: s2wr2 <= 126;
	      {1'd0, 8'd63}: s2wr2 <= 127;
	      {1'd0, 8'd64}: s2wr2 <= 0;
	      {1'd0, 8'd65}: s2wr2 <= 1;
	      {1'd0, 8'd66}: s2wr2 <= 2;
	      {1'd0, 8'd67}: s2wr2 <= 3;
	      {1'd0, 8'd68}: s2wr2 <= 4;
	      {1'd0, 8'd69}: s2wr2 <= 5;
	      {1'd0, 8'd70}: s2wr2 <= 6;
	      {1'd0, 8'd71}: s2wr2 <= 7;
	      {1'd0, 8'd72}: s2wr2 <= 8;
	      {1'd0, 8'd73}: s2wr2 <= 9;
	      {1'd0, 8'd74}: s2wr2 <= 10;
	      {1'd0, 8'd75}: s2wr2 <= 11;
	      {1'd0, 8'd76}: s2wr2 <= 12;
	      {1'd0, 8'd77}: s2wr2 <= 13;
	      {1'd0, 8'd78}: s2wr2 <= 14;
	      {1'd0, 8'd79}: s2wr2 <= 15;
	      {1'd0, 8'd80}: s2wr2 <= 16;
	      {1'd0, 8'd81}: s2wr2 <= 17;
	      {1'd0, 8'd82}: s2wr2 <= 18;
	      {1'd0, 8'd83}: s2wr2 <= 19;
	      {1'd0, 8'd84}: s2wr2 <= 20;
	      {1'd0, 8'd85}: s2wr2 <= 21;
	      {1'd0, 8'd86}: s2wr2 <= 22;
	      {1'd0, 8'd87}: s2wr2 <= 23;
	      {1'd0, 8'd88}: s2wr2 <= 24;
	      {1'd0, 8'd89}: s2wr2 <= 25;
	      {1'd0, 8'd90}: s2wr2 <= 26;
	      {1'd0, 8'd91}: s2wr2 <= 27;
	      {1'd0, 8'd92}: s2wr2 <= 28;
	      {1'd0, 8'd93}: s2wr2 <= 29;
	      {1'd0, 8'd94}: s2wr2 <= 30;
	      {1'd0, 8'd95}: s2wr2 <= 31;
	      {1'd0, 8'd96}: s2wr2 <= 32;
	      {1'd0, 8'd97}: s2wr2 <= 33;
	      {1'd0, 8'd98}: s2wr2 <= 34;
	      {1'd0, 8'd99}: s2wr2 <= 35;
	      {1'd0, 8'd100}: s2wr2 <= 36;
	      {1'd0, 8'd101}: s2wr2 <= 37;
	      {1'd0, 8'd102}: s2wr2 <= 38;
	      {1'd0, 8'd103}: s2wr2 <= 39;
	      {1'd0, 8'd104}: s2wr2 <= 40;
	      {1'd0, 8'd105}: s2wr2 <= 41;
	      {1'd0, 8'd106}: s2wr2 <= 42;
	      {1'd0, 8'd107}: s2wr2 <= 43;
	      {1'd0, 8'd108}: s2wr2 <= 44;
	      {1'd0, 8'd109}: s2wr2 <= 45;
	      {1'd0, 8'd110}: s2wr2 <= 46;
	      {1'd0, 8'd111}: s2wr2 <= 47;
	      {1'd0, 8'd112}: s2wr2 <= 48;
	      {1'd0, 8'd113}: s2wr2 <= 49;
	      {1'd0, 8'd114}: s2wr2 <= 50;
	      {1'd0, 8'd115}: s2wr2 <= 51;
	      {1'd0, 8'd116}: s2wr2 <= 52;
	      {1'd0, 8'd117}: s2wr2 <= 53;
	      {1'd0, 8'd118}: s2wr2 <= 54;
	      {1'd0, 8'd119}: s2wr2 <= 55;
	      {1'd0, 8'd120}: s2wr2 <= 56;
	      {1'd0, 8'd121}: s2wr2 <= 57;
	      {1'd0, 8'd122}: s2wr2 <= 58;
	      {1'd0, 8'd123}: s2wr2 <= 59;
	      {1'd0, 8'd124}: s2wr2 <= 60;
	      {1'd0, 8'd125}: s2wr2 <= 61;
	      {1'd0, 8'd126}: s2wr2 <= 62;
	      {1'd0, 8'd127}: s2wr2 <= 63;
	      {1'd0, 8'd128}: s2wr2 <= 192;
	      {1'd0, 8'd129}: s2wr2 <= 193;
	      {1'd0, 8'd130}: s2wr2 <= 194;
	      {1'd0, 8'd131}: s2wr2 <= 195;
	      {1'd0, 8'd132}: s2wr2 <= 196;
	      {1'd0, 8'd133}: s2wr2 <= 197;
	      {1'd0, 8'd134}: s2wr2 <= 198;
	      {1'd0, 8'd135}: s2wr2 <= 199;
	      {1'd0, 8'd136}: s2wr2 <= 200;
	      {1'd0, 8'd137}: s2wr2 <= 201;
	      {1'd0, 8'd138}: s2wr2 <= 202;
	      {1'd0, 8'd139}: s2wr2 <= 203;
	      {1'd0, 8'd140}: s2wr2 <= 204;
	      {1'd0, 8'd141}: s2wr2 <= 205;
	      {1'd0, 8'd142}: s2wr2 <= 206;
	      {1'd0, 8'd143}: s2wr2 <= 207;
	      {1'd0, 8'd144}: s2wr2 <= 208;
	      {1'd0, 8'd145}: s2wr2 <= 209;
	      {1'd0, 8'd146}: s2wr2 <= 210;
	      {1'd0, 8'd147}: s2wr2 <= 211;
	      {1'd0, 8'd148}: s2wr2 <= 212;
	      {1'd0, 8'd149}: s2wr2 <= 213;
	      {1'd0, 8'd150}: s2wr2 <= 214;
	      {1'd0, 8'd151}: s2wr2 <= 215;
	      {1'd0, 8'd152}: s2wr2 <= 216;
	      {1'd0, 8'd153}: s2wr2 <= 217;
	      {1'd0, 8'd154}: s2wr2 <= 218;
	      {1'd0, 8'd155}: s2wr2 <= 219;
	      {1'd0, 8'd156}: s2wr2 <= 220;
	      {1'd0, 8'd157}: s2wr2 <= 221;
	      {1'd0, 8'd158}: s2wr2 <= 222;
	      {1'd0, 8'd159}: s2wr2 <= 223;
	      {1'd0, 8'd160}: s2wr2 <= 224;
	      {1'd0, 8'd161}: s2wr2 <= 225;
	      {1'd0, 8'd162}: s2wr2 <= 226;
	      {1'd0, 8'd163}: s2wr2 <= 227;
	      {1'd0, 8'd164}: s2wr2 <= 228;
	      {1'd0, 8'd165}: s2wr2 <= 229;
	      {1'd0, 8'd166}: s2wr2 <= 230;
	      {1'd0, 8'd167}: s2wr2 <= 231;
	      {1'd0, 8'd168}: s2wr2 <= 232;
	      {1'd0, 8'd169}: s2wr2 <= 233;
	      {1'd0, 8'd170}: s2wr2 <= 234;
	      {1'd0, 8'd171}: s2wr2 <= 235;
	      {1'd0, 8'd172}: s2wr2 <= 236;
	      {1'd0, 8'd173}: s2wr2 <= 237;
	      {1'd0, 8'd174}: s2wr2 <= 238;
	      {1'd0, 8'd175}: s2wr2 <= 239;
	      {1'd0, 8'd176}: s2wr2 <= 240;
	      {1'd0, 8'd177}: s2wr2 <= 241;
	      {1'd0, 8'd178}: s2wr2 <= 242;
	      {1'd0, 8'd179}: s2wr2 <= 243;
	      {1'd0, 8'd180}: s2wr2 <= 244;
	      {1'd0, 8'd181}: s2wr2 <= 245;
	      {1'd0, 8'd182}: s2wr2 <= 246;
	      {1'd0, 8'd183}: s2wr2 <= 247;
	      {1'd0, 8'd184}: s2wr2 <= 248;
	      {1'd0, 8'd185}: s2wr2 <= 249;
	      {1'd0, 8'd186}: s2wr2 <= 250;
	      {1'd0, 8'd187}: s2wr2 <= 251;
	      {1'd0, 8'd188}: s2wr2 <= 252;
	      {1'd0, 8'd189}: s2wr2 <= 253;
	      {1'd0, 8'd190}: s2wr2 <= 254;
	      {1'd0, 8'd191}: s2wr2 <= 255;
	      {1'd0, 8'd192}: s2wr2 <= 128;
	      {1'd0, 8'd193}: s2wr2 <= 129;
	      {1'd0, 8'd194}: s2wr2 <= 130;
	      {1'd0, 8'd195}: s2wr2 <= 131;
	      {1'd0, 8'd196}: s2wr2 <= 132;
	      {1'd0, 8'd197}: s2wr2 <= 133;
	      {1'd0, 8'd198}: s2wr2 <= 134;
	      {1'd0, 8'd199}: s2wr2 <= 135;
	      {1'd0, 8'd200}: s2wr2 <= 136;
	      {1'd0, 8'd201}: s2wr2 <= 137;
	      {1'd0, 8'd202}: s2wr2 <= 138;
	      {1'd0, 8'd203}: s2wr2 <= 139;
	      {1'd0, 8'd204}: s2wr2 <= 140;
	      {1'd0, 8'd205}: s2wr2 <= 141;
	      {1'd0, 8'd206}: s2wr2 <= 142;
	      {1'd0, 8'd207}: s2wr2 <= 143;
	      {1'd0, 8'd208}: s2wr2 <= 144;
	      {1'd0, 8'd209}: s2wr2 <= 145;
	      {1'd0, 8'd210}: s2wr2 <= 146;
	      {1'd0, 8'd211}: s2wr2 <= 147;
	      {1'd0, 8'd212}: s2wr2 <= 148;
	      {1'd0, 8'd213}: s2wr2 <= 149;
	      {1'd0, 8'd214}: s2wr2 <= 150;
	      {1'd0, 8'd215}: s2wr2 <= 151;
	      {1'd0, 8'd216}: s2wr2 <= 152;
	      {1'd0, 8'd217}: s2wr2 <= 153;
	      {1'd0, 8'd218}: s2wr2 <= 154;
	      {1'd0, 8'd219}: s2wr2 <= 155;
	      {1'd0, 8'd220}: s2wr2 <= 156;
	      {1'd0, 8'd221}: s2wr2 <= 157;
	      {1'd0, 8'd222}: s2wr2 <= 158;
	      {1'd0, 8'd223}: s2wr2 <= 159;
	      {1'd0, 8'd224}: s2wr2 <= 160;
	      {1'd0, 8'd225}: s2wr2 <= 161;
	      {1'd0, 8'd226}: s2wr2 <= 162;
	      {1'd0, 8'd227}: s2wr2 <= 163;
	      {1'd0, 8'd228}: s2wr2 <= 164;
	      {1'd0, 8'd229}: s2wr2 <= 165;
	      {1'd0, 8'd230}: s2wr2 <= 166;
	      {1'd0, 8'd231}: s2wr2 <= 167;
	      {1'd0, 8'd232}: s2wr2 <= 168;
	      {1'd0, 8'd233}: s2wr2 <= 169;
	      {1'd0, 8'd234}: s2wr2 <= 170;
	      {1'd0, 8'd235}: s2wr2 <= 171;
	      {1'd0, 8'd236}: s2wr2 <= 172;
	      {1'd0, 8'd237}: s2wr2 <= 173;
	      {1'd0, 8'd238}: s2wr2 <= 174;
	      {1'd0, 8'd239}: s2wr2 <= 175;
	      {1'd0, 8'd240}: s2wr2 <= 176;
	      {1'd0, 8'd241}: s2wr2 <= 177;
	      {1'd0, 8'd242}: s2wr2 <= 178;
	      {1'd0, 8'd243}: s2wr2 <= 179;
	      {1'd0, 8'd244}: s2wr2 <= 180;
	      {1'd0, 8'd245}: s2wr2 <= 181;
	      {1'd0, 8'd246}: s2wr2 <= 182;
	      {1'd0, 8'd247}: s2wr2 <= 183;
	      {1'd0, 8'd248}: s2wr2 <= 184;
	      {1'd0, 8'd249}: s2wr2 <= 185;
	      {1'd0, 8'd250}: s2wr2 <= 186;
	      {1'd0, 8'd251}: s2wr2 <= 187;
	      {1'd0, 8'd252}: s2wr2 <= 188;
	      {1'd0, 8'd253}: s2wr2 <= 189;
	      {1'd0, 8'd254}: s2wr2 <= 190;
	      {1'd0, 8'd255}: s2wr2 <= 191;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr2 is "distributed"
   always @(posedge clk) begin
      case({tm0_dd, writeCycle})
	      {1'd0, 8'd0}: s2wr3 <= 0;
	      {1'd0, 8'd1}: s2wr3 <= 1;
	      {1'd0, 8'd2}: s2wr3 <= 2;
	      {1'd0, 8'd3}: s2wr3 <= 3;
	      {1'd0, 8'd4}: s2wr3 <= 4;
	      {1'd0, 8'd5}: s2wr3 <= 5;
	      {1'd0, 8'd6}: s2wr3 <= 6;
	      {1'd0, 8'd7}: s2wr3 <= 7;
	      {1'd0, 8'd8}: s2wr3 <= 8;
	      {1'd0, 8'd9}: s2wr3 <= 9;
	      {1'd0, 8'd10}: s2wr3 <= 10;
	      {1'd0, 8'd11}: s2wr3 <= 11;
	      {1'd0, 8'd12}: s2wr3 <= 12;
	      {1'd0, 8'd13}: s2wr3 <= 13;
	      {1'd0, 8'd14}: s2wr3 <= 14;
	      {1'd0, 8'd15}: s2wr3 <= 15;
	      {1'd0, 8'd16}: s2wr3 <= 16;
	      {1'd0, 8'd17}: s2wr3 <= 17;
	      {1'd0, 8'd18}: s2wr3 <= 18;
	      {1'd0, 8'd19}: s2wr3 <= 19;
	      {1'd0, 8'd20}: s2wr3 <= 20;
	      {1'd0, 8'd21}: s2wr3 <= 21;
	      {1'd0, 8'd22}: s2wr3 <= 22;
	      {1'd0, 8'd23}: s2wr3 <= 23;
	      {1'd0, 8'd24}: s2wr3 <= 24;
	      {1'd0, 8'd25}: s2wr3 <= 25;
	      {1'd0, 8'd26}: s2wr3 <= 26;
	      {1'd0, 8'd27}: s2wr3 <= 27;
	      {1'd0, 8'd28}: s2wr3 <= 28;
	      {1'd0, 8'd29}: s2wr3 <= 29;
	      {1'd0, 8'd30}: s2wr3 <= 30;
	      {1'd0, 8'd31}: s2wr3 <= 31;
	      {1'd0, 8'd32}: s2wr3 <= 32;
	      {1'd0, 8'd33}: s2wr3 <= 33;
	      {1'd0, 8'd34}: s2wr3 <= 34;
	      {1'd0, 8'd35}: s2wr3 <= 35;
	      {1'd0, 8'd36}: s2wr3 <= 36;
	      {1'd0, 8'd37}: s2wr3 <= 37;
	      {1'd0, 8'd38}: s2wr3 <= 38;
	      {1'd0, 8'd39}: s2wr3 <= 39;
	      {1'd0, 8'd40}: s2wr3 <= 40;
	      {1'd0, 8'd41}: s2wr3 <= 41;
	      {1'd0, 8'd42}: s2wr3 <= 42;
	      {1'd0, 8'd43}: s2wr3 <= 43;
	      {1'd0, 8'd44}: s2wr3 <= 44;
	      {1'd0, 8'd45}: s2wr3 <= 45;
	      {1'd0, 8'd46}: s2wr3 <= 46;
	      {1'd0, 8'd47}: s2wr3 <= 47;
	      {1'd0, 8'd48}: s2wr3 <= 48;
	      {1'd0, 8'd49}: s2wr3 <= 49;
	      {1'd0, 8'd50}: s2wr3 <= 50;
	      {1'd0, 8'd51}: s2wr3 <= 51;
	      {1'd0, 8'd52}: s2wr3 <= 52;
	      {1'd0, 8'd53}: s2wr3 <= 53;
	      {1'd0, 8'd54}: s2wr3 <= 54;
	      {1'd0, 8'd55}: s2wr3 <= 55;
	      {1'd0, 8'd56}: s2wr3 <= 56;
	      {1'd0, 8'd57}: s2wr3 <= 57;
	      {1'd0, 8'd58}: s2wr3 <= 58;
	      {1'd0, 8'd59}: s2wr3 <= 59;
	      {1'd0, 8'd60}: s2wr3 <= 60;
	      {1'd0, 8'd61}: s2wr3 <= 61;
	      {1'd0, 8'd62}: s2wr3 <= 62;
	      {1'd0, 8'd63}: s2wr3 <= 63;
	      {1'd0, 8'd64}: s2wr3 <= 64;
	      {1'd0, 8'd65}: s2wr3 <= 65;
	      {1'd0, 8'd66}: s2wr3 <= 66;
	      {1'd0, 8'd67}: s2wr3 <= 67;
	      {1'd0, 8'd68}: s2wr3 <= 68;
	      {1'd0, 8'd69}: s2wr3 <= 69;
	      {1'd0, 8'd70}: s2wr3 <= 70;
	      {1'd0, 8'd71}: s2wr3 <= 71;
	      {1'd0, 8'd72}: s2wr3 <= 72;
	      {1'd0, 8'd73}: s2wr3 <= 73;
	      {1'd0, 8'd74}: s2wr3 <= 74;
	      {1'd0, 8'd75}: s2wr3 <= 75;
	      {1'd0, 8'd76}: s2wr3 <= 76;
	      {1'd0, 8'd77}: s2wr3 <= 77;
	      {1'd0, 8'd78}: s2wr3 <= 78;
	      {1'd0, 8'd79}: s2wr3 <= 79;
	      {1'd0, 8'd80}: s2wr3 <= 80;
	      {1'd0, 8'd81}: s2wr3 <= 81;
	      {1'd0, 8'd82}: s2wr3 <= 82;
	      {1'd0, 8'd83}: s2wr3 <= 83;
	      {1'd0, 8'd84}: s2wr3 <= 84;
	      {1'd0, 8'd85}: s2wr3 <= 85;
	      {1'd0, 8'd86}: s2wr3 <= 86;
	      {1'd0, 8'd87}: s2wr3 <= 87;
	      {1'd0, 8'd88}: s2wr3 <= 88;
	      {1'd0, 8'd89}: s2wr3 <= 89;
	      {1'd0, 8'd90}: s2wr3 <= 90;
	      {1'd0, 8'd91}: s2wr3 <= 91;
	      {1'd0, 8'd92}: s2wr3 <= 92;
	      {1'd0, 8'd93}: s2wr3 <= 93;
	      {1'd0, 8'd94}: s2wr3 <= 94;
	      {1'd0, 8'd95}: s2wr3 <= 95;
	      {1'd0, 8'd96}: s2wr3 <= 96;
	      {1'd0, 8'd97}: s2wr3 <= 97;
	      {1'd0, 8'd98}: s2wr3 <= 98;
	      {1'd0, 8'd99}: s2wr3 <= 99;
	      {1'd0, 8'd100}: s2wr3 <= 100;
	      {1'd0, 8'd101}: s2wr3 <= 101;
	      {1'd0, 8'd102}: s2wr3 <= 102;
	      {1'd0, 8'd103}: s2wr3 <= 103;
	      {1'd0, 8'd104}: s2wr3 <= 104;
	      {1'd0, 8'd105}: s2wr3 <= 105;
	      {1'd0, 8'd106}: s2wr3 <= 106;
	      {1'd0, 8'd107}: s2wr3 <= 107;
	      {1'd0, 8'd108}: s2wr3 <= 108;
	      {1'd0, 8'd109}: s2wr3 <= 109;
	      {1'd0, 8'd110}: s2wr3 <= 110;
	      {1'd0, 8'd111}: s2wr3 <= 111;
	      {1'd0, 8'd112}: s2wr3 <= 112;
	      {1'd0, 8'd113}: s2wr3 <= 113;
	      {1'd0, 8'd114}: s2wr3 <= 114;
	      {1'd0, 8'd115}: s2wr3 <= 115;
	      {1'd0, 8'd116}: s2wr3 <= 116;
	      {1'd0, 8'd117}: s2wr3 <= 117;
	      {1'd0, 8'd118}: s2wr3 <= 118;
	      {1'd0, 8'd119}: s2wr3 <= 119;
	      {1'd0, 8'd120}: s2wr3 <= 120;
	      {1'd0, 8'd121}: s2wr3 <= 121;
	      {1'd0, 8'd122}: s2wr3 <= 122;
	      {1'd0, 8'd123}: s2wr3 <= 123;
	      {1'd0, 8'd124}: s2wr3 <= 124;
	      {1'd0, 8'd125}: s2wr3 <= 125;
	      {1'd0, 8'd126}: s2wr3 <= 126;
	      {1'd0, 8'd127}: s2wr3 <= 127;
	      {1'd0, 8'd128}: s2wr3 <= 128;
	      {1'd0, 8'd129}: s2wr3 <= 129;
	      {1'd0, 8'd130}: s2wr3 <= 130;
	      {1'd0, 8'd131}: s2wr3 <= 131;
	      {1'd0, 8'd132}: s2wr3 <= 132;
	      {1'd0, 8'd133}: s2wr3 <= 133;
	      {1'd0, 8'd134}: s2wr3 <= 134;
	      {1'd0, 8'd135}: s2wr3 <= 135;
	      {1'd0, 8'd136}: s2wr3 <= 136;
	      {1'd0, 8'd137}: s2wr3 <= 137;
	      {1'd0, 8'd138}: s2wr3 <= 138;
	      {1'd0, 8'd139}: s2wr3 <= 139;
	      {1'd0, 8'd140}: s2wr3 <= 140;
	      {1'd0, 8'd141}: s2wr3 <= 141;
	      {1'd0, 8'd142}: s2wr3 <= 142;
	      {1'd0, 8'd143}: s2wr3 <= 143;
	      {1'd0, 8'd144}: s2wr3 <= 144;
	      {1'd0, 8'd145}: s2wr3 <= 145;
	      {1'd0, 8'd146}: s2wr3 <= 146;
	      {1'd0, 8'd147}: s2wr3 <= 147;
	      {1'd0, 8'd148}: s2wr3 <= 148;
	      {1'd0, 8'd149}: s2wr3 <= 149;
	      {1'd0, 8'd150}: s2wr3 <= 150;
	      {1'd0, 8'd151}: s2wr3 <= 151;
	      {1'd0, 8'd152}: s2wr3 <= 152;
	      {1'd0, 8'd153}: s2wr3 <= 153;
	      {1'd0, 8'd154}: s2wr3 <= 154;
	      {1'd0, 8'd155}: s2wr3 <= 155;
	      {1'd0, 8'd156}: s2wr3 <= 156;
	      {1'd0, 8'd157}: s2wr3 <= 157;
	      {1'd0, 8'd158}: s2wr3 <= 158;
	      {1'd0, 8'd159}: s2wr3 <= 159;
	      {1'd0, 8'd160}: s2wr3 <= 160;
	      {1'd0, 8'd161}: s2wr3 <= 161;
	      {1'd0, 8'd162}: s2wr3 <= 162;
	      {1'd0, 8'd163}: s2wr3 <= 163;
	      {1'd0, 8'd164}: s2wr3 <= 164;
	      {1'd0, 8'd165}: s2wr3 <= 165;
	      {1'd0, 8'd166}: s2wr3 <= 166;
	      {1'd0, 8'd167}: s2wr3 <= 167;
	      {1'd0, 8'd168}: s2wr3 <= 168;
	      {1'd0, 8'd169}: s2wr3 <= 169;
	      {1'd0, 8'd170}: s2wr3 <= 170;
	      {1'd0, 8'd171}: s2wr3 <= 171;
	      {1'd0, 8'd172}: s2wr3 <= 172;
	      {1'd0, 8'd173}: s2wr3 <= 173;
	      {1'd0, 8'd174}: s2wr3 <= 174;
	      {1'd0, 8'd175}: s2wr3 <= 175;
	      {1'd0, 8'd176}: s2wr3 <= 176;
	      {1'd0, 8'd177}: s2wr3 <= 177;
	      {1'd0, 8'd178}: s2wr3 <= 178;
	      {1'd0, 8'd179}: s2wr3 <= 179;
	      {1'd0, 8'd180}: s2wr3 <= 180;
	      {1'd0, 8'd181}: s2wr3 <= 181;
	      {1'd0, 8'd182}: s2wr3 <= 182;
	      {1'd0, 8'd183}: s2wr3 <= 183;
	      {1'd0, 8'd184}: s2wr3 <= 184;
	      {1'd0, 8'd185}: s2wr3 <= 185;
	      {1'd0, 8'd186}: s2wr3 <= 186;
	      {1'd0, 8'd187}: s2wr3 <= 187;
	      {1'd0, 8'd188}: s2wr3 <= 188;
	      {1'd0, 8'd189}: s2wr3 <= 189;
	      {1'd0, 8'd190}: s2wr3 <= 190;
	      {1'd0, 8'd191}: s2wr3 <= 191;
	      {1'd0, 8'd192}: s2wr3 <= 192;
	      {1'd0, 8'd193}: s2wr3 <= 193;
	      {1'd0, 8'd194}: s2wr3 <= 194;
	      {1'd0, 8'd195}: s2wr3 <= 195;
	      {1'd0, 8'd196}: s2wr3 <= 196;
	      {1'd0, 8'd197}: s2wr3 <= 197;
	      {1'd0, 8'd198}: s2wr3 <= 198;
	      {1'd0, 8'd199}: s2wr3 <= 199;
	      {1'd0, 8'd200}: s2wr3 <= 200;
	      {1'd0, 8'd201}: s2wr3 <= 201;
	      {1'd0, 8'd202}: s2wr3 <= 202;
	      {1'd0, 8'd203}: s2wr3 <= 203;
	      {1'd0, 8'd204}: s2wr3 <= 204;
	      {1'd0, 8'd205}: s2wr3 <= 205;
	      {1'd0, 8'd206}: s2wr3 <= 206;
	      {1'd0, 8'd207}: s2wr3 <= 207;
	      {1'd0, 8'd208}: s2wr3 <= 208;
	      {1'd0, 8'd209}: s2wr3 <= 209;
	      {1'd0, 8'd210}: s2wr3 <= 210;
	      {1'd0, 8'd211}: s2wr3 <= 211;
	      {1'd0, 8'd212}: s2wr3 <= 212;
	      {1'd0, 8'd213}: s2wr3 <= 213;
	      {1'd0, 8'd214}: s2wr3 <= 214;
	      {1'd0, 8'd215}: s2wr3 <= 215;
	      {1'd0, 8'd216}: s2wr3 <= 216;
	      {1'd0, 8'd217}: s2wr3 <= 217;
	      {1'd0, 8'd218}: s2wr3 <= 218;
	      {1'd0, 8'd219}: s2wr3 <= 219;
	      {1'd0, 8'd220}: s2wr3 <= 220;
	      {1'd0, 8'd221}: s2wr3 <= 221;
	      {1'd0, 8'd222}: s2wr3 <= 222;
	      {1'd0, 8'd223}: s2wr3 <= 223;
	      {1'd0, 8'd224}: s2wr3 <= 224;
	      {1'd0, 8'd225}: s2wr3 <= 225;
	      {1'd0, 8'd226}: s2wr3 <= 226;
	      {1'd0, 8'd227}: s2wr3 <= 227;
	      {1'd0, 8'd228}: s2wr3 <= 228;
	      {1'd0, 8'd229}: s2wr3 <= 229;
	      {1'd0, 8'd230}: s2wr3 <= 230;
	      {1'd0, 8'd231}: s2wr3 <= 231;
	      {1'd0, 8'd232}: s2wr3 <= 232;
	      {1'd0, 8'd233}: s2wr3 <= 233;
	      {1'd0, 8'd234}: s2wr3 <= 234;
	      {1'd0, 8'd235}: s2wr3 <= 235;
	      {1'd0, 8'd236}: s2wr3 <= 236;
	      {1'd0, 8'd237}: s2wr3 <= 237;
	      {1'd0, 8'd238}: s2wr3 <= 238;
	      {1'd0, 8'd239}: s2wr3 <= 239;
	      {1'd0, 8'd240}: s2wr3 <= 240;
	      {1'd0, 8'd241}: s2wr3 <= 241;
	      {1'd0, 8'd242}: s2wr3 <= 242;
	      {1'd0, 8'd243}: s2wr3 <= 243;
	      {1'd0, 8'd244}: s2wr3 <= 244;
	      {1'd0, 8'd245}: s2wr3 <= 245;
	      {1'd0, 8'd246}: s2wr3 <= 246;
	      {1'd0, 8'd247}: s2wr3 <= 247;
	      {1'd0, 8'd248}: s2wr3 <= 248;
	      {1'd0, 8'd249}: s2wr3 <= 249;
	      {1'd0, 8'd250}: s2wr3 <= 250;
	      {1'd0, 8'd251}: s2wr3 <= 251;
	      {1'd0, 8'd252}: s2wr3 <= 252;
	      {1'd0, 8'd253}: s2wr3 <= 253;
	      {1'd0, 8'd254}: s2wr3 <= 254;
	      {1'd0, 8'd255}: s2wr3 <= 255;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr3 is "distributed"
endmodule




module memMod(in, out, inAddr, outAddr, writeSel, clk);
   
   parameter depth=1024, width=16, logDepth=10;
   
   input [width-1:0]    in;
   input [logDepth-1:0] inAddr, outAddr;
   input 	        writeSel, clk;
   output [width-1:0] 	out;
   reg [width-1:0] 	out;
   
   // synthesis attribute ram_style of mem is block

   reg [width-1:0] 	mem[depth-1:0]; 
   
   always @(posedge clk) begin
      out <= mem[outAddr];
      
      if (writeSel)
        mem[inAddr] <= in;
   end
endmodule 



module memMod_dist(in, out, inAddr, outAddr, writeSel, clk);
   
   parameter depth=1024, width=16, logDepth=10;
   
   input [width-1:0]    in;
   input [logDepth-1:0] inAddr, outAddr;
   input 	        writeSel, clk;
   output [width-1:0] 	out;
   reg [width-1:0] 	out;
   
   // synthesis attribute ram_style of mem is distributed

   reg [width-1:0] 	mem[depth-1:0]; 
   
   always @(posedge clk) begin
      out <= mem[outAddr];
      
      if (writeSel)
        mem[inAddr] <= in;
   end
endmodule 

module shiftRegFIFO(X, Y, clk);
   parameter depth=1, width=1;

   output [width-1:0] Y;
   input  [width-1:0] X;
   input              clk;

   reg [width-1:0]    mem [depth-1:0];
   integer            index;

   assign Y = mem[depth-1];

   always @ (posedge clk) begin
      for(index=1;index<depth;index=index+1) begin
         mem[index] <= mem[index-1];
      end
      mem[0]<=X;
   end
endmodule

module nextReg(X, Y, reset, clk);
   parameter depth=2, logDepth=1;

   output Y;
   input X;
   input              clk, reset;
   reg [logDepth:0] count;
   reg                active;

   assign Y = (count == depth) ? 1 : 0;

   always @ (posedge clk) begin
      if (reset == 1) begin
         count <= 0;
         active <= 0;
      end
      else if (X == 1) begin
         active <= 1;
         count <= 1;
      end
      else if (count == depth) begin
         count <= 0;
         active <= 0;
      end
      else if (active)
         count <= count+1;
   end
endmodule

// Latency: 3
// Gap: 1
module codeBlock36799(clk, reset, next_in, next_out,
   X0_in, Y0,
   X1_in, Y1,
   X2_in, Y2,
   X3_in, Y3,
   X4_in, Y4,
   X5_in, Y5,
   X6_in, Y6,
   X7_in, Y7);

   output next_out;
   input clk, reset, next_in;

   reg next;

   input [19:0] X0_in,
      X1_in,
      X2_in,
      X3_in,
      X4_in,
      X5_in,
      X6_in,
      X7_in;

   reg   [19:0] X0,
      X1,
      X2,
      X3,
      X4,
      X5,
      X6,
      X7;

   output [19:0] Y0,
      Y1,
      Y2,
      Y3,
      Y4,
      Y5,
      Y6,
      Y7;

   shiftRegFIFO #(2, 1) shiftFIFO_43823(.X(next), .Y(next_out), .clk(clk));


   wire signed [19:0] a498;
   wire signed [19:0] a499;
   wire signed [19:0] a500;
   wire signed [19:0] a501;
   wire signed [19:0] a506;
   wire signed [19:0] a507;
   wire signed [19:0] a508;
   wire signed [19:0] a509;
   wire signed [20:0] tm158;
   wire signed [20:0] tm159;
   wire signed [20:0] tm160;
   wire signed [20:0] tm161;
   wire signed [20:0] tm162;
   wire signed [20:0] tm163;
   wire signed [20:0] tm164;
   wire signed [20:0] tm165;
   wire signed [19:0] t626;
   wire signed [19:0] t627;
   wire signed [19:0] t628;
   wire signed [19:0] t629;
   wire signed [19:0] t630;
   wire signed [19:0] t631;
   wire signed [19:0] t632;
   wire signed [19:0] t633;
   wire signed [20:0] tm166;
   wire signed [20:0] tm167;
   wire signed [20:0] tm168;
   wire signed [20:0] tm169;
   wire signed [19:0] Y0;
   wire signed [19:0] Y1;
   wire signed [19:0] Y4;
   wire signed [19:0] Y5;
   wire signed [20:0] tm170;
   wire signed [20:0] tm171;
   wire signed [20:0] tm172;
   wire signed [20:0] tm173;
   wire signed [19:0] Y2;
   wire signed [19:0] Y3;
   wire signed [19:0] Y6;
   wire signed [19:0] Y7;
   wire signed [19:0] t634;
   wire signed [19:0] t635;
   wire signed [19:0] t636;
   wire signed [19:0] t637;
   wire signed [19:0] t638;
   wire signed [19:0] t639;
   wire signed [19:0] t640;
   wire signed [19:0] t641;


   assign a498 = X0;
   assign a499 = X4;
   assign a500 = X1;
   assign a501 = X5;
   assign a506 = X2;
   assign a507 = X6;
   assign a508 = X3;
   assign a509 = X7;
   assign t626 = tm158[20:1];
   assign t627 = tm159[20:1];
   assign t628 = tm160[20:1];
   assign t629 = tm161[20:1];
   assign t630 = tm162[20:1];
   assign t631 = tm163[20:1];
   assign t632 = tm164[20:1];
   assign t633 = tm165[20:1];
   assign Y0 = t634;
   assign Y1 = t635;
   assign Y4 = t636;
   assign Y5 = t637;
   assign Y2 = t638;
   assign Y3 = t639;
   assign Y6 = t640;
   assign Y7 = t641;
   assign t634 = tm166[20:1];
   assign t635 = tm167[20:1];
   assign t636 = tm168[20:1];
   assign t637 = tm169[20:1];
   assign t638 = tm170[20:1];
   assign t639 = tm171[20:1];
   assign t640 = tm172[20:1];
   assign t641 = tm173[20:1];

    addfxp #(21, 1) add36811(.a({{1{a498[19]}}, a498}), .b({{1{a499[19]}}, a499}), .clk(clk), .q(tm158));    // 0
    addfxp #(21, 1) add36826(.a({{1{a500[19]}}, a500}), .b({{1{a501[19]}}, a501}), .clk(clk), .q(tm159));    // 0
    subfxp #(21, 1) sub36841(.a({{1{a498[19]}}, a498}), .b({{1{a499[19]}}, a499}), .clk(clk), .q(tm160));    // 0
    subfxp #(21, 1) sub36856(.a({{1{a500[19]}}, a500}), .b({{1{a501[19]}}, a501}), .clk(clk), .q(tm161));    // 0
    addfxp #(21, 1) add36871(.a({{1{a506[19]}}, a506}), .b({{1{a507[19]}}, a507}), .clk(clk), .q(tm162));    // 0
    addfxp #(21, 1) add36886(.a({{1{a508[19]}}, a508}), .b({{1{a509[19]}}, a509}), .clk(clk), .q(tm163));    // 0
    subfxp #(21, 1) sub36901(.a({{1{a506[19]}}, a506}), .b({{1{a507[19]}}, a507}), .clk(clk), .q(tm164));    // 0
    subfxp #(21, 1) sub36916(.a({{1{a508[19]}}, a508}), .b({{1{a509[19]}}, a509}), .clk(clk), .q(tm165));    // 0
    addfxp #(21, 1) add36923(.a({{1{t626[19]}}, t626}), .b({{1{t630[19]}}, t630}), .clk(clk), .q(tm166));    // 1
    addfxp #(21, 1) add36930(.a({{1{t627[19]}}, t627}), .b({{1{t631[19]}}, t631}), .clk(clk), .q(tm167));    // 1
    subfxp #(21, 1) sub36937(.a({{1{t626[19]}}, t626}), .b({{1{t630[19]}}, t630}), .clk(clk), .q(tm168));    // 1
    subfxp #(21, 1) sub36944(.a({{1{t627[19]}}, t627}), .b({{1{t631[19]}}, t631}), .clk(clk), .q(tm169));    // 1
    addfxp #(21, 1) add36967(.a({{1{t628[19]}}, t628}), .b({{1{t633[19]}}, t633}), .clk(clk), .q(tm170));    // 1
    subfxp #(21, 1) sub36974(.a({{1{t629[19]}}, t629}), .b({{1{t632[19]}}, t632}), .clk(clk), .q(tm171));    // 1
    subfxp #(21, 1) sub36981(.a({{1{t628[19]}}, t628}), .b({{1{t633[19]}}, t633}), .clk(clk), .q(tm172));    // 1
    addfxp #(21, 1) add36988(.a({{1{t629[19]}}, t629}), .b({{1{t632[19]}}, t632}), .clk(clk), .q(tm173));    // 1


   always @(posedge clk) begin
      if (reset == 1) begin
      end
      else begin
         X0 <= X0_in;
         X1 <= X1_in;
         X2 <= X2_in;
         X3 <= X3_in;
         X4 <= X4_in;
         X5 <= X5_in;
         X6 <= X6_in;
         X7 <= X7_in;
         next <= next_in;
      end
   end
endmodule

// Latency: 13
// Gap: 4
module rc37013(clk, reset, next, next_out,
   X0, Y0,
   X1, Y1,
   X2, Y2,
   X3, Y3,
   X4, Y4,
   X5, Y5,
   X6, Y6,
   X7, Y7);

   output next_out;
   input clk, reset, next;

   input [19:0] X0,
      X1,
      X2,
      X3,
      X4,
      X5,
      X6,
      X7;

   output [19:0] Y0,
      Y1,
      Y2,
      Y3,
      Y4,
      Y5,
      Y6,
      Y7;

   wire [39:0] t0;
   wire [39:0] s0;
   assign t0 = {X0, X1};
   wire [39:0] t1;
   wire [39:0] s1;
   assign t1 = {X2, X3};
   wire [39:0] t2;
   wire [39:0] s2;
   assign t2 = {X4, X5};
   wire [39:0] t3;
   wire [39:0] s3;
   assign t3 = {X6, X7};
   assign Y0 = s0[39:20];
   assign Y1 = s0[19:0];
   assign Y2 = s1[39:20];
   assign Y3 = s1[19:0];
   assign Y4 = s2[39:20];
   assign Y5 = s2[19:0];
   assign Y6 = s3[39:20];
   assign Y7 = s3[19:0];

   perm37011 instPerm43824(.x0(t0), .y0(s0),
    .x1(t1), .y1(s1),
    .x2(t2), .y2(s2),
    .x3(t3), .y3(s3),
   .clk(clk), .next(next), .next_out(next_out), .reset(reset)
);



endmodule

module swNet37011(itr, clk, ct
,       x0, y0
,       x1, y1
,       x2, y2
,       x3, y3
);

    parameter width = 40;

    input [1:0] ct;
    input clk;
    input [0:0] itr;
    input [width-1:0] x0;
    output reg [width-1:0] y0;
    input [width-1:0] x1;
    output reg [width-1:0] y1;
    input [width-1:0] x2;
    output reg [width-1:0] y2;
    input [width-1:0] x3;
    output reg [width-1:0] y3;
    wire [width-1:0] t0_0, t0_1, t0_2, t0_3;
    wire [width-1:0] t1_0, t1_1, t1_2, t1_3;
    wire [width-1:0] t2_0, t2_1, t2_2, t2_3;
    reg [width-1:0] t3_0, t3_1, t3_2, t3_3;
    wire [width-1:0] t4_0, t4_1, t4_2, t4_3;
    reg [width-1:0] t5_0, t5_1, t5_2, t5_3;

    reg [3:0] control;

    always @(posedge clk) begin
      case(ct)
        2'd0: control <= 4'b1111;
        2'd1: control <= 4'b0011;
        2'd2: control <= 4'b1100;
        2'd3: control <= 4'b0000;
      endcase
   end

// synthesis attribute rom_style of control is "distributed"
   reg [3:0] control0;
   reg [3:0] control1;
    always @(posedge clk) begin
       control0 <= control;
        control1 <= control0;
    end
    assign t0_0 = x0;
    assign t0_1 = x2;
    assign t0_2 = x1;
    assign t0_3 = x3;
     assign t1_0 = t0_0;
     assign t1_1 = t0_1;
     assign t1_2 = t0_2;
     assign t1_3 = t0_3;
    assign t2_0 = t1_0;
    assign t2_1 = t1_2;
    assign t2_2 = t1_1;
    assign t2_3 = t1_3;
   always @(posedge clk) begin
         t3_0 <= (control0[3] == 0) ? t2_0 : t2_1;
         t3_1 <= (control0[3] == 0) ? t2_1 : t2_0;
         t3_2 <= (control0[2] == 0) ? t2_2 : t2_3;
         t3_3 <= (control0[2] == 0) ? t2_3 : t2_2;
   end
    assign t4_0 = t3_0;
    assign t4_1 = t3_2;
    assign t4_2 = t3_1;
    assign t4_3 = t3_3;
   always @(posedge clk) begin
         t5_0 <= (control1[1] == 0) ? t4_0 : t4_1;
         t5_1 <= (control1[1] == 0) ? t4_1 : t4_0;
         t5_2 <= (control1[0] == 0) ? t4_2 : t4_3;
         t5_3 <= (control1[0] == 0) ? t4_3 : t4_2;
   end
    always @(posedge clk) begin
        y0 <= t5_0;
        y1 <= t5_2;
        y2 <= t5_1;
        y3 <= t5_3;
    end
endmodule

// Latency: 13
// Gap: 4
module perm37011(clk, next, reset, next_out,
   x0, y0,
   x1, y1,
   x2, y2,
   x3, y3);
   parameter width = 40;

   parameter depth = 4;

   parameter addrbits = 2;

   parameter muxbits = 2;

   input [width-1:0]  x0;
   output [width-1:0]  y0;
   wire [width-1:0]  t0;
   wire [width-1:0]  s0;
   input [width-1:0]  x1;
   output [width-1:0]  y1;
   wire [width-1:0]  t1;
   wire [width-1:0]  s1;
   input [width-1:0]  x2;
   output [width-1:0]  y2;
   wire [width-1:0]  t2;
   wire [width-1:0]  s2;
   input [width-1:0]  x3;
   output [width-1:0]  y3;
   wire [width-1:0]  t3;
   wire [width-1:0]  s3;
   input next, reset, clk;
   output next_out;
   reg [addrbits-1:0] s1rdloc, s2rdloc;

    reg [addrbits-1:0] s1wr0;
   reg [addrbits-1:0] s1rd0, s2wr0, s2rd0;
   reg [addrbits-1:0] s1rd1, s2wr1, s2rd1;
   reg [addrbits-1:0] s1rd2, s2wr2, s2rd2;
   reg [addrbits-1:0] s1rd3, s2wr3, s2rd3;
   reg s1wr_en, state1, state2, state3;
   wire 	      next2, next3, next4;
   reg 		      inFlip0, outFlip0_z, outFlip1;
   wire 	      inFlip1, outFlip0;

   wire [0:0] tm1;
   assign tm1 = 0;

shiftRegFIFO #(4, 1) shiftFIFO_43829(.X(outFlip0), .Y(inFlip1), .clk(clk));
shiftRegFIFO #(1, 1) shiftFIFO_43830(.X(outFlip0_z), .Y(outFlip0), .clk(clk));
//   shiftRegFIFO #(2, 1) inFlip1Reg(outFlip0, inFlip1, clk);
//   shiftRegFIFO #(1, 1) outFlip0Reg(outFlip0_z, outFlip0, clk);
   
   memMod_dist #(depth*2, width, addrbits+1) s1mem0(x0, t0, {inFlip0, s1wr0}, {outFlip0, s1rd0}, s1wr_en, clk);
   memMod_dist #(depth*2, width, addrbits+1) s1mem1(x1, t1, {inFlip0, s1wr0}, {outFlip0, s1rd1}, s1wr_en, clk);
   memMod_dist #(depth*2, width, addrbits+1) s1mem2(x2, t2, {inFlip0, s1wr0}, {outFlip0, s1rd2}, s1wr_en, clk);
   memMod_dist #(depth*2, width, addrbits+1) s1mem3(x3, t3, {inFlip0, s1wr0}, {outFlip0, s1rd3}, s1wr_en, clk);

shiftRegFIFO #(3, 1) shiftFIFO_43839(.X(next), .Y(next2), .clk(clk));
shiftRegFIFO #(5, 1) shiftFIFO_43840(.X(next2), .Y(next3), .clk(clk));
shiftRegFIFO #(4, 1) shiftFIFO_43841(.X(next3), .Y(next4), .clk(clk));
shiftRegFIFO #(1, 1) shiftFIFO_43842(.X(next4), .Y(next_out), .clk(clk));
shiftRegFIFO #(3, 1) shiftFIFO_43845(.X(tm1), .Y(tm1_d), .clk(clk));
shiftRegFIFO #(4, 1) shiftFIFO_43848(.X(tm1_d), .Y(tm1_dd), .clk(clk));
   
   wire [addrbits-1:0] 	      muxCycle, writeCycle;
assign muxCycle = s1rdloc;
shiftRegFIFO #(4, 2) shiftFIFO_43853(.X(muxCycle), .Y(writeCycle), .clk(clk));
        
   wire 		      readInt, s2wr_en;   
   assign 		      readInt = (state2 == 1);

   shiftRegFIFO #(5, 1) writeIntReg(readInt, s2wr_en, clk);

   memMod_dist #(depth*2, width, addrbits+1) s2mem0(s0, y0, {inFlip1, s2wr0}, {outFlip1, s2rdloc}, s2wr_en, clk);
   memMod_dist #(depth*2, width, addrbits+1) s2mem1(s1, y1, {inFlip1, s2wr1}, {outFlip1, s2rdloc}, s2wr_en, clk);
   memMod_dist #(depth*2, width, addrbits+1) s2mem2(s2, y2, {inFlip1, s2wr2}, {outFlip1, s2rdloc}, s2wr_en, clk);
   memMod_dist #(depth*2, width, addrbits+1) s2mem3(s3, y3, {inFlip1, s2wr3}, {outFlip1, s2rdloc}, s2wr_en, clk);
   always @(posedge clk) begin
      if (reset == 1) begin
	 state1 <= 0;
	 inFlip0 <= 0;	 
	 s1wr0 <= 0;
      end
      else if (next == 1) begin
	 s1wr0 <= 0;
	 state1 <= 1;
	 s1wr_en <= 1;
	 inFlip0 <= (s1wr0 == depth-1) ? ~inFlip0 : inFlip0;
      end
      else begin
	 case(state1)
	   0: begin
	      s1wr0 <= 0;
	      state1 <= 0;
	      s1wr_en <= 0;
	      inFlip0 <= inFlip0;	      
	   end
	   1: begin
	      s1wr0 <= (s1wr0 == depth-1) ? 0 : s1wr0 + 1;
	      state1 <= 1;
         s1wr_en <= 1;
	      inFlip0 <= (s1wr0 == depth-1) ? ~inFlip0 : inFlip0;
	   end
	 endcase
      end      
   end
   
   always @(posedge clk) begin
      if (reset == 1) begin
	       state2 <= 0;
	       outFlip0_z <= 0;	 
      end
      else if (next2 == 1) begin
	       s1rdloc <= 0;
	       state2 <= 1;
	       outFlip0_z <= (s1rdloc == depth-1) ? ~outFlip0_z : outFlip0_z;
      end
      else begin
	 case(state2)
	   0: begin
	      s1rdloc <= 0;
	      state2 <= 0;
	      outFlip0_z <= outFlip0_z;	 
	   end
	   1: begin
	      s1rdloc <= (s1rdloc == depth-1) ? 0 : s1rdloc + 1;
         state2 <= 1;
	      outFlip0_z <= (s1rdloc == depth-1) ? ~outFlip0_z : outFlip0_z;
	   end	     
	 endcase
      end
   end
   
   always @(posedge clk) begin
      if (reset == 1) begin
	 state3 <= 0;
	 outFlip1 <= 0;	 
      end
      else if (next4 == 1) begin
	 s2rdloc <= 0;
	 state3 <= 1;
	 outFlip1 <= (s2rdloc == depth-1) ? ~outFlip1 : outFlip1;	      
      end
      else begin
	 case(state3)
	   0: begin
	      s2rdloc <= 0;
	      state3 <= 0;
	      outFlip1 <= outFlip1;
	   end
	   1: begin
	      s2rdloc <= (s2rdloc == depth-1) ? 0 : s2rdloc + 1;
         state3 <= 1;
	      outFlip1 <= (s2rdloc == depth-1) ? ~outFlip1 : outFlip1;
	   end	     
	 endcase
      end
   end
   always @(posedge clk) begin
      case({tm1_d, s1rdloc})
	     {1'd0,  2'd0}: s1rd0 <= 3;
	     {1'd0,  2'd1}: s1rd0 <= 2;
	     {1'd0,  2'd2}: s1rd0 <= 1;
	     {1'd0,  2'd3}: s1rd0 <= 0;
      endcase      
   end

// synthesis attribute rom_style of s1rd0 is "distributed"
   always @(posedge clk) begin
      case({tm1_d, s1rdloc})
	     {1'd0,  2'd0}: s1rd1 <= 2;
	     {1'd0,  2'd1}: s1rd1 <= 3;
	     {1'd0,  2'd2}: s1rd1 <= 0;
	     {1'd0,  2'd3}: s1rd1 <= 1;
      endcase      
   end

// synthesis attribute rom_style of s1rd1 is "distributed"
   always @(posedge clk) begin
      case({tm1_d, s1rdloc})
	     {1'd0,  2'd0}: s1rd2 <= 1;
	     {1'd0,  2'd1}: s1rd2 <= 0;
	     {1'd0,  2'd2}: s1rd2 <= 3;
	     {1'd0,  2'd3}: s1rd2 <= 2;
      endcase      
   end

// synthesis attribute rom_style of s1rd2 is "distributed"
   always @(posedge clk) begin
      case({tm1_d, s1rdloc})
	     {1'd0,  2'd0}: s1rd3 <= 0;
	     {1'd0,  2'd1}: s1rd3 <= 1;
	     {1'd0,  2'd2}: s1rd3 <= 2;
	     {1'd0,  2'd3}: s1rd3 <= 3;
      endcase      
   end

// synthesis attribute rom_style of s1rd3 is "distributed"
    swNet37011 sw(tm1_d, clk, muxCycle, t0, s0, t1, s1, t2, s2, t3, s3);

   always @(posedge clk) begin
      case({tm1_dd, writeCycle})
	      {1'd0, 2'd0}: s2wr0 <= 3;
	      {1'd0, 2'd1}: s2wr0 <= 2;
	      {1'd0, 2'd2}: s2wr0 <= 1;
	      {1'd0, 2'd3}: s2wr0 <= 0;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr0 is "distributed"
   always @(posedge clk) begin
      case({tm1_dd, writeCycle})
	      {1'd0, 2'd0}: s2wr1 <= 2;
	      {1'd0, 2'd1}: s2wr1 <= 3;
	      {1'd0, 2'd2}: s2wr1 <= 0;
	      {1'd0, 2'd3}: s2wr1 <= 1;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr1 is "distributed"
   always @(posedge clk) begin
      case({tm1_dd, writeCycle})
	      {1'd0, 2'd0}: s2wr2 <= 1;
	      {1'd0, 2'd1}: s2wr2 <= 0;
	      {1'd0, 2'd2}: s2wr2 <= 3;
	      {1'd0, 2'd3}: s2wr2 <= 2;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr2 is "distributed"
   always @(posedge clk) begin
      case({tm1_dd, writeCycle})
	      {1'd0, 2'd0}: s2wr3 <= 0;
	      {1'd0, 2'd1}: s2wr3 <= 1;
	      {1'd0, 2'd2}: s2wr3 <= 2;
	      {1'd0, 2'd3}: s2wr3 <= 3;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr3 is "distributed"
endmodule


// Latency: 12
// Gap: 4
module DirSum_37386(clk, reset, next, next_out,
      X0, Y0,
      X1, Y1,
      X2, Y2,
      X3, Y3,
      X4, Y4,
      X5, Y5,
      X6, Y6,
      X7, Y7);

   output next_out;
   input clk, reset, next;

   reg [1:0] i4;

   input [19:0] X0,
      X1,
      X2,
      X3,
      X4,
      X5,
      X6,
      X7;

   output [19:0] Y0,
      Y1,
      Y2,
      Y3,
      Y4,
      Y5,
      Y6,
      Y7;

   always @(posedge clk) begin
      if (reset == 1) begin
         i4 <= 0;
      end
      else begin
         if (next == 1)
            i4 <= 0;
         else if (i4 == 3)
            i4 <= 0;
         else
            i4 <= i4 + 1;
      end
   end

   codeBlock37016 codeBlockIsnt43854(.clk(clk), .reset(reset), .next_in(next), .next_out(next_out),
.i4_in(i4),
       .X0_in(X0), .Y0(Y0),
       .X1_in(X1), .Y1(Y1),
       .X2_in(X2), .Y2(Y2),
       .X3_in(X3), .Y3(Y3),
       .X4_in(X4), .Y4(Y4),
       .X5_in(X5), .Y5(Y5),
       .X6_in(X6), .Y6(Y6),
       .X7_in(X7), .Y7(Y7));

endmodule

module D40_37342(addr, out, clk);
   input clk;
   output [19:0] out;
   reg [19:0] out, out2, out3;
   input [1:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 20'h0;
      1: out3 <= 20'hc4df3;
      2: out3 <= 20'hd2bec;
      3: out3 <= 20'h187de;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



module D39_37348(addr, out, clk);
   input clk;
   output [19:0] out;
   reg [19:0] out, out2, out3;
   input [1:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 20'h0;
      1: out3 <= 20'hd2bec;
      2: out3 <= 20'hc0000;
      3: out3 <= 20'hd2bec;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



module D38_37354(addr, out, clk);
   input clk;
   output [19:0] out;
   reg [19:0] out, out2, out3;
   input [1:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 20'h0;
      1: out3 <= 20'he7822;
      2: out3 <= 20'hd2bec;
      3: out3 <= 20'hc4df3;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



module D36_37366(addr, out, clk);
   input clk;
   output [19:0] out;
   reg [19:0] out, out2, out3;
   input [1:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 20'h40000;
      1: out3 <= 20'h187de;
      2: out3 <= 20'hd2bec;
      3: out3 <= 20'hc4df3;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



module D35_37372(addr, out, clk);
   input clk;
   output [19:0] out;
   reg [19:0] out, out2, out3;
   input [1:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 20'h40000;
      1: out3 <= 20'h2d414;
      2: out3 <= 20'h0;
      3: out3 <= 20'hd2bec;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



module D34_37378(addr, out, clk);
   input clk;
   output [19:0] out;
   reg [19:0] out, out2, out3;
   input [1:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 20'h40000;
      1: out3 <= 20'h3b20d;
      2: out3 <= 20'h2d414;
      3: out3 <= 20'h187de;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



// Latency: 12
// Gap: 1
module codeBlock37016(clk, reset, next_in, next_out,
   i4_in,
   X0_in, Y0,
   X1_in, Y1,
   X2_in, Y2,
   X3_in, Y3,
   X4_in, Y4,
   X5_in, Y5,
   X6_in, Y6,
   X7_in, Y7);

   output next_out;
   input clk, reset, next_in;

   reg next;
   input [1:0] i4_in;
   reg [1:0] i4;

   input [19:0] X0_in,
      X1_in,
      X2_in,
      X3_in,
      X4_in,
      X5_in,
      X6_in,
      X7_in;

   reg   [19:0] X0,
      X1,
      X2,
      X3,
      X4,
      X5,
      X6,
      X7;

   output [19:0] Y0,
      Y1,
      Y2,
      Y3,
      Y4,
      Y5,
      Y6,
      Y7;

   shiftRegFIFO #(11, 1) shiftFIFO_43857(.X(next), .Y(next_out), .clk(clk));


   wire signed [19:0] a466;
   wire signed [19:0] a443;
   wire signed [19:0] a469;
   wire signed [19:0] a447;
   wire signed [19:0] a470;
   wire signed [19:0] a471;
   wire signed [19:0] a474;
   wire signed [19:0] a475;
   wire signed [19:0] a478;
   wire signed [19:0] a479;
   reg signed [19:0] tm238;
   reg signed [19:0] tm242;
   reg signed [19:0] tm254;
   reg signed [19:0] tm258;
   reg signed [19:0] tm270;
   reg signed [19:0] tm274;
   reg signed [19:0] tm286;
   reg signed [19:0] tm297;
   reg signed [19:0] tm239;
   reg signed [19:0] tm243;
   reg signed [19:0] tm255;
   reg signed [19:0] tm259;
   reg signed [19:0] tm271;
   reg signed [19:0] tm275;
   reg signed [19:0] tm287;
   reg signed [19:0] tm298;
   wire signed [19:0] tm4;
   wire signed [19:0] a448;
   wire signed [19:0] tm5;
   wire signed [19:0] a450;
   wire signed [19:0] tm6;
   wire signed [19:0] a454;
   wire signed [19:0] tm7;
   wire signed [19:0] a456;
   wire signed [19:0] tm8;
   wire signed [19:0] a460;
   wire signed [19:0] tm9;
   wire signed [19:0] a462;
   reg signed [19:0] tm240;
   reg signed [19:0] tm244;
   reg signed [19:0] tm256;
   reg signed [19:0] tm260;
   reg signed [19:0] tm272;
   reg signed [19:0] tm276;
   reg signed [19:0] tm288;
   reg signed [19:0] tm299;
   reg signed [19:0] tm42;
   reg signed [19:0] tm43;
   reg signed [19:0] tm46;
   reg signed [19:0] tm47;
   reg signed [19:0] tm50;
   reg signed [19:0] tm51;
   reg signed [19:0] tm241;
   reg signed [19:0] tm245;
   reg signed [19:0] tm257;
   reg signed [19:0] tm261;
   reg signed [19:0] tm273;
   reg signed [19:0] tm277;
   reg signed [19:0] tm289;
   reg signed [19:0] tm300;
   reg signed [19:0] tm290;
   reg signed [19:0] tm301;
   reg signed [19:0] tm291;
   reg signed [19:0] tm302;
   reg signed [19:0] tm292;
   reg signed [19:0] tm303;
   reg signed [19:0] tm293;
   reg signed [19:0] tm304;
   reg signed [19:0] tm294;
   reg signed [19:0] tm305;
   wire signed [19:0] a449;
   wire signed [19:0] a451;
   wire signed [19:0] a452;
   wire signed [19:0] a453;
   wire signed [19:0] a455;
   wire signed [19:0] a457;
   wire signed [19:0] a458;
   wire signed [19:0] a459;
   wire signed [19:0] a461;
   wire signed [19:0] a463;
   wire signed [19:0] a464;
   wire signed [19:0] a465;
   reg signed [19:0] tm295;
   reg signed [19:0] tm306;
   wire signed [19:0] Y0;
   wire signed [19:0] Y1;
   wire signed [19:0] Y2;
   wire signed [19:0] Y3;
   wire signed [19:0] Y4;
   wire signed [19:0] Y5;
   wire signed [19:0] Y6;
   wire signed [19:0] Y7;
   reg signed [19:0] tm296;
   reg signed [19:0] tm307;


   assign a466 = X0;
   assign a443 = a466;
   assign a469 = X1;
   assign a447 = a469;
   assign a470 = X2;
   assign a471 = X3;
   assign a474 = X4;
   assign a475 = X5;
   assign a478 = X6;
   assign a479 = X7;
   assign a448 = tm4;
   assign a450 = tm5;
   assign a454 = tm6;
   assign a456 = tm7;
   assign a460 = tm8;
   assign a462 = tm9;
   assign Y0 = tm296;
   assign Y1 = tm307;

   D40_37342 instD40inst0_37342(.addr(i4[1:0]), .out(tm9), .clk(clk));

   D39_37348 instD39inst0_37348(.addr(i4[1:0]), .out(tm7), .clk(clk));

   D38_37354 instD38inst0_37354(.addr(i4[1:0]), .out(tm5), .clk(clk));

   D36_37366 instD36inst0_37366(.addr(i4[1:0]), .out(tm8), .clk(clk));

   D35_37372 instD35inst0_37372(.addr(i4[1:0]), .out(tm6), .clk(clk));

   D34_37378 instD34inst0_37378(.addr(i4[1:0]), .out(tm4), .clk(clk));

    multfix #(20, 6) m37115(.a(tm42), .b(tm241), .clk(clk), .q_sc(a449), .q_unsc(), .rst(reset));
    multfix #(20, 6) m37137(.a(tm43), .b(tm245), .clk(clk), .q_sc(a451), .q_unsc(), .rst(reset));
    multfix #(20, 6) m37155(.a(tm43), .b(tm241), .clk(clk), .q_sc(a452), .q_unsc(), .rst(reset));
    multfix #(20, 6) m37166(.a(tm42), .b(tm245), .clk(clk), .q_sc(a453), .q_unsc(), .rst(reset));
    multfix #(20, 6) m37195(.a(tm46), .b(tm257), .clk(clk), .q_sc(a455), .q_unsc(), .rst(reset));
    multfix #(20, 6) m37217(.a(tm47), .b(tm261), .clk(clk), .q_sc(a457), .q_unsc(), .rst(reset));
    multfix #(20, 6) m37235(.a(tm47), .b(tm257), .clk(clk), .q_sc(a458), .q_unsc(), .rst(reset));
    multfix #(20, 6) m37246(.a(tm46), .b(tm261), .clk(clk), .q_sc(a459), .q_unsc(), .rst(reset));
    multfix #(20, 6) m37275(.a(tm50), .b(tm273), .clk(clk), .q_sc(a461), .q_unsc(), .rst(reset));
    multfix #(20, 6) m37297(.a(tm51), .b(tm277), .clk(clk), .q_sc(a463), .q_unsc(), .rst(reset));
    multfix #(20, 6) m37315(.a(tm51), .b(tm273), .clk(clk), .q_sc(a464), .q_unsc(), .rst(reset));
    multfix #(20, 6) m37326(.a(tm50), .b(tm277), .clk(clk), .q_sc(a465), .q_unsc(), .rst(reset));
    subfxp #(20, 1) sub37144(.a(a449), .b(a451), .clk(clk), .q(Y2));    // 10
    addfxp #(20, 1) add37173(.a(a452), .b(a453), .clk(clk), .q(Y3));    // 10
    subfxp #(20, 1) sub37224(.a(a455), .b(a457), .clk(clk), .q(Y4));    // 10
    addfxp #(20, 1) add37253(.a(a458), .b(a459), .clk(clk), .q(Y5));    // 10
    subfxp #(20, 1) sub37304(.a(a461), .b(a463), .clk(clk), .q(Y6));    // 10
    addfxp #(20, 1) add37333(.a(a464), .b(a465), .clk(clk), .q(Y7));    // 10


   always @(posedge clk) begin
      if (reset == 1) begin
         tm42 <= 0;
         tm241 <= 0;
         tm43 <= 0;
         tm245 <= 0;
         tm43 <= 0;
         tm241 <= 0;
         tm42 <= 0;
         tm245 <= 0;
         tm46 <= 0;
         tm257 <= 0;
         tm47 <= 0;
         tm261 <= 0;
         tm47 <= 0;
         tm257 <= 0;
         tm46 <= 0;
         tm261 <= 0;
         tm50 <= 0;
         tm273 <= 0;
         tm51 <= 0;
         tm277 <= 0;
         tm51 <= 0;
         tm273 <= 0;
         tm50 <= 0;
         tm277 <= 0;
      end
      else begin
         i4 <= i4_in;
         X0 <= X0_in;
         X1 <= X1_in;
         X2 <= X2_in;
         X3 <= X3_in;
         X4 <= X4_in;
         X5 <= X5_in;
         X6 <= X6_in;
         X7 <= X7_in;
         next <= next_in;
         tm238 <= a470;
         tm242 <= a471;
         tm254 <= a474;
         tm258 <= a475;
         tm270 <= a478;
         tm274 <= a479;
         tm286 <= a443;
         tm297 <= a447;
         tm239 <= tm238;
         tm243 <= tm242;
         tm255 <= tm254;
         tm259 <= tm258;
         tm271 <= tm270;
         tm275 <= tm274;
         tm287 <= tm286;
         tm298 <= tm297;
         tm240 <= tm239;
         tm244 <= tm243;
         tm256 <= tm255;
         tm260 <= tm259;
         tm272 <= tm271;
         tm276 <= tm275;
         tm288 <= tm287;
         tm299 <= tm298;
         tm42 <= a448;
         tm43 <= a450;
         tm46 <= a454;
         tm47 <= a456;
         tm50 <= a460;
         tm51 <= a462;
         tm241 <= tm240;
         tm245 <= tm244;
         tm257 <= tm256;
         tm261 <= tm260;
         tm273 <= tm272;
         tm277 <= tm276;
         tm289 <= tm288;
         tm300 <= tm299;
         tm290 <= tm289;
         tm301 <= tm300;
         tm291 <= tm290;
         tm302 <= tm301;
         tm292 <= tm291;
         tm303 <= tm302;
         tm293 <= tm292;
         tm304 <= tm303;
         tm294 <= tm293;
         tm305 <= tm304;
         tm295 <= tm294;
         tm306 <= tm305;
         tm296 <= tm295;
         tm307 <= tm306;
      end
   end
endmodule

// Latency: 3
// Gap: 1
module codeBlock37389(clk, reset, next_in, next_out,
   X0_in, Y0,
   X1_in, Y1,
   X2_in, Y2,
   X3_in, Y3,
   X4_in, Y4,
   X5_in, Y5,
   X6_in, Y6,
   X7_in, Y7);

   output next_out;
   input clk, reset, next_in;

   reg next;

   input [19:0] X0_in,
      X1_in,
      X2_in,
      X3_in,
      X4_in,
      X5_in,
      X6_in,
      X7_in;

   reg   [19:0] X0,
      X1,
      X2,
      X3,
      X4,
      X5,
      X6,
      X7;

   output [19:0] Y0,
      Y1,
      Y2,
      Y3,
      Y4,
      Y5,
      Y6,
      Y7;

   shiftRegFIFO #(2, 1) shiftFIFO_43860(.X(next), .Y(next_out), .clk(clk));


   wire signed [19:0] a377;
   wire signed [19:0] a378;
   wire signed [19:0] a379;
   wire signed [19:0] a380;
   wire signed [19:0] a385;
   wire signed [19:0] a387;
   wire signed [19:0] a388;
   wire signed [19:0] a389;
   wire signed [20:0] tm174;
   wire signed [20:0] tm175;
   wire signed [20:0] tm176;
   wire signed [20:0] tm177;
   wire signed [20:0] tm178;
   wire signed [20:0] tm179;
   wire signed [20:0] tm180;
   wire signed [20:0] tm181;
   wire signed [19:0] t498;
   wire signed [19:0] t499;
   wire signed [19:0] t500;
   wire signed [19:0] t501;
   wire signed [19:0] t502;
   wire signed [19:0] t503;
   wire signed [19:0] t504;
   wire signed [19:0] t505;
   wire signed [20:0] tm182;
   wire signed [20:0] tm183;
   wire signed [20:0] tm184;
   wire signed [20:0] tm185;
   wire signed [19:0] Y0;
   wire signed [19:0] Y1;
   wire signed [19:0] Y4;
   wire signed [19:0] Y5;
   wire signed [20:0] tm186;
   wire signed [20:0] tm187;
   wire signed [20:0] tm188;
   wire signed [20:0] tm189;
   wire signed [19:0] Y2;
   wire signed [19:0] Y3;
   wire signed [19:0] Y6;
   wire signed [19:0] Y7;
   wire signed [19:0] t506;
   wire signed [19:0] t507;
   wire signed [19:0] t508;
   wire signed [19:0] t509;
   wire signed [19:0] t510;
   wire signed [19:0] t511;
   wire signed [19:0] t512;
   wire signed [19:0] t513;


   assign a377 = X0;
   assign a378 = X4;
   assign a379 = X1;
   assign a380 = X5;
   assign a385 = X2;
   assign a387 = X6;
   assign a388 = X3;
   assign a389 = X7;
   assign t498 = tm174[20:1];
   assign t499 = tm175[20:1];
   assign t500 = tm176[20:1];
   assign t501 = tm177[20:1];
   assign t502 = tm178[20:1];
   assign t503 = tm179[20:1];
   assign t504 = tm180[20:1];
   assign t505 = tm181[20:1];
   assign Y0 = t506;
   assign Y1 = t507;
   assign Y4 = t508;
   assign Y5 = t509;
   assign Y2 = t510;
   assign Y3 = t511;
   assign Y6 = t512;
   assign Y7 = t513;
   assign t506 = tm182[20:1];
   assign t507 = tm183[20:1];
   assign t508 = tm184[20:1];
   assign t509 = tm185[20:1];
   assign t510 = tm186[20:1];
   assign t511 = tm187[20:1];
   assign t512 = tm188[20:1];
   assign t513 = tm189[20:1];

    addfxp #(21, 1) add37401(.a({{1{a377[19]}}, a377}), .b({{1{a378[19]}}, a378}), .clk(clk), .q(tm174));    // 0
    addfxp #(21, 1) add37416(.a({{1{a379[19]}}, a379}), .b({{1{a380[19]}}, a380}), .clk(clk), .q(tm175));    // 0
    subfxp #(21, 1) sub37431(.a({{1{a377[19]}}, a377}), .b({{1{a378[19]}}, a378}), .clk(clk), .q(tm176));    // 0
    subfxp #(21, 1) sub37446(.a({{1{a379[19]}}, a379}), .b({{1{a380[19]}}, a380}), .clk(clk), .q(tm177));    // 0
    addfxp #(21, 1) add37461(.a({{1{a385[19]}}, a385}), .b({{1{a387[19]}}, a387}), .clk(clk), .q(tm178));    // 0
    addfxp #(21, 1) add37476(.a({{1{a388[19]}}, a388}), .b({{1{a389[19]}}, a389}), .clk(clk), .q(tm179));    // 0
    subfxp #(21, 1) sub37491(.a({{1{a385[19]}}, a385}), .b({{1{a387[19]}}, a387}), .clk(clk), .q(tm180));    // 0
    subfxp #(21, 1) sub37506(.a({{1{a388[19]}}, a388}), .b({{1{a389[19]}}, a389}), .clk(clk), .q(tm181));    // 0
    addfxp #(21, 1) add37513(.a({{1{t498[19]}}, t498}), .b({{1{t502[19]}}, t502}), .clk(clk), .q(tm182));    // 1
    addfxp #(21, 1) add37520(.a({{1{t499[19]}}, t499}), .b({{1{t503[19]}}, t503}), .clk(clk), .q(tm183));    // 1
    subfxp #(21, 1) sub37527(.a({{1{t498[19]}}, t498}), .b({{1{t502[19]}}, t502}), .clk(clk), .q(tm184));    // 1
    subfxp #(21, 1) sub37534(.a({{1{t499[19]}}, t499}), .b({{1{t503[19]}}, t503}), .clk(clk), .q(tm185));    // 1
    addfxp #(21, 1) add37557(.a({{1{t500[19]}}, t500}), .b({{1{t505[19]}}, t505}), .clk(clk), .q(tm186));    // 1
    subfxp #(21, 1) sub37564(.a({{1{t501[19]}}, t501}), .b({{1{t504[19]}}, t504}), .clk(clk), .q(tm187));    // 1
    subfxp #(21, 1) sub37571(.a({{1{t500[19]}}, t500}), .b({{1{t505[19]}}, t505}), .clk(clk), .q(tm188));    // 1
    addfxp #(21, 1) add37578(.a({{1{t501[19]}}, t501}), .b({{1{t504[19]}}, t504}), .clk(clk), .q(tm189));    // 1


   always @(posedge clk) begin
      if (reset == 1) begin
      end
      else begin
         X0 <= X0_in;
         X1 <= X1_in;
         X2 <= X2_in;
         X3 <= X3_in;
         X4 <= X4_in;
         X5 <= X5_in;
         X6 <= X6_in;
         X7 <= X7_in;
         next <= next_in;
      end
   end
endmodule

// Latency: 37
// Gap: 16
module rc37603(clk, reset, next, next_out,
   X0, Y0,
   X1, Y1,
   X2, Y2,
   X3, Y3,
   X4, Y4,
   X5, Y5,
   X6, Y6,
   X7, Y7);

   output next_out;
   input clk, reset, next;

   input [19:0] X0,
      X1,
      X2,
      X3,
      X4,
      X5,
      X6,
      X7;

   output [19:0] Y0,
      Y1,
      Y2,
      Y3,
      Y4,
      Y5,
      Y6,
      Y7;

   wire [39:0] t0;
   wire [39:0] s0;
   assign t0 = {X0, X1};
   wire [39:0] t1;
   wire [39:0] s1;
   assign t1 = {X2, X3};
   wire [39:0] t2;
   wire [39:0] s2;
   assign t2 = {X4, X5};
   wire [39:0] t3;
   wire [39:0] s3;
   assign t3 = {X6, X7};
   assign Y0 = s0[39:20];
   assign Y1 = s0[19:0];
   assign Y2 = s1[39:20];
   assign Y3 = s1[19:0];
   assign Y4 = s2[39:20];
   assign Y5 = s2[19:0];
   assign Y6 = s3[39:20];
   assign Y7 = s3[19:0];

   perm37601 instPerm43861(.x0(t0), .y0(s0),
    .x1(t1), .y1(s1),
    .x2(t2), .y2(s2),
    .x3(t3), .y3(s3),
   .clk(clk), .next(next), .next_out(next_out), .reset(reset)
);



endmodule

module swNet37601(itr, clk, ct
,       x0, y0
,       x1, y1
,       x2, y2
,       x3, y3
);

    parameter width = 40;

    input [3:0] ct;
    input clk;
    input [0:0] itr;
    input [width-1:0] x0;
    output reg [width-1:0] y0;
    input [width-1:0] x1;
    output reg [width-1:0] y1;
    input [width-1:0] x2;
    output reg [width-1:0] y2;
    input [width-1:0] x3;
    output reg [width-1:0] y3;
    wire [width-1:0] t0_0, t0_1, t0_2, t0_3;
    wire [width-1:0] t1_0, t1_1, t1_2, t1_3;
    wire [width-1:0] t2_0, t2_1, t2_2, t2_3;
    reg [width-1:0] t3_0, t3_1, t3_2, t3_3;
    wire [width-1:0] t4_0, t4_1, t4_2, t4_3;
    reg [width-1:0] t5_0, t5_1, t5_2, t5_3;

    reg [3:0] control;

    always @(posedge clk) begin
      case(ct)
        4'd0: control <= 4'b1111;
        4'd1: control <= 4'b1111;
        4'd2: control <= 4'b1111;
        4'd3: control <= 4'b1111;
        4'd4: control <= 4'b0011;
        4'd5: control <= 4'b0011;
        4'd6: control <= 4'b0011;
        4'd7: control <= 4'b0011;
        4'd8: control <= 4'b1100;
        4'd9: control <= 4'b1100;
        4'd10: control <= 4'b1100;
        4'd11: control <= 4'b1100;
        4'd12: control <= 4'b0000;
        4'd13: control <= 4'b0000;
        4'd14: control <= 4'b0000;
        4'd15: control <= 4'b0000;
      endcase
   end

// synthesis attribute rom_style of control is "distributed"
   reg [3:0] control0;
   reg [3:0] control1;
    always @(posedge clk) begin
       control0 <= control;
        control1 <= control0;
    end
    assign t0_0 = x0;
    assign t0_1 = x2;
    assign t0_2 = x1;
    assign t0_3 = x3;
     assign t1_0 = t0_0;
     assign t1_1 = t0_1;
     assign t1_2 = t0_2;
     assign t1_3 = t0_3;
    assign t2_0 = t1_0;
    assign t2_1 = t1_2;
    assign t2_2 = t1_1;
    assign t2_3 = t1_3;
   always @(posedge clk) begin
         t3_0 <= (control0[3] == 0) ? t2_0 : t2_1;
         t3_1 <= (control0[3] == 0) ? t2_1 : t2_0;
         t3_2 <= (control0[2] == 0) ? t2_2 : t2_3;
         t3_3 <= (control0[2] == 0) ? t2_3 : t2_2;
   end
    assign t4_0 = t3_0;
    assign t4_1 = t3_2;
    assign t4_2 = t3_1;
    assign t4_3 = t3_3;
   always @(posedge clk) begin
         t5_0 <= (control1[1] == 0) ? t4_0 : t4_1;
         t5_1 <= (control1[1] == 0) ? t4_1 : t4_0;
         t5_2 <= (control1[0] == 0) ? t4_2 : t4_3;
         t5_3 <= (control1[0] == 0) ? t4_3 : t4_2;
   end
    always @(posedge clk) begin
        y0 <= t5_0;
        y1 <= t5_2;
        y2 <= t5_1;
        y3 <= t5_3;
    end
endmodule

// Latency: 37
// Gap: 16
module perm37601(clk, next, reset, next_out,
   x0, y0,
   x1, y1,
   x2, y2,
   x3, y3);
   parameter width = 40;

   parameter depth = 16;

   parameter addrbits = 4;

   parameter muxbits = 2;

   input [width-1:0]  x0;
   output [width-1:0]  y0;
   wire [width-1:0]  t0;
   wire [width-1:0]  s0;
   input [width-1:0]  x1;
   output [width-1:0]  y1;
   wire [width-1:0]  t1;
   wire [width-1:0]  s1;
   input [width-1:0]  x2;
   output [width-1:0]  y2;
   wire [width-1:0]  t2;
   wire [width-1:0]  s2;
   input [width-1:0]  x3;
   output [width-1:0]  y3;
   wire [width-1:0]  t3;
   wire [width-1:0]  s3;
   input next, reset, clk;
   output next_out;
   reg [addrbits-1:0] s1rdloc, s2rdloc;

    reg [addrbits-1:0] s1wr0;
   reg [addrbits-1:0] s1rd0, s2wr0, s2rd0;
   reg [addrbits-1:0] s1rd1, s2wr1, s2rd1;
   reg [addrbits-1:0] s1rd2, s2wr2, s2rd2;
   reg [addrbits-1:0] s1rd3, s2wr3, s2rd3;
   reg s1wr_en, state1, state2, state3;
   wire 	      next2, next3, next4;
   reg 		      inFlip0, outFlip0_z, outFlip1;
   wire 	      inFlip1, outFlip0;

   wire [0:0] tm10;
   assign tm10 = 0;

shiftRegFIFO #(4, 1) shiftFIFO_43866(.X(outFlip0), .Y(inFlip1), .clk(clk));
shiftRegFIFO #(1, 1) shiftFIFO_43867(.X(outFlip0_z), .Y(outFlip0), .clk(clk));
//   shiftRegFIFO #(2, 1) inFlip1Reg(outFlip0, inFlip1, clk);
//   shiftRegFIFO #(1, 1) outFlip0Reg(outFlip0_z, outFlip0, clk);
   
   memMod_dist #(depth*2, width, addrbits+1) s1mem0(x0, t0, {inFlip0, s1wr0}, {outFlip0, s1rd0}, s1wr_en, clk);
   memMod_dist #(depth*2, width, addrbits+1) s1mem1(x1, t1, {inFlip0, s1wr0}, {outFlip0, s1rd1}, s1wr_en, clk);
   memMod_dist #(depth*2, width, addrbits+1) s1mem2(x2, t2, {inFlip0, s1wr0}, {outFlip0, s1rd2}, s1wr_en, clk);
   memMod_dist #(depth*2, width, addrbits+1) s1mem3(x3, t3, {inFlip0, s1wr0}, {outFlip0, s1rd3}, s1wr_en, clk);

nextReg #(15, 4) nextReg_43878(.X(next), .Y(next2), .reset(reset), .clk(clk));
shiftRegFIFO #(5, 1) shiftFIFO_43879(.X(next2), .Y(next3), .clk(clk));
nextReg #(16, 4) nextReg_43882(.X(next3), .Y(next4), .reset(reset), .clk(clk));
shiftRegFIFO #(1, 1) shiftFIFO_43883(.X(next4), .Y(next_out), .clk(clk));
shiftRegFIFO #(15, 1) shiftFIFO_43886(.X(tm10), .Y(tm10_d), .clk(clk));
shiftRegFIFO #(4, 1) shiftFIFO_43889(.X(tm10_d), .Y(tm10_dd), .clk(clk));
   
   wire [addrbits-1:0] 	      muxCycle, writeCycle;
assign muxCycle = s1rdloc;
shiftRegFIFO #(4, 4) shiftFIFO_43894(.X(muxCycle), .Y(writeCycle), .clk(clk));
        
   wire 		      readInt, s2wr_en;   
   assign 		      readInt = (state2 == 1);

   shiftRegFIFO #(5, 1) writeIntReg(readInt, s2wr_en, clk);

   memMod_dist #(depth*2, width, addrbits+1) s2mem0(s0, y0, {inFlip1, s2wr0}, {outFlip1, s2rdloc}, s2wr_en, clk);
   memMod_dist #(depth*2, width, addrbits+1) s2mem1(s1, y1, {inFlip1, s2wr1}, {outFlip1, s2rdloc}, s2wr_en, clk);
   memMod_dist #(depth*2, width, addrbits+1) s2mem2(s2, y2, {inFlip1, s2wr2}, {outFlip1, s2rdloc}, s2wr_en, clk);
   memMod_dist #(depth*2, width, addrbits+1) s2mem3(s3, y3, {inFlip1, s2wr3}, {outFlip1, s2rdloc}, s2wr_en, clk);
   always @(posedge clk) begin
      if (reset == 1) begin
	 state1 <= 0;
	 inFlip0 <= 0;	 
	 s1wr0 <= 0;
      end
      else if (next == 1) begin
	 s1wr0 <= 0;
	 state1 <= 1;
	 s1wr_en <= 1;
	 inFlip0 <= (s1wr0 == depth-1) ? ~inFlip0 : inFlip0;
      end
      else begin
	 case(state1)
	   0: begin
	      s1wr0 <= 0;
	      state1 <= 0;
	      s1wr_en <= 0;
	      inFlip0 <= inFlip0;	      
	   end
	   1: begin
	      s1wr0 <= (s1wr0 == depth-1) ? 0 : s1wr0 + 1;
	      state1 <= 1;
         s1wr_en <= 1;
	      inFlip0 <= (s1wr0 == depth-1) ? ~inFlip0 : inFlip0;
	   end
	 endcase
      end      
   end
   
   always @(posedge clk) begin
      if (reset == 1) begin
	       state2 <= 0;
	       outFlip0_z <= 0;	 
      end
      else if (next2 == 1) begin
	       s1rdloc <= 0;
	       state2 <= 1;
	       outFlip0_z <= (s1rdloc == depth-1) ? ~outFlip0_z : outFlip0_z;
      end
      else begin
	 case(state2)
	   0: begin
	      s1rdloc <= 0;
	      state2 <= 0;
	      outFlip0_z <= outFlip0_z;	 
	   end
	   1: begin
	      s1rdloc <= (s1rdloc == depth-1) ? 0 : s1rdloc + 1;
         state2 <= 1;
	      outFlip0_z <= (s1rdloc == depth-1) ? ~outFlip0_z : outFlip0_z;
	   end	     
	 endcase
      end
   end
   
   always @(posedge clk) begin
      if (reset == 1) begin
	 state3 <= 0;
	 outFlip1 <= 0;	 
      end
      else if (next4 == 1) begin
	 s2rdloc <= 0;
	 state3 <= 1;
	 outFlip1 <= (s2rdloc == depth-1) ? ~outFlip1 : outFlip1;	      
      end
      else begin
	 case(state3)
	   0: begin
	      s2rdloc <= 0;
	      state3 <= 0;
	      outFlip1 <= outFlip1;
	   end
	   1: begin
	      s2rdloc <= (s2rdloc == depth-1) ? 0 : s2rdloc + 1;
         state3 <= 1;
	      outFlip1 <= (s2rdloc == depth-1) ? ~outFlip1 : outFlip1;
	   end	     
	 endcase
      end
   end
   always @(posedge clk) begin
      case({tm10_d, s1rdloc})
	     {1'd0,  4'd0}: s1rd0 <= 12;
	     {1'd0,  4'd1}: s1rd0 <= 13;
	     {1'd0,  4'd2}: s1rd0 <= 14;
	     {1'd0,  4'd3}: s1rd0 <= 15;
	     {1'd0,  4'd4}: s1rd0 <= 8;
	     {1'd0,  4'd5}: s1rd0 <= 9;
	     {1'd0,  4'd6}: s1rd0 <= 10;
	     {1'd0,  4'd7}: s1rd0 <= 11;
	     {1'd0,  4'd8}: s1rd0 <= 4;
	     {1'd0,  4'd9}: s1rd0 <= 5;
	     {1'd0,  4'd10}: s1rd0 <= 6;
	     {1'd0,  4'd11}: s1rd0 <= 7;
	     {1'd0,  4'd12}: s1rd0 <= 0;
	     {1'd0,  4'd13}: s1rd0 <= 1;
	     {1'd0,  4'd14}: s1rd0 <= 2;
	     {1'd0,  4'd15}: s1rd0 <= 3;
      endcase      
   end

// synthesis attribute rom_style of s1rd0 is "distributed"
   always @(posedge clk) begin
      case({tm10_d, s1rdloc})
	     {1'd0,  4'd0}: s1rd1 <= 8;
	     {1'd0,  4'd1}: s1rd1 <= 9;
	     {1'd0,  4'd2}: s1rd1 <= 10;
	     {1'd0,  4'd3}: s1rd1 <= 11;
	     {1'd0,  4'd4}: s1rd1 <= 12;
	     {1'd0,  4'd5}: s1rd1 <= 13;
	     {1'd0,  4'd6}: s1rd1 <= 14;
	     {1'd0,  4'd7}: s1rd1 <= 15;
	     {1'd0,  4'd8}: s1rd1 <= 0;
	     {1'd0,  4'd9}: s1rd1 <= 1;
	     {1'd0,  4'd10}: s1rd1 <= 2;
	     {1'd0,  4'd11}: s1rd1 <= 3;
	     {1'd0,  4'd12}: s1rd1 <= 4;
	     {1'd0,  4'd13}: s1rd1 <= 5;
	     {1'd0,  4'd14}: s1rd1 <= 6;
	     {1'd0,  4'd15}: s1rd1 <= 7;
      endcase      
   end

// synthesis attribute rom_style of s1rd1 is "distributed"
   always @(posedge clk) begin
      case({tm10_d, s1rdloc})
	     {1'd0,  4'd0}: s1rd2 <= 4;
	     {1'd0,  4'd1}: s1rd2 <= 5;
	     {1'd0,  4'd2}: s1rd2 <= 6;
	     {1'd0,  4'd3}: s1rd2 <= 7;
	     {1'd0,  4'd4}: s1rd2 <= 0;
	     {1'd0,  4'd5}: s1rd2 <= 1;
	     {1'd0,  4'd6}: s1rd2 <= 2;
	     {1'd0,  4'd7}: s1rd2 <= 3;
	     {1'd0,  4'd8}: s1rd2 <= 12;
	     {1'd0,  4'd9}: s1rd2 <= 13;
	     {1'd0,  4'd10}: s1rd2 <= 14;
	     {1'd0,  4'd11}: s1rd2 <= 15;
	     {1'd0,  4'd12}: s1rd2 <= 8;
	     {1'd0,  4'd13}: s1rd2 <= 9;
	     {1'd0,  4'd14}: s1rd2 <= 10;
	     {1'd0,  4'd15}: s1rd2 <= 11;
      endcase      
   end

// synthesis attribute rom_style of s1rd2 is "distributed"
   always @(posedge clk) begin
      case({tm10_d, s1rdloc})
	     {1'd0,  4'd0}: s1rd3 <= 0;
	     {1'd0,  4'd1}: s1rd3 <= 1;
	     {1'd0,  4'd2}: s1rd3 <= 2;
	     {1'd0,  4'd3}: s1rd3 <= 3;
	     {1'd0,  4'd4}: s1rd3 <= 4;
	     {1'd0,  4'd5}: s1rd3 <= 5;
	     {1'd0,  4'd6}: s1rd3 <= 6;
	     {1'd0,  4'd7}: s1rd3 <= 7;
	     {1'd0,  4'd8}: s1rd3 <= 8;
	     {1'd0,  4'd9}: s1rd3 <= 9;
	     {1'd0,  4'd10}: s1rd3 <= 10;
	     {1'd0,  4'd11}: s1rd3 <= 11;
	     {1'd0,  4'd12}: s1rd3 <= 12;
	     {1'd0,  4'd13}: s1rd3 <= 13;
	     {1'd0,  4'd14}: s1rd3 <= 14;
	     {1'd0,  4'd15}: s1rd3 <= 15;
      endcase      
   end

// synthesis attribute rom_style of s1rd3 is "distributed"
    swNet37601 sw(tm10_d, clk, muxCycle, t0, s0, t1, s1, t2, s2, t3, s3);

   always @(posedge clk) begin
      case({tm10_dd, writeCycle})
	      {1'd0, 4'd0}: s2wr0 <= 12;
	      {1'd0, 4'd1}: s2wr0 <= 13;
	      {1'd0, 4'd2}: s2wr0 <= 14;
	      {1'd0, 4'd3}: s2wr0 <= 15;
	      {1'd0, 4'd4}: s2wr0 <= 8;
	      {1'd0, 4'd5}: s2wr0 <= 9;
	      {1'd0, 4'd6}: s2wr0 <= 10;
	      {1'd0, 4'd7}: s2wr0 <= 11;
	      {1'd0, 4'd8}: s2wr0 <= 4;
	      {1'd0, 4'd9}: s2wr0 <= 5;
	      {1'd0, 4'd10}: s2wr0 <= 6;
	      {1'd0, 4'd11}: s2wr0 <= 7;
	      {1'd0, 4'd12}: s2wr0 <= 0;
	      {1'd0, 4'd13}: s2wr0 <= 1;
	      {1'd0, 4'd14}: s2wr0 <= 2;
	      {1'd0, 4'd15}: s2wr0 <= 3;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr0 is "distributed"
   always @(posedge clk) begin
      case({tm10_dd, writeCycle})
	      {1'd0, 4'd0}: s2wr1 <= 8;
	      {1'd0, 4'd1}: s2wr1 <= 9;
	      {1'd0, 4'd2}: s2wr1 <= 10;
	      {1'd0, 4'd3}: s2wr1 <= 11;
	      {1'd0, 4'd4}: s2wr1 <= 12;
	      {1'd0, 4'd5}: s2wr1 <= 13;
	      {1'd0, 4'd6}: s2wr1 <= 14;
	      {1'd0, 4'd7}: s2wr1 <= 15;
	      {1'd0, 4'd8}: s2wr1 <= 0;
	      {1'd0, 4'd9}: s2wr1 <= 1;
	      {1'd0, 4'd10}: s2wr1 <= 2;
	      {1'd0, 4'd11}: s2wr1 <= 3;
	      {1'd0, 4'd12}: s2wr1 <= 4;
	      {1'd0, 4'd13}: s2wr1 <= 5;
	      {1'd0, 4'd14}: s2wr1 <= 6;
	      {1'd0, 4'd15}: s2wr1 <= 7;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr1 is "distributed"
   always @(posedge clk) begin
      case({tm10_dd, writeCycle})
	      {1'd0, 4'd0}: s2wr2 <= 4;
	      {1'd0, 4'd1}: s2wr2 <= 5;
	      {1'd0, 4'd2}: s2wr2 <= 6;
	      {1'd0, 4'd3}: s2wr2 <= 7;
	      {1'd0, 4'd4}: s2wr2 <= 0;
	      {1'd0, 4'd5}: s2wr2 <= 1;
	      {1'd0, 4'd6}: s2wr2 <= 2;
	      {1'd0, 4'd7}: s2wr2 <= 3;
	      {1'd0, 4'd8}: s2wr2 <= 12;
	      {1'd0, 4'd9}: s2wr2 <= 13;
	      {1'd0, 4'd10}: s2wr2 <= 14;
	      {1'd0, 4'd11}: s2wr2 <= 15;
	      {1'd0, 4'd12}: s2wr2 <= 8;
	      {1'd0, 4'd13}: s2wr2 <= 9;
	      {1'd0, 4'd14}: s2wr2 <= 10;
	      {1'd0, 4'd15}: s2wr2 <= 11;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr2 is "distributed"
   always @(posedge clk) begin
      case({tm10_dd, writeCycle})
	      {1'd0, 4'd0}: s2wr3 <= 0;
	      {1'd0, 4'd1}: s2wr3 <= 1;
	      {1'd0, 4'd2}: s2wr3 <= 2;
	      {1'd0, 4'd3}: s2wr3 <= 3;
	      {1'd0, 4'd4}: s2wr3 <= 4;
	      {1'd0, 4'd5}: s2wr3 <= 5;
	      {1'd0, 4'd6}: s2wr3 <= 6;
	      {1'd0, 4'd7}: s2wr3 <= 7;
	      {1'd0, 4'd8}: s2wr3 <= 8;
	      {1'd0, 4'd9}: s2wr3 <= 9;
	      {1'd0, 4'd10}: s2wr3 <= 10;
	      {1'd0, 4'd11}: s2wr3 <= 11;
	      {1'd0, 4'd12}: s2wr3 <= 12;
	      {1'd0, 4'd13}: s2wr3 <= 13;
	      {1'd0, 4'd14}: s2wr3 <= 14;
	      {1'd0, 4'd15}: s2wr3 <= 15;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr3 is "distributed"
endmodule


// Latency: 12
// Gap: 16
module DirSum_38072(clk, reset, next, next_out,
      X0, Y0,
      X1, Y1,
      X2, Y2,
      X3, Y3,
      X4, Y4,
      X5, Y5,
      X6, Y6,
      X7, Y7);

   output next_out;
   input clk, reset, next;

   reg [3:0] i3;

   input [19:0] X0,
      X1,
      X2,
      X3,
      X4,
      X5,
      X6,
      X7;

   output [19:0] Y0,
      Y1,
      Y2,
      Y3,
      Y4,
      Y5,
      Y6,
      Y7;

   always @(posedge clk) begin
      if (reset == 1) begin
         i3 <= 0;
      end
      else begin
         if (next == 1)
            i3 <= 0;
         else if (i3 == 15)
            i3 <= 0;
         else
            i3 <= i3 + 1;
      end
   end

   codeBlock37606 codeBlockIsnt43899(.clk(clk), .reset(reset), .next_in(next), .next_out(next_out),
.i3_in(i3),
       .X0_in(X0), .Y0(Y0),
       .X1_in(X1), .Y1(Y1),
       .X2_in(X2), .Y2(Y2),
       .X3_in(X3), .Y3(Y3),
       .X4_in(X4), .Y4(Y4),
       .X5_in(X5), .Y5(Y5),
       .X6_in(X6), .Y6(Y6),
       .X7_in(X7), .Y7(Y7));

endmodule

module D30_37944(addr, out, clk);
   input clk;
   output [19:0] out;
   reg [19:0] out, out2, out3;
   input [3:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 20'h0;
      1: out3 <= 20'hed6c0;
      2: out3 <= 20'hdc719;
      3: out3 <= 20'hce870;
      4: out3 <= 20'hc4df3;
      5: out3 <= 20'hc04ee;
      6: out3 <= 20'hc13ad;
      7: out3 <= 20'hc78ea;
      8: out3 <= 20'hd2bec;
      9: out3 <= 20'he1d4a;
      10: out3 <= 20'hf383a;
      11: out3 <= 20'h645f;
      12: out3 <= 20'h187de;
      13: out3 <= 20'h2899e;
      14: out3 <= 20'h3536d;
      15: out3 <= 20'h3d3e8;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



module D29_37962(addr, out, clk);
   input clk;
   output [19:0] out;
   reg [19:0] out, out2, out3;
   input [3:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 20'h0;
      1: out3 <= 20'hf383a;
      2: out3 <= 20'he7822;
      3: out3 <= 20'hdc719;
      4: out3 <= 20'hd2bec;
      5: out3 <= 20'hcac93;
      6: out3 <= 20'hc4df3;
      7: out3 <= 20'hc13ad;
      8: out3 <= 20'hc0000;
      9: out3 <= 20'hc13ad;
      10: out3 <= 20'hc4df3;
      11: out3 <= 20'hcac93;
      12: out3 <= 20'hd2bec;
      13: out3 <= 20'hdc719;
      14: out3 <= 20'he7822;
      15: out3 <= 20'hf383a;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



module D28_37980(addr, out, clk);
   input clk;
   output [19:0] out;
   reg [19:0] out, out2, out3;
   input [3:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 20'h0;
      1: out3 <= 20'hf9ba1;
      2: out3 <= 20'hf383a;
      3: out3 <= 20'hed6c0;
      4: out3 <= 20'he7822;
      5: out3 <= 20'he1d4a;
      6: out3 <= 20'hdc719;
      7: out3 <= 20'hd7662;
      8: out3 <= 20'hd2bec;
      9: out3 <= 20'hce870;
      10: out3 <= 20'hcac93;
      11: out3 <= 20'hc78ea;
      12: out3 <= 20'hc4df3;
      13: out3 <= 20'hc2c18;
      14: out3 <= 20'hc13ad;
      15: out3 <= 20'hc04ee;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



module D26_38016(addr, out, clk);
   input clk;
   output [19:0] out;
   reg [19:0] out, out2, out3;
   input [3:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 20'h40000;
      1: out3 <= 20'h3d3e8;
      2: out3 <= 20'h3536d;
      3: out3 <= 20'h2899e;
      4: out3 <= 20'h187de;
      5: out3 <= 20'h645f;
      6: out3 <= 20'hf383a;
      7: out3 <= 20'he1d4a;
      8: out3 <= 20'hd2bec;
      9: out3 <= 20'hc78ea;
      10: out3 <= 20'hc13ad;
      11: out3 <= 20'hc04ee;
      12: out3 <= 20'hc4df3;
      13: out3 <= 20'hce870;
      14: out3 <= 20'hdc719;
      15: out3 <= 20'hed6c0;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



module D25_38034(addr, out, clk);
   input clk;
   output [19:0] out;
   reg [19:0] out, out2, out3;
   input [3:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 20'h40000;
      1: out3 <= 20'h3ec53;
      2: out3 <= 20'h3b20d;
      3: out3 <= 20'h3536d;
      4: out3 <= 20'h2d414;
      5: out3 <= 20'h238e7;
      6: out3 <= 20'h187de;
      7: out3 <= 20'hc7c6;
      8: out3 <= 20'h0;
      9: out3 <= 20'hf383a;
      10: out3 <= 20'he7822;
      11: out3 <= 20'hdc719;
      12: out3 <= 20'hd2bec;
      13: out3 <= 20'hcac93;
      14: out3 <= 20'hc4df3;
      15: out3 <= 20'hc13ad;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



module D24_38052(addr, out, clk);
   input clk;
   output [19:0] out;
   reg [19:0] out, out2, out3;
   input [3:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 20'h40000;
      1: out3 <= 20'h3fb12;
      2: out3 <= 20'h3ec53;
      3: out3 <= 20'h3d3e8;
      4: out3 <= 20'h3b20d;
      5: out3 <= 20'h38716;
      6: out3 <= 20'h3536d;
      7: out3 <= 20'h31790;
      8: out3 <= 20'h2d414;
      9: out3 <= 20'h2899e;
      10: out3 <= 20'h238e7;
      11: out3 <= 20'h1e2b6;
      12: out3 <= 20'h187de;
      13: out3 <= 20'h12940;
      14: out3 <= 20'hc7c6;
      15: out3 <= 20'h645f;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



// Latency: 12
// Gap: 1
module codeBlock37606(clk, reset, next_in, next_out,
   i3_in,
   X0_in, Y0,
   X1_in, Y1,
   X2_in, Y2,
   X3_in, Y3,
   X4_in, Y4,
   X5_in, Y5,
   X6_in, Y6,
   X7_in, Y7);

   output next_out;
   input clk, reset, next_in;

   reg next;
   input [3:0] i3_in;
   reg [3:0] i3;

   input [19:0] X0_in,
      X1_in,
      X2_in,
      X3_in,
      X4_in,
      X5_in,
      X6_in,
      X7_in;

   reg   [19:0] X0,
      X1,
      X2,
      X3,
      X4,
      X5,
      X6,
      X7;

   output [19:0] Y0,
      Y1,
      Y2,
      Y3,
      Y4,
      Y5,
      Y6,
      Y7;

   shiftRegFIFO #(11, 1) shiftFIFO_43902(.X(next), .Y(next_out), .clk(clk));


   wire signed [19:0] a345;
   wire signed [19:0] a322;
   wire signed [19:0] a348;
   wire signed [19:0] a326;
   wire signed [19:0] a349;
   wire signed [19:0] a350;
   wire signed [19:0] a353;
   wire signed [19:0] a354;
   wire signed [19:0] a357;
   wire signed [19:0] a358;
   reg signed [19:0] tm308;
   reg signed [19:0] tm312;
   reg signed [19:0] tm324;
   reg signed [19:0] tm328;
   reg signed [19:0] tm340;
   reg signed [19:0] tm344;
   reg signed [19:0] tm356;
   reg signed [19:0] tm367;
   reg signed [19:0] tm309;
   reg signed [19:0] tm313;
   reg signed [19:0] tm325;
   reg signed [19:0] tm329;
   reg signed [19:0] tm341;
   reg signed [19:0] tm345;
   reg signed [19:0] tm357;
   reg signed [19:0] tm368;
   wire signed [19:0] tm13;
   wire signed [19:0] a327;
   wire signed [19:0] tm14;
   wire signed [19:0] a329;
   wire signed [19:0] tm15;
   wire signed [19:0] a333;
   wire signed [19:0] tm16;
   wire signed [19:0] a335;
   wire signed [19:0] tm17;
   wire signed [19:0] a339;
   wire signed [19:0] tm18;
   wire signed [19:0] a341;
   reg signed [19:0] tm310;
   reg signed [19:0] tm314;
   reg signed [19:0] tm326;
   reg signed [19:0] tm330;
   reg signed [19:0] tm342;
   reg signed [19:0] tm346;
   reg signed [19:0] tm358;
   reg signed [19:0] tm369;
   reg signed [19:0] tm58;
   reg signed [19:0] tm59;
   reg signed [19:0] tm62;
   reg signed [19:0] tm63;
   reg signed [19:0] tm66;
   reg signed [19:0] tm67;
   reg signed [19:0] tm311;
   reg signed [19:0] tm315;
   reg signed [19:0] tm327;
   reg signed [19:0] tm331;
   reg signed [19:0] tm343;
   reg signed [19:0] tm347;
   reg signed [19:0] tm359;
   reg signed [19:0] tm370;
   reg signed [19:0] tm360;
   reg signed [19:0] tm371;
   reg signed [19:0] tm361;
   reg signed [19:0] tm372;
   reg signed [19:0] tm362;
   reg signed [19:0] tm373;
   reg signed [19:0] tm363;
   reg signed [19:0] tm374;
   reg signed [19:0] tm364;
   reg signed [19:0] tm375;
   wire signed [19:0] a328;
   wire signed [19:0] a330;
   wire signed [19:0] a331;
   wire signed [19:0] a332;
   wire signed [19:0] a334;
   wire signed [19:0] a336;
   wire signed [19:0] a337;
   wire signed [19:0] a338;
   wire signed [19:0] a340;
   wire signed [19:0] a342;
   wire signed [19:0] a343;
   wire signed [19:0] a344;
   reg signed [19:0] tm365;
   reg signed [19:0] tm376;
   wire signed [19:0] Y0;
   wire signed [19:0] Y1;
   wire signed [19:0] Y2;
   wire signed [19:0] Y3;
   wire signed [19:0] Y4;
   wire signed [19:0] Y5;
   wire signed [19:0] Y6;
   wire signed [19:0] Y7;
   reg signed [19:0] tm366;
   reg signed [19:0] tm377;


   assign a345 = X0;
   assign a322 = a345;
   assign a348 = X1;
   assign a326 = a348;
   assign a349 = X2;
   assign a350 = X3;
   assign a353 = X4;
   assign a354 = X5;
   assign a357 = X6;
   assign a358 = X7;
   assign a327 = tm13;
   assign a329 = tm14;
   assign a333 = tm15;
   assign a335 = tm16;
   assign a339 = tm17;
   assign a341 = tm18;
   assign Y0 = tm366;
   assign Y1 = tm377;

   D30_37944 instD30inst0_37944(.addr(i3[3:0]), .out(tm18), .clk(clk));

   D29_37962 instD29inst0_37962(.addr(i3[3:0]), .out(tm16), .clk(clk));

   D28_37980 instD28inst0_37980(.addr(i3[3:0]), .out(tm14), .clk(clk));

   D26_38016 instD26inst0_38016(.addr(i3[3:0]), .out(tm17), .clk(clk));

   D25_38034 instD25inst0_38034(.addr(i3[3:0]), .out(tm15), .clk(clk));

   D24_38052 instD24inst0_38052(.addr(i3[3:0]), .out(tm13), .clk(clk));

    multfix #(20, 6) m37705(.a(tm58), .b(tm311), .clk(clk), .q_sc(a328), .q_unsc(), .rst(reset));
    multfix #(20, 6) m37727(.a(tm59), .b(tm315), .clk(clk), .q_sc(a330), .q_unsc(), .rst(reset));
    multfix #(20, 6) m37745(.a(tm59), .b(tm311), .clk(clk), .q_sc(a331), .q_unsc(), .rst(reset));
    multfix #(20, 6) m37756(.a(tm58), .b(tm315), .clk(clk), .q_sc(a332), .q_unsc(), .rst(reset));
    multfix #(20, 6) m37785(.a(tm62), .b(tm327), .clk(clk), .q_sc(a334), .q_unsc(), .rst(reset));
    multfix #(20, 6) m37807(.a(tm63), .b(tm331), .clk(clk), .q_sc(a336), .q_unsc(), .rst(reset));
    multfix #(20, 6) m37825(.a(tm63), .b(tm327), .clk(clk), .q_sc(a337), .q_unsc(), .rst(reset));
    multfix #(20, 6) m37836(.a(tm62), .b(tm331), .clk(clk), .q_sc(a338), .q_unsc(), .rst(reset));
    multfix #(20, 6) m37865(.a(tm66), .b(tm343), .clk(clk), .q_sc(a340), .q_unsc(), .rst(reset));
    multfix #(20, 6) m37887(.a(tm67), .b(tm347), .clk(clk), .q_sc(a342), .q_unsc(), .rst(reset));
    multfix #(20, 6) m37905(.a(tm67), .b(tm343), .clk(clk), .q_sc(a343), .q_unsc(), .rst(reset));
    multfix #(20, 6) m37916(.a(tm66), .b(tm347), .clk(clk), .q_sc(a344), .q_unsc(), .rst(reset));
    subfxp #(20, 1) sub37734(.a(a328), .b(a330), .clk(clk), .q(Y2));    // 10
    addfxp #(20, 1) add37763(.a(a331), .b(a332), .clk(clk), .q(Y3));    // 10
    subfxp #(20, 1) sub37814(.a(a334), .b(a336), .clk(clk), .q(Y4));    // 10
    addfxp #(20, 1) add37843(.a(a337), .b(a338), .clk(clk), .q(Y5));    // 10
    subfxp #(20, 1) sub37894(.a(a340), .b(a342), .clk(clk), .q(Y6));    // 10
    addfxp #(20, 1) add37923(.a(a343), .b(a344), .clk(clk), .q(Y7));    // 10


   always @(posedge clk) begin
      if (reset == 1) begin
         tm58 <= 0;
         tm311 <= 0;
         tm59 <= 0;
         tm315 <= 0;
         tm59 <= 0;
         tm311 <= 0;
         tm58 <= 0;
         tm315 <= 0;
         tm62 <= 0;
         tm327 <= 0;
         tm63 <= 0;
         tm331 <= 0;
         tm63 <= 0;
         tm327 <= 0;
         tm62 <= 0;
         tm331 <= 0;
         tm66 <= 0;
         tm343 <= 0;
         tm67 <= 0;
         tm347 <= 0;
         tm67 <= 0;
         tm343 <= 0;
         tm66 <= 0;
         tm347 <= 0;
      end
      else begin
         i3 <= i3_in;
         X0 <= X0_in;
         X1 <= X1_in;
         X2 <= X2_in;
         X3 <= X3_in;
         X4 <= X4_in;
         X5 <= X5_in;
         X6 <= X6_in;
         X7 <= X7_in;
         next <= next_in;
         tm308 <= a349;
         tm312 <= a350;
         tm324 <= a353;
         tm328 <= a354;
         tm340 <= a357;
         tm344 <= a358;
         tm356 <= a322;
         tm367 <= a326;
         tm309 <= tm308;
         tm313 <= tm312;
         tm325 <= tm324;
         tm329 <= tm328;
         tm341 <= tm340;
         tm345 <= tm344;
         tm357 <= tm356;
         tm368 <= tm367;
         tm310 <= tm309;
         tm314 <= tm313;
         tm326 <= tm325;
         tm330 <= tm329;
         tm342 <= tm341;
         tm346 <= tm345;
         tm358 <= tm357;
         tm369 <= tm368;
         tm58 <= a327;
         tm59 <= a329;
         tm62 <= a333;
         tm63 <= a335;
         tm66 <= a339;
         tm67 <= a341;
         tm311 <= tm310;
         tm315 <= tm314;
         tm327 <= tm326;
         tm331 <= tm330;
         tm343 <= tm342;
         tm347 <= tm346;
         tm359 <= tm358;
         tm370 <= tm369;
         tm360 <= tm359;
         tm371 <= tm370;
         tm361 <= tm360;
         tm372 <= tm371;
         tm362 <= tm361;
         tm373 <= tm372;
         tm363 <= tm362;
         tm374 <= tm373;
         tm364 <= tm363;
         tm375 <= tm374;
         tm365 <= tm364;
         tm376 <= tm375;
         tm366 <= tm365;
         tm377 <= tm376;
      end
   end
endmodule

// Latency: 3
// Gap: 1
module codeBlock38075(clk, reset, next_in, next_out,
   X0_in, Y0,
   X1_in, Y1,
   X2_in, Y2,
   X3_in, Y3,
   X4_in, Y4,
   X5_in, Y5,
   X6_in, Y6,
   X7_in, Y7);

   output next_out;
   input clk, reset, next_in;

   reg next;

   input [19:0] X0_in,
      X1_in,
      X2_in,
      X3_in,
      X4_in,
      X5_in,
      X6_in,
      X7_in;

   reg   [19:0] X0,
      X1,
      X2,
      X3,
      X4,
      X5,
      X6,
      X7;

   output [19:0] Y0,
      Y1,
      Y2,
      Y3,
      Y4,
      Y5,
      Y6,
      Y7;

   shiftRegFIFO #(2, 1) shiftFIFO_43905(.X(next), .Y(next_out), .clk(clk));


   wire signed [19:0] a257;
   wire signed [19:0] a258;
   wire signed [19:0] a259;
   wire signed [19:0] a260;
   wire signed [19:0] a265;
   wire signed [19:0] a266;
   wire signed [19:0] a267;
   wire signed [19:0] a268;
   wire signed [20:0] tm190;
   wire signed [20:0] tm191;
   wire signed [20:0] tm192;
   wire signed [20:0] tm193;
   wire signed [20:0] tm194;
   wire signed [20:0] tm195;
   wire signed [20:0] tm196;
   wire signed [20:0] tm197;
   wire signed [19:0] t369;
   wire signed [19:0] t370;
   wire signed [19:0] t371;
   wire signed [19:0] t372;
   wire signed [19:0] t373;
   wire signed [19:0] t374;
   wire signed [19:0] t375;
   wire signed [19:0] t376;
   wire signed [20:0] tm198;
   wire signed [20:0] tm199;
   wire signed [20:0] tm200;
   wire signed [20:0] tm201;
   wire signed [19:0] Y0;
   wire signed [19:0] Y1;
   wire signed [19:0] Y4;
   wire signed [19:0] Y5;
   wire signed [20:0] tm202;
   wire signed [20:0] tm203;
   wire signed [20:0] tm204;
   wire signed [20:0] tm205;
   wire signed [19:0] Y2;
   wire signed [19:0] Y3;
   wire signed [19:0] Y6;
   wire signed [19:0] Y7;
   wire signed [19:0] t377;
   wire signed [19:0] t378;
   wire signed [19:0] t379;
   wire signed [19:0] t380;
   wire signed [19:0] t381;
   wire signed [19:0] t382;
   wire signed [19:0] t383;
   wire signed [19:0] t384;


   assign a257 = X0;
   assign a258 = X4;
   assign a259 = X1;
   assign a260 = X5;
   assign a265 = X2;
   assign a266 = X6;
   assign a267 = X3;
   assign a268 = X7;
   assign t369 = tm190[20:1];
   assign t370 = tm191[20:1];
   assign t371 = tm192[20:1];
   assign t372 = tm193[20:1];
   assign t373 = tm194[20:1];
   assign t374 = tm195[20:1];
   assign t375 = tm196[20:1];
   assign t376 = tm197[20:1];
   assign Y0 = t377;
   assign Y1 = t378;
   assign Y4 = t379;
   assign Y5 = t380;
   assign Y2 = t381;
   assign Y3 = t382;
   assign Y6 = t383;
   assign Y7 = t384;
   assign t377 = tm198[20:1];
   assign t378 = tm199[20:1];
   assign t379 = tm200[20:1];
   assign t380 = tm201[20:1];
   assign t381 = tm202[20:1];
   assign t382 = tm203[20:1];
   assign t383 = tm204[20:1];
   assign t384 = tm205[20:1];

    addfxp #(21, 1) add38087(.a({{1{a257[19]}}, a257}), .b({{1{a258[19]}}, a258}), .clk(clk), .q(tm190));    // 0
    addfxp #(21, 1) add38102(.a({{1{a259[19]}}, a259}), .b({{1{a260[19]}}, a260}), .clk(clk), .q(tm191));    // 0
    subfxp #(21, 1) sub38117(.a({{1{a257[19]}}, a257}), .b({{1{a258[19]}}, a258}), .clk(clk), .q(tm192));    // 0
    subfxp #(21, 1) sub38132(.a({{1{a259[19]}}, a259}), .b({{1{a260[19]}}, a260}), .clk(clk), .q(tm193));    // 0
    addfxp #(21, 1) add38147(.a({{1{a265[19]}}, a265}), .b({{1{a266[19]}}, a266}), .clk(clk), .q(tm194));    // 0
    addfxp #(21, 1) add38162(.a({{1{a267[19]}}, a267}), .b({{1{a268[19]}}, a268}), .clk(clk), .q(tm195));    // 0
    subfxp #(21, 1) sub38177(.a({{1{a265[19]}}, a265}), .b({{1{a266[19]}}, a266}), .clk(clk), .q(tm196));    // 0
    subfxp #(21, 1) sub38192(.a({{1{a267[19]}}, a267}), .b({{1{a268[19]}}, a268}), .clk(clk), .q(tm197));    // 0
    addfxp #(21, 1) add38199(.a({{1{t369[19]}}, t369}), .b({{1{t373[19]}}, t373}), .clk(clk), .q(tm198));    // 1
    addfxp #(21, 1) add38206(.a({{1{t370[19]}}, t370}), .b({{1{t374[19]}}, t374}), .clk(clk), .q(tm199));    // 1
    subfxp #(21, 1) sub38213(.a({{1{t369[19]}}, t369}), .b({{1{t373[19]}}, t373}), .clk(clk), .q(tm200));    // 1
    subfxp #(21, 1) sub38220(.a({{1{t370[19]}}, t370}), .b({{1{t374[19]}}, t374}), .clk(clk), .q(tm201));    // 1
    addfxp #(21, 1) add38243(.a({{1{t371[19]}}, t371}), .b({{1{t376[19]}}, t376}), .clk(clk), .q(tm202));    // 1
    subfxp #(21, 1) sub38250(.a({{1{t372[19]}}, t372}), .b({{1{t375[19]}}, t375}), .clk(clk), .q(tm203));    // 1
    subfxp #(21, 1) sub38257(.a({{1{t371[19]}}, t371}), .b({{1{t376[19]}}, t376}), .clk(clk), .q(tm204));    // 1
    addfxp #(21, 1) add38264(.a({{1{t372[19]}}, t372}), .b({{1{t375[19]}}, t375}), .clk(clk), .q(tm205));    // 1


   always @(posedge clk) begin
      if (reset == 1) begin
      end
      else begin
         X0 <= X0_in;
         X1 <= X1_in;
         X2 <= X2_in;
         X3 <= X3_in;
         X4 <= X4_in;
         X5 <= X5_in;
         X6 <= X6_in;
         X7 <= X7_in;
         next <= next_in;
      end
   end
endmodule

// Latency: 133
// Gap: 64
module rc38289(clk, reset, next, next_out,
   X0, Y0,
   X1, Y1,
   X2, Y2,
   X3, Y3,
   X4, Y4,
   X5, Y5,
   X6, Y6,
   X7, Y7);

   output next_out;
   input clk, reset, next;

   input [19:0] X0,
      X1,
      X2,
      X3,
      X4,
      X5,
      X6,
      X7;

   output [19:0] Y0,
      Y1,
      Y2,
      Y3,
      Y4,
      Y5,
      Y6,
      Y7;

   wire [39:0] t0;
   wire [39:0] s0;
   assign t0 = {X0, X1};
   wire [39:0] t1;
   wire [39:0] s1;
   assign t1 = {X2, X3};
   wire [39:0] t2;
   wire [39:0] s2;
   assign t2 = {X4, X5};
   wire [39:0] t3;
   wire [39:0] s3;
   assign t3 = {X6, X7};
   assign Y0 = s0[39:20];
   assign Y1 = s0[19:0];
   assign Y2 = s1[39:20];
   assign Y3 = s1[19:0];
   assign Y4 = s2[39:20];
   assign Y5 = s2[19:0];
   assign Y6 = s3[39:20];
   assign Y7 = s3[19:0];

   perm38287 instPerm43906(.x0(t0), .y0(s0),
    .x1(t1), .y1(s1),
    .x2(t2), .y2(s2),
    .x3(t3), .y3(s3),
   .clk(clk), .next(next), .next_out(next_out), .reset(reset)
);



endmodule

module swNet38287(itr, clk, ct
,       x0, y0
,       x1, y1
,       x2, y2
,       x3, y3
);

    parameter width = 40;

    input [5:0] ct;
    input clk;
    input [0:0] itr;
    input [width-1:0] x0;
    output reg [width-1:0] y0;
    input [width-1:0] x1;
    output reg [width-1:0] y1;
    input [width-1:0] x2;
    output reg [width-1:0] y2;
    input [width-1:0] x3;
    output reg [width-1:0] y3;
    wire [width-1:0] t0_0, t0_1, t0_2, t0_3;
    wire [width-1:0] t1_0, t1_1, t1_2, t1_3;
    wire [width-1:0] t2_0, t2_1, t2_2, t2_3;
    reg [width-1:0] t3_0, t3_1, t3_2, t3_3;
    wire [width-1:0] t4_0, t4_1, t4_2, t4_3;
    reg [width-1:0] t5_0, t5_1, t5_2, t5_3;

    reg [3:0] control;

    always @(posedge clk) begin
      case(ct)
        6'd0: control <= 4'b1111;
        6'd1: control <= 4'b1111;
        6'd2: control <= 4'b1111;
        6'd3: control <= 4'b1111;
        6'd4: control <= 4'b1111;
        6'd5: control <= 4'b1111;
        6'd6: control <= 4'b1111;
        6'd7: control <= 4'b1111;
        6'd8: control <= 4'b1111;
        6'd9: control <= 4'b1111;
        6'd10: control <= 4'b1111;
        6'd11: control <= 4'b1111;
        6'd12: control <= 4'b1111;
        6'd13: control <= 4'b1111;
        6'd14: control <= 4'b1111;
        6'd15: control <= 4'b1111;
        6'd16: control <= 4'b0011;
        6'd17: control <= 4'b0011;
        6'd18: control <= 4'b0011;
        6'd19: control <= 4'b0011;
        6'd20: control <= 4'b0011;
        6'd21: control <= 4'b0011;
        6'd22: control <= 4'b0011;
        6'd23: control <= 4'b0011;
        6'd24: control <= 4'b0011;
        6'd25: control <= 4'b0011;
        6'd26: control <= 4'b0011;
        6'd27: control <= 4'b0011;
        6'd28: control <= 4'b0011;
        6'd29: control <= 4'b0011;
        6'd30: control <= 4'b0011;
        6'd31: control <= 4'b0011;
        6'd32: control <= 4'b1100;
        6'd33: control <= 4'b1100;
        6'd34: control <= 4'b1100;
        6'd35: control <= 4'b1100;
        6'd36: control <= 4'b1100;
        6'd37: control <= 4'b1100;
        6'd38: control <= 4'b1100;
        6'd39: control <= 4'b1100;
        6'd40: control <= 4'b1100;
        6'd41: control <= 4'b1100;
        6'd42: control <= 4'b1100;
        6'd43: control <= 4'b1100;
        6'd44: control <= 4'b1100;
        6'd45: control <= 4'b1100;
        6'd46: control <= 4'b1100;
        6'd47: control <= 4'b1100;
        6'd48: control <= 4'b0000;
        6'd49: control <= 4'b0000;
        6'd50: control <= 4'b0000;
        6'd51: control <= 4'b0000;
        6'd52: control <= 4'b0000;
        6'd53: control <= 4'b0000;
        6'd54: control <= 4'b0000;
        6'd55: control <= 4'b0000;
        6'd56: control <= 4'b0000;
        6'd57: control <= 4'b0000;
        6'd58: control <= 4'b0000;
        6'd59: control <= 4'b0000;
        6'd60: control <= 4'b0000;
        6'd61: control <= 4'b0000;
        6'd62: control <= 4'b0000;
        6'd63: control <= 4'b0000;
      endcase
   end

// synthesis attribute rom_style of control is "distributed"
   reg [3:0] control0;
   reg [3:0] control1;
    always @(posedge clk) begin
       control0 <= control;
        control1 <= control0;
    end
    assign t0_0 = x0;
    assign t0_1 = x2;
    assign t0_2 = x1;
    assign t0_3 = x3;
     assign t1_0 = t0_0;
     assign t1_1 = t0_1;
     assign t1_2 = t0_2;
     assign t1_3 = t0_3;
    assign t2_0 = t1_0;
    assign t2_1 = t1_2;
    assign t2_2 = t1_1;
    assign t2_3 = t1_3;
   always @(posedge clk) begin
         t3_0 <= (control0[3] == 0) ? t2_0 : t2_1;
         t3_1 <= (control0[3] == 0) ? t2_1 : t2_0;
         t3_2 <= (control0[2] == 0) ? t2_2 : t2_3;
         t3_3 <= (control0[2] == 0) ? t2_3 : t2_2;
   end
    assign t4_0 = t3_0;
    assign t4_1 = t3_2;
    assign t4_2 = t3_1;
    assign t4_3 = t3_3;
   always @(posedge clk) begin
         t5_0 <= (control1[1] == 0) ? t4_0 : t4_1;
         t5_1 <= (control1[1] == 0) ? t4_1 : t4_0;
         t5_2 <= (control1[0] == 0) ? t4_2 : t4_3;
         t5_3 <= (control1[0] == 0) ? t4_3 : t4_2;
   end
    always @(posedge clk) begin
        y0 <= t5_0;
        y1 <= t5_2;
        y2 <= t5_1;
        y3 <= t5_3;
    end
endmodule

// Latency: 133
// Gap: 64
module perm38287(clk, next, reset, next_out,
   x0, y0,
   x1, y1,
   x2, y2,
   x3, y3);
   parameter width = 40;

   parameter depth = 64;

   parameter addrbits = 6;

   parameter muxbits = 2;

   input [width-1:0]  x0;
   output [width-1:0]  y0;
   wire [width-1:0]  t0;
   wire [width-1:0]  s0;
   input [width-1:0]  x1;
   output [width-1:0]  y1;
   wire [width-1:0]  t1;
   wire [width-1:0]  s1;
   input [width-1:0]  x2;
   output [width-1:0]  y2;
   wire [width-1:0]  t2;
   wire [width-1:0]  s2;
   input [width-1:0]  x3;
   output [width-1:0]  y3;
   wire [width-1:0]  t3;
   wire [width-1:0]  s3;
   input next, reset, clk;
   output next_out;
   reg [addrbits-1:0] s1rdloc, s2rdloc;

    reg [addrbits-1:0] s1wr0;
   reg [addrbits-1:0] s1rd0, s2wr0, s2rd0;
   reg [addrbits-1:0] s1rd1, s2wr1, s2rd1;
   reg [addrbits-1:0] s1rd2, s2wr2, s2rd2;
   reg [addrbits-1:0] s1rd3, s2wr3, s2rd3;
   reg s1wr_en, state1, state2, state3;
   wire 	      next2, next3, next4;
   reg 		      inFlip0, outFlip0_z, outFlip1;
   wire 	      inFlip1, outFlip0;

   wire [0:0] tm19;
   assign tm19 = 0;

shiftRegFIFO #(4, 1) shiftFIFO_43911(.X(outFlip0), .Y(inFlip1), .clk(clk));
shiftRegFIFO #(1, 1) shiftFIFO_43912(.X(outFlip0_z), .Y(outFlip0), .clk(clk));
//   shiftRegFIFO #(2, 1) inFlip1Reg(outFlip0, inFlip1, clk);
//   shiftRegFIFO #(1, 1) outFlip0Reg(outFlip0_z, outFlip0, clk);
   
   memMod_dist #(depth*2, width, addrbits+1) s1mem0(x0, t0, {inFlip0, s1wr0}, {outFlip0, s1rd0}, s1wr_en, clk);
   memMod_dist #(depth*2, width, addrbits+1) s1mem1(x1, t1, {inFlip0, s1wr0}, {outFlip0, s1rd1}, s1wr_en, clk);
   memMod_dist #(depth*2, width, addrbits+1) s1mem2(x2, t2, {inFlip0, s1wr0}, {outFlip0, s1rd2}, s1wr_en, clk);
   memMod_dist #(depth*2, width, addrbits+1) s1mem3(x3, t3, {inFlip0, s1wr0}, {outFlip0, s1rd3}, s1wr_en, clk);

nextReg #(63, 6) nextReg_43923(.X(next), .Y(next2), .reset(reset), .clk(clk));
shiftRegFIFO #(5, 1) shiftFIFO_43924(.X(next2), .Y(next3), .clk(clk));
nextReg #(64, 6) nextReg_43927(.X(next3), .Y(next4), .reset(reset), .clk(clk));
shiftRegFIFO #(1, 1) shiftFIFO_43928(.X(next4), .Y(next_out), .clk(clk));
shiftRegFIFO #(63, 1) shiftFIFO_43931(.X(tm19), .Y(tm19_d), .clk(clk));
shiftRegFIFO #(4, 1) shiftFIFO_43934(.X(tm19_d), .Y(tm19_dd), .clk(clk));
   
   wire [addrbits-1:0] 	      muxCycle, writeCycle;
assign muxCycle = s1rdloc;
shiftRegFIFO #(4, 6) shiftFIFO_43939(.X(muxCycle), .Y(writeCycle), .clk(clk));
        
   wire 		      readInt, s2wr_en;   
   assign 		      readInt = (state2 == 1);

   shiftRegFIFO #(5, 1) writeIntReg(readInt, s2wr_en, clk);

   memMod_dist #(depth*2, width, addrbits+1) s2mem0(s0, y0, {inFlip1, s2wr0}, {outFlip1, s2rdloc}, s2wr_en, clk);
   memMod_dist #(depth*2, width, addrbits+1) s2mem1(s1, y1, {inFlip1, s2wr1}, {outFlip1, s2rdloc}, s2wr_en, clk);
   memMod_dist #(depth*2, width, addrbits+1) s2mem2(s2, y2, {inFlip1, s2wr2}, {outFlip1, s2rdloc}, s2wr_en, clk);
   memMod_dist #(depth*2, width, addrbits+1) s2mem3(s3, y3, {inFlip1, s2wr3}, {outFlip1, s2rdloc}, s2wr_en, clk);
   always @(posedge clk) begin
      if (reset == 1) begin
	 state1 <= 0;
	 inFlip0 <= 0;	 
	 s1wr0 <= 0;
      end
      else if (next == 1) begin
	 s1wr0 <= 0;
	 state1 <= 1;
	 s1wr_en <= 1;
	 inFlip0 <= (s1wr0 == depth-1) ? ~inFlip0 : inFlip0;
      end
      else begin
	 case(state1)
	   0: begin
	      s1wr0 <= 0;
	      state1 <= 0;
	      s1wr_en <= 0;
	      inFlip0 <= inFlip0;	      
	   end
	   1: begin
	      s1wr0 <= (s1wr0 == depth-1) ? 0 : s1wr0 + 1;
	      state1 <= 1;
         s1wr_en <= 1;
	      inFlip0 <= (s1wr0 == depth-1) ? ~inFlip0 : inFlip0;
	   end
	 endcase
      end      
   end
   
   always @(posedge clk) begin
      if (reset == 1) begin
	       state2 <= 0;
	       outFlip0_z <= 0;	 
      end
      else if (next2 == 1) begin
	       s1rdloc <= 0;
	       state2 <= 1;
	       outFlip0_z <= (s1rdloc == depth-1) ? ~outFlip0_z : outFlip0_z;
      end
      else begin
	 case(state2)
	   0: begin
	      s1rdloc <= 0;
	      state2 <= 0;
	      outFlip0_z <= outFlip0_z;	 
	   end
	   1: begin
	      s1rdloc <= (s1rdloc == depth-1) ? 0 : s1rdloc + 1;
         state2 <= 1;
	      outFlip0_z <= (s1rdloc == depth-1) ? ~outFlip0_z : outFlip0_z;
	   end	     
	 endcase
      end
   end
   
   always @(posedge clk) begin
      if (reset == 1) begin
	 state3 <= 0;
	 outFlip1 <= 0;	 
      end
      else if (next4 == 1) begin
	 s2rdloc <= 0;
	 state3 <= 1;
	 outFlip1 <= (s2rdloc == depth-1) ? ~outFlip1 : outFlip1;	      
      end
      else begin
	 case(state3)
	   0: begin
	      s2rdloc <= 0;
	      state3 <= 0;
	      outFlip1 <= outFlip1;
	   end
	   1: begin
	      s2rdloc <= (s2rdloc == depth-1) ? 0 : s2rdloc + 1;
         state3 <= 1;
	      outFlip1 <= (s2rdloc == depth-1) ? ~outFlip1 : outFlip1;
	   end	     
	 endcase
      end
   end
   always @(posedge clk) begin
      case({tm19_d, s1rdloc})
	     {1'd0,  6'd0}: s1rd0 <= 48;
	     {1'd0,  6'd1}: s1rd0 <= 49;
	     {1'd0,  6'd2}: s1rd0 <= 50;
	     {1'd0,  6'd3}: s1rd0 <= 51;
	     {1'd0,  6'd4}: s1rd0 <= 52;
	     {1'd0,  6'd5}: s1rd0 <= 53;
	     {1'd0,  6'd6}: s1rd0 <= 54;
	     {1'd0,  6'd7}: s1rd0 <= 55;
	     {1'd0,  6'd8}: s1rd0 <= 56;
	     {1'd0,  6'd9}: s1rd0 <= 57;
	     {1'd0,  6'd10}: s1rd0 <= 58;
	     {1'd0,  6'd11}: s1rd0 <= 59;
	     {1'd0,  6'd12}: s1rd0 <= 60;
	     {1'd0,  6'd13}: s1rd0 <= 61;
	     {1'd0,  6'd14}: s1rd0 <= 62;
	     {1'd0,  6'd15}: s1rd0 <= 63;
	     {1'd0,  6'd16}: s1rd0 <= 32;
	     {1'd0,  6'd17}: s1rd0 <= 33;
	     {1'd0,  6'd18}: s1rd0 <= 34;
	     {1'd0,  6'd19}: s1rd0 <= 35;
	     {1'd0,  6'd20}: s1rd0 <= 36;
	     {1'd0,  6'd21}: s1rd0 <= 37;
	     {1'd0,  6'd22}: s1rd0 <= 38;
	     {1'd0,  6'd23}: s1rd0 <= 39;
	     {1'd0,  6'd24}: s1rd0 <= 40;
	     {1'd0,  6'd25}: s1rd0 <= 41;
	     {1'd0,  6'd26}: s1rd0 <= 42;
	     {1'd0,  6'd27}: s1rd0 <= 43;
	     {1'd0,  6'd28}: s1rd0 <= 44;
	     {1'd0,  6'd29}: s1rd0 <= 45;
	     {1'd0,  6'd30}: s1rd0 <= 46;
	     {1'd0,  6'd31}: s1rd0 <= 47;
	     {1'd0,  6'd32}: s1rd0 <= 16;
	     {1'd0,  6'd33}: s1rd0 <= 17;
	     {1'd0,  6'd34}: s1rd0 <= 18;
	     {1'd0,  6'd35}: s1rd0 <= 19;
	     {1'd0,  6'd36}: s1rd0 <= 20;
	     {1'd0,  6'd37}: s1rd0 <= 21;
	     {1'd0,  6'd38}: s1rd0 <= 22;
	     {1'd0,  6'd39}: s1rd0 <= 23;
	     {1'd0,  6'd40}: s1rd0 <= 24;
	     {1'd0,  6'd41}: s1rd0 <= 25;
	     {1'd0,  6'd42}: s1rd0 <= 26;
	     {1'd0,  6'd43}: s1rd0 <= 27;
	     {1'd0,  6'd44}: s1rd0 <= 28;
	     {1'd0,  6'd45}: s1rd0 <= 29;
	     {1'd0,  6'd46}: s1rd0 <= 30;
	     {1'd0,  6'd47}: s1rd0 <= 31;
	     {1'd0,  6'd48}: s1rd0 <= 0;
	     {1'd0,  6'd49}: s1rd0 <= 1;
	     {1'd0,  6'd50}: s1rd0 <= 2;
	     {1'd0,  6'd51}: s1rd0 <= 3;
	     {1'd0,  6'd52}: s1rd0 <= 4;
	     {1'd0,  6'd53}: s1rd0 <= 5;
	     {1'd0,  6'd54}: s1rd0 <= 6;
	     {1'd0,  6'd55}: s1rd0 <= 7;
	     {1'd0,  6'd56}: s1rd0 <= 8;
	     {1'd0,  6'd57}: s1rd0 <= 9;
	     {1'd0,  6'd58}: s1rd0 <= 10;
	     {1'd0,  6'd59}: s1rd0 <= 11;
	     {1'd0,  6'd60}: s1rd0 <= 12;
	     {1'd0,  6'd61}: s1rd0 <= 13;
	     {1'd0,  6'd62}: s1rd0 <= 14;
	     {1'd0,  6'd63}: s1rd0 <= 15;
      endcase      
   end

// synthesis attribute rom_style of s1rd0 is "distributed"
   always @(posedge clk) begin
      case({tm19_d, s1rdloc})
	     {1'd0,  6'd0}: s1rd1 <= 32;
	     {1'd0,  6'd1}: s1rd1 <= 33;
	     {1'd0,  6'd2}: s1rd1 <= 34;
	     {1'd0,  6'd3}: s1rd1 <= 35;
	     {1'd0,  6'd4}: s1rd1 <= 36;
	     {1'd0,  6'd5}: s1rd1 <= 37;
	     {1'd0,  6'd6}: s1rd1 <= 38;
	     {1'd0,  6'd7}: s1rd1 <= 39;
	     {1'd0,  6'd8}: s1rd1 <= 40;
	     {1'd0,  6'd9}: s1rd1 <= 41;
	     {1'd0,  6'd10}: s1rd1 <= 42;
	     {1'd0,  6'd11}: s1rd1 <= 43;
	     {1'd0,  6'd12}: s1rd1 <= 44;
	     {1'd0,  6'd13}: s1rd1 <= 45;
	     {1'd0,  6'd14}: s1rd1 <= 46;
	     {1'd0,  6'd15}: s1rd1 <= 47;
	     {1'd0,  6'd16}: s1rd1 <= 48;
	     {1'd0,  6'd17}: s1rd1 <= 49;
	     {1'd0,  6'd18}: s1rd1 <= 50;
	     {1'd0,  6'd19}: s1rd1 <= 51;
	     {1'd0,  6'd20}: s1rd1 <= 52;
	     {1'd0,  6'd21}: s1rd1 <= 53;
	     {1'd0,  6'd22}: s1rd1 <= 54;
	     {1'd0,  6'd23}: s1rd1 <= 55;
	     {1'd0,  6'd24}: s1rd1 <= 56;
	     {1'd0,  6'd25}: s1rd1 <= 57;
	     {1'd0,  6'd26}: s1rd1 <= 58;
	     {1'd0,  6'd27}: s1rd1 <= 59;
	     {1'd0,  6'd28}: s1rd1 <= 60;
	     {1'd0,  6'd29}: s1rd1 <= 61;
	     {1'd0,  6'd30}: s1rd1 <= 62;
	     {1'd0,  6'd31}: s1rd1 <= 63;
	     {1'd0,  6'd32}: s1rd1 <= 0;
	     {1'd0,  6'd33}: s1rd1 <= 1;
	     {1'd0,  6'd34}: s1rd1 <= 2;
	     {1'd0,  6'd35}: s1rd1 <= 3;
	     {1'd0,  6'd36}: s1rd1 <= 4;
	     {1'd0,  6'd37}: s1rd1 <= 5;
	     {1'd0,  6'd38}: s1rd1 <= 6;
	     {1'd0,  6'd39}: s1rd1 <= 7;
	     {1'd0,  6'd40}: s1rd1 <= 8;
	     {1'd0,  6'd41}: s1rd1 <= 9;
	     {1'd0,  6'd42}: s1rd1 <= 10;
	     {1'd0,  6'd43}: s1rd1 <= 11;
	     {1'd0,  6'd44}: s1rd1 <= 12;
	     {1'd0,  6'd45}: s1rd1 <= 13;
	     {1'd0,  6'd46}: s1rd1 <= 14;
	     {1'd0,  6'd47}: s1rd1 <= 15;
	     {1'd0,  6'd48}: s1rd1 <= 16;
	     {1'd0,  6'd49}: s1rd1 <= 17;
	     {1'd0,  6'd50}: s1rd1 <= 18;
	     {1'd0,  6'd51}: s1rd1 <= 19;
	     {1'd0,  6'd52}: s1rd1 <= 20;
	     {1'd0,  6'd53}: s1rd1 <= 21;
	     {1'd0,  6'd54}: s1rd1 <= 22;
	     {1'd0,  6'd55}: s1rd1 <= 23;
	     {1'd0,  6'd56}: s1rd1 <= 24;
	     {1'd0,  6'd57}: s1rd1 <= 25;
	     {1'd0,  6'd58}: s1rd1 <= 26;
	     {1'd0,  6'd59}: s1rd1 <= 27;
	     {1'd0,  6'd60}: s1rd1 <= 28;
	     {1'd0,  6'd61}: s1rd1 <= 29;
	     {1'd0,  6'd62}: s1rd1 <= 30;
	     {1'd0,  6'd63}: s1rd1 <= 31;
      endcase      
   end

// synthesis attribute rom_style of s1rd1 is "distributed"
   always @(posedge clk) begin
      case({tm19_d, s1rdloc})
	     {1'd0,  6'd0}: s1rd2 <= 16;
	     {1'd0,  6'd1}: s1rd2 <= 17;
	     {1'd0,  6'd2}: s1rd2 <= 18;
	     {1'd0,  6'd3}: s1rd2 <= 19;
	     {1'd0,  6'd4}: s1rd2 <= 20;
	     {1'd0,  6'd5}: s1rd2 <= 21;
	     {1'd0,  6'd6}: s1rd2 <= 22;
	     {1'd0,  6'd7}: s1rd2 <= 23;
	     {1'd0,  6'd8}: s1rd2 <= 24;
	     {1'd0,  6'd9}: s1rd2 <= 25;
	     {1'd0,  6'd10}: s1rd2 <= 26;
	     {1'd0,  6'd11}: s1rd2 <= 27;
	     {1'd0,  6'd12}: s1rd2 <= 28;
	     {1'd0,  6'd13}: s1rd2 <= 29;
	     {1'd0,  6'd14}: s1rd2 <= 30;
	     {1'd0,  6'd15}: s1rd2 <= 31;
	     {1'd0,  6'd16}: s1rd2 <= 0;
	     {1'd0,  6'd17}: s1rd2 <= 1;
	     {1'd0,  6'd18}: s1rd2 <= 2;
	     {1'd0,  6'd19}: s1rd2 <= 3;
	     {1'd0,  6'd20}: s1rd2 <= 4;
	     {1'd0,  6'd21}: s1rd2 <= 5;
	     {1'd0,  6'd22}: s1rd2 <= 6;
	     {1'd0,  6'd23}: s1rd2 <= 7;
	     {1'd0,  6'd24}: s1rd2 <= 8;
	     {1'd0,  6'd25}: s1rd2 <= 9;
	     {1'd0,  6'd26}: s1rd2 <= 10;
	     {1'd0,  6'd27}: s1rd2 <= 11;
	     {1'd0,  6'd28}: s1rd2 <= 12;
	     {1'd0,  6'd29}: s1rd2 <= 13;
	     {1'd0,  6'd30}: s1rd2 <= 14;
	     {1'd0,  6'd31}: s1rd2 <= 15;
	     {1'd0,  6'd32}: s1rd2 <= 48;
	     {1'd0,  6'd33}: s1rd2 <= 49;
	     {1'd0,  6'd34}: s1rd2 <= 50;
	     {1'd0,  6'd35}: s1rd2 <= 51;
	     {1'd0,  6'd36}: s1rd2 <= 52;
	     {1'd0,  6'd37}: s1rd2 <= 53;
	     {1'd0,  6'd38}: s1rd2 <= 54;
	     {1'd0,  6'd39}: s1rd2 <= 55;
	     {1'd0,  6'd40}: s1rd2 <= 56;
	     {1'd0,  6'd41}: s1rd2 <= 57;
	     {1'd0,  6'd42}: s1rd2 <= 58;
	     {1'd0,  6'd43}: s1rd2 <= 59;
	     {1'd0,  6'd44}: s1rd2 <= 60;
	     {1'd0,  6'd45}: s1rd2 <= 61;
	     {1'd0,  6'd46}: s1rd2 <= 62;
	     {1'd0,  6'd47}: s1rd2 <= 63;
	     {1'd0,  6'd48}: s1rd2 <= 32;
	     {1'd0,  6'd49}: s1rd2 <= 33;
	     {1'd0,  6'd50}: s1rd2 <= 34;
	     {1'd0,  6'd51}: s1rd2 <= 35;
	     {1'd0,  6'd52}: s1rd2 <= 36;
	     {1'd0,  6'd53}: s1rd2 <= 37;
	     {1'd0,  6'd54}: s1rd2 <= 38;
	     {1'd0,  6'd55}: s1rd2 <= 39;
	     {1'd0,  6'd56}: s1rd2 <= 40;
	     {1'd0,  6'd57}: s1rd2 <= 41;
	     {1'd0,  6'd58}: s1rd2 <= 42;
	     {1'd0,  6'd59}: s1rd2 <= 43;
	     {1'd0,  6'd60}: s1rd2 <= 44;
	     {1'd0,  6'd61}: s1rd2 <= 45;
	     {1'd0,  6'd62}: s1rd2 <= 46;
	     {1'd0,  6'd63}: s1rd2 <= 47;
      endcase      
   end

// synthesis attribute rom_style of s1rd2 is "distributed"
   always @(posedge clk) begin
      case({tm19_d, s1rdloc})
	     {1'd0,  6'd0}: s1rd3 <= 0;
	     {1'd0,  6'd1}: s1rd3 <= 1;
	     {1'd0,  6'd2}: s1rd3 <= 2;
	     {1'd0,  6'd3}: s1rd3 <= 3;
	     {1'd0,  6'd4}: s1rd3 <= 4;
	     {1'd0,  6'd5}: s1rd3 <= 5;
	     {1'd0,  6'd6}: s1rd3 <= 6;
	     {1'd0,  6'd7}: s1rd3 <= 7;
	     {1'd0,  6'd8}: s1rd3 <= 8;
	     {1'd0,  6'd9}: s1rd3 <= 9;
	     {1'd0,  6'd10}: s1rd3 <= 10;
	     {1'd0,  6'd11}: s1rd3 <= 11;
	     {1'd0,  6'd12}: s1rd3 <= 12;
	     {1'd0,  6'd13}: s1rd3 <= 13;
	     {1'd0,  6'd14}: s1rd3 <= 14;
	     {1'd0,  6'd15}: s1rd3 <= 15;
	     {1'd0,  6'd16}: s1rd3 <= 16;
	     {1'd0,  6'd17}: s1rd3 <= 17;
	     {1'd0,  6'd18}: s1rd3 <= 18;
	     {1'd0,  6'd19}: s1rd3 <= 19;
	     {1'd0,  6'd20}: s1rd3 <= 20;
	     {1'd0,  6'd21}: s1rd3 <= 21;
	     {1'd0,  6'd22}: s1rd3 <= 22;
	     {1'd0,  6'd23}: s1rd3 <= 23;
	     {1'd0,  6'd24}: s1rd3 <= 24;
	     {1'd0,  6'd25}: s1rd3 <= 25;
	     {1'd0,  6'd26}: s1rd3 <= 26;
	     {1'd0,  6'd27}: s1rd3 <= 27;
	     {1'd0,  6'd28}: s1rd3 <= 28;
	     {1'd0,  6'd29}: s1rd3 <= 29;
	     {1'd0,  6'd30}: s1rd3 <= 30;
	     {1'd0,  6'd31}: s1rd3 <= 31;
	     {1'd0,  6'd32}: s1rd3 <= 32;
	     {1'd0,  6'd33}: s1rd3 <= 33;
	     {1'd0,  6'd34}: s1rd3 <= 34;
	     {1'd0,  6'd35}: s1rd3 <= 35;
	     {1'd0,  6'd36}: s1rd3 <= 36;
	     {1'd0,  6'd37}: s1rd3 <= 37;
	     {1'd0,  6'd38}: s1rd3 <= 38;
	     {1'd0,  6'd39}: s1rd3 <= 39;
	     {1'd0,  6'd40}: s1rd3 <= 40;
	     {1'd0,  6'd41}: s1rd3 <= 41;
	     {1'd0,  6'd42}: s1rd3 <= 42;
	     {1'd0,  6'd43}: s1rd3 <= 43;
	     {1'd0,  6'd44}: s1rd3 <= 44;
	     {1'd0,  6'd45}: s1rd3 <= 45;
	     {1'd0,  6'd46}: s1rd3 <= 46;
	     {1'd0,  6'd47}: s1rd3 <= 47;
	     {1'd0,  6'd48}: s1rd3 <= 48;
	     {1'd0,  6'd49}: s1rd3 <= 49;
	     {1'd0,  6'd50}: s1rd3 <= 50;
	     {1'd0,  6'd51}: s1rd3 <= 51;
	     {1'd0,  6'd52}: s1rd3 <= 52;
	     {1'd0,  6'd53}: s1rd3 <= 53;
	     {1'd0,  6'd54}: s1rd3 <= 54;
	     {1'd0,  6'd55}: s1rd3 <= 55;
	     {1'd0,  6'd56}: s1rd3 <= 56;
	     {1'd0,  6'd57}: s1rd3 <= 57;
	     {1'd0,  6'd58}: s1rd3 <= 58;
	     {1'd0,  6'd59}: s1rd3 <= 59;
	     {1'd0,  6'd60}: s1rd3 <= 60;
	     {1'd0,  6'd61}: s1rd3 <= 61;
	     {1'd0,  6'd62}: s1rd3 <= 62;
	     {1'd0,  6'd63}: s1rd3 <= 63;
      endcase      
   end

// synthesis attribute rom_style of s1rd3 is "distributed"
    swNet38287 sw(tm19_d, clk, muxCycle, t0, s0, t1, s1, t2, s2, t3, s3);

   always @(posedge clk) begin
      case({tm19_dd, writeCycle})
	      {1'd0, 6'd0}: s2wr0 <= 48;
	      {1'd0, 6'd1}: s2wr0 <= 49;
	      {1'd0, 6'd2}: s2wr0 <= 50;
	      {1'd0, 6'd3}: s2wr0 <= 51;
	      {1'd0, 6'd4}: s2wr0 <= 52;
	      {1'd0, 6'd5}: s2wr0 <= 53;
	      {1'd0, 6'd6}: s2wr0 <= 54;
	      {1'd0, 6'd7}: s2wr0 <= 55;
	      {1'd0, 6'd8}: s2wr0 <= 56;
	      {1'd0, 6'd9}: s2wr0 <= 57;
	      {1'd0, 6'd10}: s2wr0 <= 58;
	      {1'd0, 6'd11}: s2wr0 <= 59;
	      {1'd0, 6'd12}: s2wr0 <= 60;
	      {1'd0, 6'd13}: s2wr0 <= 61;
	      {1'd0, 6'd14}: s2wr0 <= 62;
	      {1'd0, 6'd15}: s2wr0 <= 63;
	      {1'd0, 6'd16}: s2wr0 <= 32;
	      {1'd0, 6'd17}: s2wr0 <= 33;
	      {1'd0, 6'd18}: s2wr0 <= 34;
	      {1'd0, 6'd19}: s2wr0 <= 35;
	      {1'd0, 6'd20}: s2wr0 <= 36;
	      {1'd0, 6'd21}: s2wr0 <= 37;
	      {1'd0, 6'd22}: s2wr0 <= 38;
	      {1'd0, 6'd23}: s2wr0 <= 39;
	      {1'd0, 6'd24}: s2wr0 <= 40;
	      {1'd0, 6'd25}: s2wr0 <= 41;
	      {1'd0, 6'd26}: s2wr0 <= 42;
	      {1'd0, 6'd27}: s2wr0 <= 43;
	      {1'd0, 6'd28}: s2wr0 <= 44;
	      {1'd0, 6'd29}: s2wr0 <= 45;
	      {1'd0, 6'd30}: s2wr0 <= 46;
	      {1'd0, 6'd31}: s2wr0 <= 47;
	      {1'd0, 6'd32}: s2wr0 <= 16;
	      {1'd0, 6'd33}: s2wr0 <= 17;
	      {1'd0, 6'd34}: s2wr0 <= 18;
	      {1'd0, 6'd35}: s2wr0 <= 19;
	      {1'd0, 6'd36}: s2wr0 <= 20;
	      {1'd0, 6'd37}: s2wr0 <= 21;
	      {1'd0, 6'd38}: s2wr0 <= 22;
	      {1'd0, 6'd39}: s2wr0 <= 23;
	      {1'd0, 6'd40}: s2wr0 <= 24;
	      {1'd0, 6'd41}: s2wr0 <= 25;
	      {1'd0, 6'd42}: s2wr0 <= 26;
	      {1'd0, 6'd43}: s2wr0 <= 27;
	      {1'd0, 6'd44}: s2wr0 <= 28;
	      {1'd0, 6'd45}: s2wr0 <= 29;
	      {1'd0, 6'd46}: s2wr0 <= 30;
	      {1'd0, 6'd47}: s2wr0 <= 31;
	      {1'd0, 6'd48}: s2wr0 <= 0;
	      {1'd0, 6'd49}: s2wr0 <= 1;
	      {1'd0, 6'd50}: s2wr0 <= 2;
	      {1'd0, 6'd51}: s2wr0 <= 3;
	      {1'd0, 6'd52}: s2wr0 <= 4;
	      {1'd0, 6'd53}: s2wr0 <= 5;
	      {1'd0, 6'd54}: s2wr0 <= 6;
	      {1'd0, 6'd55}: s2wr0 <= 7;
	      {1'd0, 6'd56}: s2wr0 <= 8;
	      {1'd0, 6'd57}: s2wr0 <= 9;
	      {1'd0, 6'd58}: s2wr0 <= 10;
	      {1'd0, 6'd59}: s2wr0 <= 11;
	      {1'd0, 6'd60}: s2wr0 <= 12;
	      {1'd0, 6'd61}: s2wr0 <= 13;
	      {1'd0, 6'd62}: s2wr0 <= 14;
	      {1'd0, 6'd63}: s2wr0 <= 15;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr0 is "distributed"
   always @(posedge clk) begin
      case({tm19_dd, writeCycle})
	      {1'd0, 6'd0}: s2wr1 <= 32;
	      {1'd0, 6'd1}: s2wr1 <= 33;
	      {1'd0, 6'd2}: s2wr1 <= 34;
	      {1'd0, 6'd3}: s2wr1 <= 35;
	      {1'd0, 6'd4}: s2wr1 <= 36;
	      {1'd0, 6'd5}: s2wr1 <= 37;
	      {1'd0, 6'd6}: s2wr1 <= 38;
	      {1'd0, 6'd7}: s2wr1 <= 39;
	      {1'd0, 6'd8}: s2wr1 <= 40;
	      {1'd0, 6'd9}: s2wr1 <= 41;
	      {1'd0, 6'd10}: s2wr1 <= 42;
	      {1'd0, 6'd11}: s2wr1 <= 43;
	      {1'd0, 6'd12}: s2wr1 <= 44;
	      {1'd0, 6'd13}: s2wr1 <= 45;
	      {1'd0, 6'd14}: s2wr1 <= 46;
	      {1'd0, 6'd15}: s2wr1 <= 47;
	      {1'd0, 6'd16}: s2wr1 <= 48;
	      {1'd0, 6'd17}: s2wr1 <= 49;
	      {1'd0, 6'd18}: s2wr1 <= 50;
	      {1'd0, 6'd19}: s2wr1 <= 51;
	      {1'd0, 6'd20}: s2wr1 <= 52;
	      {1'd0, 6'd21}: s2wr1 <= 53;
	      {1'd0, 6'd22}: s2wr1 <= 54;
	      {1'd0, 6'd23}: s2wr1 <= 55;
	      {1'd0, 6'd24}: s2wr1 <= 56;
	      {1'd0, 6'd25}: s2wr1 <= 57;
	      {1'd0, 6'd26}: s2wr1 <= 58;
	      {1'd0, 6'd27}: s2wr1 <= 59;
	      {1'd0, 6'd28}: s2wr1 <= 60;
	      {1'd0, 6'd29}: s2wr1 <= 61;
	      {1'd0, 6'd30}: s2wr1 <= 62;
	      {1'd0, 6'd31}: s2wr1 <= 63;
	      {1'd0, 6'd32}: s2wr1 <= 0;
	      {1'd0, 6'd33}: s2wr1 <= 1;
	      {1'd0, 6'd34}: s2wr1 <= 2;
	      {1'd0, 6'd35}: s2wr1 <= 3;
	      {1'd0, 6'd36}: s2wr1 <= 4;
	      {1'd0, 6'd37}: s2wr1 <= 5;
	      {1'd0, 6'd38}: s2wr1 <= 6;
	      {1'd0, 6'd39}: s2wr1 <= 7;
	      {1'd0, 6'd40}: s2wr1 <= 8;
	      {1'd0, 6'd41}: s2wr1 <= 9;
	      {1'd0, 6'd42}: s2wr1 <= 10;
	      {1'd0, 6'd43}: s2wr1 <= 11;
	      {1'd0, 6'd44}: s2wr1 <= 12;
	      {1'd0, 6'd45}: s2wr1 <= 13;
	      {1'd0, 6'd46}: s2wr1 <= 14;
	      {1'd0, 6'd47}: s2wr1 <= 15;
	      {1'd0, 6'd48}: s2wr1 <= 16;
	      {1'd0, 6'd49}: s2wr1 <= 17;
	      {1'd0, 6'd50}: s2wr1 <= 18;
	      {1'd0, 6'd51}: s2wr1 <= 19;
	      {1'd0, 6'd52}: s2wr1 <= 20;
	      {1'd0, 6'd53}: s2wr1 <= 21;
	      {1'd0, 6'd54}: s2wr1 <= 22;
	      {1'd0, 6'd55}: s2wr1 <= 23;
	      {1'd0, 6'd56}: s2wr1 <= 24;
	      {1'd0, 6'd57}: s2wr1 <= 25;
	      {1'd0, 6'd58}: s2wr1 <= 26;
	      {1'd0, 6'd59}: s2wr1 <= 27;
	      {1'd0, 6'd60}: s2wr1 <= 28;
	      {1'd0, 6'd61}: s2wr1 <= 29;
	      {1'd0, 6'd62}: s2wr1 <= 30;
	      {1'd0, 6'd63}: s2wr1 <= 31;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr1 is "distributed"
   always @(posedge clk) begin
      case({tm19_dd, writeCycle})
	      {1'd0, 6'd0}: s2wr2 <= 16;
	      {1'd0, 6'd1}: s2wr2 <= 17;
	      {1'd0, 6'd2}: s2wr2 <= 18;
	      {1'd0, 6'd3}: s2wr2 <= 19;
	      {1'd0, 6'd4}: s2wr2 <= 20;
	      {1'd0, 6'd5}: s2wr2 <= 21;
	      {1'd0, 6'd6}: s2wr2 <= 22;
	      {1'd0, 6'd7}: s2wr2 <= 23;
	      {1'd0, 6'd8}: s2wr2 <= 24;
	      {1'd0, 6'd9}: s2wr2 <= 25;
	      {1'd0, 6'd10}: s2wr2 <= 26;
	      {1'd0, 6'd11}: s2wr2 <= 27;
	      {1'd0, 6'd12}: s2wr2 <= 28;
	      {1'd0, 6'd13}: s2wr2 <= 29;
	      {1'd0, 6'd14}: s2wr2 <= 30;
	      {1'd0, 6'd15}: s2wr2 <= 31;
	      {1'd0, 6'd16}: s2wr2 <= 0;
	      {1'd0, 6'd17}: s2wr2 <= 1;
	      {1'd0, 6'd18}: s2wr2 <= 2;
	      {1'd0, 6'd19}: s2wr2 <= 3;
	      {1'd0, 6'd20}: s2wr2 <= 4;
	      {1'd0, 6'd21}: s2wr2 <= 5;
	      {1'd0, 6'd22}: s2wr2 <= 6;
	      {1'd0, 6'd23}: s2wr2 <= 7;
	      {1'd0, 6'd24}: s2wr2 <= 8;
	      {1'd0, 6'd25}: s2wr2 <= 9;
	      {1'd0, 6'd26}: s2wr2 <= 10;
	      {1'd0, 6'd27}: s2wr2 <= 11;
	      {1'd0, 6'd28}: s2wr2 <= 12;
	      {1'd0, 6'd29}: s2wr2 <= 13;
	      {1'd0, 6'd30}: s2wr2 <= 14;
	      {1'd0, 6'd31}: s2wr2 <= 15;
	      {1'd0, 6'd32}: s2wr2 <= 48;
	      {1'd0, 6'd33}: s2wr2 <= 49;
	      {1'd0, 6'd34}: s2wr2 <= 50;
	      {1'd0, 6'd35}: s2wr2 <= 51;
	      {1'd0, 6'd36}: s2wr2 <= 52;
	      {1'd0, 6'd37}: s2wr2 <= 53;
	      {1'd0, 6'd38}: s2wr2 <= 54;
	      {1'd0, 6'd39}: s2wr2 <= 55;
	      {1'd0, 6'd40}: s2wr2 <= 56;
	      {1'd0, 6'd41}: s2wr2 <= 57;
	      {1'd0, 6'd42}: s2wr2 <= 58;
	      {1'd0, 6'd43}: s2wr2 <= 59;
	      {1'd0, 6'd44}: s2wr2 <= 60;
	      {1'd0, 6'd45}: s2wr2 <= 61;
	      {1'd0, 6'd46}: s2wr2 <= 62;
	      {1'd0, 6'd47}: s2wr2 <= 63;
	      {1'd0, 6'd48}: s2wr2 <= 32;
	      {1'd0, 6'd49}: s2wr2 <= 33;
	      {1'd0, 6'd50}: s2wr2 <= 34;
	      {1'd0, 6'd51}: s2wr2 <= 35;
	      {1'd0, 6'd52}: s2wr2 <= 36;
	      {1'd0, 6'd53}: s2wr2 <= 37;
	      {1'd0, 6'd54}: s2wr2 <= 38;
	      {1'd0, 6'd55}: s2wr2 <= 39;
	      {1'd0, 6'd56}: s2wr2 <= 40;
	      {1'd0, 6'd57}: s2wr2 <= 41;
	      {1'd0, 6'd58}: s2wr2 <= 42;
	      {1'd0, 6'd59}: s2wr2 <= 43;
	      {1'd0, 6'd60}: s2wr2 <= 44;
	      {1'd0, 6'd61}: s2wr2 <= 45;
	      {1'd0, 6'd62}: s2wr2 <= 46;
	      {1'd0, 6'd63}: s2wr2 <= 47;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr2 is "distributed"
   always @(posedge clk) begin
      case({tm19_dd, writeCycle})
	      {1'd0, 6'd0}: s2wr3 <= 0;
	      {1'd0, 6'd1}: s2wr3 <= 1;
	      {1'd0, 6'd2}: s2wr3 <= 2;
	      {1'd0, 6'd3}: s2wr3 <= 3;
	      {1'd0, 6'd4}: s2wr3 <= 4;
	      {1'd0, 6'd5}: s2wr3 <= 5;
	      {1'd0, 6'd6}: s2wr3 <= 6;
	      {1'd0, 6'd7}: s2wr3 <= 7;
	      {1'd0, 6'd8}: s2wr3 <= 8;
	      {1'd0, 6'd9}: s2wr3 <= 9;
	      {1'd0, 6'd10}: s2wr3 <= 10;
	      {1'd0, 6'd11}: s2wr3 <= 11;
	      {1'd0, 6'd12}: s2wr3 <= 12;
	      {1'd0, 6'd13}: s2wr3 <= 13;
	      {1'd0, 6'd14}: s2wr3 <= 14;
	      {1'd0, 6'd15}: s2wr3 <= 15;
	      {1'd0, 6'd16}: s2wr3 <= 16;
	      {1'd0, 6'd17}: s2wr3 <= 17;
	      {1'd0, 6'd18}: s2wr3 <= 18;
	      {1'd0, 6'd19}: s2wr3 <= 19;
	      {1'd0, 6'd20}: s2wr3 <= 20;
	      {1'd0, 6'd21}: s2wr3 <= 21;
	      {1'd0, 6'd22}: s2wr3 <= 22;
	      {1'd0, 6'd23}: s2wr3 <= 23;
	      {1'd0, 6'd24}: s2wr3 <= 24;
	      {1'd0, 6'd25}: s2wr3 <= 25;
	      {1'd0, 6'd26}: s2wr3 <= 26;
	      {1'd0, 6'd27}: s2wr3 <= 27;
	      {1'd0, 6'd28}: s2wr3 <= 28;
	      {1'd0, 6'd29}: s2wr3 <= 29;
	      {1'd0, 6'd30}: s2wr3 <= 30;
	      {1'd0, 6'd31}: s2wr3 <= 31;
	      {1'd0, 6'd32}: s2wr3 <= 32;
	      {1'd0, 6'd33}: s2wr3 <= 33;
	      {1'd0, 6'd34}: s2wr3 <= 34;
	      {1'd0, 6'd35}: s2wr3 <= 35;
	      {1'd0, 6'd36}: s2wr3 <= 36;
	      {1'd0, 6'd37}: s2wr3 <= 37;
	      {1'd0, 6'd38}: s2wr3 <= 38;
	      {1'd0, 6'd39}: s2wr3 <= 39;
	      {1'd0, 6'd40}: s2wr3 <= 40;
	      {1'd0, 6'd41}: s2wr3 <= 41;
	      {1'd0, 6'd42}: s2wr3 <= 42;
	      {1'd0, 6'd43}: s2wr3 <= 43;
	      {1'd0, 6'd44}: s2wr3 <= 44;
	      {1'd0, 6'd45}: s2wr3 <= 45;
	      {1'd0, 6'd46}: s2wr3 <= 46;
	      {1'd0, 6'd47}: s2wr3 <= 47;
	      {1'd0, 6'd48}: s2wr3 <= 48;
	      {1'd0, 6'd49}: s2wr3 <= 49;
	      {1'd0, 6'd50}: s2wr3 <= 50;
	      {1'd0, 6'd51}: s2wr3 <= 51;
	      {1'd0, 6'd52}: s2wr3 <= 52;
	      {1'd0, 6'd53}: s2wr3 <= 53;
	      {1'd0, 6'd54}: s2wr3 <= 54;
	      {1'd0, 6'd55}: s2wr3 <= 55;
	      {1'd0, 6'd56}: s2wr3 <= 56;
	      {1'd0, 6'd57}: s2wr3 <= 57;
	      {1'd0, 6'd58}: s2wr3 <= 58;
	      {1'd0, 6'd59}: s2wr3 <= 59;
	      {1'd0, 6'd60}: s2wr3 <= 60;
	      {1'd0, 6'd61}: s2wr3 <= 61;
	      {1'd0, 6'd62}: s2wr3 <= 62;
	      {1'd0, 6'd63}: s2wr3 <= 63;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr3 is "distributed"
endmodule


// Latency: 12
// Gap: 64
module DirSum_39142(clk, reset, next, next_out,
      X0, Y0,
      X1, Y1,
      X2, Y2,
      X3, Y3,
      X4, Y4,
      X5, Y5,
      X6, Y6,
      X7, Y7);

   output next_out;
   input clk, reset, next;

   reg [5:0] i2;

   input [19:0] X0,
      X1,
      X2,
      X3,
      X4,
      X5,
      X6,
      X7;

   output [19:0] Y0,
      Y1,
      Y2,
      Y3,
      Y4,
      Y5,
      Y6,
      Y7;

   always @(posedge clk) begin
      if (reset == 1) begin
         i2 <= 0;
      end
      else begin
         if (next == 1)
            i2 <= 0;
         else if (i2 == 63)
            i2 <= 0;
         else
            i2 <= i2 + 1;
      end
   end

   codeBlock38292 codeBlockIsnt43944(.clk(clk), .reset(reset), .next_in(next), .next_out(next_out),
.i2_in(i2),
       .X0_in(X0), .Y0(Y0),
       .X1_in(X1), .Y1(Y1),
       .X2_in(X2), .Y2(Y2),
       .X3_in(X3), .Y3(Y3),
       .X4_in(X4), .Y4(Y4),
       .X5_in(X5), .Y5(Y5),
       .X6_in(X6), .Y6(Y6),
       .X7_in(X7), .Y7(Y7));

endmodule

module D20_38678(addr, out, clk);
   input clk;
   output [19:0] out;
   reg [19:0] out, out2, out3;
   input [5:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 20'h0;
      1: out3 <= 20'hfb4ab;
      2: out3 <= 20'hf69bf;
      3: out3 <= 20'hf1fa4;
      4: out3 <= 20'hed6c0;
      5: out3 <= 20'he8f78;
      6: out3 <= 20'he4a2f;
      7: out3 <= 20'he0746;
      8: out3 <= 20'hdc719;
      9: out3 <= 20'hd8a01;
      10: out3 <= 20'hd5053;
      11: out3 <= 20'hd1a5f;
      12: out3 <= 20'hce870;
      13: out3 <= 20'hcbacb;
      14: out3 <= 20'hc91b0;
      15: out3 <= 20'hc6d57;
      16: out3 <= 20'hc4df3;
      17: out3 <= 20'hc33af;
      18: out3 <= 20'hc1eb0;
      19: out3 <= 20'hc0f13;
      20: out3 <= 20'hc04ee;
      21: out3 <= 20'hc004f;
      22: out3 <= 20'hc013c;
      23: out3 <= 20'hc07b3;
      24: out3 <= 20'hc13ad;
      25: out3 <= 20'hc2518;
      26: out3 <= 20'hc3bdc;
      27: out3 <= 20'hc57d9;
      28: out3 <= 20'hc78ea;
      29: out3 <= 20'hc9edf;
      30: out3 <= 20'hcc984;
      31: out3 <= 20'hcf89e;
      32: out3 <= 20'hd2bec;
      33: out3 <= 20'hd6327;
      34: out3 <= 20'hd9e01;
      35: out3 <= 20'hddc2a;
      36: out3 <= 20'he1d4a;
      37: out3 <= 20'he6108;
      38: out3 <= 20'hea706;
      39: out3 <= 20'heeee3;
      40: out3 <= 20'hf383a;
      41: out3 <= 20'hf82a7;
      42: out3 <= 20'hfcdc1;
      43: out3 <= 20'h1921;
      44: out3 <= 20'h645f;
      45: out3 <= 20'haf11;
      46: out3 <= 20'hf8d0;
      47: out3 <= 20'h14136;
      48: out3 <= 20'h187de;
      49: out3 <= 20'h1cc67;
      50: out3 <= 20'h20e71;
      51: out3 <= 20'h24da1;
      52: out3 <= 20'h2899e;
      53: out3 <= 20'h2c217;
      54: out3 <= 20'h2f6bc;
      55: out3 <= 20'h32744;
      56: out3 <= 20'h3536d;
      57: out3 <= 20'h37af8;
      58: out3 <= 20'h39daf;
      59: out3 <= 20'h3bb62;
      60: out3 <= 20'h3d3e8;
      61: out3 <= 20'h3e71e;
      62: out3 <= 20'h3f4eb;
      63: out3 <= 20'h3fd3a;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



module D19_38810(addr, out, clk);
   input clk;
   output [19:0] out;
   reg [19:0] out, out2, out3;
   input [5:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 20'h0;
      1: out3 <= 20'hfcdc1;
      2: out3 <= 20'hf9ba1;
      3: out3 <= 20'hf69bf;
      4: out3 <= 20'hf383a;
      5: out3 <= 20'hf0730;
      6: out3 <= 20'hed6c0;
      7: out3 <= 20'hea706;
      8: out3 <= 20'he7822;
      9: out3 <= 20'he4a2f;
      10: out3 <= 20'he1d4a;
      11: out3 <= 20'hdf18f;
      12: out3 <= 20'hdc719;
      13: out3 <= 20'hd9e01;
      14: out3 <= 20'hd7662;
      15: out3 <= 20'hd5053;
      16: out3 <= 20'hd2bec;
      17: out3 <= 20'hd0944;
      18: out3 <= 20'hce870;
      19: out3 <= 20'hcc984;
      20: out3 <= 20'hcac93;
      21: out3 <= 20'hc91b0;
      22: out3 <= 20'hc78ea;
      23: out3 <= 20'hc6251;
      24: out3 <= 20'hc4df3;
      25: out3 <= 20'hc3bdc;
      26: out3 <= 20'hc2c18;
      27: out3 <= 20'hc1eb0;
      28: out3 <= 20'hc13ad;
      29: out3 <= 20'hc0b15;
      30: out3 <= 20'hc04ee;
      31: out3 <= 20'hc013c;
      32: out3 <= 20'hc0000;
      33: out3 <= 20'hc013c;
      34: out3 <= 20'hc04ee;
      35: out3 <= 20'hc0b15;
      36: out3 <= 20'hc13ad;
      37: out3 <= 20'hc1eb0;
      38: out3 <= 20'hc2c18;
      39: out3 <= 20'hc3bdc;
      40: out3 <= 20'hc4df3;
      41: out3 <= 20'hc6251;
      42: out3 <= 20'hc78ea;
      43: out3 <= 20'hc91b0;
      44: out3 <= 20'hcac93;
      45: out3 <= 20'hcc984;
      46: out3 <= 20'hce870;
      47: out3 <= 20'hd0944;
      48: out3 <= 20'hd2bec;
      49: out3 <= 20'hd5053;
      50: out3 <= 20'hd7662;
      51: out3 <= 20'hd9e01;
      52: out3 <= 20'hdc719;
      53: out3 <= 20'hdf18f;
      54: out3 <= 20'he1d4a;
      55: out3 <= 20'he4a2f;
      56: out3 <= 20'he7822;
      57: out3 <= 20'hea706;
      58: out3 <= 20'hed6c0;
      59: out3 <= 20'hf0730;
      60: out3 <= 20'hf383a;
      61: out3 <= 20'hf69bf;
      62: out3 <= 20'hf9ba1;
      63: out3 <= 20'hfcdc1;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



module D14_38876(addr, out, clk);
   input clk;
   output [19:0] out;
   reg [19:0] out, out2, out3;
   input [5:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 20'h40000;
      1: out3 <= 20'h3ffb1;
      2: out3 <= 20'h3fec4;
      3: out3 <= 20'h3fd3a;
      4: out3 <= 20'h3fb12;
      5: out3 <= 20'h3f84d;
      6: out3 <= 20'h3f4eb;
      7: out3 <= 20'h3f0ed;
      8: out3 <= 20'h3ec53;
      9: out3 <= 20'h3e71e;
      10: out3 <= 20'h3e150;
      11: out3 <= 20'h3dae8;
      12: out3 <= 20'h3d3e8;
      13: out3 <= 20'h3cc51;
      14: out3 <= 20'h3c424;
      15: out3 <= 20'h3bb62;
      16: out3 <= 20'h3b20d;
      17: out3 <= 20'h3a827;
      18: out3 <= 20'h39daf;
      19: out3 <= 20'h392a9;
      20: out3 <= 20'h38716;
      21: out3 <= 20'h37af8;
      22: out3 <= 20'h36e50;
      23: out3 <= 20'h36121;
      24: out3 <= 20'h3536d;
      25: out3 <= 20'h34535;
      26: out3 <= 20'h3367c;
      27: out3 <= 20'h32744;
      28: out3 <= 20'h31790;
      29: out3 <= 20'h30762;
      30: out3 <= 20'h2f6bc;
      31: out3 <= 20'h2e5a1;
      32: out3 <= 20'h2d414;
      33: out3 <= 20'h2c217;
      34: out3 <= 20'h2afad;
      35: out3 <= 20'h29cd9;
      36: out3 <= 20'h2899e;
      37: out3 <= 20'h275ff;
      38: out3 <= 20'h261ff;
      39: out3 <= 20'h24da1;
      40: out3 <= 20'h238e7;
      41: out3 <= 20'h223d6;
      42: out3 <= 20'h20e71;
      43: out3 <= 20'h1f8ba;
      44: out3 <= 20'h1e2b6;
      45: out3 <= 20'h1cc67;
      46: out3 <= 20'h1b5d1;
      47: out3 <= 20'h19ef8;
      48: out3 <= 20'h187de;
      49: out3 <= 20'h17088;
      50: out3 <= 20'h158fa;
      51: out3 <= 20'h14136;
      52: out3 <= 20'h12940;
      53: out3 <= 20'h1111d;
      54: out3 <= 20'hf8d0;
      55: out3 <= 20'he05c;
      56: out3 <= 20'hc7c6;
      57: out3 <= 20'haf11;
      58: out3 <= 20'h9641;
      59: out3 <= 20'h7d59;
      60: out3 <= 20'h645f;
      61: out3 <= 20'h4b55;
      62: out3 <= 20'h323f;
      63: out3 <= 20'h1921;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



module D18_38942(addr, out, clk);
   input clk;
   output [19:0] out;
   reg [19:0] out, out2, out3;
   input [5:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 20'h0;
      1: out3 <= 20'hfe6df;
      2: out3 <= 20'hfcdc1;
      3: out3 <= 20'hfb4ab;
      4: out3 <= 20'hf9ba1;
      5: out3 <= 20'hf82a7;
      6: out3 <= 20'hf69bf;
      7: out3 <= 20'hf50ef;
      8: out3 <= 20'hf383a;
      9: out3 <= 20'hf1fa4;
      10: out3 <= 20'hf0730;
      11: out3 <= 20'heeee3;
      12: out3 <= 20'hed6c0;
      13: out3 <= 20'hebeca;
      14: out3 <= 20'hea706;
      15: out3 <= 20'he8f78;
      16: out3 <= 20'he7822;
      17: out3 <= 20'he6108;
      18: out3 <= 20'he4a2f;
      19: out3 <= 20'he3399;
      20: out3 <= 20'he1d4a;
      21: out3 <= 20'he0746;
      22: out3 <= 20'hdf18f;
      23: out3 <= 20'hddc2a;
      24: out3 <= 20'hdc719;
      25: out3 <= 20'hdb25f;
      26: out3 <= 20'hd9e01;
      27: out3 <= 20'hd8a01;
      28: out3 <= 20'hd7662;
      29: out3 <= 20'hd6327;
      30: out3 <= 20'hd5053;
      31: out3 <= 20'hd3de9;
      32: out3 <= 20'hd2bec;
      33: out3 <= 20'hd1a5f;
      34: out3 <= 20'hd0944;
      35: out3 <= 20'hcf89e;
      36: out3 <= 20'hce870;
      37: out3 <= 20'hcd8bc;
      38: out3 <= 20'hcc984;
      39: out3 <= 20'hcbacb;
      40: out3 <= 20'hcac93;
      41: out3 <= 20'hc9edf;
      42: out3 <= 20'hc91b0;
      43: out3 <= 20'hc8508;
      44: out3 <= 20'hc78ea;
      45: out3 <= 20'hc6d57;
      46: out3 <= 20'hc6251;
      47: out3 <= 20'hc57d9;
      48: out3 <= 20'hc4df3;
      49: out3 <= 20'hc449e;
      50: out3 <= 20'hc3bdc;
      51: out3 <= 20'hc33af;
      52: out3 <= 20'hc2c18;
      53: out3 <= 20'hc2518;
      54: out3 <= 20'hc1eb0;
      55: out3 <= 20'hc18e2;
      56: out3 <= 20'hc13ad;
      57: out3 <= 20'hc0f13;
      58: out3 <= 20'hc0b15;
      59: out3 <= 20'hc07b3;
      60: out3 <= 20'hc04ee;
      61: out3 <= 20'hc02c6;
      62: out3 <= 20'hc013c;
      63: out3 <= 20'hc004f;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



module D15_39008(addr, out, clk);
   input clk;
   output [19:0] out;
   reg [19:0] out, out2, out3;
   input [5:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 20'h40000;
      1: out3 <= 20'h3fec4;
      2: out3 <= 20'h3fb12;
      3: out3 <= 20'h3f4eb;
      4: out3 <= 20'h3ec53;
      5: out3 <= 20'h3e150;
      6: out3 <= 20'h3d3e8;
      7: out3 <= 20'h3c424;
      8: out3 <= 20'h3b20d;
      9: out3 <= 20'h39daf;
      10: out3 <= 20'h38716;
      11: out3 <= 20'h36e50;
      12: out3 <= 20'h3536d;
      13: out3 <= 20'h3367c;
      14: out3 <= 20'h31790;
      15: out3 <= 20'h2f6bc;
      16: out3 <= 20'h2d414;
      17: out3 <= 20'h2afad;
      18: out3 <= 20'h2899e;
      19: out3 <= 20'h261ff;
      20: out3 <= 20'h238e7;
      21: out3 <= 20'h20e71;
      22: out3 <= 20'h1e2b6;
      23: out3 <= 20'h1b5d1;
      24: out3 <= 20'h187de;
      25: out3 <= 20'h158fa;
      26: out3 <= 20'h12940;
      27: out3 <= 20'hf8d0;
      28: out3 <= 20'hc7c6;
      29: out3 <= 20'h9641;
      30: out3 <= 20'h645f;
      31: out3 <= 20'h323f;
      32: out3 <= 20'h0;
      33: out3 <= 20'hfcdc1;
      34: out3 <= 20'hf9ba1;
      35: out3 <= 20'hf69bf;
      36: out3 <= 20'hf383a;
      37: out3 <= 20'hf0730;
      38: out3 <= 20'hed6c0;
      39: out3 <= 20'hea706;
      40: out3 <= 20'he7822;
      41: out3 <= 20'he4a2f;
      42: out3 <= 20'he1d4a;
      43: out3 <= 20'hdf18f;
      44: out3 <= 20'hdc719;
      45: out3 <= 20'hd9e01;
      46: out3 <= 20'hd7662;
      47: out3 <= 20'hd5053;
      48: out3 <= 20'hd2bec;
      49: out3 <= 20'hd0944;
      50: out3 <= 20'hce870;
      51: out3 <= 20'hcc984;
      52: out3 <= 20'hcac93;
      53: out3 <= 20'hc91b0;
      54: out3 <= 20'hc78ea;
      55: out3 <= 20'hc6251;
      56: out3 <= 20'hc4df3;
      57: out3 <= 20'hc3bdc;
      58: out3 <= 20'hc2c18;
      59: out3 <= 20'hc1eb0;
      60: out3 <= 20'hc13ad;
      61: out3 <= 20'hc0b15;
      62: out3 <= 20'hc04ee;
      63: out3 <= 20'hc013c;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



module D16_39140(addr, out, clk);
   input clk;
   output [19:0] out;
   reg [19:0] out, out2, out3;
   input [5:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 20'h40000;
      1: out3 <= 20'h3fd3a;
      2: out3 <= 20'h3f4eb;
      3: out3 <= 20'h3e71e;
      4: out3 <= 20'h3d3e8;
      5: out3 <= 20'h3bb62;
      6: out3 <= 20'h39daf;
      7: out3 <= 20'h37af8;
      8: out3 <= 20'h3536d;
      9: out3 <= 20'h32744;
      10: out3 <= 20'h2f6bc;
      11: out3 <= 20'h2c217;
      12: out3 <= 20'h2899e;
      13: out3 <= 20'h24da1;
      14: out3 <= 20'h20e71;
      15: out3 <= 20'h1cc67;
      16: out3 <= 20'h187de;
      17: out3 <= 20'h14136;
      18: out3 <= 20'hf8d0;
      19: out3 <= 20'haf11;
      20: out3 <= 20'h645f;
      21: out3 <= 20'h1921;
      22: out3 <= 20'hfcdc1;
      23: out3 <= 20'hf82a7;
      24: out3 <= 20'hf383a;
      25: out3 <= 20'heeee3;
      26: out3 <= 20'hea706;
      27: out3 <= 20'he6108;
      28: out3 <= 20'he1d4a;
      29: out3 <= 20'hddc2a;
      30: out3 <= 20'hd9e01;
      31: out3 <= 20'hd6327;
      32: out3 <= 20'hd2bec;
      33: out3 <= 20'hcf89e;
      34: out3 <= 20'hcc984;
      35: out3 <= 20'hc9edf;
      36: out3 <= 20'hc78ea;
      37: out3 <= 20'hc57d9;
      38: out3 <= 20'hc3bdc;
      39: out3 <= 20'hc2518;
      40: out3 <= 20'hc13ad;
      41: out3 <= 20'hc07b3;
      42: out3 <= 20'hc013c;
      43: out3 <= 20'hc004f;
      44: out3 <= 20'hc04ee;
      45: out3 <= 20'hc0f13;
      46: out3 <= 20'hc1eb0;
      47: out3 <= 20'hc33af;
      48: out3 <= 20'hc4df3;
      49: out3 <= 20'hc6d57;
      50: out3 <= 20'hc91b0;
      51: out3 <= 20'hcbacb;
      52: out3 <= 20'hce870;
      53: out3 <= 20'hd1a5f;
      54: out3 <= 20'hd5053;
      55: out3 <= 20'hd8a01;
      56: out3 <= 20'hdc719;
      57: out3 <= 20'he0746;
      58: out3 <= 20'he4a2f;
      59: out3 <= 20'he8f78;
      60: out3 <= 20'hed6c0;
      61: out3 <= 20'hf1fa4;
      62: out3 <= 20'hf69bf;
      63: out3 <= 20'hfb4ab;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



// Latency: 12
// Gap: 1
module codeBlock38292(clk, reset, next_in, next_out,
   i2_in,
   X0_in, Y0,
   X1_in, Y1,
   X2_in, Y2,
   X3_in, Y3,
   X4_in, Y4,
   X5_in, Y5,
   X6_in, Y6,
   X7_in, Y7);

   output next_out;
   input clk, reset, next_in;

   reg next;
   input [5:0] i2_in;
   reg [5:0] i2;

   input [19:0] X0_in,
      X1_in,
      X2_in,
      X3_in,
      X4_in,
      X5_in,
      X6_in,
      X7_in;

   reg   [19:0] X0,
      X1,
      X2,
      X3,
      X4,
      X5,
      X6,
      X7;

   output [19:0] Y0,
      Y1,
      Y2,
      Y3,
      Y4,
      Y5,
      Y6,
      Y7;

   shiftRegFIFO #(11, 1) shiftFIFO_43947(.X(next), .Y(next_out), .clk(clk));


   wire signed [19:0] a225;
   wire signed [19:0] a202;
   wire signed [19:0] a228;
   wire signed [19:0] a206;
   wire signed [19:0] a229;
   wire signed [19:0] a230;
   wire signed [19:0] a233;
   wire signed [19:0] a234;
   wire signed [19:0] a237;
   wire signed [19:0] a238;
   reg signed [19:0] tm378;
   reg signed [19:0] tm382;
   reg signed [19:0] tm394;
   reg signed [19:0] tm398;
   reg signed [19:0] tm410;
   reg signed [19:0] tm414;
   reg signed [19:0] tm426;
   reg signed [19:0] tm437;
   reg signed [19:0] tm379;
   reg signed [19:0] tm383;
   reg signed [19:0] tm395;
   reg signed [19:0] tm399;
   reg signed [19:0] tm411;
   reg signed [19:0] tm415;
   reg signed [19:0] tm427;
   reg signed [19:0] tm438;
   wire signed [19:0] tm22;
   wire signed [19:0] a207;
   wire signed [19:0] tm23;
   wire signed [19:0] a209;
   wire signed [19:0] tm24;
   wire signed [19:0] a213;
   wire signed [19:0] tm25;
   wire signed [19:0] a215;
   wire signed [19:0] tm26;
   wire signed [19:0] a219;
   wire signed [19:0] tm27;
   wire signed [19:0] a221;
   reg signed [19:0] tm380;
   reg signed [19:0] tm384;
   reg signed [19:0] tm396;
   reg signed [19:0] tm400;
   reg signed [19:0] tm412;
   reg signed [19:0] tm416;
   reg signed [19:0] tm428;
   reg signed [19:0] tm439;
   reg signed [19:0] tm74;
   reg signed [19:0] tm75;
   reg signed [19:0] tm78;
   reg signed [19:0] tm79;
   reg signed [19:0] tm82;
   reg signed [19:0] tm83;
   reg signed [19:0] tm381;
   reg signed [19:0] tm385;
   reg signed [19:0] tm397;
   reg signed [19:0] tm401;
   reg signed [19:0] tm413;
   reg signed [19:0] tm417;
   reg signed [19:0] tm429;
   reg signed [19:0] tm440;
   reg signed [19:0] tm430;
   reg signed [19:0] tm441;
   reg signed [19:0] tm431;
   reg signed [19:0] tm442;
   reg signed [19:0] tm432;
   reg signed [19:0] tm443;
   reg signed [19:0] tm433;
   reg signed [19:0] tm444;
   reg signed [19:0] tm434;
   reg signed [19:0] tm445;
   wire signed [19:0] a208;
   wire signed [19:0] a210;
   wire signed [19:0] a211;
   wire signed [19:0] a212;
   wire signed [19:0] a214;
   wire signed [19:0] a216;
   wire signed [19:0] a217;
   wire signed [19:0] a218;
   wire signed [19:0] a220;
   wire signed [19:0] a222;
   wire signed [19:0] a223;
   wire signed [19:0] a224;
   reg signed [19:0] tm435;
   reg signed [19:0] tm446;
   wire signed [19:0] Y0;
   wire signed [19:0] Y1;
   wire signed [19:0] Y2;
   wire signed [19:0] Y3;
   wire signed [19:0] Y4;
   wire signed [19:0] Y5;
   wire signed [19:0] Y6;
   wire signed [19:0] Y7;
   reg signed [19:0] tm436;
   reg signed [19:0] tm447;


   assign a225 = X0;
   assign a202 = a225;
   assign a228 = X1;
   assign a206 = a228;
   assign a229 = X2;
   assign a230 = X3;
   assign a233 = X4;
   assign a234 = X5;
   assign a237 = X6;
   assign a238 = X7;
   assign a207 = tm22;
   assign a209 = tm23;
   assign a213 = tm24;
   assign a215 = tm25;
   assign a219 = tm26;
   assign a221 = tm27;
   assign Y0 = tm436;
   assign Y1 = tm447;

   D20_38678 instD20inst0_38678(.addr(i2[5:0]), .out(tm27), .clk(clk));

   D19_38810 instD19inst0_38810(.addr(i2[5:0]), .out(tm25), .clk(clk));

   D14_38876 instD14inst0_38876(.addr(i2[5:0]), .out(tm22), .clk(clk));

   D18_38942 instD18inst0_38942(.addr(i2[5:0]), .out(tm23), .clk(clk));

   D15_39008 instD15inst0_39008(.addr(i2[5:0]), .out(tm24), .clk(clk));

   D16_39140 instD16inst0_39140(.addr(i2[5:0]), .out(tm26), .clk(clk));

    multfix #(20, 6) m38391(.a(tm74), .b(tm381), .clk(clk), .q_sc(a208), .q_unsc(), .rst(reset));
    multfix #(20, 6) m38413(.a(tm75), .b(tm385), .clk(clk), .q_sc(a210), .q_unsc(), .rst(reset));
    multfix #(20, 6) m38431(.a(tm75), .b(tm381), .clk(clk), .q_sc(a211), .q_unsc(), .rst(reset));
    multfix #(20, 6) m38442(.a(tm74), .b(tm385), .clk(clk), .q_sc(a212), .q_unsc(), .rst(reset));
    multfix #(20, 6) m38471(.a(tm78), .b(tm397), .clk(clk), .q_sc(a214), .q_unsc(), .rst(reset));
    multfix #(20, 6) m38493(.a(tm79), .b(tm401), .clk(clk), .q_sc(a216), .q_unsc(), .rst(reset));
    multfix #(20, 6) m38511(.a(tm79), .b(tm397), .clk(clk), .q_sc(a217), .q_unsc(), .rst(reset));
    multfix #(20, 6) m38522(.a(tm78), .b(tm401), .clk(clk), .q_sc(a218), .q_unsc(), .rst(reset));
    multfix #(20, 6) m38551(.a(tm82), .b(tm413), .clk(clk), .q_sc(a220), .q_unsc(), .rst(reset));
    multfix #(20, 6) m38573(.a(tm83), .b(tm417), .clk(clk), .q_sc(a222), .q_unsc(), .rst(reset));
    multfix #(20, 6) m38591(.a(tm83), .b(tm413), .clk(clk), .q_sc(a223), .q_unsc(), .rst(reset));
    multfix #(20, 6) m38602(.a(tm82), .b(tm417), .clk(clk), .q_sc(a224), .q_unsc(), .rst(reset));
    subfxp #(20, 1) sub38420(.a(a208), .b(a210), .clk(clk), .q(Y2));    // 10
    addfxp #(20, 1) add38449(.a(a211), .b(a212), .clk(clk), .q(Y3));    // 10
    subfxp #(20, 1) sub38500(.a(a214), .b(a216), .clk(clk), .q(Y4));    // 10
    addfxp #(20, 1) add38529(.a(a217), .b(a218), .clk(clk), .q(Y5));    // 10
    subfxp #(20, 1) sub38580(.a(a220), .b(a222), .clk(clk), .q(Y6));    // 10
    addfxp #(20, 1) add38609(.a(a223), .b(a224), .clk(clk), .q(Y7));    // 10


   always @(posedge clk) begin
      if (reset == 1) begin
         tm74 <= 0;
         tm381 <= 0;
         tm75 <= 0;
         tm385 <= 0;
         tm75 <= 0;
         tm381 <= 0;
         tm74 <= 0;
         tm385 <= 0;
         tm78 <= 0;
         tm397 <= 0;
         tm79 <= 0;
         tm401 <= 0;
         tm79 <= 0;
         tm397 <= 0;
         tm78 <= 0;
         tm401 <= 0;
         tm82 <= 0;
         tm413 <= 0;
         tm83 <= 0;
         tm417 <= 0;
         tm83 <= 0;
         tm413 <= 0;
         tm82 <= 0;
         tm417 <= 0;
      end
      else begin
         i2 <= i2_in;
         X0 <= X0_in;
         X1 <= X1_in;
         X2 <= X2_in;
         X3 <= X3_in;
         X4 <= X4_in;
         X5 <= X5_in;
         X6 <= X6_in;
         X7 <= X7_in;
         next <= next_in;
         tm378 <= a229;
         tm382 <= a230;
         tm394 <= a233;
         tm398 <= a234;
         tm410 <= a237;
         tm414 <= a238;
         tm426 <= a202;
         tm437 <= a206;
         tm379 <= tm378;
         tm383 <= tm382;
         tm395 <= tm394;
         tm399 <= tm398;
         tm411 <= tm410;
         tm415 <= tm414;
         tm427 <= tm426;
         tm438 <= tm437;
         tm380 <= tm379;
         tm384 <= tm383;
         tm396 <= tm395;
         tm400 <= tm399;
         tm412 <= tm411;
         tm416 <= tm415;
         tm428 <= tm427;
         tm439 <= tm438;
         tm74 <= a207;
         tm75 <= a209;
         tm78 <= a213;
         tm79 <= a215;
         tm82 <= a219;
         tm83 <= a221;
         tm381 <= tm380;
         tm385 <= tm384;
         tm397 <= tm396;
         tm401 <= tm400;
         tm413 <= tm412;
         tm417 <= tm416;
         tm429 <= tm428;
         tm440 <= tm439;
         tm430 <= tm429;
         tm441 <= tm440;
         tm431 <= tm430;
         tm442 <= tm441;
         tm432 <= tm431;
         tm443 <= tm442;
         tm433 <= tm432;
         tm444 <= tm443;
         tm434 <= tm433;
         tm445 <= tm444;
         tm435 <= tm434;
         tm446 <= tm445;
         tm436 <= tm435;
         tm447 <= tm446;
      end
   end
endmodule

// Latency: 3
// Gap: 1
module codeBlock39145(clk, reset, next_in, next_out,
   X0_in, Y0,
   X1_in, Y1,
   X2_in, Y2,
   X3_in, Y3,
   X4_in, Y4,
   X5_in, Y5,
   X6_in, Y6,
   X7_in, Y7);

   output next_out;
   input clk, reset, next_in;

   reg next;

   input [19:0] X0_in,
      X1_in,
      X2_in,
      X3_in,
      X4_in,
      X5_in,
      X6_in,
      X7_in;

   reg   [19:0] X0,
      X1,
      X2,
      X3,
      X4,
      X5,
      X6,
      X7;

   output [19:0] Y0,
      Y1,
      Y2,
      Y3,
      Y4,
      Y5,
      Y6,
      Y7;

   shiftRegFIFO #(2, 1) shiftFIFO_43950(.X(next), .Y(next_out), .clk(clk));


   wire signed [19:0] a137;
   wire signed [19:0] a138;
   wire signed [19:0] a139;
   wire signed [19:0] a140;
   wire signed [19:0] a145;
   wire signed [19:0] a146;
   wire signed [19:0] a147;
   wire signed [19:0] a148;
   wire signed [20:0] tm206;
   wire signed [20:0] tm207;
   wire signed [20:0] tm208;
   wire signed [20:0] tm209;
   wire signed [20:0] tm210;
   wire signed [20:0] tm211;
   wire signed [20:0] tm212;
   wire signed [20:0] tm213;
   wire signed [19:0] t241;
   wire signed [19:0] t242;
   wire signed [19:0] t243;
   wire signed [19:0] t244;
   wire signed [19:0] t245;
   wire signed [19:0] t246;
   wire signed [19:0] t247;
   wire signed [19:0] t248;
   wire signed [20:0] tm214;
   wire signed [20:0] tm215;
   wire signed [20:0] tm216;
   wire signed [20:0] tm217;
   wire signed [19:0] Y0;
   wire signed [19:0] Y1;
   wire signed [19:0] Y4;
   wire signed [19:0] Y5;
   wire signed [20:0] tm218;
   wire signed [20:0] tm219;
   wire signed [20:0] tm220;
   wire signed [20:0] tm221;
   wire signed [19:0] Y2;
   wire signed [19:0] Y3;
   wire signed [19:0] Y6;
   wire signed [19:0] Y7;
   wire signed [19:0] t249;
   wire signed [19:0] t250;
   wire signed [19:0] t251;
   wire signed [19:0] t252;
   wire signed [19:0] t253;
   wire signed [19:0] t254;
   wire signed [19:0] t255;
   wire signed [19:0] t256;


   assign a137 = X0;
   assign a138 = X4;
   assign a139 = X1;
   assign a140 = X5;
   assign a145 = X2;
   assign a146 = X6;
   assign a147 = X3;
   assign a148 = X7;
   assign t241 = tm206[20:1];
   assign t242 = tm207[20:1];
   assign t243 = tm208[20:1];
   assign t244 = tm209[20:1];
   assign t245 = tm210[20:1];
   assign t246 = tm211[20:1];
   assign t247 = tm212[20:1];
   assign t248 = tm213[20:1];
   assign Y0 = t249;
   assign Y1 = t250;
   assign Y4 = t251;
   assign Y5 = t252;
   assign Y2 = t253;
   assign Y3 = t254;
   assign Y6 = t255;
   assign Y7 = t256;
   assign t249 = tm214[20:1];
   assign t250 = tm215[20:1];
   assign t251 = tm216[20:1];
   assign t252 = tm217[20:1];
   assign t253 = tm218[20:1];
   assign t254 = tm219[20:1];
   assign t255 = tm220[20:1];
   assign t256 = tm221[20:1];

    addfxp #(21, 1) add39157(.a({{1{a137[19]}}, a137}), .b({{1{a138[19]}}, a138}), .clk(clk), .q(tm206));    // 0
    addfxp #(21, 1) add39172(.a({{1{a139[19]}}, a139}), .b({{1{a140[19]}}, a140}), .clk(clk), .q(tm207));    // 0
    subfxp #(21, 1) sub39187(.a({{1{a137[19]}}, a137}), .b({{1{a138[19]}}, a138}), .clk(clk), .q(tm208));    // 0
    subfxp #(21, 1) sub39202(.a({{1{a139[19]}}, a139}), .b({{1{a140[19]}}, a140}), .clk(clk), .q(tm209));    // 0
    addfxp #(21, 1) add39217(.a({{1{a145[19]}}, a145}), .b({{1{a146[19]}}, a146}), .clk(clk), .q(tm210));    // 0
    addfxp #(21, 1) add39232(.a({{1{a147[19]}}, a147}), .b({{1{a148[19]}}, a148}), .clk(clk), .q(tm211));    // 0
    subfxp #(21, 1) sub39247(.a({{1{a145[19]}}, a145}), .b({{1{a146[19]}}, a146}), .clk(clk), .q(tm212));    // 0
    subfxp #(21, 1) sub39262(.a({{1{a147[19]}}, a147}), .b({{1{a148[19]}}, a148}), .clk(clk), .q(tm213));    // 0
    addfxp #(21, 1) add39269(.a({{1{t241[19]}}, t241}), .b({{1{t245[19]}}, t245}), .clk(clk), .q(tm214));    // 1
    addfxp #(21, 1) add39276(.a({{1{t242[19]}}, t242}), .b({{1{t246[19]}}, t246}), .clk(clk), .q(tm215));    // 1
    subfxp #(21, 1) sub39283(.a({{1{t241[19]}}, t241}), .b({{1{t245[19]}}, t245}), .clk(clk), .q(tm216));    // 1
    subfxp #(21, 1) sub39290(.a({{1{t242[19]}}, t242}), .b({{1{t246[19]}}, t246}), .clk(clk), .q(tm217));    // 1
    addfxp #(21, 1) add39313(.a({{1{t243[19]}}, t243}), .b({{1{t248[19]}}, t248}), .clk(clk), .q(tm218));    // 1
    subfxp #(21, 1) sub39320(.a({{1{t244[19]}}, t244}), .b({{1{t247[19]}}, t247}), .clk(clk), .q(tm219));    // 1
    subfxp #(21, 1) sub39327(.a({{1{t243[19]}}, t243}), .b({{1{t248[19]}}, t248}), .clk(clk), .q(tm220));    // 1
    addfxp #(21, 1) add39334(.a({{1{t244[19]}}, t244}), .b({{1{t247[19]}}, t247}), .clk(clk), .q(tm221));    // 1


   always @(posedge clk) begin
      if (reset == 1) begin
      end
      else begin
         X0 <= X0_in;
         X1 <= X1_in;
         X2 <= X2_in;
         X3 <= X3_in;
         X4 <= X4_in;
         X5 <= X5_in;
         X6 <= X6_in;
         X7 <= X7_in;
         next <= next_in;
      end
   end
endmodule

// Latency: 517
// Gap: 256
module rc39359(clk, reset, next, next_out,
   X0, Y0,
   X1, Y1,
   X2, Y2,
   X3, Y3,
   X4, Y4,
   X5, Y5,
   X6, Y6,
   X7, Y7);

   output next_out;
   input clk, reset, next;

   input [19:0] X0,
      X1,
      X2,
      X3,
      X4,
      X5,
      X6,
      X7;

   output [19:0] Y0,
      Y1,
      Y2,
      Y3,
      Y4,
      Y5,
      Y6,
      Y7;

   wire [39:0] t0;
   wire [39:0] s0;
   assign t0 = {X0, X1};
   wire [39:0] t1;
   wire [39:0] s1;
   assign t1 = {X2, X3};
   wire [39:0] t2;
   wire [39:0] s2;
   assign t2 = {X4, X5};
   wire [39:0] t3;
   wire [39:0] s3;
   assign t3 = {X6, X7};
   assign Y0 = s0[39:20];
   assign Y1 = s0[19:0];
   assign Y2 = s1[39:20];
   assign Y3 = s1[19:0];
   assign Y4 = s2[39:20];
   assign Y5 = s2[19:0];
   assign Y6 = s3[39:20];
   assign Y7 = s3[19:0];

   perm39357 instPerm43951(.x0(t0), .y0(s0),
    .x1(t1), .y1(s1),
    .x2(t2), .y2(s2),
    .x3(t3), .y3(s3),
   .clk(clk), .next(next), .next_out(next_out), .reset(reset)
);



endmodule

module swNet39357(itr, clk, ct
,       x0, y0
,       x1, y1
,       x2, y2
,       x3, y3
);

    parameter width = 40;

    input [7:0] ct;
    input clk;
    input [0:0] itr;
    input [width-1:0] x0;
    output reg [width-1:0] y0;
    input [width-1:0] x1;
    output reg [width-1:0] y1;
    input [width-1:0] x2;
    output reg [width-1:0] y2;
    input [width-1:0] x3;
    output reg [width-1:0] y3;
    wire [width-1:0] t0_0, t0_1, t0_2, t0_3;
    wire [width-1:0] t1_0, t1_1, t1_2, t1_3;
    wire [width-1:0] t2_0, t2_1, t2_2, t2_3;
    reg [width-1:0] t3_0, t3_1, t3_2, t3_3;
    wire [width-1:0] t4_0, t4_1, t4_2, t4_3;
    reg [width-1:0] t5_0, t5_1, t5_2, t5_3;

    reg [3:0] control;

    always @(posedge clk) begin
      case(ct)
        8'd0: control <= 4'b1111;
        8'd1: control <= 4'b1111;
        8'd2: control <= 4'b1111;
        8'd3: control <= 4'b1111;
        8'd4: control <= 4'b1111;
        8'd5: control <= 4'b1111;
        8'd6: control <= 4'b1111;
        8'd7: control <= 4'b1111;
        8'd8: control <= 4'b1111;
        8'd9: control <= 4'b1111;
        8'd10: control <= 4'b1111;
        8'd11: control <= 4'b1111;
        8'd12: control <= 4'b1111;
        8'd13: control <= 4'b1111;
        8'd14: control <= 4'b1111;
        8'd15: control <= 4'b1111;
        8'd16: control <= 4'b1111;
        8'd17: control <= 4'b1111;
        8'd18: control <= 4'b1111;
        8'd19: control <= 4'b1111;
        8'd20: control <= 4'b1111;
        8'd21: control <= 4'b1111;
        8'd22: control <= 4'b1111;
        8'd23: control <= 4'b1111;
        8'd24: control <= 4'b1111;
        8'd25: control <= 4'b1111;
        8'd26: control <= 4'b1111;
        8'd27: control <= 4'b1111;
        8'd28: control <= 4'b1111;
        8'd29: control <= 4'b1111;
        8'd30: control <= 4'b1111;
        8'd31: control <= 4'b1111;
        8'd32: control <= 4'b1111;
        8'd33: control <= 4'b1111;
        8'd34: control <= 4'b1111;
        8'd35: control <= 4'b1111;
        8'd36: control <= 4'b1111;
        8'd37: control <= 4'b1111;
        8'd38: control <= 4'b1111;
        8'd39: control <= 4'b1111;
        8'd40: control <= 4'b1111;
        8'd41: control <= 4'b1111;
        8'd42: control <= 4'b1111;
        8'd43: control <= 4'b1111;
        8'd44: control <= 4'b1111;
        8'd45: control <= 4'b1111;
        8'd46: control <= 4'b1111;
        8'd47: control <= 4'b1111;
        8'd48: control <= 4'b1111;
        8'd49: control <= 4'b1111;
        8'd50: control <= 4'b1111;
        8'd51: control <= 4'b1111;
        8'd52: control <= 4'b1111;
        8'd53: control <= 4'b1111;
        8'd54: control <= 4'b1111;
        8'd55: control <= 4'b1111;
        8'd56: control <= 4'b1111;
        8'd57: control <= 4'b1111;
        8'd58: control <= 4'b1111;
        8'd59: control <= 4'b1111;
        8'd60: control <= 4'b1111;
        8'd61: control <= 4'b1111;
        8'd62: control <= 4'b1111;
        8'd63: control <= 4'b1111;
        8'd64: control <= 4'b0011;
        8'd65: control <= 4'b0011;
        8'd66: control <= 4'b0011;
        8'd67: control <= 4'b0011;
        8'd68: control <= 4'b0011;
        8'd69: control <= 4'b0011;
        8'd70: control <= 4'b0011;
        8'd71: control <= 4'b0011;
        8'd72: control <= 4'b0011;
        8'd73: control <= 4'b0011;
        8'd74: control <= 4'b0011;
        8'd75: control <= 4'b0011;
        8'd76: control <= 4'b0011;
        8'd77: control <= 4'b0011;
        8'd78: control <= 4'b0011;
        8'd79: control <= 4'b0011;
        8'd80: control <= 4'b0011;
        8'd81: control <= 4'b0011;
        8'd82: control <= 4'b0011;
        8'd83: control <= 4'b0011;
        8'd84: control <= 4'b0011;
        8'd85: control <= 4'b0011;
        8'd86: control <= 4'b0011;
        8'd87: control <= 4'b0011;
        8'd88: control <= 4'b0011;
        8'd89: control <= 4'b0011;
        8'd90: control <= 4'b0011;
        8'd91: control <= 4'b0011;
        8'd92: control <= 4'b0011;
        8'd93: control <= 4'b0011;
        8'd94: control <= 4'b0011;
        8'd95: control <= 4'b0011;
        8'd96: control <= 4'b0011;
        8'd97: control <= 4'b0011;
        8'd98: control <= 4'b0011;
        8'd99: control <= 4'b0011;
        8'd100: control <= 4'b0011;
        8'd101: control <= 4'b0011;
        8'd102: control <= 4'b0011;
        8'd103: control <= 4'b0011;
        8'd104: control <= 4'b0011;
        8'd105: control <= 4'b0011;
        8'd106: control <= 4'b0011;
        8'd107: control <= 4'b0011;
        8'd108: control <= 4'b0011;
        8'd109: control <= 4'b0011;
        8'd110: control <= 4'b0011;
        8'd111: control <= 4'b0011;
        8'd112: control <= 4'b0011;
        8'd113: control <= 4'b0011;
        8'd114: control <= 4'b0011;
        8'd115: control <= 4'b0011;
        8'd116: control <= 4'b0011;
        8'd117: control <= 4'b0011;
        8'd118: control <= 4'b0011;
        8'd119: control <= 4'b0011;
        8'd120: control <= 4'b0011;
        8'd121: control <= 4'b0011;
        8'd122: control <= 4'b0011;
        8'd123: control <= 4'b0011;
        8'd124: control <= 4'b0011;
        8'd125: control <= 4'b0011;
        8'd126: control <= 4'b0011;
        8'd127: control <= 4'b0011;
        8'd128: control <= 4'b1100;
        8'd129: control <= 4'b1100;
        8'd130: control <= 4'b1100;
        8'd131: control <= 4'b1100;
        8'd132: control <= 4'b1100;
        8'd133: control <= 4'b1100;
        8'd134: control <= 4'b1100;
        8'd135: control <= 4'b1100;
        8'd136: control <= 4'b1100;
        8'd137: control <= 4'b1100;
        8'd138: control <= 4'b1100;
        8'd139: control <= 4'b1100;
        8'd140: control <= 4'b1100;
        8'd141: control <= 4'b1100;
        8'd142: control <= 4'b1100;
        8'd143: control <= 4'b1100;
        8'd144: control <= 4'b1100;
        8'd145: control <= 4'b1100;
        8'd146: control <= 4'b1100;
        8'd147: control <= 4'b1100;
        8'd148: control <= 4'b1100;
        8'd149: control <= 4'b1100;
        8'd150: control <= 4'b1100;
        8'd151: control <= 4'b1100;
        8'd152: control <= 4'b1100;
        8'd153: control <= 4'b1100;
        8'd154: control <= 4'b1100;
        8'd155: control <= 4'b1100;
        8'd156: control <= 4'b1100;
        8'd157: control <= 4'b1100;
        8'd158: control <= 4'b1100;
        8'd159: control <= 4'b1100;
        8'd160: control <= 4'b1100;
        8'd161: control <= 4'b1100;
        8'd162: control <= 4'b1100;
        8'd163: control <= 4'b1100;
        8'd164: control <= 4'b1100;
        8'd165: control <= 4'b1100;
        8'd166: control <= 4'b1100;
        8'd167: control <= 4'b1100;
        8'd168: control <= 4'b1100;
        8'd169: control <= 4'b1100;
        8'd170: control <= 4'b1100;
        8'd171: control <= 4'b1100;
        8'd172: control <= 4'b1100;
        8'd173: control <= 4'b1100;
        8'd174: control <= 4'b1100;
        8'd175: control <= 4'b1100;
        8'd176: control <= 4'b1100;
        8'd177: control <= 4'b1100;
        8'd178: control <= 4'b1100;
        8'd179: control <= 4'b1100;
        8'd180: control <= 4'b1100;
        8'd181: control <= 4'b1100;
        8'd182: control <= 4'b1100;
        8'd183: control <= 4'b1100;
        8'd184: control <= 4'b1100;
        8'd185: control <= 4'b1100;
        8'd186: control <= 4'b1100;
        8'd187: control <= 4'b1100;
        8'd188: control <= 4'b1100;
        8'd189: control <= 4'b1100;
        8'd190: control <= 4'b1100;
        8'd191: control <= 4'b1100;
        8'd192: control <= 4'b0000;
        8'd193: control <= 4'b0000;
        8'd194: control <= 4'b0000;
        8'd195: control <= 4'b0000;
        8'd196: control <= 4'b0000;
        8'd197: control <= 4'b0000;
        8'd198: control <= 4'b0000;
        8'd199: control <= 4'b0000;
        8'd200: control <= 4'b0000;
        8'd201: control <= 4'b0000;
        8'd202: control <= 4'b0000;
        8'd203: control <= 4'b0000;
        8'd204: control <= 4'b0000;
        8'd205: control <= 4'b0000;
        8'd206: control <= 4'b0000;
        8'd207: control <= 4'b0000;
        8'd208: control <= 4'b0000;
        8'd209: control <= 4'b0000;
        8'd210: control <= 4'b0000;
        8'd211: control <= 4'b0000;
        8'd212: control <= 4'b0000;
        8'd213: control <= 4'b0000;
        8'd214: control <= 4'b0000;
        8'd215: control <= 4'b0000;
        8'd216: control <= 4'b0000;
        8'd217: control <= 4'b0000;
        8'd218: control <= 4'b0000;
        8'd219: control <= 4'b0000;
        8'd220: control <= 4'b0000;
        8'd221: control <= 4'b0000;
        8'd222: control <= 4'b0000;
        8'd223: control <= 4'b0000;
        8'd224: control <= 4'b0000;
        8'd225: control <= 4'b0000;
        8'd226: control <= 4'b0000;
        8'd227: control <= 4'b0000;
        8'd228: control <= 4'b0000;
        8'd229: control <= 4'b0000;
        8'd230: control <= 4'b0000;
        8'd231: control <= 4'b0000;
        8'd232: control <= 4'b0000;
        8'd233: control <= 4'b0000;
        8'd234: control <= 4'b0000;
        8'd235: control <= 4'b0000;
        8'd236: control <= 4'b0000;
        8'd237: control <= 4'b0000;
        8'd238: control <= 4'b0000;
        8'd239: control <= 4'b0000;
        8'd240: control <= 4'b0000;
        8'd241: control <= 4'b0000;
        8'd242: control <= 4'b0000;
        8'd243: control <= 4'b0000;
        8'd244: control <= 4'b0000;
        8'd245: control <= 4'b0000;
        8'd246: control <= 4'b0000;
        8'd247: control <= 4'b0000;
        8'd248: control <= 4'b0000;
        8'd249: control <= 4'b0000;
        8'd250: control <= 4'b0000;
        8'd251: control <= 4'b0000;
        8'd252: control <= 4'b0000;
        8'd253: control <= 4'b0000;
        8'd254: control <= 4'b0000;
        8'd255: control <= 4'b0000;
      endcase
   end

// synthesis attribute rom_style of control is "block"
   reg [3:0] control0;
   reg [3:0] control1;
    always @(posedge clk) begin
       control0 <= control;
        control1 <= control0;
    end
    assign t0_0 = x0;
    assign t0_1 = x2;
    assign t0_2 = x1;
    assign t0_3 = x3;
     assign t1_0 = t0_0;
     assign t1_1 = t0_1;
     assign t1_2 = t0_2;
     assign t1_3 = t0_3;
    assign t2_0 = t1_0;
    assign t2_1 = t1_2;
    assign t2_2 = t1_1;
    assign t2_3 = t1_3;
   always @(posedge clk) begin
         t3_0 <= (control0[3] == 0) ? t2_0 : t2_1;
         t3_1 <= (control0[3] == 0) ? t2_1 : t2_0;
         t3_2 <= (control0[2] == 0) ? t2_2 : t2_3;
         t3_3 <= (control0[2] == 0) ? t2_3 : t2_2;
   end
    assign t4_0 = t3_0;
    assign t4_1 = t3_2;
    assign t4_2 = t3_1;
    assign t4_3 = t3_3;
   always @(posedge clk) begin
         t5_0 <= (control1[1] == 0) ? t4_0 : t4_1;
         t5_1 <= (control1[1] == 0) ? t4_1 : t4_0;
         t5_2 <= (control1[0] == 0) ? t4_2 : t4_3;
         t5_3 <= (control1[0] == 0) ? t4_3 : t4_2;
   end
    always @(posedge clk) begin
        y0 <= t5_0;
        y1 <= t5_2;
        y2 <= t5_1;
        y3 <= t5_3;
    end
endmodule

// Latency: 517
// Gap: 256
module perm39357(clk, next, reset, next_out,
   x0, y0,
   x1, y1,
   x2, y2,
   x3, y3);
   parameter width = 40;

   parameter depth = 256;

   parameter addrbits = 8;

   parameter muxbits = 2;

   input [width-1:0]  x0;
   output [width-1:0]  y0;
   wire [width-1:0]  t0;
   wire [width-1:0]  s0;
   input [width-1:0]  x1;
   output [width-1:0]  y1;
   wire [width-1:0]  t1;
   wire [width-1:0]  s1;
   input [width-1:0]  x2;
   output [width-1:0]  y2;
   wire [width-1:0]  t2;
   wire [width-1:0]  s2;
   input [width-1:0]  x3;
   output [width-1:0]  y3;
   wire [width-1:0]  t3;
   wire [width-1:0]  s3;
   input next, reset, clk;
   output next_out;
   reg [addrbits-1:0] s1rdloc, s2rdloc;

    reg [addrbits-1:0] s1wr0;
   reg [addrbits-1:0] s1rd0, s2wr0, s2rd0;
   reg [addrbits-1:0] s1rd1, s2wr1, s2rd1;
   reg [addrbits-1:0] s1rd2, s2wr2, s2rd2;
   reg [addrbits-1:0] s1rd3, s2wr3, s2rd3;
   reg s1wr_en, state1, state2, state3;
   wire 	      next2, next3, next4;
   reg 		      inFlip0, outFlip0_z, outFlip1;
   wire 	      inFlip1, outFlip0;

   wire [0:0] tm28;
   assign tm28 = 0;

shiftRegFIFO #(4, 1) shiftFIFO_43956(.X(outFlip0), .Y(inFlip1), .clk(clk));
shiftRegFIFO #(1, 1) shiftFIFO_43957(.X(outFlip0_z), .Y(outFlip0), .clk(clk));
//   shiftRegFIFO #(2, 1) inFlip1Reg(outFlip0, inFlip1, clk);
//   shiftRegFIFO #(1, 1) outFlip0Reg(outFlip0_z, outFlip0, clk);
   
   memMod #(depth*2, width, addrbits+1) s1mem0(x0, t0, {inFlip0, s1wr0}, {outFlip0, s1rd0}, s1wr_en, clk);
   memMod #(depth*2, width, addrbits+1) s1mem1(x1, t1, {inFlip0, s1wr0}, {outFlip0, s1rd1}, s1wr_en, clk);
   memMod #(depth*2, width, addrbits+1) s1mem2(x2, t2, {inFlip0, s1wr0}, {outFlip0, s1rd2}, s1wr_en, clk);
   memMod #(depth*2, width, addrbits+1) s1mem3(x3, t3, {inFlip0, s1wr0}, {outFlip0, s1rd3}, s1wr_en, clk);

nextReg #(255, 8) nextReg_43968(.X(next), .Y(next2), .reset(reset), .clk(clk));
shiftRegFIFO #(5, 1) shiftFIFO_43969(.X(next2), .Y(next3), .clk(clk));
nextReg #(256, 8) nextReg_43972(.X(next3), .Y(next4), .reset(reset), .clk(clk));
shiftRegFIFO #(1, 1) shiftFIFO_43973(.X(next4), .Y(next_out), .clk(clk));
shiftRegFIFO #(255, 1) shiftFIFO_43976(.X(tm28), .Y(tm28_d), .clk(clk));
shiftRegFIFO #(4, 1) shiftFIFO_43979(.X(tm28_d), .Y(tm28_dd), .clk(clk));
   
   wire [addrbits-1:0] 	      muxCycle, writeCycle;
assign muxCycle = s1rdloc;
shiftRegFIFO #(4, 8) shiftFIFO_43984(.X(muxCycle), .Y(writeCycle), .clk(clk));
        
   wire 		      readInt, s2wr_en;   
   assign 		      readInt = (state2 == 1);

   shiftRegFIFO #(5, 1) writeIntReg(readInt, s2wr_en, clk);

   memMod #(depth*2, width, addrbits+1) s2mem0(s0, y0, {inFlip1, s2wr0}, {outFlip1, s2rdloc}, s2wr_en, clk);
   memMod #(depth*2, width, addrbits+1) s2mem1(s1, y1, {inFlip1, s2wr1}, {outFlip1, s2rdloc}, s2wr_en, clk);
   memMod #(depth*2, width, addrbits+1) s2mem2(s2, y2, {inFlip1, s2wr2}, {outFlip1, s2rdloc}, s2wr_en, clk);
   memMod #(depth*2, width, addrbits+1) s2mem3(s3, y3, {inFlip1, s2wr3}, {outFlip1, s2rdloc}, s2wr_en, clk);
   always @(posedge clk) begin
      if (reset == 1) begin
	 state1 <= 0;
	 inFlip0 <= 0;	 
	 s1wr0 <= 0;
      end
      else if (next == 1) begin
	 s1wr0 <= 0;
	 state1 <= 1;
	 s1wr_en <= 1;
	 inFlip0 <= (s1wr0 == depth-1) ? ~inFlip0 : inFlip0;
      end
      else begin
	 case(state1)
	   0: begin
	      s1wr0 <= 0;
	      state1 <= 0;
	      s1wr_en <= 0;
	      inFlip0 <= inFlip0;	      
	   end
	   1: begin
	      s1wr0 <= (s1wr0 == depth-1) ? 0 : s1wr0 + 1;
	      state1 <= 1;
         s1wr_en <= 1;
	      inFlip0 <= (s1wr0 == depth-1) ? ~inFlip0 : inFlip0;
	   end
	 endcase
      end      
   end
   
   always @(posedge clk) begin
      if (reset == 1) begin
	       state2 <= 0;
	       outFlip0_z <= 0;	 
      end
      else if (next2 == 1) begin
	       s1rdloc <= 0;
	       state2 <= 1;
	       outFlip0_z <= (s1rdloc == depth-1) ? ~outFlip0_z : outFlip0_z;
      end
      else begin
	 case(state2)
	   0: begin
	      s1rdloc <= 0;
	      state2 <= 0;
	      outFlip0_z <= outFlip0_z;	 
	   end
	   1: begin
	      s1rdloc <= (s1rdloc == depth-1) ? 0 : s1rdloc + 1;
         state2 <= 1;
	      outFlip0_z <= (s1rdloc == depth-1) ? ~outFlip0_z : outFlip0_z;
	   end	     
	 endcase
      end
   end
   
   always @(posedge clk) begin
      if (reset == 1) begin
	 state3 <= 0;
	 outFlip1 <= 0;	 
      end
      else if (next4 == 1) begin
	 s2rdloc <= 0;
	 state3 <= 1;
	 outFlip1 <= (s2rdloc == depth-1) ? ~outFlip1 : outFlip1;	      
      end
      else begin
	 case(state3)
	   0: begin
	      s2rdloc <= 0;
	      state3 <= 0;
	      outFlip1 <= outFlip1;
	   end
	   1: begin
	      s2rdloc <= (s2rdloc == depth-1) ? 0 : s2rdloc + 1;
         state3 <= 1;
	      outFlip1 <= (s2rdloc == depth-1) ? ~outFlip1 : outFlip1;
	   end	     
	 endcase
      end
   end
   always @(posedge clk) begin
      case({tm28_d, s1rdloc})
	     {1'd0,  8'd0}: s1rd0 <= 192;
	     {1'd0,  8'd1}: s1rd0 <= 193;
	     {1'd0,  8'd2}: s1rd0 <= 194;
	     {1'd0,  8'd3}: s1rd0 <= 195;
	     {1'd0,  8'd4}: s1rd0 <= 196;
	     {1'd0,  8'd5}: s1rd0 <= 197;
	     {1'd0,  8'd6}: s1rd0 <= 198;
	     {1'd0,  8'd7}: s1rd0 <= 199;
	     {1'd0,  8'd8}: s1rd0 <= 200;
	     {1'd0,  8'd9}: s1rd0 <= 201;
	     {1'd0,  8'd10}: s1rd0 <= 202;
	     {1'd0,  8'd11}: s1rd0 <= 203;
	     {1'd0,  8'd12}: s1rd0 <= 204;
	     {1'd0,  8'd13}: s1rd0 <= 205;
	     {1'd0,  8'd14}: s1rd0 <= 206;
	     {1'd0,  8'd15}: s1rd0 <= 207;
	     {1'd0,  8'd16}: s1rd0 <= 208;
	     {1'd0,  8'd17}: s1rd0 <= 209;
	     {1'd0,  8'd18}: s1rd0 <= 210;
	     {1'd0,  8'd19}: s1rd0 <= 211;
	     {1'd0,  8'd20}: s1rd0 <= 212;
	     {1'd0,  8'd21}: s1rd0 <= 213;
	     {1'd0,  8'd22}: s1rd0 <= 214;
	     {1'd0,  8'd23}: s1rd0 <= 215;
	     {1'd0,  8'd24}: s1rd0 <= 216;
	     {1'd0,  8'd25}: s1rd0 <= 217;
	     {1'd0,  8'd26}: s1rd0 <= 218;
	     {1'd0,  8'd27}: s1rd0 <= 219;
	     {1'd0,  8'd28}: s1rd0 <= 220;
	     {1'd0,  8'd29}: s1rd0 <= 221;
	     {1'd0,  8'd30}: s1rd0 <= 222;
	     {1'd0,  8'd31}: s1rd0 <= 223;
	     {1'd0,  8'd32}: s1rd0 <= 224;
	     {1'd0,  8'd33}: s1rd0 <= 225;
	     {1'd0,  8'd34}: s1rd0 <= 226;
	     {1'd0,  8'd35}: s1rd0 <= 227;
	     {1'd0,  8'd36}: s1rd0 <= 228;
	     {1'd0,  8'd37}: s1rd0 <= 229;
	     {1'd0,  8'd38}: s1rd0 <= 230;
	     {1'd0,  8'd39}: s1rd0 <= 231;
	     {1'd0,  8'd40}: s1rd0 <= 232;
	     {1'd0,  8'd41}: s1rd0 <= 233;
	     {1'd0,  8'd42}: s1rd0 <= 234;
	     {1'd0,  8'd43}: s1rd0 <= 235;
	     {1'd0,  8'd44}: s1rd0 <= 236;
	     {1'd0,  8'd45}: s1rd0 <= 237;
	     {1'd0,  8'd46}: s1rd0 <= 238;
	     {1'd0,  8'd47}: s1rd0 <= 239;
	     {1'd0,  8'd48}: s1rd0 <= 240;
	     {1'd0,  8'd49}: s1rd0 <= 241;
	     {1'd0,  8'd50}: s1rd0 <= 242;
	     {1'd0,  8'd51}: s1rd0 <= 243;
	     {1'd0,  8'd52}: s1rd0 <= 244;
	     {1'd0,  8'd53}: s1rd0 <= 245;
	     {1'd0,  8'd54}: s1rd0 <= 246;
	     {1'd0,  8'd55}: s1rd0 <= 247;
	     {1'd0,  8'd56}: s1rd0 <= 248;
	     {1'd0,  8'd57}: s1rd0 <= 249;
	     {1'd0,  8'd58}: s1rd0 <= 250;
	     {1'd0,  8'd59}: s1rd0 <= 251;
	     {1'd0,  8'd60}: s1rd0 <= 252;
	     {1'd0,  8'd61}: s1rd0 <= 253;
	     {1'd0,  8'd62}: s1rd0 <= 254;
	     {1'd0,  8'd63}: s1rd0 <= 255;
	     {1'd0,  8'd64}: s1rd0 <= 128;
	     {1'd0,  8'd65}: s1rd0 <= 129;
	     {1'd0,  8'd66}: s1rd0 <= 130;
	     {1'd0,  8'd67}: s1rd0 <= 131;
	     {1'd0,  8'd68}: s1rd0 <= 132;
	     {1'd0,  8'd69}: s1rd0 <= 133;
	     {1'd0,  8'd70}: s1rd0 <= 134;
	     {1'd0,  8'd71}: s1rd0 <= 135;
	     {1'd0,  8'd72}: s1rd0 <= 136;
	     {1'd0,  8'd73}: s1rd0 <= 137;
	     {1'd0,  8'd74}: s1rd0 <= 138;
	     {1'd0,  8'd75}: s1rd0 <= 139;
	     {1'd0,  8'd76}: s1rd0 <= 140;
	     {1'd0,  8'd77}: s1rd0 <= 141;
	     {1'd0,  8'd78}: s1rd0 <= 142;
	     {1'd0,  8'd79}: s1rd0 <= 143;
	     {1'd0,  8'd80}: s1rd0 <= 144;
	     {1'd0,  8'd81}: s1rd0 <= 145;
	     {1'd0,  8'd82}: s1rd0 <= 146;
	     {1'd0,  8'd83}: s1rd0 <= 147;
	     {1'd0,  8'd84}: s1rd0 <= 148;
	     {1'd0,  8'd85}: s1rd0 <= 149;
	     {1'd0,  8'd86}: s1rd0 <= 150;
	     {1'd0,  8'd87}: s1rd0 <= 151;
	     {1'd0,  8'd88}: s1rd0 <= 152;
	     {1'd0,  8'd89}: s1rd0 <= 153;
	     {1'd0,  8'd90}: s1rd0 <= 154;
	     {1'd0,  8'd91}: s1rd0 <= 155;
	     {1'd0,  8'd92}: s1rd0 <= 156;
	     {1'd0,  8'd93}: s1rd0 <= 157;
	     {1'd0,  8'd94}: s1rd0 <= 158;
	     {1'd0,  8'd95}: s1rd0 <= 159;
	     {1'd0,  8'd96}: s1rd0 <= 160;
	     {1'd0,  8'd97}: s1rd0 <= 161;
	     {1'd0,  8'd98}: s1rd0 <= 162;
	     {1'd0,  8'd99}: s1rd0 <= 163;
	     {1'd0,  8'd100}: s1rd0 <= 164;
	     {1'd0,  8'd101}: s1rd0 <= 165;
	     {1'd0,  8'd102}: s1rd0 <= 166;
	     {1'd0,  8'd103}: s1rd0 <= 167;
	     {1'd0,  8'd104}: s1rd0 <= 168;
	     {1'd0,  8'd105}: s1rd0 <= 169;
	     {1'd0,  8'd106}: s1rd0 <= 170;
	     {1'd0,  8'd107}: s1rd0 <= 171;
	     {1'd0,  8'd108}: s1rd0 <= 172;
	     {1'd0,  8'd109}: s1rd0 <= 173;
	     {1'd0,  8'd110}: s1rd0 <= 174;
	     {1'd0,  8'd111}: s1rd0 <= 175;
	     {1'd0,  8'd112}: s1rd0 <= 176;
	     {1'd0,  8'd113}: s1rd0 <= 177;
	     {1'd0,  8'd114}: s1rd0 <= 178;
	     {1'd0,  8'd115}: s1rd0 <= 179;
	     {1'd0,  8'd116}: s1rd0 <= 180;
	     {1'd0,  8'd117}: s1rd0 <= 181;
	     {1'd0,  8'd118}: s1rd0 <= 182;
	     {1'd0,  8'd119}: s1rd0 <= 183;
	     {1'd0,  8'd120}: s1rd0 <= 184;
	     {1'd0,  8'd121}: s1rd0 <= 185;
	     {1'd0,  8'd122}: s1rd0 <= 186;
	     {1'd0,  8'd123}: s1rd0 <= 187;
	     {1'd0,  8'd124}: s1rd0 <= 188;
	     {1'd0,  8'd125}: s1rd0 <= 189;
	     {1'd0,  8'd126}: s1rd0 <= 190;
	     {1'd0,  8'd127}: s1rd0 <= 191;
	     {1'd0,  8'd128}: s1rd0 <= 64;
	     {1'd0,  8'd129}: s1rd0 <= 65;
	     {1'd0,  8'd130}: s1rd0 <= 66;
	     {1'd0,  8'd131}: s1rd0 <= 67;
	     {1'd0,  8'd132}: s1rd0 <= 68;
	     {1'd0,  8'd133}: s1rd0 <= 69;
	     {1'd0,  8'd134}: s1rd0 <= 70;
	     {1'd0,  8'd135}: s1rd0 <= 71;
	     {1'd0,  8'd136}: s1rd0 <= 72;
	     {1'd0,  8'd137}: s1rd0 <= 73;
	     {1'd0,  8'd138}: s1rd0 <= 74;
	     {1'd0,  8'd139}: s1rd0 <= 75;
	     {1'd0,  8'd140}: s1rd0 <= 76;
	     {1'd0,  8'd141}: s1rd0 <= 77;
	     {1'd0,  8'd142}: s1rd0 <= 78;
	     {1'd0,  8'd143}: s1rd0 <= 79;
	     {1'd0,  8'd144}: s1rd0 <= 80;
	     {1'd0,  8'd145}: s1rd0 <= 81;
	     {1'd0,  8'd146}: s1rd0 <= 82;
	     {1'd0,  8'd147}: s1rd0 <= 83;
	     {1'd0,  8'd148}: s1rd0 <= 84;
	     {1'd0,  8'd149}: s1rd0 <= 85;
	     {1'd0,  8'd150}: s1rd0 <= 86;
	     {1'd0,  8'd151}: s1rd0 <= 87;
	     {1'd0,  8'd152}: s1rd0 <= 88;
	     {1'd0,  8'd153}: s1rd0 <= 89;
	     {1'd0,  8'd154}: s1rd0 <= 90;
	     {1'd0,  8'd155}: s1rd0 <= 91;
	     {1'd0,  8'd156}: s1rd0 <= 92;
	     {1'd0,  8'd157}: s1rd0 <= 93;
	     {1'd0,  8'd158}: s1rd0 <= 94;
	     {1'd0,  8'd159}: s1rd0 <= 95;
	     {1'd0,  8'd160}: s1rd0 <= 96;
	     {1'd0,  8'd161}: s1rd0 <= 97;
	     {1'd0,  8'd162}: s1rd0 <= 98;
	     {1'd0,  8'd163}: s1rd0 <= 99;
	     {1'd0,  8'd164}: s1rd0 <= 100;
	     {1'd0,  8'd165}: s1rd0 <= 101;
	     {1'd0,  8'd166}: s1rd0 <= 102;
	     {1'd0,  8'd167}: s1rd0 <= 103;
	     {1'd0,  8'd168}: s1rd0 <= 104;
	     {1'd0,  8'd169}: s1rd0 <= 105;
	     {1'd0,  8'd170}: s1rd0 <= 106;
	     {1'd0,  8'd171}: s1rd0 <= 107;
	     {1'd0,  8'd172}: s1rd0 <= 108;
	     {1'd0,  8'd173}: s1rd0 <= 109;
	     {1'd0,  8'd174}: s1rd0 <= 110;
	     {1'd0,  8'd175}: s1rd0 <= 111;
	     {1'd0,  8'd176}: s1rd0 <= 112;
	     {1'd0,  8'd177}: s1rd0 <= 113;
	     {1'd0,  8'd178}: s1rd0 <= 114;
	     {1'd0,  8'd179}: s1rd0 <= 115;
	     {1'd0,  8'd180}: s1rd0 <= 116;
	     {1'd0,  8'd181}: s1rd0 <= 117;
	     {1'd0,  8'd182}: s1rd0 <= 118;
	     {1'd0,  8'd183}: s1rd0 <= 119;
	     {1'd0,  8'd184}: s1rd0 <= 120;
	     {1'd0,  8'd185}: s1rd0 <= 121;
	     {1'd0,  8'd186}: s1rd0 <= 122;
	     {1'd0,  8'd187}: s1rd0 <= 123;
	     {1'd0,  8'd188}: s1rd0 <= 124;
	     {1'd0,  8'd189}: s1rd0 <= 125;
	     {1'd0,  8'd190}: s1rd0 <= 126;
	     {1'd0,  8'd191}: s1rd0 <= 127;
	     {1'd0,  8'd192}: s1rd0 <= 0;
	     {1'd0,  8'd193}: s1rd0 <= 1;
	     {1'd0,  8'd194}: s1rd0 <= 2;
	     {1'd0,  8'd195}: s1rd0 <= 3;
	     {1'd0,  8'd196}: s1rd0 <= 4;
	     {1'd0,  8'd197}: s1rd0 <= 5;
	     {1'd0,  8'd198}: s1rd0 <= 6;
	     {1'd0,  8'd199}: s1rd0 <= 7;
	     {1'd0,  8'd200}: s1rd0 <= 8;
	     {1'd0,  8'd201}: s1rd0 <= 9;
	     {1'd0,  8'd202}: s1rd0 <= 10;
	     {1'd0,  8'd203}: s1rd0 <= 11;
	     {1'd0,  8'd204}: s1rd0 <= 12;
	     {1'd0,  8'd205}: s1rd0 <= 13;
	     {1'd0,  8'd206}: s1rd0 <= 14;
	     {1'd0,  8'd207}: s1rd0 <= 15;
	     {1'd0,  8'd208}: s1rd0 <= 16;
	     {1'd0,  8'd209}: s1rd0 <= 17;
	     {1'd0,  8'd210}: s1rd0 <= 18;
	     {1'd0,  8'd211}: s1rd0 <= 19;
	     {1'd0,  8'd212}: s1rd0 <= 20;
	     {1'd0,  8'd213}: s1rd0 <= 21;
	     {1'd0,  8'd214}: s1rd0 <= 22;
	     {1'd0,  8'd215}: s1rd0 <= 23;
	     {1'd0,  8'd216}: s1rd0 <= 24;
	     {1'd0,  8'd217}: s1rd0 <= 25;
	     {1'd0,  8'd218}: s1rd0 <= 26;
	     {1'd0,  8'd219}: s1rd0 <= 27;
	     {1'd0,  8'd220}: s1rd0 <= 28;
	     {1'd0,  8'd221}: s1rd0 <= 29;
	     {1'd0,  8'd222}: s1rd0 <= 30;
	     {1'd0,  8'd223}: s1rd0 <= 31;
	     {1'd0,  8'd224}: s1rd0 <= 32;
	     {1'd0,  8'd225}: s1rd0 <= 33;
	     {1'd0,  8'd226}: s1rd0 <= 34;
	     {1'd0,  8'd227}: s1rd0 <= 35;
	     {1'd0,  8'd228}: s1rd0 <= 36;
	     {1'd0,  8'd229}: s1rd0 <= 37;
	     {1'd0,  8'd230}: s1rd0 <= 38;
	     {1'd0,  8'd231}: s1rd0 <= 39;
	     {1'd0,  8'd232}: s1rd0 <= 40;
	     {1'd0,  8'd233}: s1rd0 <= 41;
	     {1'd0,  8'd234}: s1rd0 <= 42;
	     {1'd0,  8'd235}: s1rd0 <= 43;
	     {1'd0,  8'd236}: s1rd0 <= 44;
	     {1'd0,  8'd237}: s1rd0 <= 45;
	     {1'd0,  8'd238}: s1rd0 <= 46;
	     {1'd0,  8'd239}: s1rd0 <= 47;
	     {1'd0,  8'd240}: s1rd0 <= 48;
	     {1'd0,  8'd241}: s1rd0 <= 49;
	     {1'd0,  8'd242}: s1rd0 <= 50;
	     {1'd0,  8'd243}: s1rd0 <= 51;
	     {1'd0,  8'd244}: s1rd0 <= 52;
	     {1'd0,  8'd245}: s1rd0 <= 53;
	     {1'd0,  8'd246}: s1rd0 <= 54;
	     {1'd0,  8'd247}: s1rd0 <= 55;
	     {1'd0,  8'd248}: s1rd0 <= 56;
	     {1'd0,  8'd249}: s1rd0 <= 57;
	     {1'd0,  8'd250}: s1rd0 <= 58;
	     {1'd0,  8'd251}: s1rd0 <= 59;
	     {1'd0,  8'd252}: s1rd0 <= 60;
	     {1'd0,  8'd253}: s1rd0 <= 61;
	     {1'd0,  8'd254}: s1rd0 <= 62;
	     {1'd0,  8'd255}: s1rd0 <= 63;
      endcase      
   end

// synthesis attribute rom_style of s1rd0 is "distributed"
   always @(posedge clk) begin
      case({tm28_d, s1rdloc})
	     {1'd0,  8'd0}: s1rd1 <= 128;
	     {1'd0,  8'd1}: s1rd1 <= 129;
	     {1'd0,  8'd2}: s1rd1 <= 130;
	     {1'd0,  8'd3}: s1rd1 <= 131;
	     {1'd0,  8'd4}: s1rd1 <= 132;
	     {1'd0,  8'd5}: s1rd1 <= 133;
	     {1'd0,  8'd6}: s1rd1 <= 134;
	     {1'd0,  8'd7}: s1rd1 <= 135;
	     {1'd0,  8'd8}: s1rd1 <= 136;
	     {1'd0,  8'd9}: s1rd1 <= 137;
	     {1'd0,  8'd10}: s1rd1 <= 138;
	     {1'd0,  8'd11}: s1rd1 <= 139;
	     {1'd0,  8'd12}: s1rd1 <= 140;
	     {1'd0,  8'd13}: s1rd1 <= 141;
	     {1'd0,  8'd14}: s1rd1 <= 142;
	     {1'd0,  8'd15}: s1rd1 <= 143;
	     {1'd0,  8'd16}: s1rd1 <= 144;
	     {1'd0,  8'd17}: s1rd1 <= 145;
	     {1'd0,  8'd18}: s1rd1 <= 146;
	     {1'd0,  8'd19}: s1rd1 <= 147;
	     {1'd0,  8'd20}: s1rd1 <= 148;
	     {1'd0,  8'd21}: s1rd1 <= 149;
	     {1'd0,  8'd22}: s1rd1 <= 150;
	     {1'd0,  8'd23}: s1rd1 <= 151;
	     {1'd0,  8'd24}: s1rd1 <= 152;
	     {1'd0,  8'd25}: s1rd1 <= 153;
	     {1'd0,  8'd26}: s1rd1 <= 154;
	     {1'd0,  8'd27}: s1rd1 <= 155;
	     {1'd0,  8'd28}: s1rd1 <= 156;
	     {1'd0,  8'd29}: s1rd1 <= 157;
	     {1'd0,  8'd30}: s1rd1 <= 158;
	     {1'd0,  8'd31}: s1rd1 <= 159;
	     {1'd0,  8'd32}: s1rd1 <= 160;
	     {1'd0,  8'd33}: s1rd1 <= 161;
	     {1'd0,  8'd34}: s1rd1 <= 162;
	     {1'd0,  8'd35}: s1rd1 <= 163;
	     {1'd0,  8'd36}: s1rd1 <= 164;
	     {1'd0,  8'd37}: s1rd1 <= 165;
	     {1'd0,  8'd38}: s1rd1 <= 166;
	     {1'd0,  8'd39}: s1rd1 <= 167;
	     {1'd0,  8'd40}: s1rd1 <= 168;
	     {1'd0,  8'd41}: s1rd1 <= 169;
	     {1'd0,  8'd42}: s1rd1 <= 170;
	     {1'd0,  8'd43}: s1rd1 <= 171;
	     {1'd0,  8'd44}: s1rd1 <= 172;
	     {1'd0,  8'd45}: s1rd1 <= 173;
	     {1'd0,  8'd46}: s1rd1 <= 174;
	     {1'd0,  8'd47}: s1rd1 <= 175;
	     {1'd0,  8'd48}: s1rd1 <= 176;
	     {1'd0,  8'd49}: s1rd1 <= 177;
	     {1'd0,  8'd50}: s1rd1 <= 178;
	     {1'd0,  8'd51}: s1rd1 <= 179;
	     {1'd0,  8'd52}: s1rd1 <= 180;
	     {1'd0,  8'd53}: s1rd1 <= 181;
	     {1'd0,  8'd54}: s1rd1 <= 182;
	     {1'd0,  8'd55}: s1rd1 <= 183;
	     {1'd0,  8'd56}: s1rd1 <= 184;
	     {1'd0,  8'd57}: s1rd1 <= 185;
	     {1'd0,  8'd58}: s1rd1 <= 186;
	     {1'd0,  8'd59}: s1rd1 <= 187;
	     {1'd0,  8'd60}: s1rd1 <= 188;
	     {1'd0,  8'd61}: s1rd1 <= 189;
	     {1'd0,  8'd62}: s1rd1 <= 190;
	     {1'd0,  8'd63}: s1rd1 <= 191;
	     {1'd0,  8'd64}: s1rd1 <= 192;
	     {1'd0,  8'd65}: s1rd1 <= 193;
	     {1'd0,  8'd66}: s1rd1 <= 194;
	     {1'd0,  8'd67}: s1rd1 <= 195;
	     {1'd0,  8'd68}: s1rd1 <= 196;
	     {1'd0,  8'd69}: s1rd1 <= 197;
	     {1'd0,  8'd70}: s1rd1 <= 198;
	     {1'd0,  8'd71}: s1rd1 <= 199;
	     {1'd0,  8'd72}: s1rd1 <= 200;
	     {1'd0,  8'd73}: s1rd1 <= 201;
	     {1'd0,  8'd74}: s1rd1 <= 202;
	     {1'd0,  8'd75}: s1rd1 <= 203;
	     {1'd0,  8'd76}: s1rd1 <= 204;
	     {1'd0,  8'd77}: s1rd1 <= 205;
	     {1'd0,  8'd78}: s1rd1 <= 206;
	     {1'd0,  8'd79}: s1rd1 <= 207;
	     {1'd0,  8'd80}: s1rd1 <= 208;
	     {1'd0,  8'd81}: s1rd1 <= 209;
	     {1'd0,  8'd82}: s1rd1 <= 210;
	     {1'd0,  8'd83}: s1rd1 <= 211;
	     {1'd0,  8'd84}: s1rd1 <= 212;
	     {1'd0,  8'd85}: s1rd1 <= 213;
	     {1'd0,  8'd86}: s1rd1 <= 214;
	     {1'd0,  8'd87}: s1rd1 <= 215;
	     {1'd0,  8'd88}: s1rd1 <= 216;
	     {1'd0,  8'd89}: s1rd1 <= 217;
	     {1'd0,  8'd90}: s1rd1 <= 218;
	     {1'd0,  8'd91}: s1rd1 <= 219;
	     {1'd0,  8'd92}: s1rd1 <= 220;
	     {1'd0,  8'd93}: s1rd1 <= 221;
	     {1'd0,  8'd94}: s1rd1 <= 222;
	     {1'd0,  8'd95}: s1rd1 <= 223;
	     {1'd0,  8'd96}: s1rd1 <= 224;
	     {1'd0,  8'd97}: s1rd1 <= 225;
	     {1'd0,  8'd98}: s1rd1 <= 226;
	     {1'd0,  8'd99}: s1rd1 <= 227;
	     {1'd0,  8'd100}: s1rd1 <= 228;
	     {1'd0,  8'd101}: s1rd1 <= 229;
	     {1'd0,  8'd102}: s1rd1 <= 230;
	     {1'd0,  8'd103}: s1rd1 <= 231;
	     {1'd0,  8'd104}: s1rd1 <= 232;
	     {1'd0,  8'd105}: s1rd1 <= 233;
	     {1'd0,  8'd106}: s1rd1 <= 234;
	     {1'd0,  8'd107}: s1rd1 <= 235;
	     {1'd0,  8'd108}: s1rd1 <= 236;
	     {1'd0,  8'd109}: s1rd1 <= 237;
	     {1'd0,  8'd110}: s1rd1 <= 238;
	     {1'd0,  8'd111}: s1rd1 <= 239;
	     {1'd0,  8'd112}: s1rd1 <= 240;
	     {1'd0,  8'd113}: s1rd1 <= 241;
	     {1'd0,  8'd114}: s1rd1 <= 242;
	     {1'd0,  8'd115}: s1rd1 <= 243;
	     {1'd0,  8'd116}: s1rd1 <= 244;
	     {1'd0,  8'd117}: s1rd1 <= 245;
	     {1'd0,  8'd118}: s1rd1 <= 246;
	     {1'd0,  8'd119}: s1rd1 <= 247;
	     {1'd0,  8'd120}: s1rd1 <= 248;
	     {1'd0,  8'd121}: s1rd1 <= 249;
	     {1'd0,  8'd122}: s1rd1 <= 250;
	     {1'd0,  8'd123}: s1rd1 <= 251;
	     {1'd0,  8'd124}: s1rd1 <= 252;
	     {1'd0,  8'd125}: s1rd1 <= 253;
	     {1'd0,  8'd126}: s1rd1 <= 254;
	     {1'd0,  8'd127}: s1rd1 <= 255;
	     {1'd0,  8'd128}: s1rd1 <= 0;
	     {1'd0,  8'd129}: s1rd1 <= 1;
	     {1'd0,  8'd130}: s1rd1 <= 2;
	     {1'd0,  8'd131}: s1rd1 <= 3;
	     {1'd0,  8'd132}: s1rd1 <= 4;
	     {1'd0,  8'd133}: s1rd1 <= 5;
	     {1'd0,  8'd134}: s1rd1 <= 6;
	     {1'd0,  8'd135}: s1rd1 <= 7;
	     {1'd0,  8'd136}: s1rd1 <= 8;
	     {1'd0,  8'd137}: s1rd1 <= 9;
	     {1'd0,  8'd138}: s1rd1 <= 10;
	     {1'd0,  8'd139}: s1rd1 <= 11;
	     {1'd0,  8'd140}: s1rd1 <= 12;
	     {1'd0,  8'd141}: s1rd1 <= 13;
	     {1'd0,  8'd142}: s1rd1 <= 14;
	     {1'd0,  8'd143}: s1rd1 <= 15;
	     {1'd0,  8'd144}: s1rd1 <= 16;
	     {1'd0,  8'd145}: s1rd1 <= 17;
	     {1'd0,  8'd146}: s1rd1 <= 18;
	     {1'd0,  8'd147}: s1rd1 <= 19;
	     {1'd0,  8'd148}: s1rd1 <= 20;
	     {1'd0,  8'd149}: s1rd1 <= 21;
	     {1'd0,  8'd150}: s1rd1 <= 22;
	     {1'd0,  8'd151}: s1rd1 <= 23;
	     {1'd0,  8'd152}: s1rd1 <= 24;
	     {1'd0,  8'd153}: s1rd1 <= 25;
	     {1'd0,  8'd154}: s1rd1 <= 26;
	     {1'd0,  8'd155}: s1rd1 <= 27;
	     {1'd0,  8'd156}: s1rd1 <= 28;
	     {1'd0,  8'd157}: s1rd1 <= 29;
	     {1'd0,  8'd158}: s1rd1 <= 30;
	     {1'd0,  8'd159}: s1rd1 <= 31;
	     {1'd0,  8'd160}: s1rd1 <= 32;
	     {1'd0,  8'd161}: s1rd1 <= 33;
	     {1'd0,  8'd162}: s1rd1 <= 34;
	     {1'd0,  8'd163}: s1rd1 <= 35;
	     {1'd0,  8'd164}: s1rd1 <= 36;
	     {1'd0,  8'd165}: s1rd1 <= 37;
	     {1'd0,  8'd166}: s1rd1 <= 38;
	     {1'd0,  8'd167}: s1rd1 <= 39;
	     {1'd0,  8'd168}: s1rd1 <= 40;
	     {1'd0,  8'd169}: s1rd1 <= 41;
	     {1'd0,  8'd170}: s1rd1 <= 42;
	     {1'd0,  8'd171}: s1rd1 <= 43;
	     {1'd0,  8'd172}: s1rd1 <= 44;
	     {1'd0,  8'd173}: s1rd1 <= 45;
	     {1'd0,  8'd174}: s1rd1 <= 46;
	     {1'd0,  8'd175}: s1rd1 <= 47;
	     {1'd0,  8'd176}: s1rd1 <= 48;
	     {1'd0,  8'd177}: s1rd1 <= 49;
	     {1'd0,  8'd178}: s1rd1 <= 50;
	     {1'd0,  8'd179}: s1rd1 <= 51;
	     {1'd0,  8'd180}: s1rd1 <= 52;
	     {1'd0,  8'd181}: s1rd1 <= 53;
	     {1'd0,  8'd182}: s1rd1 <= 54;
	     {1'd0,  8'd183}: s1rd1 <= 55;
	     {1'd0,  8'd184}: s1rd1 <= 56;
	     {1'd0,  8'd185}: s1rd1 <= 57;
	     {1'd0,  8'd186}: s1rd1 <= 58;
	     {1'd0,  8'd187}: s1rd1 <= 59;
	     {1'd0,  8'd188}: s1rd1 <= 60;
	     {1'd0,  8'd189}: s1rd1 <= 61;
	     {1'd0,  8'd190}: s1rd1 <= 62;
	     {1'd0,  8'd191}: s1rd1 <= 63;
	     {1'd0,  8'd192}: s1rd1 <= 64;
	     {1'd0,  8'd193}: s1rd1 <= 65;
	     {1'd0,  8'd194}: s1rd1 <= 66;
	     {1'd0,  8'd195}: s1rd1 <= 67;
	     {1'd0,  8'd196}: s1rd1 <= 68;
	     {1'd0,  8'd197}: s1rd1 <= 69;
	     {1'd0,  8'd198}: s1rd1 <= 70;
	     {1'd0,  8'd199}: s1rd1 <= 71;
	     {1'd0,  8'd200}: s1rd1 <= 72;
	     {1'd0,  8'd201}: s1rd1 <= 73;
	     {1'd0,  8'd202}: s1rd1 <= 74;
	     {1'd0,  8'd203}: s1rd1 <= 75;
	     {1'd0,  8'd204}: s1rd1 <= 76;
	     {1'd0,  8'd205}: s1rd1 <= 77;
	     {1'd0,  8'd206}: s1rd1 <= 78;
	     {1'd0,  8'd207}: s1rd1 <= 79;
	     {1'd0,  8'd208}: s1rd1 <= 80;
	     {1'd0,  8'd209}: s1rd1 <= 81;
	     {1'd0,  8'd210}: s1rd1 <= 82;
	     {1'd0,  8'd211}: s1rd1 <= 83;
	     {1'd0,  8'd212}: s1rd1 <= 84;
	     {1'd0,  8'd213}: s1rd1 <= 85;
	     {1'd0,  8'd214}: s1rd1 <= 86;
	     {1'd0,  8'd215}: s1rd1 <= 87;
	     {1'd0,  8'd216}: s1rd1 <= 88;
	     {1'd0,  8'd217}: s1rd1 <= 89;
	     {1'd0,  8'd218}: s1rd1 <= 90;
	     {1'd0,  8'd219}: s1rd1 <= 91;
	     {1'd0,  8'd220}: s1rd1 <= 92;
	     {1'd0,  8'd221}: s1rd1 <= 93;
	     {1'd0,  8'd222}: s1rd1 <= 94;
	     {1'd0,  8'd223}: s1rd1 <= 95;
	     {1'd0,  8'd224}: s1rd1 <= 96;
	     {1'd0,  8'd225}: s1rd1 <= 97;
	     {1'd0,  8'd226}: s1rd1 <= 98;
	     {1'd0,  8'd227}: s1rd1 <= 99;
	     {1'd0,  8'd228}: s1rd1 <= 100;
	     {1'd0,  8'd229}: s1rd1 <= 101;
	     {1'd0,  8'd230}: s1rd1 <= 102;
	     {1'd0,  8'd231}: s1rd1 <= 103;
	     {1'd0,  8'd232}: s1rd1 <= 104;
	     {1'd0,  8'd233}: s1rd1 <= 105;
	     {1'd0,  8'd234}: s1rd1 <= 106;
	     {1'd0,  8'd235}: s1rd1 <= 107;
	     {1'd0,  8'd236}: s1rd1 <= 108;
	     {1'd0,  8'd237}: s1rd1 <= 109;
	     {1'd0,  8'd238}: s1rd1 <= 110;
	     {1'd0,  8'd239}: s1rd1 <= 111;
	     {1'd0,  8'd240}: s1rd1 <= 112;
	     {1'd0,  8'd241}: s1rd1 <= 113;
	     {1'd0,  8'd242}: s1rd1 <= 114;
	     {1'd0,  8'd243}: s1rd1 <= 115;
	     {1'd0,  8'd244}: s1rd1 <= 116;
	     {1'd0,  8'd245}: s1rd1 <= 117;
	     {1'd0,  8'd246}: s1rd1 <= 118;
	     {1'd0,  8'd247}: s1rd1 <= 119;
	     {1'd0,  8'd248}: s1rd1 <= 120;
	     {1'd0,  8'd249}: s1rd1 <= 121;
	     {1'd0,  8'd250}: s1rd1 <= 122;
	     {1'd0,  8'd251}: s1rd1 <= 123;
	     {1'd0,  8'd252}: s1rd1 <= 124;
	     {1'd0,  8'd253}: s1rd1 <= 125;
	     {1'd0,  8'd254}: s1rd1 <= 126;
	     {1'd0,  8'd255}: s1rd1 <= 127;
      endcase      
   end

// synthesis attribute rom_style of s1rd1 is "distributed"
   always @(posedge clk) begin
      case({tm28_d, s1rdloc})
	     {1'd0,  8'd0}: s1rd2 <= 64;
	     {1'd0,  8'd1}: s1rd2 <= 65;
	     {1'd0,  8'd2}: s1rd2 <= 66;
	     {1'd0,  8'd3}: s1rd2 <= 67;
	     {1'd0,  8'd4}: s1rd2 <= 68;
	     {1'd0,  8'd5}: s1rd2 <= 69;
	     {1'd0,  8'd6}: s1rd2 <= 70;
	     {1'd0,  8'd7}: s1rd2 <= 71;
	     {1'd0,  8'd8}: s1rd2 <= 72;
	     {1'd0,  8'd9}: s1rd2 <= 73;
	     {1'd0,  8'd10}: s1rd2 <= 74;
	     {1'd0,  8'd11}: s1rd2 <= 75;
	     {1'd0,  8'd12}: s1rd2 <= 76;
	     {1'd0,  8'd13}: s1rd2 <= 77;
	     {1'd0,  8'd14}: s1rd2 <= 78;
	     {1'd0,  8'd15}: s1rd2 <= 79;
	     {1'd0,  8'd16}: s1rd2 <= 80;
	     {1'd0,  8'd17}: s1rd2 <= 81;
	     {1'd0,  8'd18}: s1rd2 <= 82;
	     {1'd0,  8'd19}: s1rd2 <= 83;
	     {1'd0,  8'd20}: s1rd2 <= 84;
	     {1'd0,  8'd21}: s1rd2 <= 85;
	     {1'd0,  8'd22}: s1rd2 <= 86;
	     {1'd0,  8'd23}: s1rd2 <= 87;
	     {1'd0,  8'd24}: s1rd2 <= 88;
	     {1'd0,  8'd25}: s1rd2 <= 89;
	     {1'd0,  8'd26}: s1rd2 <= 90;
	     {1'd0,  8'd27}: s1rd2 <= 91;
	     {1'd0,  8'd28}: s1rd2 <= 92;
	     {1'd0,  8'd29}: s1rd2 <= 93;
	     {1'd0,  8'd30}: s1rd2 <= 94;
	     {1'd0,  8'd31}: s1rd2 <= 95;
	     {1'd0,  8'd32}: s1rd2 <= 96;
	     {1'd0,  8'd33}: s1rd2 <= 97;
	     {1'd0,  8'd34}: s1rd2 <= 98;
	     {1'd0,  8'd35}: s1rd2 <= 99;
	     {1'd0,  8'd36}: s1rd2 <= 100;
	     {1'd0,  8'd37}: s1rd2 <= 101;
	     {1'd0,  8'd38}: s1rd2 <= 102;
	     {1'd0,  8'd39}: s1rd2 <= 103;
	     {1'd0,  8'd40}: s1rd2 <= 104;
	     {1'd0,  8'd41}: s1rd2 <= 105;
	     {1'd0,  8'd42}: s1rd2 <= 106;
	     {1'd0,  8'd43}: s1rd2 <= 107;
	     {1'd0,  8'd44}: s1rd2 <= 108;
	     {1'd0,  8'd45}: s1rd2 <= 109;
	     {1'd0,  8'd46}: s1rd2 <= 110;
	     {1'd0,  8'd47}: s1rd2 <= 111;
	     {1'd0,  8'd48}: s1rd2 <= 112;
	     {1'd0,  8'd49}: s1rd2 <= 113;
	     {1'd0,  8'd50}: s1rd2 <= 114;
	     {1'd0,  8'd51}: s1rd2 <= 115;
	     {1'd0,  8'd52}: s1rd2 <= 116;
	     {1'd0,  8'd53}: s1rd2 <= 117;
	     {1'd0,  8'd54}: s1rd2 <= 118;
	     {1'd0,  8'd55}: s1rd2 <= 119;
	     {1'd0,  8'd56}: s1rd2 <= 120;
	     {1'd0,  8'd57}: s1rd2 <= 121;
	     {1'd0,  8'd58}: s1rd2 <= 122;
	     {1'd0,  8'd59}: s1rd2 <= 123;
	     {1'd0,  8'd60}: s1rd2 <= 124;
	     {1'd0,  8'd61}: s1rd2 <= 125;
	     {1'd0,  8'd62}: s1rd2 <= 126;
	     {1'd0,  8'd63}: s1rd2 <= 127;
	     {1'd0,  8'd64}: s1rd2 <= 0;
	     {1'd0,  8'd65}: s1rd2 <= 1;
	     {1'd0,  8'd66}: s1rd2 <= 2;
	     {1'd0,  8'd67}: s1rd2 <= 3;
	     {1'd0,  8'd68}: s1rd2 <= 4;
	     {1'd0,  8'd69}: s1rd2 <= 5;
	     {1'd0,  8'd70}: s1rd2 <= 6;
	     {1'd0,  8'd71}: s1rd2 <= 7;
	     {1'd0,  8'd72}: s1rd2 <= 8;
	     {1'd0,  8'd73}: s1rd2 <= 9;
	     {1'd0,  8'd74}: s1rd2 <= 10;
	     {1'd0,  8'd75}: s1rd2 <= 11;
	     {1'd0,  8'd76}: s1rd2 <= 12;
	     {1'd0,  8'd77}: s1rd2 <= 13;
	     {1'd0,  8'd78}: s1rd2 <= 14;
	     {1'd0,  8'd79}: s1rd2 <= 15;
	     {1'd0,  8'd80}: s1rd2 <= 16;
	     {1'd0,  8'd81}: s1rd2 <= 17;
	     {1'd0,  8'd82}: s1rd2 <= 18;
	     {1'd0,  8'd83}: s1rd2 <= 19;
	     {1'd0,  8'd84}: s1rd2 <= 20;
	     {1'd0,  8'd85}: s1rd2 <= 21;
	     {1'd0,  8'd86}: s1rd2 <= 22;
	     {1'd0,  8'd87}: s1rd2 <= 23;
	     {1'd0,  8'd88}: s1rd2 <= 24;
	     {1'd0,  8'd89}: s1rd2 <= 25;
	     {1'd0,  8'd90}: s1rd2 <= 26;
	     {1'd0,  8'd91}: s1rd2 <= 27;
	     {1'd0,  8'd92}: s1rd2 <= 28;
	     {1'd0,  8'd93}: s1rd2 <= 29;
	     {1'd0,  8'd94}: s1rd2 <= 30;
	     {1'd0,  8'd95}: s1rd2 <= 31;
	     {1'd0,  8'd96}: s1rd2 <= 32;
	     {1'd0,  8'd97}: s1rd2 <= 33;
	     {1'd0,  8'd98}: s1rd2 <= 34;
	     {1'd0,  8'd99}: s1rd2 <= 35;
	     {1'd0,  8'd100}: s1rd2 <= 36;
	     {1'd0,  8'd101}: s1rd2 <= 37;
	     {1'd0,  8'd102}: s1rd2 <= 38;
	     {1'd0,  8'd103}: s1rd2 <= 39;
	     {1'd0,  8'd104}: s1rd2 <= 40;
	     {1'd0,  8'd105}: s1rd2 <= 41;
	     {1'd0,  8'd106}: s1rd2 <= 42;
	     {1'd0,  8'd107}: s1rd2 <= 43;
	     {1'd0,  8'd108}: s1rd2 <= 44;
	     {1'd0,  8'd109}: s1rd2 <= 45;
	     {1'd0,  8'd110}: s1rd2 <= 46;
	     {1'd0,  8'd111}: s1rd2 <= 47;
	     {1'd0,  8'd112}: s1rd2 <= 48;
	     {1'd0,  8'd113}: s1rd2 <= 49;
	     {1'd0,  8'd114}: s1rd2 <= 50;
	     {1'd0,  8'd115}: s1rd2 <= 51;
	     {1'd0,  8'd116}: s1rd2 <= 52;
	     {1'd0,  8'd117}: s1rd2 <= 53;
	     {1'd0,  8'd118}: s1rd2 <= 54;
	     {1'd0,  8'd119}: s1rd2 <= 55;
	     {1'd0,  8'd120}: s1rd2 <= 56;
	     {1'd0,  8'd121}: s1rd2 <= 57;
	     {1'd0,  8'd122}: s1rd2 <= 58;
	     {1'd0,  8'd123}: s1rd2 <= 59;
	     {1'd0,  8'd124}: s1rd2 <= 60;
	     {1'd0,  8'd125}: s1rd2 <= 61;
	     {1'd0,  8'd126}: s1rd2 <= 62;
	     {1'd0,  8'd127}: s1rd2 <= 63;
	     {1'd0,  8'd128}: s1rd2 <= 192;
	     {1'd0,  8'd129}: s1rd2 <= 193;
	     {1'd0,  8'd130}: s1rd2 <= 194;
	     {1'd0,  8'd131}: s1rd2 <= 195;
	     {1'd0,  8'd132}: s1rd2 <= 196;
	     {1'd0,  8'd133}: s1rd2 <= 197;
	     {1'd0,  8'd134}: s1rd2 <= 198;
	     {1'd0,  8'd135}: s1rd2 <= 199;
	     {1'd0,  8'd136}: s1rd2 <= 200;
	     {1'd0,  8'd137}: s1rd2 <= 201;
	     {1'd0,  8'd138}: s1rd2 <= 202;
	     {1'd0,  8'd139}: s1rd2 <= 203;
	     {1'd0,  8'd140}: s1rd2 <= 204;
	     {1'd0,  8'd141}: s1rd2 <= 205;
	     {1'd0,  8'd142}: s1rd2 <= 206;
	     {1'd0,  8'd143}: s1rd2 <= 207;
	     {1'd0,  8'd144}: s1rd2 <= 208;
	     {1'd0,  8'd145}: s1rd2 <= 209;
	     {1'd0,  8'd146}: s1rd2 <= 210;
	     {1'd0,  8'd147}: s1rd2 <= 211;
	     {1'd0,  8'd148}: s1rd2 <= 212;
	     {1'd0,  8'd149}: s1rd2 <= 213;
	     {1'd0,  8'd150}: s1rd2 <= 214;
	     {1'd0,  8'd151}: s1rd2 <= 215;
	     {1'd0,  8'd152}: s1rd2 <= 216;
	     {1'd0,  8'd153}: s1rd2 <= 217;
	     {1'd0,  8'd154}: s1rd2 <= 218;
	     {1'd0,  8'd155}: s1rd2 <= 219;
	     {1'd0,  8'd156}: s1rd2 <= 220;
	     {1'd0,  8'd157}: s1rd2 <= 221;
	     {1'd0,  8'd158}: s1rd2 <= 222;
	     {1'd0,  8'd159}: s1rd2 <= 223;
	     {1'd0,  8'd160}: s1rd2 <= 224;
	     {1'd0,  8'd161}: s1rd2 <= 225;
	     {1'd0,  8'd162}: s1rd2 <= 226;
	     {1'd0,  8'd163}: s1rd2 <= 227;
	     {1'd0,  8'd164}: s1rd2 <= 228;
	     {1'd0,  8'd165}: s1rd2 <= 229;
	     {1'd0,  8'd166}: s1rd2 <= 230;
	     {1'd0,  8'd167}: s1rd2 <= 231;
	     {1'd0,  8'd168}: s1rd2 <= 232;
	     {1'd0,  8'd169}: s1rd2 <= 233;
	     {1'd0,  8'd170}: s1rd2 <= 234;
	     {1'd0,  8'd171}: s1rd2 <= 235;
	     {1'd0,  8'd172}: s1rd2 <= 236;
	     {1'd0,  8'd173}: s1rd2 <= 237;
	     {1'd0,  8'd174}: s1rd2 <= 238;
	     {1'd0,  8'd175}: s1rd2 <= 239;
	     {1'd0,  8'd176}: s1rd2 <= 240;
	     {1'd0,  8'd177}: s1rd2 <= 241;
	     {1'd0,  8'd178}: s1rd2 <= 242;
	     {1'd0,  8'd179}: s1rd2 <= 243;
	     {1'd0,  8'd180}: s1rd2 <= 244;
	     {1'd0,  8'd181}: s1rd2 <= 245;
	     {1'd0,  8'd182}: s1rd2 <= 246;
	     {1'd0,  8'd183}: s1rd2 <= 247;
	     {1'd0,  8'd184}: s1rd2 <= 248;
	     {1'd0,  8'd185}: s1rd2 <= 249;
	     {1'd0,  8'd186}: s1rd2 <= 250;
	     {1'd0,  8'd187}: s1rd2 <= 251;
	     {1'd0,  8'd188}: s1rd2 <= 252;
	     {1'd0,  8'd189}: s1rd2 <= 253;
	     {1'd0,  8'd190}: s1rd2 <= 254;
	     {1'd0,  8'd191}: s1rd2 <= 255;
	     {1'd0,  8'd192}: s1rd2 <= 128;
	     {1'd0,  8'd193}: s1rd2 <= 129;
	     {1'd0,  8'd194}: s1rd2 <= 130;
	     {1'd0,  8'd195}: s1rd2 <= 131;
	     {1'd0,  8'd196}: s1rd2 <= 132;
	     {1'd0,  8'd197}: s1rd2 <= 133;
	     {1'd0,  8'd198}: s1rd2 <= 134;
	     {1'd0,  8'd199}: s1rd2 <= 135;
	     {1'd0,  8'd200}: s1rd2 <= 136;
	     {1'd0,  8'd201}: s1rd2 <= 137;
	     {1'd0,  8'd202}: s1rd2 <= 138;
	     {1'd0,  8'd203}: s1rd2 <= 139;
	     {1'd0,  8'd204}: s1rd2 <= 140;
	     {1'd0,  8'd205}: s1rd2 <= 141;
	     {1'd0,  8'd206}: s1rd2 <= 142;
	     {1'd0,  8'd207}: s1rd2 <= 143;
	     {1'd0,  8'd208}: s1rd2 <= 144;
	     {1'd0,  8'd209}: s1rd2 <= 145;
	     {1'd0,  8'd210}: s1rd2 <= 146;
	     {1'd0,  8'd211}: s1rd2 <= 147;
	     {1'd0,  8'd212}: s1rd2 <= 148;
	     {1'd0,  8'd213}: s1rd2 <= 149;
	     {1'd0,  8'd214}: s1rd2 <= 150;
	     {1'd0,  8'd215}: s1rd2 <= 151;
	     {1'd0,  8'd216}: s1rd2 <= 152;
	     {1'd0,  8'd217}: s1rd2 <= 153;
	     {1'd0,  8'd218}: s1rd2 <= 154;
	     {1'd0,  8'd219}: s1rd2 <= 155;
	     {1'd0,  8'd220}: s1rd2 <= 156;
	     {1'd0,  8'd221}: s1rd2 <= 157;
	     {1'd0,  8'd222}: s1rd2 <= 158;
	     {1'd0,  8'd223}: s1rd2 <= 159;
	     {1'd0,  8'd224}: s1rd2 <= 160;
	     {1'd0,  8'd225}: s1rd2 <= 161;
	     {1'd0,  8'd226}: s1rd2 <= 162;
	     {1'd0,  8'd227}: s1rd2 <= 163;
	     {1'd0,  8'd228}: s1rd2 <= 164;
	     {1'd0,  8'd229}: s1rd2 <= 165;
	     {1'd0,  8'd230}: s1rd2 <= 166;
	     {1'd0,  8'd231}: s1rd2 <= 167;
	     {1'd0,  8'd232}: s1rd2 <= 168;
	     {1'd0,  8'd233}: s1rd2 <= 169;
	     {1'd0,  8'd234}: s1rd2 <= 170;
	     {1'd0,  8'd235}: s1rd2 <= 171;
	     {1'd0,  8'd236}: s1rd2 <= 172;
	     {1'd0,  8'd237}: s1rd2 <= 173;
	     {1'd0,  8'd238}: s1rd2 <= 174;
	     {1'd0,  8'd239}: s1rd2 <= 175;
	     {1'd0,  8'd240}: s1rd2 <= 176;
	     {1'd0,  8'd241}: s1rd2 <= 177;
	     {1'd0,  8'd242}: s1rd2 <= 178;
	     {1'd0,  8'd243}: s1rd2 <= 179;
	     {1'd0,  8'd244}: s1rd2 <= 180;
	     {1'd0,  8'd245}: s1rd2 <= 181;
	     {1'd0,  8'd246}: s1rd2 <= 182;
	     {1'd0,  8'd247}: s1rd2 <= 183;
	     {1'd0,  8'd248}: s1rd2 <= 184;
	     {1'd0,  8'd249}: s1rd2 <= 185;
	     {1'd0,  8'd250}: s1rd2 <= 186;
	     {1'd0,  8'd251}: s1rd2 <= 187;
	     {1'd0,  8'd252}: s1rd2 <= 188;
	     {1'd0,  8'd253}: s1rd2 <= 189;
	     {1'd0,  8'd254}: s1rd2 <= 190;
	     {1'd0,  8'd255}: s1rd2 <= 191;
      endcase      
   end

// synthesis attribute rom_style of s1rd2 is "distributed"
   always @(posedge clk) begin
      case({tm28_d, s1rdloc})
	     {1'd0,  8'd0}: s1rd3 <= 0;
	     {1'd0,  8'd1}: s1rd3 <= 1;
	     {1'd0,  8'd2}: s1rd3 <= 2;
	     {1'd0,  8'd3}: s1rd3 <= 3;
	     {1'd0,  8'd4}: s1rd3 <= 4;
	     {1'd0,  8'd5}: s1rd3 <= 5;
	     {1'd0,  8'd6}: s1rd3 <= 6;
	     {1'd0,  8'd7}: s1rd3 <= 7;
	     {1'd0,  8'd8}: s1rd3 <= 8;
	     {1'd0,  8'd9}: s1rd3 <= 9;
	     {1'd0,  8'd10}: s1rd3 <= 10;
	     {1'd0,  8'd11}: s1rd3 <= 11;
	     {1'd0,  8'd12}: s1rd3 <= 12;
	     {1'd0,  8'd13}: s1rd3 <= 13;
	     {1'd0,  8'd14}: s1rd3 <= 14;
	     {1'd0,  8'd15}: s1rd3 <= 15;
	     {1'd0,  8'd16}: s1rd3 <= 16;
	     {1'd0,  8'd17}: s1rd3 <= 17;
	     {1'd0,  8'd18}: s1rd3 <= 18;
	     {1'd0,  8'd19}: s1rd3 <= 19;
	     {1'd0,  8'd20}: s1rd3 <= 20;
	     {1'd0,  8'd21}: s1rd3 <= 21;
	     {1'd0,  8'd22}: s1rd3 <= 22;
	     {1'd0,  8'd23}: s1rd3 <= 23;
	     {1'd0,  8'd24}: s1rd3 <= 24;
	     {1'd0,  8'd25}: s1rd3 <= 25;
	     {1'd0,  8'd26}: s1rd3 <= 26;
	     {1'd0,  8'd27}: s1rd3 <= 27;
	     {1'd0,  8'd28}: s1rd3 <= 28;
	     {1'd0,  8'd29}: s1rd3 <= 29;
	     {1'd0,  8'd30}: s1rd3 <= 30;
	     {1'd0,  8'd31}: s1rd3 <= 31;
	     {1'd0,  8'd32}: s1rd3 <= 32;
	     {1'd0,  8'd33}: s1rd3 <= 33;
	     {1'd0,  8'd34}: s1rd3 <= 34;
	     {1'd0,  8'd35}: s1rd3 <= 35;
	     {1'd0,  8'd36}: s1rd3 <= 36;
	     {1'd0,  8'd37}: s1rd3 <= 37;
	     {1'd0,  8'd38}: s1rd3 <= 38;
	     {1'd0,  8'd39}: s1rd3 <= 39;
	     {1'd0,  8'd40}: s1rd3 <= 40;
	     {1'd0,  8'd41}: s1rd3 <= 41;
	     {1'd0,  8'd42}: s1rd3 <= 42;
	     {1'd0,  8'd43}: s1rd3 <= 43;
	     {1'd0,  8'd44}: s1rd3 <= 44;
	     {1'd0,  8'd45}: s1rd3 <= 45;
	     {1'd0,  8'd46}: s1rd3 <= 46;
	     {1'd0,  8'd47}: s1rd3 <= 47;
	     {1'd0,  8'd48}: s1rd3 <= 48;
	     {1'd0,  8'd49}: s1rd3 <= 49;
	     {1'd0,  8'd50}: s1rd3 <= 50;
	     {1'd0,  8'd51}: s1rd3 <= 51;
	     {1'd0,  8'd52}: s1rd3 <= 52;
	     {1'd0,  8'd53}: s1rd3 <= 53;
	     {1'd0,  8'd54}: s1rd3 <= 54;
	     {1'd0,  8'd55}: s1rd3 <= 55;
	     {1'd0,  8'd56}: s1rd3 <= 56;
	     {1'd0,  8'd57}: s1rd3 <= 57;
	     {1'd0,  8'd58}: s1rd3 <= 58;
	     {1'd0,  8'd59}: s1rd3 <= 59;
	     {1'd0,  8'd60}: s1rd3 <= 60;
	     {1'd0,  8'd61}: s1rd3 <= 61;
	     {1'd0,  8'd62}: s1rd3 <= 62;
	     {1'd0,  8'd63}: s1rd3 <= 63;
	     {1'd0,  8'd64}: s1rd3 <= 64;
	     {1'd0,  8'd65}: s1rd3 <= 65;
	     {1'd0,  8'd66}: s1rd3 <= 66;
	     {1'd0,  8'd67}: s1rd3 <= 67;
	     {1'd0,  8'd68}: s1rd3 <= 68;
	     {1'd0,  8'd69}: s1rd3 <= 69;
	     {1'd0,  8'd70}: s1rd3 <= 70;
	     {1'd0,  8'd71}: s1rd3 <= 71;
	     {1'd0,  8'd72}: s1rd3 <= 72;
	     {1'd0,  8'd73}: s1rd3 <= 73;
	     {1'd0,  8'd74}: s1rd3 <= 74;
	     {1'd0,  8'd75}: s1rd3 <= 75;
	     {1'd0,  8'd76}: s1rd3 <= 76;
	     {1'd0,  8'd77}: s1rd3 <= 77;
	     {1'd0,  8'd78}: s1rd3 <= 78;
	     {1'd0,  8'd79}: s1rd3 <= 79;
	     {1'd0,  8'd80}: s1rd3 <= 80;
	     {1'd0,  8'd81}: s1rd3 <= 81;
	     {1'd0,  8'd82}: s1rd3 <= 82;
	     {1'd0,  8'd83}: s1rd3 <= 83;
	     {1'd0,  8'd84}: s1rd3 <= 84;
	     {1'd0,  8'd85}: s1rd3 <= 85;
	     {1'd0,  8'd86}: s1rd3 <= 86;
	     {1'd0,  8'd87}: s1rd3 <= 87;
	     {1'd0,  8'd88}: s1rd3 <= 88;
	     {1'd0,  8'd89}: s1rd3 <= 89;
	     {1'd0,  8'd90}: s1rd3 <= 90;
	     {1'd0,  8'd91}: s1rd3 <= 91;
	     {1'd0,  8'd92}: s1rd3 <= 92;
	     {1'd0,  8'd93}: s1rd3 <= 93;
	     {1'd0,  8'd94}: s1rd3 <= 94;
	     {1'd0,  8'd95}: s1rd3 <= 95;
	     {1'd0,  8'd96}: s1rd3 <= 96;
	     {1'd0,  8'd97}: s1rd3 <= 97;
	     {1'd0,  8'd98}: s1rd3 <= 98;
	     {1'd0,  8'd99}: s1rd3 <= 99;
	     {1'd0,  8'd100}: s1rd3 <= 100;
	     {1'd0,  8'd101}: s1rd3 <= 101;
	     {1'd0,  8'd102}: s1rd3 <= 102;
	     {1'd0,  8'd103}: s1rd3 <= 103;
	     {1'd0,  8'd104}: s1rd3 <= 104;
	     {1'd0,  8'd105}: s1rd3 <= 105;
	     {1'd0,  8'd106}: s1rd3 <= 106;
	     {1'd0,  8'd107}: s1rd3 <= 107;
	     {1'd0,  8'd108}: s1rd3 <= 108;
	     {1'd0,  8'd109}: s1rd3 <= 109;
	     {1'd0,  8'd110}: s1rd3 <= 110;
	     {1'd0,  8'd111}: s1rd3 <= 111;
	     {1'd0,  8'd112}: s1rd3 <= 112;
	     {1'd0,  8'd113}: s1rd3 <= 113;
	     {1'd0,  8'd114}: s1rd3 <= 114;
	     {1'd0,  8'd115}: s1rd3 <= 115;
	     {1'd0,  8'd116}: s1rd3 <= 116;
	     {1'd0,  8'd117}: s1rd3 <= 117;
	     {1'd0,  8'd118}: s1rd3 <= 118;
	     {1'd0,  8'd119}: s1rd3 <= 119;
	     {1'd0,  8'd120}: s1rd3 <= 120;
	     {1'd0,  8'd121}: s1rd3 <= 121;
	     {1'd0,  8'd122}: s1rd3 <= 122;
	     {1'd0,  8'd123}: s1rd3 <= 123;
	     {1'd0,  8'd124}: s1rd3 <= 124;
	     {1'd0,  8'd125}: s1rd3 <= 125;
	     {1'd0,  8'd126}: s1rd3 <= 126;
	     {1'd0,  8'd127}: s1rd3 <= 127;
	     {1'd0,  8'd128}: s1rd3 <= 128;
	     {1'd0,  8'd129}: s1rd3 <= 129;
	     {1'd0,  8'd130}: s1rd3 <= 130;
	     {1'd0,  8'd131}: s1rd3 <= 131;
	     {1'd0,  8'd132}: s1rd3 <= 132;
	     {1'd0,  8'd133}: s1rd3 <= 133;
	     {1'd0,  8'd134}: s1rd3 <= 134;
	     {1'd0,  8'd135}: s1rd3 <= 135;
	     {1'd0,  8'd136}: s1rd3 <= 136;
	     {1'd0,  8'd137}: s1rd3 <= 137;
	     {1'd0,  8'd138}: s1rd3 <= 138;
	     {1'd0,  8'd139}: s1rd3 <= 139;
	     {1'd0,  8'd140}: s1rd3 <= 140;
	     {1'd0,  8'd141}: s1rd3 <= 141;
	     {1'd0,  8'd142}: s1rd3 <= 142;
	     {1'd0,  8'd143}: s1rd3 <= 143;
	     {1'd0,  8'd144}: s1rd3 <= 144;
	     {1'd0,  8'd145}: s1rd3 <= 145;
	     {1'd0,  8'd146}: s1rd3 <= 146;
	     {1'd0,  8'd147}: s1rd3 <= 147;
	     {1'd0,  8'd148}: s1rd3 <= 148;
	     {1'd0,  8'd149}: s1rd3 <= 149;
	     {1'd0,  8'd150}: s1rd3 <= 150;
	     {1'd0,  8'd151}: s1rd3 <= 151;
	     {1'd0,  8'd152}: s1rd3 <= 152;
	     {1'd0,  8'd153}: s1rd3 <= 153;
	     {1'd0,  8'd154}: s1rd3 <= 154;
	     {1'd0,  8'd155}: s1rd3 <= 155;
	     {1'd0,  8'd156}: s1rd3 <= 156;
	     {1'd0,  8'd157}: s1rd3 <= 157;
	     {1'd0,  8'd158}: s1rd3 <= 158;
	     {1'd0,  8'd159}: s1rd3 <= 159;
	     {1'd0,  8'd160}: s1rd3 <= 160;
	     {1'd0,  8'd161}: s1rd3 <= 161;
	     {1'd0,  8'd162}: s1rd3 <= 162;
	     {1'd0,  8'd163}: s1rd3 <= 163;
	     {1'd0,  8'd164}: s1rd3 <= 164;
	     {1'd0,  8'd165}: s1rd3 <= 165;
	     {1'd0,  8'd166}: s1rd3 <= 166;
	     {1'd0,  8'd167}: s1rd3 <= 167;
	     {1'd0,  8'd168}: s1rd3 <= 168;
	     {1'd0,  8'd169}: s1rd3 <= 169;
	     {1'd0,  8'd170}: s1rd3 <= 170;
	     {1'd0,  8'd171}: s1rd3 <= 171;
	     {1'd0,  8'd172}: s1rd3 <= 172;
	     {1'd0,  8'd173}: s1rd3 <= 173;
	     {1'd0,  8'd174}: s1rd3 <= 174;
	     {1'd0,  8'd175}: s1rd3 <= 175;
	     {1'd0,  8'd176}: s1rd3 <= 176;
	     {1'd0,  8'd177}: s1rd3 <= 177;
	     {1'd0,  8'd178}: s1rd3 <= 178;
	     {1'd0,  8'd179}: s1rd3 <= 179;
	     {1'd0,  8'd180}: s1rd3 <= 180;
	     {1'd0,  8'd181}: s1rd3 <= 181;
	     {1'd0,  8'd182}: s1rd3 <= 182;
	     {1'd0,  8'd183}: s1rd3 <= 183;
	     {1'd0,  8'd184}: s1rd3 <= 184;
	     {1'd0,  8'd185}: s1rd3 <= 185;
	     {1'd0,  8'd186}: s1rd3 <= 186;
	     {1'd0,  8'd187}: s1rd3 <= 187;
	     {1'd0,  8'd188}: s1rd3 <= 188;
	     {1'd0,  8'd189}: s1rd3 <= 189;
	     {1'd0,  8'd190}: s1rd3 <= 190;
	     {1'd0,  8'd191}: s1rd3 <= 191;
	     {1'd0,  8'd192}: s1rd3 <= 192;
	     {1'd0,  8'd193}: s1rd3 <= 193;
	     {1'd0,  8'd194}: s1rd3 <= 194;
	     {1'd0,  8'd195}: s1rd3 <= 195;
	     {1'd0,  8'd196}: s1rd3 <= 196;
	     {1'd0,  8'd197}: s1rd3 <= 197;
	     {1'd0,  8'd198}: s1rd3 <= 198;
	     {1'd0,  8'd199}: s1rd3 <= 199;
	     {1'd0,  8'd200}: s1rd3 <= 200;
	     {1'd0,  8'd201}: s1rd3 <= 201;
	     {1'd0,  8'd202}: s1rd3 <= 202;
	     {1'd0,  8'd203}: s1rd3 <= 203;
	     {1'd0,  8'd204}: s1rd3 <= 204;
	     {1'd0,  8'd205}: s1rd3 <= 205;
	     {1'd0,  8'd206}: s1rd3 <= 206;
	     {1'd0,  8'd207}: s1rd3 <= 207;
	     {1'd0,  8'd208}: s1rd3 <= 208;
	     {1'd0,  8'd209}: s1rd3 <= 209;
	     {1'd0,  8'd210}: s1rd3 <= 210;
	     {1'd0,  8'd211}: s1rd3 <= 211;
	     {1'd0,  8'd212}: s1rd3 <= 212;
	     {1'd0,  8'd213}: s1rd3 <= 213;
	     {1'd0,  8'd214}: s1rd3 <= 214;
	     {1'd0,  8'd215}: s1rd3 <= 215;
	     {1'd0,  8'd216}: s1rd3 <= 216;
	     {1'd0,  8'd217}: s1rd3 <= 217;
	     {1'd0,  8'd218}: s1rd3 <= 218;
	     {1'd0,  8'd219}: s1rd3 <= 219;
	     {1'd0,  8'd220}: s1rd3 <= 220;
	     {1'd0,  8'd221}: s1rd3 <= 221;
	     {1'd0,  8'd222}: s1rd3 <= 222;
	     {1'd0,  8'd223}: s1rd3 <= 223;
	     {1'd0,  8'd224}: s1rd3 <= 224;
	     {1'd0,  8'd225}: s1rd3 <= 225;
	     {1'd0,  8'd226}: s1rd3 <= 226;
	     {1'd0,  8'd227}: s1rd3 <= 227;
	     {1'd0,  8'd228}: s1rd3 <= 228;
	     {1'd0,  8'd229}: s1rd3 <= 229;
	     {1'd0,  8'd230}: s1rd3 <= 230;
	     {1'd0,  8'd231}: s1rd3 <= 231;
	     {1'd0,  8'd232}: s1rd3 <= 232;
	     {1'd0,  8'd233}: s1rd3 <= 233;
	     {1'd0,  8'd234}: s1rd3 <= 234;
	     {1'd0,  8'd235}: s1rd3 <= 235;
	     {1'd0,  8'd236}: s1rd3 <= 236;
	     {1'd0,  8'd237}: s1rd3 <= 237;
	     {1'd0,  8'd238}: s1rd3 <= 238;
	     {1'd0,  8'd239}: s1rd3 <= 239;
	     {1'd0,  8'd240}: s1rd3 <= 240;
	     {1'd0,  8'd241}: s1rd3 <= 241;
	     {1'd0,  8'd242}: s1rd3 <= 242;
	     {1'd0,  8'd243}: s1rd3 <= 243;
	     {1'd0,  8'd244}: s1rd3 <= 244;
	     {1'd0,  8'd245}: s1rd3 <= 245;
	     {1'd0,  8'd246}: s1rd3 <= 246;
	     {1'd0,  8'd247}: s1rd3 <= 247;
	     {1'd0,  8'd248}: s1rd3 <= 248;
	     {1'd0,  8'd249}: s1rd3 <= 249;
	     {1'd0,  8'd250}: s1rd3 <= 250;
	     {1'd0,  8'd251}: s1rd3 <= 251;
	     {1'd0,  8'd252}: s1rd3 <= 252;
	     {1'd0,  8'd253}: s1rd3 <= 253;
	     {1'd0,  8'd254}: s1rd3 <= 254;
	     {1'd0,  8'd255}: s1rd3 <= 255;
      endcase      
   end

// synthesis attribute rom_style of s1rd3 is "distributed"
    swNet39357 sw(tm28_d, clk, muxCycle, t0, s0, t1, s1, t2, s2, t3, s3);

   always @(posedge clk) begin
      case({tm28_dd, writeCycle})
	      {1'd0, 8'd0}: s2wr0 <= 192;
	      {1'd0, 8'd1}: s2wr0 <= 193;
	      {1'd0, 8'd2}: s2wr0 <= 194;
	      {1'd0, 8'd3}: s2wr0 <= 195;
	      {1'd0, 8'd4}: s2wr0 <= 196;
	      {1'd0, 8'd5}: s2wr0 <= 197;
	      {1'd0, 8'd6}: s2wr0 <= 198;
	      {1'd0, 8'd7}: s2wr0 <= 199;
	      {1'd0, 8'd8}: s2wr0 <= 200;
	      {1'd0, 8'd9}: s2wr0 <= 201;
	      {1'd0, 8'd10}: s2wr0 <= 202;
	      {1'd0, 8'd11}: s2wr0 <= 203;
	      {1'd0, 8'd12}: s2wr0 <= 204;
	      {1'd0, 8'd13}: s2wr0 <= 205;
	      {1'd0, 8'd14}: s2wr0 <= 206;
	      {1'd0, 8'd15}: s2wr0 <= 207;
	      {1'd0, 8'd16}: s2wr0 <= 208;
	      {1'd0, 8'd17}: s2wr0 <= 209;
	      {1'd0, 8'd18}: s2wr0 <= 210;
	      {1'd0, 8'd19}: s2wr0 <= 211;
	      {1'd0, 8'd20}: s2wr0 <= 212;
	      {1'd0, 8'd21}: s2wr0 <= 213;
	      {1'd0, 8'd22}: s2wr0 <= 214;
	      {1'd0, 8'd23}: s2wr0 <= 215;
	      {1'd0, 8'd24}: s2wr0 <= 216;
	      {1'd0, 8'd25}: s2wr0 <= 217;
	      {1'd0, 8'd26}: s2wr0 <= 218;
	      {1'd0, 8'd27}: s2wr0 <= 219;
	      {1'd0, 8'd28}: s2wr0 <= 220;
	      {1'd0, 8'd29}: s2wr0 <= 221;
	      {1'd0, 8'd30}: s2wr0 <= 222;
	      {1'd0, 8'd31}: s2wr0 <= 223;
	      {1'd0, 8'd32}: s2wr0 <= 224;
	      {1'd0, 8'd33}: s2wr0 <= 225;
	      {1'd0, 8'd34}: s2wr0 <= 226;
	      {1'd0, 8'd35}: s2wr0 <= 227;
	      {1'd0, 8'd36}: s2wr0 <= 228;
	      {1'd0, 8'd37}: s2wr0 <= 229;
	      {1'd0, 8'd38}: s2wr0 <= 230;
	      {1'd0, 8'd39}: s2wr0 <= 231;
	      {1'd0, 8'd40}: s2wr0 <= 232;
	      {1'd0, 8'd41}: s2wr0 <= 233;
	      {1'd0, 8'd42}: s2wr0 <= 234;
	      {1'd0, 8'd43}: s2wr0 <= 235;
	      {1'd0, 8'd44}: s2wr0 <= 236;
	      {1'd0, 8'd45}: s2wr0 <= 237;
	      {1'd0, 8'd46}: s2wr0 <= 238;
	      {1'd0, 8'd47}: s2wr0 <= 239;
	      {1'd0, 8'd48}: s2wr0 <= 240;
	      {1'd0, 8'd49}: s2wr0 <= 241;
	      {1'd0, 8'd50}: s2wr0 <= 242;
	      {1'd0, 8'd51}: s2wr0 <= 243;
	      {1'd0, 8'd52}: s2wr0 <= 244;
	      {1'd0, 8'd53}: s2wr0 <= 245;
	      {1'd0, 8'd54}: s2wr0 <= 246;
	      {1'd0, 8'd55}: s2wr0 <= 247;
	      {1'd0, 8'd56}: s2wr0 <= 248;
	      {1'd0, 8'd57}: s2wr0 <= 249;
	      {1'd0, 8'd58}: s2wr0 <= 250;
	      {1'd0, 8'd59}: s2wr0 <= 251;
	      {1'd0, 8'd60}: s2wr0 <= 252;
	      {1'd0, 8'd61}: s2wr0 <= 253;
	      {1'd0, 8'd62}: s2wr0 <= 254;
	      {1'd0, 8'd63}: s2wr0 <= 255;
	      {1'd0, 8'd64}: s2wr0 <= 128;
	      {1'd0, 8'd65}: s2wr0 <= 129;
	      {1'd0, 8'd66}: s2wr0 <= 130;
	      {1'd0, 8'd67}: s2wr0 <= 131;
	      {1'd0, 8'd68}: s2wr0 <= 132;
	      {1'd0, 8'd69}: s2wr0 <= 133;
	      {1'd0, 8'd70}: s2wr0 <= 134;
	      {1'd0, 8'd71}: s2wr0 <= 135;
	      {1'd0, 8'd72}: s2wr0 <= 136;
	      {1'd0, 8'd73}: s2wr0 <= 137;
	      {1'd0, 8'd74}: s2wr0 <= 138;
	      {1'd0, 8'd75}: s2wr0 <= 139;
	      {1'd0, 8'd76}: s2wr0 <= 140;
	      {1'd0, 8'd77}: s2wr0 <= 141;
	      {1'd0, 8'd78}: s2wr0 <= 142;
	      {1'd0, 8'd79}: s2wr0 <= 143;
	      {1'd0, 8'd80}: s2wr0 <= 144;
	      {1'd0, 8'd81}: s2wr0 <= 145;
	      {1'd0, 8'd82}: s2wr0 <= 146;
	      {1'd0, 8'd83}: s2wr0 <= 147;
	      {1'd0, 8'd84}: s2wr0 <= 148;
	      {1'd0, 8'd85}: s2wr0 <= 149;
	      {1'd0, 8'd86}: s2wr0 <= 150;
	      {1'd0, 8'd87}: s2wr0 <= 151;
	      {1'd0, 8'd88}: s2wr0 <= 152;
	      {1'd0, 8'd89}: s2wr0 <= 153;
	      {1'd0, 8'd90}: s2wr0 <= 154;
	      {1'd0, 8'd91}: s2wr0 <= 155;
	      {1'd0, 8'd92}: s2wr0 <= 156;
	      {1'd0, 8'd93}: s2wr0 <= 157;
	      {1'd0, 8'd94}: s2wr0 <= 158;
	      {1'd0, 8'd95}: s2wr0 <= 159;
	      {1'd0, 8'd96}: s2wr0 <= 160;
	      {1'd0, 8'd97}: s2wr0 <= 161;
	      {1'd0, 8'd98}: s2wr0 <= 162;
	      {1'd0, 8'd99}: s2wr0 <= 163;
	      {1'd0, 8'd100}: s2wr0 <= 164;
	      {1'd0, 8'd101}: s2wr0 <= 165;
	      {1'd0, 8'd102}: s2wr0 <= 166;
	      {1'd0, 8'd103}: s2wr0 <= 167;
	      {1'd0, 8'd104}: s2wr0 <= 168;
	      {1'd0, 8'd105}: s2wr0 <= 169;
	      {1'd0, 8'd106}: s2wr0 <= 170;
	      {1'd0, 8'd107}: s2wr0 <= 171;
	      {1'd0, 8'd108}: s2wr0 <= 172;
	      {1'd0, 8'd109}: s2wr0 <= 173;
	      {1'd0, 8'd110}: s2wr0 <= 174;
	      {1'd0, 8'd111}: s2wr0 <= 175;
	      {1'd0, 8'd112}: s2wr0 <= 176;
	      {1'd0, 8'd113}: s2wr0 <= 177;
	      {1'd0, 8'd114}: s2wr0 <= 178;
	      {1'd0, 8'd115}: s2wr0 <= 179;
	      {1'd0, 8'd116}: s2wr0 <= 180;
	      {1'd0, 8'd117}: s2wr0 <= 181;
	      {1'd0, 8'd118}: s2wr0 <= 182;
	      {1'd0, 8'd119}: s2wr0 <= 183;
	      {1'd0, 8'd120}: s2wr0 <= 184;
	      {1'd0, 8'd121}: s2wr0 <= 185;
	      {1'd0, 8'd122}: s2wr0 <= 186;
	      {1'd0, 8'd123}: s2wr0 <= 187;
	      {1'd0, 8'd124}: s2wr0 <= 188;
	      {1'd0, 8'd125}: s2wr0 <= 189;
	      {1'd0, 8'd126}: s2wr0 <= 190;
	      {1'd0, 8'd127}: s2wr0 <= 191;
	      {1'd0, 8'd128}: s2wr0 <= 64;
	      {1'd0, 8'd129}: s2wr0 <= 65;
	      {1'd0, 8'd130}: s2wr0 <= 66;
	      {1'd0, 8'd131}: s2wr0 <= 67;
	      {1'd0, 8'd132}: s2wr0 <= 68;
	      {1'd0, 8'd133}: s2wr0 <= 69;
	      {1'd0, 8'd134}: s2wr0 <= 70;
	      {1'd0, 8'd135}: s2wr0 <= 71;
	      {1'd0, 8'd136}: s2wr0 <= 72;
	      {1'd0, 8'd137}: s2wr0 <= 73;
	      {1'd0, 8'd138}: s2wr0 <= 74;
	      {1'd0, 8'd139}: s2wr0 <= 75;
	      {1'd0, 8'd140}: s2wr0 <= 76;
	      {1'd0, 8'd141}: s2wr0 <= 77;
	      {1'd0, 8'd142}: s2wr0 <= 78;
	      {1'd0, 8'd143}: s2wr0 <= 79;
	      {1'd0, 8'd144}: s2wr0 <= 80;
	      {1'd0, 8'd145}: s2wr0 <= 81;
	      {1'd0, 8'd146}: s2wr0 <= 82;
	      {1'd0, 8'd147}: s2wr0 <= 83;
	      {1'd0, 8'd148}: s2wr0 <= 84;
	      {1'd0, 8'd149}: s2wr0 <= 85;
	      {1'd0, 8'd150}: s2wr0 <= 86;
	      {1'd0, 8'd151}: s2wr0 <= 87;
	      {1'd0, 8'd152}: s2wr0 <= 88;
	      {1'd0, 8'd153}: s2wr0 <= 89;
	      {1'd0, 8'd154}: s2wr0 <= 90;
	      {1'd0, 8'd155}: s2wr0 <= 91;
	      {1'd0, 8'd156}: s2wr0 <= 92;
	      {1'd0, 8'd157}: s2wr0 <= 93;
	      {1'd0, 8'd158}: s2wr0 <= 94;
	      {1'd0, 8'd159}: s2wr0 <= 95;
	      {1'd0, 8'd160}: s2wr0 <= 96;
	      {1'd0, 8'd161}: s2wr0 <= 97;
	      {1'd0, 8'd162}: s2wr0 <= 98;
	      {1'd0, 8'd163}: s2wr0 <= 99;
	      {1'd0, 8'd164}: s2wr0 <= 100;
	      {1'd0, 8'd165}: s2wr0 <= 101;
	      {1'd0, 8'd166}: s2wr0 <= 102;
	      {1'd0, 8'd167}: s2wr0 <= 103;
	      {1'd0, 8'd168}: s2wr0 <= 104;
	      {1'd0, 8'd169}: s2wr0 <= 105;
	      {1'd0, 8'd170}: s2wr0 <= 106;
	      {1'd0, 8'd171}: s2wr0 <= 107;
	      {1'd0, 8'd172}: s2wr0 <= 108;
	      {1'd0, 8'd173}: s2wr0 <= 109;
	      {1'd0, 8'd174}: s2wr0 <= 110;
	      {1'd0, 8'd175}: s2wr0 <= 111;
	      {1'd0, 8'd176}: s2wr0 <= 112;
	      {1'd0, 8'd177}: s2wr0 <= 113;
	      {1'd0, 8'd178}: s2wr0 <= 114;
	      {1'd0, 8'd179}: s2wr0 <= 115;
	      {1'd0, 8'd180}: s2wr0 <= 116;
	      {1'd0, 8'd181}: s2wr0 <= 117;
	      {1'd0, 8'd182}: s2wr0 <= 118;
	      {1'd0, 8'd183}: s2wr0 <= 119;
	      {1'd0, 8'd184}: s2wr0 <= 120;
	      {1'd0, 8'd185}: s2wr0 <= 121;
	      {1'd0, 8'd186}: s2wr0 <= 122;
	      {1'd0, 8'd187}: s2wr0 <= 123;
	      {1'd0, 8'd188}: s2wr0 <= 124;
	      {1'd0, 8'd189}: s2wr0 <= 125;
	      {1'd0, 8'd190}: s2wr0 <= 126;
	      {1'd0, 8'd191}: s2wr0 <= 127;
	      {1'd0, 8'd192}: s2wr0 <= 0;
	      {1'd0, 8'd193}: s2wr0 <= 1;
	      {1'd0, 8'd194}: s2wr0 <= 2;
	      {1'd0, 8'd195}: s2wr0 <= 3;
	      {1'd0, 8'd196}: s2wr0 <= 4;
	      {1'd0, 8'd197}: s2wr0 <= 5;
	      {1'd0, 8'd198}: s2wr0 <= 6;
	      {1'd0, 8'd199}: s2wr0 <= 7;
	      {1'd0, 8'd200}: s2wr0 <= 8;
	      {1'd0, 8'd201}: s2wr0 <= 9;
	      {1'd0, 8'd202}: s2wr0 <= 10;
	      {1'd0, 8'd203}: s2wr0 <= 11;
	      {1'd0, 8'd204}: s2wr0 <= 12;
	      {1'd0, 8'd205}: s2wr0 <= 13;
	      {1'd0, 8'd206}: s2wr0 <= 14;
	      {1'd0, 8'd207}: s2wr0 <= 15;
	      {1'd0, 8'd208}: s2wr0 <= 16;
	      {1'd0, 8'd209}: s2wr0 <= 17;
	      {1'd0, 8'd210}: s2wr0 <= 18;
	      {1'd0, 8'd211}: s2wr0 <= 19;
	      {1'd0, 8'd212}: s2wr0 <= 20;
	      {1'd0, 8'd213}: s2wr0 <= 21;
	      {1'd0, 8'd214}: s2wr0 <= 22;
	      {1'd0, 8'd215}: s2wr0 <= 23;
	      {1'd0, 8'd216}: s2wr0 <= 24;
	      {1'd0, 8'd217}: s2wr0 <= 25;
	      {1'd0, 8'd218}: s2wr0 <= 26;
	      {1'd0, 8'd219}: s2wr0 <= 27;
	      {1'd0, 8'd220}: s2wr0 <= 28;
	      {1'd0, 8'd221}: s2wr0 <= 29;
	      {1'd0, 8'd222}: s2wr0 <= 30;
	      {1'd0, 8'd223}: s2wr0 <= 31;
	      {1'd0, 8'd224}: s2wr0 <= 32;
	      {1'd0, 8'd225}: s2wr0 <= 33;
	      {1'd0, 8'd226}: s2wr0 <= 34;
	      {1'd0, 8'd227}: s2wr0 <= 35;
	      {1'd0, 8'd228}: s2wr0 <= 36;
	      {1'd0, 8'd229}: s2wr0 <= 37;
	      {1'd0, 8'd230}: s2wr0 <= 38;
	      {1'd0, 8'd231}: s2wr0 <= 39;
	      {1'd0, 8'd232}: s2wr0 <= 40;
	      {1'd0, 8'd233}: s2wr0 <= 41;
	      {1'd0, 8'd234}: s2wr0 <= 42;
	      {1'd0, 8'd235}: s2wr0 <= 43;
	      {1'd0, 8'd236}: s2wr0 <= 44;
	      {1'd0, 8'd237}: s2wr0 <= 45;
	      {1'd0, 8'd238}: s2wr0 <= 46;
	      {1'd0, 8'd239}: s2wr0 <= 47;
	      {1'd0, 8'd240}: s2wr0 <= 48;
	      {1'd0, 8'd241}: s2wr0 <= 49;
	      {1'd0, 8'd242}: s2wr0 <= 50;
	      {1'd0, 8'd243}: s2wr0 <= 51;
	      {1'd0, 8'd244}: s2wr0 <= 52;
	      {1'd0, 8'd245}: s2wr0 <= 53;
	      {1'd0, 8'd246}: s2wr0 <= 54;
	      {1'd0, 8'd247}: s2wr0 <= 55;
	      {1'd0, 8'd248}: s2wr0 <= 56;
	      {1'd0, 8'd249}: s2wr0 <= 57;
	      {1'd0, 8'd250}: s2wr0 <= 58;
	      {1'd0, 8'd251}: s2wr0 <= 59;
	      {1'd0, 8'd252}: s2wr0 <= 60;
	      {1'd0, 8'd253}: s2wr0 <= 61;
	      {1'd0, 8'd254}: s2wr0 <= 62;
	      {1'd0, 8'd255}: s2wr0 <= 63;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr0 is "distributed"
   always @(posedge clk) begin
      case({tm28_dd, writeCycle})
	      {1'd0, 8'd0}: s2wr1 <= 128;
	      {1'd0, 8'd1}: s2wr1 <= 129;
	      {1'd0, 8'd2}: s2wr1 <= 130;
	      {1'd0, 8'd3}: s2wr1 <= 131;
	      {1'd0, 8'd4}: s2wr1 <= 132;
	      {1'd0, 8'd5}: s2wr1 <= 133;
	      {1'd0, 8'd6}: s2wr1 <= 134;
	      {1'd0, 8'd7}: s2wr1 <= 135;
	      {1'd0, 8'd8}: s2wr1 <= 136;
	      {1'd0, 8'd9}: s2wr1 <= 137;
	      {1'd0, 8'd10}: s2wr1 <= 138;
	      {1'd0, 8'd11}: s2wr1 <= 139;
	      {1'd0, 8'd12}: s2wr1 <= 140;
	      {1'd0, 8'd13}: s2wr1 <= 141;
	      {1'd0, 8'd14}: s2wr1 <= 142;
	      {1'd0, 8'd15}: s2wr1 <= 143;
	      {1'd0, 8'd16}: s2wr1 <= 144;
	      {1'd0, 8'd17}: s2wr1 <= 145;
	      {1'd0, 8'd18}: s2wr1 <= 146;
	      {1'd0, 8'd19}: s2wr1 <= 147;
	      {1'd0, 8'd20}: s2wr1 <= 148;
	      {1'd0, 8'd21}: s2wr1 <= 149;
	      {1'd0, 8'd22}: s2wr1 <= 150;
	      {1'd0, 8'd23}: s2wr1 <= 151;
	      {1'd0, 8'd24}: s2wr1 <= 152;
	      {1'd0, 8'd25}: s2wr1 <= 153;
	      {1'd0, 8'd26}: s2wr1 <= 154;
	      {1'd0, 8'd27}: s2wr1 <= 155;
	      {1'd0, 8'd28}: s2wr1 <= 156;
	      {1'd0, 8'd29}: s2wr1 <= 157;
	      {1'd0, 8'd30}: s2wr1 <= 158;
	      {1'd0, 8'd31}: s2wr1 <= 159;
	      {1'd0, 8'd32}: s2wr1 <= 160;
	      {1'd0, 8'd33}: s2wr1 <= 161;
	      {1'd0, 8'd34}: s2wr1 <= 162;
	      {1'd0, 8'd35}: s2wr1 <= 163;
	      {1'd0, 8'd36}: s2wr1 <= 164;
	      {1'd0, 8'd37}: s2wr1 <= 165;
	      {1'd0, 8'd38}: s2wr1 <= 166;
	      {1'd0, 8'd39}: s2wr1 <= 167;
	      {1'd0, 8'd40}: s2wr1 <= 168;
	      {1'd0, 8'd41}: s2wr1 <= 169;
	      {1'd0, 8'd42}: s2wr1 <= 170;
	      {1'd0, 8'd43}: s2wr1 <= 171;
	      {1'd0, 8'd44}: s2wr1 <= 172;
	      {1'd0, 8'd45}: s2wr1 <= 173;
	      {1'd0, 8'd46}: s2wr1 <= 174;
	      {1'd0, 8'd47}: s2wr1 <= 175;
	      {1'd0, 8'd48}: s2wr1 <= 176;
	      {1'd0, 8'd49}: s2wr1 <= 177;
	      {1'd0, 8'd50}: s2wr1 <= 178;
	      {1'd0, 8'd51}: s2wr1 <= 179;
	      {1'd0, 8'd52}: s2wr1 <= 180;
	      {1'd0, 8'd53}: s2wr1 <= 181;
	      {1'd0, 8'd54}: s2wr1 <= 182;
	      {1'd0, 8'd55}: s2wr1 <= 183;
	      {1'd0, 8'd56}: s2wr1 <= 184;
	      {1'd0, 8'd57}: s2wr1 <= 185;
	      {1'd0, 8'd58}: s2wr1 <= 186;
	      {1'd0, 8'd59}: s2wr1 <= 187;
	      {1'd0, 8'd60}: s2wr1 <= 188;
	      {1'd0, 8'd61}: s2wr1 <= 189;
	      {1'd0, 8'd62}: s2wr1 <= 190;
	      {1'd0, 8'd63}: s2wr1 <= 191;
	      {1'd0, 8'd64}: s2wr1 <= 192;
	      {1'd0, 8'd65}: s2wr1 <= 193;
	      {1'd0, 8'd66}: s2wr1 <= 194;
	      {1'd0, 8'd67}: s2wr1 <= 195;
	      {1'd0, 8'd68}: s2wr1 <= 196;
	      {1'd0, 8'd69}: s2wr1 <= 197;
	      {1'd0, 8'd70}: s2wr1 <= 198;
	      {1'd0, 8'd71}: s2wr1 <= 199;
	      {1'd0, 8'd72}: s2wr1 <= 200;
	      {1'd0, 8'd73}: s2wr1 <= 201;
	      {1'd0, 8'd74}: s2wr1 <= 202;
	      {1'd0, 8'd75}: s2wr1 <= 203;
	      {1'd0, 8'd76}: s2wr1 <= 204;
	      {1'd0, 8'd77}: s2wr1 <= 205;
	      {1'd0, 8'd78}: s2wr1 <= 206;
	      {1'd0, 8'd79}: s2wr1 <= 207;
	      {1'd0, 8'd80}: s2wr1 <= 208;
	      {1'd0, 8'd81}: s2wr1 <= 209;
	      {1'd0, 8'd82}: s2wr1 <= 210;
	      {1'd0, 8'd83}: s2wr1 <= 211;
	      {1'd0, 8'd84}: s2wr1 <= 212;
	      {1'd0, 8'd85}: s2wr1 <= 213;
	      {1'd0, 8'd86}: s2wr1 <= 214;
	      {1'd0, 8'd87}: s2wr1 <= 215;
	      {1'd0, 8'd88}: s2wr1 <= 216;
	      {1'd0, 8'd89}: s2wr1 <= 217;
	      {1'd0, 8'd90}: s2wr1 <= 218;
	      {1'd0, 8'd91}: s2wr1 <= 219;
	      {1'd0, 8'd92}: s2wr1 <= 220;
	      {1'd0, 8'd93}: s2wr1 <= 221;
	      {1'd0, 8'd94}: s2wr1 <= 222;
	      {1'd0, 8'd95}: s2wr1 <= 223;
	      {1'd0, 8'd96}: s2wr1 <= 224;
	      {1'd0, 8'd97}: s2wr1 <= 225;
	      {1'd0, 8'd98}: s2wr1 <= 226;
	      {1'd0, 8'd99}: s2wr1 <= 227;
	      {1'd0, 8'd100}: s2wr1 <= 228;
	      {1'd0, 8'd101}: s2wr1 <= 229;
	      {1'd0, 8'd102}: s2wr1 <= 230;
	      {1'd0, 8'd103}: s2wr1 <= 231;
	      {1'd0, 8'd104}: s2wr1 <= 232;
	      {1'd0, 8'd105}: s2wr1 <= 233;
	      {1'd0, 8'd106}: s2wr1 <= 234;
	      {1'd0, 8'd107}: s2wr1 <= 235;
	      {1'd0, 8'd108}: s2wr1 <= 236;
	      {1'd0, 8'd109}: s2wr1 <= 237;
	      {1'd0, 8'd110}: s2wr1 <= 238;
	      {1'd0, 8'd111}: s2wr1 <= 239;
	      {1'd0, 8'd112}: s2wr1 <= 240;
	      {1'd0, 8'd113}: s2wr1 <= 241;
	      {1'd0, 8'd114}: s2wr1 <= 242;
	      {1'd0, 8'd115}: s2wr1 <= 243;
	      {1'd0, 8'd116}: s2wr1 <= 244;
	      {1'd0, 8'd117}: s2wr1 <= 245;
	      {1'd0, 8'd118}: s2wr1 <= 246;
	      {1'd0, 8'd119}: s2wr1 <= 247;
	      {1'd0, 8'd120}: s2wr1 <= 248;
	      {1'd0, 8'd121}: s2wr1 <= 249;
	      {1'd0, 8'd122}: s2wr1 <= 250;
	      {1'd0, 8'd123}: s2wr1 <= 251;
	      {1'd0, 8'd124}: s2wr1 <= 252;
	      {1'd0, 8'd125}: s2wr1 <= 253;
	      {1'd0, 8'd126}: s2wr1 <= 254;
	      {1'd0, 8'd127}: s2wr1 <= 255;
	      {1'd0, 8'd128}: s2wr1 <= 0;
	      {1'd0, 8'd129}: s2wr1 <= 1;
	      {1'd0, 8'd130}: s2wr1 <= 2;
	      {1'd0, 8'd131}: s2wr1 <= 3;
	      {1'd0, 8'd132}: s2wr1 <= 4;
	      {1'd0, 8'd133}: s2wr1 <= 5;
	      {1'd0, 8'd134}: s2wr1 <= 6;
	      {1'd0, 8'd135}: s2wr1 <= 7;
	      {1'd0, 8'd136}: s2wr1 <= 8;
	      {1'd0, 8'd137}: s2wr1 <= 9;
	      {1'd0, 8'd138}: s2wr1 <= 10;
	      {1'd0, 8'd139}: s2wr1 <= 11;
	      {1'd0, 8'd140}: s2wr1 <= 12;
	      {1'd0, 8'd141}: s2wr1 <= 13;
	      {1'd0, 8'd142}: s2wr1 <= 14;
	      {1'd0, 8'd143}: s2wr1 <= 15;
	      {1'd0, 8'd144}: s2wr1 <= 16;
	      {1'd0, 8'd145}: s2wr1 <= 17;
	      {1'd0, 8'd146}: s2wr1 <= 18;
	      {1'd0, 8'd147}: s2wr1 <= 19;
	      {1'd0, 8'd148}: s2wr1 <= 20;
	      {1'd0, 8'd149}: s2wr1 <= 21;
	      {1'd0, 8'd150}: s2wr1 <= 22;
	      {1'd0, 8'd151}: s2wr1 <= 23;
	      {1'd0, 8'd152}: s2wr1 <= 24;
	      {1'd0, 8'd153}: s2wr1 <= 25;
	      {1'd0, 8'd154}: s2wr1 <= 26;
	      {1'd0, 8'd155}: s2wr1 <= 27;
	      {1'd0, 8'd156}: s2wr1 <= 28;
	      {1'd0, 8'd157}: s2wr1 <= 29;
	      {1'd0, 8'd158}: s2wr1 <= 30;
	      {1'd0, 8'd159}: s2wr1 <= 31;
	      {1'd0, 8'd160}: s2wr1 <= 32;
	      {1'd0, 8'd161}: s2wr1 <= 33;
	      {1'd0, 8'd162}: s2wr1 <= 34;
	      {1'd0, 8'd163}: s2wr1 <= 35;
	      {1'd0, 8'd164}: s2wr1 <= 36;
	      {1'd0, 8'd165}: s2wr1 <= 37;
	      {1'd0, 8'd166}: s2wr1 <= 38;
	      {1'd0, 8'd167}: s2wr1 <= 39;
	      {1'd0, 8'd168}: s2wr1 <= 40;
	      {1'd0, 8'd169}: s2wr1 <= 41;
	      {1'd0, 8'd170}: s2wr1 <= 42;
	      {1'd0, 8'd171}: s2wr1 <= 43;
	      {1'd0, 8'd172}: s2wr1 <= 44;
	      {1'd0, 8'd173}: s2wr1 <= 45;
	      {1'd0, 8'd174}: s2wr1 <= 46;
	      {1'd0, 8'd175}: s2wr1 <= 47;
	      {1'd0, 8'd176}: s2wr1 <= 48;
	      {1'd0, 8'd177}: s2wr1 <= 49;
	      {1'd0, 8'd178}: s2wr1 <= 50;
	      {1'd0, 8'd179}: s2wr1 <= 51;
	      {1'd0, 8'd180}: s2wr1 <= 52;
	      {1'd0, 8'd181}: s2wr1 <= 53;
	      {1'd0, 8'd182}: s2wr1 <= 54;
	      {1'd0, 8'd183}: s2wr1 <= 55;
	      {1'd0, 8'd184}: s2wr1 <= 56;
	      {1'd0, 8'd185}: s2wr1 <= 57;
	      {1'd0, 8'd186}: s2wr1 <= 58;
	      {1'd0, 8'd187}: s2wr1 <= 59;
	      {1'd0, 8'd188}: s2wr1 <= 60;
	      {1'd0, 8'd189}: s2wr1 <= 61;
	      {1'd0, 8'd190}: s2wr1 <= 62;
	      {1'd0, 8'd191}: s2wr1 <= 63;
	      {1'd0, 8'd192}: s2wr1 <= 64;
	      {1'd0, 8'd193}: s2wr1 <= 65;
	      {1'd0, 8'd194}: s2wr1 <= 66;
	      {1'd0, 8'd195}: s2wr1 <= 67;
	      {1'd0, 8'd196}: s2wr1 <= 68;
	      {1'd0, 8'd197}: s2wr1 <= 69;
	      {1'd0, 8'd198}: s2wr1 <= 70;
	      {1'd0, 8'd199}: s2wr1 <= 71;
	      {1'd0, 8'd200}: s2wr1 <= 72;
	      {1'd0, 8'd201}: s2wr1 <= 73;
	      {1'd0, 8'd202}: s2wr1 <= 74;
	      {1'd0, 8'd203}: s2wr1 <= 75;
	      {1'd0, 8'd204}: s2wr1 <= 76;
	      {1'd0, 8'd205}: s2wr1 <= 77;
	      {1'd0, 8'd206}: s2wr1 <= 78;
	      {1'd0, 8'd207}: s2wr1 <= 79;
	      {1'd0, 8'd208}: s2wr1 <= 80;
	      {1'd0, 8'd209}: s2wr1 <= 81;
	      {1'd0, 8'd210}: s2wr1 <= 82;
	      {1'd0, 8'd211}: s2wr1 <= 83;
	      {1'd0, 8'd212}: s2wr1 <= 84;
	      {1'd0, 8'd213}: s2wr1 <= 85;
	      {1'd0, 8'd214}: s2wr1 <= 86;
	      {1'd0, 8'd215}: s2wr1 <= 87;
	      {1'd0, 8'd216}: s2wr1 <= 88;
	      {1'd0, 8'd217}: s2wr1 <= 89;
	      {1'd0, 8'd218}: s2wr1 <= 90;
	      {1'd0, 8'd219}: s2wr1 <= 91;
	      {1'd0, 8'd220}: s2wr1 <= 92;
	      {1'd0, 8'd221}: s2wr1 <= 93;
	      {1'd0, 8'd222}: s2wr1 <= 94;
	      {1'd0, 8'd223}: s2wr1 <= 95;
	      {1'd0, 8'd224}: s2wr1 <= 96;
	      {1'd0, 8'd225}: s2wr1 <= 97;
	      {1'd0, 8'd226}: s2wr1 <= 98;
	      {1'd0, 8'd227}: s2wr1 <= 99;
	      {1'd0, 8'd228}: s2wr1 <= 100;
	      {1'd0, 8'd229}: s2wr1 <= 101;
	      {1'd0, 8'd230}: s2wr1 <= 102;
	      {1'd0, 8'd231}: s2wr1 <= 103;
	      {1'd0, 8'd232}: s2wr1 <= 104;
	      {1'd0, 8'd233}: s2wr1 <= 105;
	      {1'd0, 8'd234}: s2wr1 <= 106;
	      {1'd0, 8'd235}: s2wr1 <= 107;
	      {1'd0, 8'd236}: s2wr1 <= 108;
	      {1'd0, 8'd237}: s2wr1 <= 109;
	      {1'd0, 8'd238}: s2wr1 <= 110;
	      {1'd0, 8'd239}: s2wr1 <= 111;
	      {1'd0, 8'd240}: s2wr1 <= 112;
	      {1'd0, 8'd241}: s2wr1 <= 113;
	      {1'd0, 8'd242}: s2wr1 <= 114;
	      {1'd0, 8'd243}: s2wr1 <= 115;
	      {1'd0, 8'd244}: s2wr1 <= 116;
	      {1'd0, 8'd245}: s2wr1 <= 117;
	      {1'd0, 8'd246}: s2wr1 <= 118;
	      {1'd0, 8'd247}: s2wr1 <= 119;
	      {1'd0, 8'd248}: s2wr1 <= 120;
	      {1'd0, 8'd249}: s2wr1 <= 121;
	      {1'd0, 8'd250}: s2wr1 <= 122;
	      {1'd0, 8'd251}: s2wr1 <= 123;
	      {1'd0, 8'd252}: s2wr1 <= 124;
	      {1'd0, 8'd253}: s2wr1 <= 125;
	      {1'd0, 8'd254}: s2wr1 <= 126;
	      {1'd0, 8'd255}: s2wr1 <= 127;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr1 is "distributed"
   always @(posedge clk) begin
      case({tm28_dd, writeCycle})
	      {1'd0, 8'd0}: s2wr2 <= 64;
	      {1'd0, 8'd1}: s2wr2 <= 65;
	      {1'd0, 8'd2}: s2wr2 <= 66;
	      {1'd0, 8'd3}: s2wr2 <= 67;
	      {1'd0, 8'd4}: s2wr2 <= 68;
	      {1'd0, 8'd5}: s2wr2 <= 69;
	      {1'd0, 8'd6}: s2wr2 <= 70;
	      {1'd0, 8'd7}: s2wr2 <= 71;
	      {1'd0, 8'd8}: s2wr2 <= 72;
	      {1'd0, 8'd9}: s2wr2 <= 73;
	      {1'd0, 8'd10}: s2wr2 <= 74;
	      {1'd0, 8'd11}: s2wr2 <= 75;
	      {1'd0, 8'd12}: s2wr2 <= 76;
	      {1'd0, 8'd13}: s2wr2 <= 77;
	      {1'd0, 8'd14}: s2wr2 <= 78;
	      {1'd0, 8'd15}: s2wr2 <= 79;
	      {1'd0, 8'd16}: s2wr2 <= 80;
	      {1'd0, 8'd17}: s2wr2 <= 81;
	      {1'd0, 8'd18}: s2wr2 <= 82;
	      {1'd0, 8'd19}: s2wr2 <= 83;
	      {1'd0, 8'd20}: s2wr2 <= 84;
	      {1'd0, 8'd21}: s2wr2 <= 85;
	      {1'd0, 8'd22}: s2wr2 <= 86;
	      {1'd0, 8'd23}: s2wr2 <= 87;
	      {1'd0, 8'd24}: s2wr2 <= 88;
	      {1'd0, 8'd25}: s2wr2 <= 89;
	      {1'd0, 8'd26}: s2wr2 <= 90;
	      {1'd0, 8'd27}: s2wr2 <= 91;
	      {1'd0, 8'd28}: s2wr2 <= 92;
	      {1'd0, 8'd29}: s2wr2 <= 93;
	      {1'd0, 8'd30}: s2wr2 <= 94;
	      {1'd0, 8'd31}: s2wr2 <= 95;
	      {1'd0, 8'd32}: s2wr2 <= 96;
	      {1'd0, 8'd33}: s2wr2 <= 97;
	      {1'd0, 8'd34}: s2wr2 <= 98;
	      {1'd0, 8'd35}: s2wr2 <= 99;
	      {1'd0, 8'd36}: s2wr2 <= 100;
	      {1'd0, 8'd37}: s2wr2 <= 101;
	      {1'd0, 8'd38}: s2wr2 <= 102;
	      {1'd0, 8'd39}: s2wr2 <= 103;
	      {1'd0, 8'd40}: s2wr2 <= 104;
	      {1'd0, 8'd41}: s2wr2 <= 105;
	      {1'd0, 8'd42}: s2wr2 <= 106;
	      {1'd0, 8'd43}: s2wr2 <= 107;
	      {1'd0, 8'd44}: s2wr2 <= 108;
	      {1'd0, 8'd45}: s2wr2 <= 109;
	      {1'd0, 8'd46}: s2wr2 <= 110;
	      {1'd0, 8'd47}: s2wr2 <= 111;
	      {1'd0, 8'd48}: s2wr2 <= 112;
	      {1'd0, 8'd49}: s2wr2 <= 113;
	      {1'd0, 8'd50}: s2wr2 <= 114;
	      {1'd0, 8'd51}: s2wr2 <= 115;
	      {1'd0, 8'd52}: s2wr2 <= 116;
	      {1'd0, 8'd53}: s2wr2 <= 117;
	      {1'd0, 8'd54}: s2wr2 <= 118;
	      {1'd0, 8'd55}: s2wr2 <= 119;
	      {1'd0, 8'd56}: s2wr2 <= 120;
	      {1'd0, 8'd57}: s2wr2 <= 121;
	      {1'd0, 8'd58}: s2wr2 <= 122;
	      {1'd0, 8'd59}: s2wr2 <= 123;
	      {1'd0, 8'd60}: s2wr2 <= 124;
	      {1'd0, 8'd61}: s2wr2 <= 125;
	      {1'd0, 8'd62}: s2wr2 <= 126;
	      {1'd0, 8'd63}: s2wr2 <= 127;
	      {1'd0, 8'd64}: s2wr2 <= 0;
	      {1'd0, 8'd65}: s2wr2 <= 1;
	      {1'd0, 8'd66}: s2wr2 <= 2;
	      {1'd0, 8'd67}: s2wr2 <= 3;
	      {1'd0, 8'd68}: s2wr2 <= 4;
	      {1'd0, 8'd69}: s2wr2 <= 5;
	      {1'd0, 8'd70}: s2wr2 <= 6;
	      {1'd0, 8'd71}: s2wr2 <= 7;
	      {1'd0, 8'd72}: s2wr2 <= 8;
	      {1'd0, 8'd73}: s2wr2 <= 9;
	      {1'd0, 8'd74}: s2wr2 <= 10;
	      {1'd0, 8'd75}: s2wr2 <= 11;
	      {1'd0, 8'd76}: s2wr2 <= 12;
	      {1'd0, 8'd77}: s2wr2 <= 13;
	      {1'd0, 8'd78}: s2wr2 <= 14;
	      {1'd0, 8'd79}: s2wr2 <= 15;
	      {1'd0, 8'd80}: s2wr2 <= 16;
	      {1'd0, 8'd81}: s2wr2 <= 17;
	      {1'd0, 8'd82}: s2wr2 <= 18;
	      {1'd0, 8'd83}: s2wr2 <= 19;
	      {1'd0, 8'd84}: s2wr2 <= 20;
	      {1'd0, 8'd85}: s2wr2 <= 21;
	      {1'd0, 8'd86}: s2wr2 <= 22;
	      {1'd0, 8'd87}: s2wr2 <= 23;
	      {1'd0, 8'd88}: s2wr2 <= 24;
	      {1'd0, 8'd89}: s2wr2 <= 25;
	      {1'd0, 8'd90}: s2wr2 <= 26;
	      {1'd0, 8'd91}: s2wr2 <= 27;
	      {1'd0, 8'd92}: s2wr2 <= 28;
	      {1'd0, 8'd93}: s2wr2 <= 29;
	      {1'd0, 8'd94}: s2wr2 <= 30;
	      {1'd0, 8'd95}: s2wr2 <= 31;
	      {1'd0, 8'd96}: s2wr2 <= 32;
	      {1'd0, 8'd97}: s2wr2 <= 33;
	      {1'd0, 8'd98}: s2wr2 <= 34;
	      {1'd0, 8'd99}: s2wr2 <= 35;
	      {1'd0, 8'd100}: s2wr2 <= 36;
	      {1'd0, 8'd101}: s2wr2 <= 37;
	      {1'd0, 8'd102}: s2wr2 <= 38;
	      {1'd0, 8'd103}: s2wr2 <= 39;
	      {1'd0, 8'd104}: s2wr2 <= 40;
	      {1'd0, 8'd105}: s2wr2 <= 41;
	      {1'd0, 8'd106}: s2wr2 <= 42;
	      {1'd0, 8'd107}: s2wr2 <= 43;
	      {1'd0, 8'd108}: s2wr2 <= 44;
	      {1'd0, 8'd109}: s2wr2 <= 45;
	      {1'd0, 8'd110}: s2wr2 <= 46;
	      {1'd0, 8'd111}: s2wr2 <= 47;
	      {1'd0, 8'd112}: s2wr2 <= 48;
	      {1'd0, 8'd113}: s2wr2 <= 49;
	      {1'd0, 8'd114}: s2wr2 <= 50;
	      {1'd0, 8'd115}: s2wr2 <= 51;
	      {1'd0, 8'd116}: s2wr2 <= 52;
	      {1'd0, 8'd117}: s2wr2 <= 53;
	      {1'd0, 8'd118}: s2wr2 <= 54;
	      {1'd0, 8'd119}: s2wr2 <= 55;
	      {1'd0, 8'd120}: s2wr2 <= 56;
	      {1'd0, 8'd121}: s2wr2 <= 57;
	      {1'd0, 8'd122}: s2wr2 <= 58;
	      {1'd0, 8'd123}: s2wr2 <= 59;
	      {1'd0, 8'd124}: s2wr2 <= 60;
	      {1'd0, 8'd125}: s2wr2 <= 61;
	      {1'd0, 8'd126}: s2wr2 <= 62;
	      {1'd0, 8'd127}: s2wr2 <= 63;
	      {1'd0, 8'd128}: s2wr2 <= 192;
	      {1'd0, 8'd129}: s2wr2 <= 193;
	      {1'd0, 8'd130}: s2wr2 <= 194;
	      {1'd0, 8'd131}: s2wr2 <= 195;
	      {1'd0, 8'd132}: s2wr2 <= 196;
	      {1'd0, 8'd133}: s2wr2 <= 197;
	      {1'd0, 8'd134}: s2wr2 <= 198;
	      {1'd0, 8'd135}: s2wr2 <= 199;
	      {1'd0, 8'd136}: s2wr2 <= 200;
	      {1'd0, 8'd137}: s2wr2 <= 201;
	      {1'd0, 8'd138}: s2wr2 <= 202;
	      {1'd0, 8'd139}: s2wr2 <= 203;
	      {1'd0, 8'd140}: s2wr2 <= 204;
	      {1'd0, 8'd141}: s2wr2 <= 205;
	      {1'd0, 8'd142}: s2wr2 <= 206;
	      {1'd0, 8'd143}: s2wr2 <= 207;
	      {1'd0, 8'd144}: s2wr2 <= 208;
	      {1'd0, 8'd145}: s2wr2 <= 209;
	      {1'd0, 8'd146}: s2wr2 <= 210;
	      {1'd0, 8'd147}: s2wr2 <= 211;
	      {1'd0, 8'd148}: s2wr2 <= 212;
	      {1'd0, 8'd149}: s2wr2 <= 213;
	      {1'd0, 8'd150}: s2wr2 <= 214;
	      {1'd0, 8'd151}: s2wr2 <= 215;
	      {1'd0, 8'd152}: s2wr2 <= 216;
	      {1'd0, 8'd153}: s2wr2 <= 217;
	      {1'd0, 8'd154}: s2wr2 <= 218;
	      {1'd0, 8'd155}: s2wr2 <= 219;
	      {1'd0, 8'd156}: s2wr2 <= 220;
	      {1'd0, 8'd157}: s2wr2 <= 221;
	      {1'd0, 8'd158}: s2wr2 <= 222;
	      {1'd0, 8'd159}: s2wr2 <= 223;
	      {1'd0, 8'd160}: s2wr2 <= 224;
	      {1'd0, 8'd161}: s2wr2 <= 225;
	      {1'd0, 8'd162}: s2wr2 <= 226;
	      {1'd0, 8'd163}: s2wr2 <= 227;
	      {1'd0, 8'd164}: s2wr2 <= 228;
	      {1'd0, 8'd165}: s2wr2 <= 229;
	      {1'd0, 8'd166}: s2wr2 <= 230;
	      {1'd0, 8'd167}: s2wr2 <= 231;
	      {1'd0, 8'd168}: s2wr2 <= 232;
	      {1'd0, 8'd169}: s2wr2 <= 233;
	      {1'd0, 8'd170}: s2wr2 <= 234;
	      {1'd0, 8'd171}: s2wr2 <= 235;
	      {1'd0, 8'd172}: s2wr2 <= 236;
	      {1'd0, 8'd173}: s2wr2 <= 237;
	      {1'd0, 8'd174}: s2wr2 <= 238;
	      {1'd0, 8'd175}: s2wr2 <= 239;
	      {1'd0, 8'd176}: s2wr2 <= 240;
	      {1'd0, 8'd177}: s2wr2 <= 241;
	      {1'd0, 8'd178}: s2wr2 <= 242;
	      {1'd0, 8'd179}: s2wr2 <= 243;
	      {1'd0, 8'd180}: s2wr2 <= 244;
	      {1'd0, 8'd181}: s2wr2 <= 245;
	      {1'd0, 8'd182}: s2wr2 <= 246;
	      {1'd0, 8'd183}: s2wr2 <= 247;
	      {1'd0, 8'd184}: s2wr2 <= 248;
	      {1'd0, 8'd185}: s2wr2 <= 249;
	      {1'd0, 8'd186}: s2wr2 <= 250;
	      {1'd0, 8'd187}: s2wr2 <= 251;
	      {1'd0, 8'd188}: s2wr2 <= 252;
	      {1'd0, 8'd189}: s2wr2 <= 253;
	      {1'd0, 8'd190}: s2wr2 <= 254;
	      {1'd0, 8'd191}: s2wr2 <= 255;
	      {1'd0, 8'd192}: s2wr2 <= 128;
	      {1'd0, 8'd193}: s2wr2 <= 129;
	      {1'd0, 8'd194}: s2wr2 <= 130;
	      {1'd0, 8'd195}: s2wr2 <= 131;
	      {1'd0, 8'd196}: s2wr2 <= 132;
	      {1'd0, 8'd197}: s2wr2 <= 133;
	      {1'd0, 8'd198}: s2wr2 <= 134;
	      {1'd0, 8'd199}: s2wr2 <= 135;
	      {1'd0, 8'd200}: s2wr2 <= 136;
	      {1'd0, 8'd201}: s2wr2 <= 137;
	      {1'd0, 8'd202}: s2wr2 <= 138;
	      {1'd0, 8'd203}: s2wr2 <= 139;
	      {1'd0, 8'd204}: s2wr2 <= 140;
	      {1'd0, 8'd205}: s2wr2 <= 141;
	      {1'd0, 8'd206}: s2wr2 <= 142;
	      {1'd0, 8'd207}: s2wr2 <= 143;
	      {1'd0, 8'd208}: s2wr2 <= 144;
	      {1'd0, 8'd209}: s2wr2 <= 145;
	      {1'd0, 8'd210}: s2wr2 <= 146;
	      {1'd0, 8'd211}: s2wr2 <= 147;
	      {1'd0, 8'd212}: s2wr2 <= 148;
	      {1'd0, 8'd213}: s2wr2 <= 149;
	      {1'd0, 8'd214}: s2wr2 <= 150;
	      {1'd0, 8'd215}: s2wr2 <= 151;
	      {1'd0, 8'd216}: s2wr2 <= 152;
	      {1'd0, 8'd217}: s2wr2 <= 153;
	      {1'd0, 8'd218}: s2wr2 <= 154;
	      {1'd0, 8'd219}: s2wr2 <= 155;
	      {1'd0, 8'd220}: s2wr2 <= 156;
	      {1'd0, 8'd221}: s2wr2 <= 157;
	      {1'd0, 8'd222}: s2wr2 <= 158;
	      {1'd0, 8'd223}: s2wr2 <= 159;
	      {1'd0, 8'd224}: s2wr2 <= 160;
	      {1'd0, 8'd225}: s2wr2 <= 161;
	      {1'd0, 8'd226}: s2wr2 <= 162;
	      {1'd0, 8'd227}: s2wr2 <= 163;
	      {1'd0, 8'd228}: s2wr2 <= 164;
	      {1'd0, 8'd229}: s2wr2 <= 165;
	      {1'd0, 8'd230}: s2wr2 <= 166;
	      {1'd0, 8'd231}: s2wr2 <= 167;
	      {1'd0, 8'd232}: s2wr2 <= 168;
	      {1'd0, 8'd233}: s2wr2 <= 169;
	      {1'd0, 8'd234}: s2wr2 <= 170;
	      {1'd0, 8'd235}: s2wr2 <= 171;
	      {1'd0, 8'd236}: s2wr2 <= 172;
	      {1'd0, 8'd237}: s2wr2 <= 173;
	      {1'd0, 8'd238}: s2wr2 <= 174;
	      {1'd0, 8'd239}: s2wr2 <= 175;
	      {1'd0, 8'd240}: s2wr2 <= 176;
	      {1'd0, 8'd241}: s2wr2 <= 177;
	      {1'd0, 8'd242}: s2wr2 <= 178;
	      {1'd0, 8'd243}: s2wr2 <= 179;
	      {1'd0, 8'd244}: s2wr2 <= 180;
	      {1'd0, 8'd245}: s2wr2 <= 181;
	      {1'd0, 8'd246}: s2wr2 <= 182;
	      {1'd0, 8'd247}: s2wr2 <= 183;
	      {1'd0, 8'd248}: s2wr2 <= 184;
	      {1'd0, 8'd249}: s2wr2 <= 185;
	      {1'd0, 8'd250}: s2wr2 <= 186;
	      {1'd0, 8'd251}: s2wr2 <= 187;
	      {1'd0, 8'd252}: s2wr2 <= 188;
	      {1'd0, 8'd253}: s2wr2 <= 189;
	      {1'd0, 8'd254}: s2wr2 <= 190;
	      {1'd0, 8'd255}: s2wr2 <= 191;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr2 is "distributed"
   always @(posedge clk) begin
      case({tm28_dd, writeCycle})
	      {1'd0, 8'd0}: s2wr3 <= 0;
	      {1'd0, 8'd1}: s2wr3 <= 1;
	      {1'd0, 8'd2}: s2wr3 <= 2;
	      {1'd0, 8'd3}: s2wr3 <= 3;
	      {1'd0, 8'd4}: s2wr3 <= 4;
	      {1'd0, 8'd5}: s2wr3 <= 5;
	      {1'd0, 8'd6}: s2wr3 <= 6;
	      {1'd0, 8'd7}: s2wr3 <= 7;
	      {1'd0, 8'd8}: s2wr3 <= 8;
	      {1'd0, 8'd9}: s2wr3 <= 9;
	      {1'd0, 8'd10}: s2wr3 <= 10;
	      {1'd0, 8'd11}: s2wr3 <= 11;
	      {1'd0, 8'd12}: s2wr3 <= 12;
	      {1'd0, 8'd13}: s2wr3 <= 13;
	      {1'd0, 8'd14}: s2wr3 <= 14;
	      {1'd0, 8'd15}: s2wr3 <= 15;
	      {1'd0, 8'd16}: s2wr3 <= 16;
	      {1'd0, 8'd17}: s2wr3 <= 17;
	      {1'd0, 8'd18}: s2wr3 <= 18;
	      {1'd0, 8'd19}: s2wr3 <= 19;
	      {1'd0, 8'd20}: s2wr3 <= 20;
	      {1'd0, 8'd21}: s2wr3 <= 21;
	      {1'd0, 8'd22}: s2wr3 <= 22;
	      {1'd0, 8'd23}: s2wr3 <= 23;
	      {1'd0, 8'd24}: s2wr3 <= 24;
	      {1'd0, 8'd25}: s2wr3 <= 25;
	      {1'd0, 8'd26}: s2wr3 <= 26;
	      {1'd0, 8'd27}: s2wr3 <= 27;
	      {1'd0, 8'd28}: s2wr3 <= 28;
	      {1'd0, 8'd29}: s2wr3 <= 29;
	      {1'd0, 8'd30}: s2wr3 <= 30;
	      {1'd0, 8'd31}: s2wr3 <= 31;
	      {1'd0, 8'd32}: s2wr3 <= 32;
	      {1'd0, 8'd33}: s2wr3 <= 33;
	      {1'd0, 8'd34}: s2wr3 <= 34;
	      {1'd0, 8'd35}: s2wr3 <= 35;
	      {1'd0, 8'd36}: s2wr3 <= 36;
	      {1'd0, 8'd37}: s2wr3 <= 37;
	      {1'd0, 8'd38}: s2wr3 <= 38;
	      {1'd0, 8'd39}: s2wr3 <= 39;
	      {1'd0, 8'd40}: s2wr3 <= 40;
	      {1'd0, 8'd41}: s2wr3 <= 41;
	      {1'd0, 8'd42}: s2wr3 <= 42;
	      {1'd0, 8'd43}: s2wr3 <= 43;
	      {1'd0, 8'd44}: s2wr3 <= 44;
	      {1'd0, 8'd45}: s2wr3 <= 45;
	      {1'd0, 8'd46}: s2wr3 <= 46;
	      {1'd0, 8'd47}: s2wr3 <= 47;
	      {1'd0, 8'd48}: s2wr3 <= 48;
	      {1'd0, 8'd49}: s2wr3 <= 49;
	      {1'd0, 8'd50}: s2wr3 <= 50;
	      {1'd0, 8'd51}: s2wr3 <= 51;
	      {1'd0, 8'd52}: s2wr3 <= 52;
	      {1'd0, 8'd53}: s2wr3 <= 53;
	      {1'd0, 8'd54}: s2wr3 <= 54;
	      {1'd0, 8'd55}: s2wr3 <= 55;
	      {1'd0, 8'd56}: s2wr3 <= 56;
	      {1'd0, 8'd57}: s2wr3 <= 57;
	      {1'd0, 8'd58}: s2wr3 <= 58;
	      {1'd0, 8'd59}: s2wr3 <= 59;
	      {1'd0, 8'd60}: s2wr3 <= 60;
	      {1'd0, 8'd61}: s2wr3 <= 61;
	      {1'd0, 8'd62}: s2wr3 <= 62;
	      {1'd0, 8'd63}: s2wr3 <= 63;
	      {1'd0, 8'd64}: s2wr3 <= 64;
	      {1'd0, 8'd65}: s2wr3 <= 65;
	      {1'd0, 8'd66}: s2wr3 <= 66;
	      {1'd0, 8'd67}: s2wr3 <= 67;
	      {1'd0, 8'd68}: s2wr3 <= 68;
	      {1'd0, 8'd69}: s2wr3 <= 69;
	      {1'd0, 8'd70}: s2wr3 <= 70;
	      {1'd0, 8'd71}: s2wr3 <= 71;
	      {1'd0, 8'd72}: s2wr3 <= 72;
	      {1'd0, 8'd73}: s2wr3 <= 73;
	      {1'd0, 8'd74}: s2wr3 <= 74;
	      {1'd0, 8'd75}: s2wr3 <= 75;
	      {1'd0, 8'd76}: s2wr3 <= 76;
	      {1'd0, 8'd77}: s2wr3 <= 77;
	      {1'd0, 8'd78}: s2wr3 <= 78;
	      {1'd0, 8'd79}: s2wr3 <= 79;
	      {1'd0, 8'd80}: s2wr3 <= 80;
	      {1'd0, 8'd81}: s2wr3 <= 81;
	      {1'd0, 8'd82}: s2wr3 <= 82;
	      {1'd0, 8'd83}: s2wr3 <= 83;
	      {1'd0, 8'd84}: s2wr3 <= 84;
	      {1'd0, 8'd85}: s2wr3 <= 85;
	      {1'd0, 8'd86}: s2wr3 <= 86;
	      {1'd0, 8'd87}: s2wr3 <= 87;
	      {1'd0, 8'd88}: s2wr3 <= 88;
	      {1'd0, 8'd89}: s2wr3 <= 89;
	      {1'd0, 8'd90}: s2wr3 <= 90;
	      {1'd0, 8'd91}: s2wr3 <= 91;
	      {1'd0, 8'd92}: s2wr3 <= 92;
	      {1'd0, 8'd93}: s2wr3 <= 93;
	      {1'd0, 8'd94}: s2wr3 <= 94;
	      {1'd0, 8'd95}: s2wr3 <= 95;
	      {1'd0, 8'd96}: s2wr3 <= 96;
	      {1'd0, 8'd97}: s2wr3 <= 97;
	      {1'd0, 8'd98}: s2wr3 <= 98;
	      {1'd0, 8'd99}: s2wr3 <= 99;
	      {1'd0, 8'd100}: s2wr3 <= 100;
	      {1'd0, 8'd101}: s2wr3 <= 101;
	      {1'd0, 8'd102}: s2wr3 <= 102;
	      {1'd0, 8'd103}: s2wr3 <= 103;
	      {1'd0, 8'd104}: s2wr3 <= 104;
	      {1'd0, 8'd105}: s2wr3 <= 105;
	      {1'd0, 8'd106}: s2wr3 <= 106;
	      {1'd0, 8'd107}: s2wr3 <= 107;
	      {1'd0, 8'd108}: s2wr3 <= 108;
	      {1'd0, 8'd109}: s2wr3 <= 109;
	      {1'd0, 8'd110}: s2wr3 <= 110;
	      {1'd0, 8'd111}: s2wr3 <= 111;
	      {1'd0, 8'd112}: s2wr3 <= 112;
	      {1'd0, 8'd113}: s2wr3 <= 113;
	      {1'd0, 8'd114}: s2wr3 <= 114;
	      {1'd0, 8'd115}: s2wr3 <= 115;
	      {1'd0, 8'd116}: s2wr3 <= 116;
	      {1'd0, 8'd117}: s2wr3 <= 117;
	      {1'd0, 8'd118}: s2wr3 <= 118;
	      {1'd0, 8'd119}: s2wr3 <= 119;
	      {1'd0, 8'd120}: s2wr3 <= 120;
	      {1'd0, 8'd121}: s2wr3 <= 121;
	      {1'd0, 8'd122}: s2wr3 <= 122;
	      {1'd0, 8'd123}: s2wr3 <= 123;
	      {1'd0, 8'd124}: s2wr3 <= 124;
	      {1'd0, 8'd125}: s2wr3 <= 125;
	      {1'd0, 8'd126}: s2wr3 <= 126;
	      {1'd0, 8'd127}: s2wr3 <= 127;
	      {1'd0, 8'd128}: s2wr3 <= 128;
	      {1'd0, 8'd129}: s2wr3 <= 129;
	      {1'd0, 8'd130}: s2wr3 <= 130;
	      {1'd0, 8'd131}: s2wr3 <= 131;
	      {1'd0, 8'd132}: s2wr3 <= 132;
	      {1'd0, 8'd133}: s2wr3 <= 133;
	      {1'd0, 8'd134}: s2wr3 <= 134;
	      {1'd0, 8'd135}: s2wr3 <= 135;
	      {1'd0, 8'd136}: s2wr3 <= 136;
	      {1'd0, 8'd137}: s2wr3 <= 137;
	      {1'd0, 8'd138}: s2wr3 <= 138;
	      {1'd0, 8'd139}: s2wr3 <= 139;
	      {1'd0, 8'd140}: s2wr3 <= 140;
	      {1'd0, 8'd141}: s2wr3 <= 141;
	      {1'd0, 8'd142}: s2wr3 <= 142;
	      {1'd0, 8'd143}: s2wr3 <= 143;
	      {1'd0, 8'd144}: s2wr3 <= 144;
	      {1'd0, 8'd145}: s2wr3 <= 145;
	      {1'd0, 8'd146}: s2wr3 <= 146;
	      {1'd0, 8'd147}: s2wr3 <= 147;
	      {1'd0, 8'd148}: s2wr3 <= 148;
	      {1'd0, 8'd149}: s2wr3 <= 149;
	      {1'd0, 8'd150}: s2wr3 <= 150;
	      {1'd0, 8'd151}: s2wr3 <= 151;
	      {1'd0, 8'd152}: s2wr3 <= 152;
	      {1'd0, 8'd153}: s2wr3 <= 153;
	      {1'd0, 8'd154}: s2wr3 <= 154;
	      {1'd0, 8'd155}: s2wr3 <= 155;
	      {1'd0, 8'd156}: s2wr3 <= 156;
	      {1'd0, 8'd157}: s2wr3 <= 157;
	      {1'd0, 8'd158}: s2wr3 <= 158;
	      {1'd0, 8'd159}: s2wr3 <= 159;
	      {1'd0, 8'd160}: s2wr3 <= 160;
	      {1'd0, 8'd161}: s2wr3 <= 161;
	      {1'd0, 8'd162}: s2wr3 <= 162;
	      {1'd0, 8'd163}: s2wr3 <= 163;
	      {1'd0, 8'd164}: s2wr3 <= 164;
	      {1'd0, 8'd165}: s2wr3 <= 165;
	      {1'd0, 8'd166}: s2wr3 <= 166;
	      {1'd0, 8'd167}: s2wr3 <= 167;
	      {1'd0, 8'd168}: s2wr3 <= 168;
	      {1'd0, 8'd169}: s2wr3 <= 169;
	      {1'd0, 8'd170}: s2wr3 <= 170;
	      {1'd0, 8'd171}: s2wr3 <= 171;
	      {1'd0, 8'd172}: s2wr3 <= 172;
	      {1'd0, 8'd173}: s2wr3 <= 173;
	      {1'd0, 8'd174}: s2wr3 <= 174;
	      {1'd0, 8'd175}: s2wr3 <= 175;
	      {1'd0, 8'd176}: s2wr3 <= 176;
	      {1'd0, 8'd177}: s2wr3 <= 177;
	      {1'd0, 8'd178}: s2wr3 <= 178;
	      {1'd0, 8'd179}: s2wr3 <= 179;
	      {1'd0, 8'd180}: s2wr3 <= 180;
	      {1'd0, 8'd181}: s2wr3 <= 181;
	      {1'd0, 8'd182}: s2wr3 <= 182;
	      {1'd0, 8'd183}: s2wr3 <= 183;
	      {1'd0, 8'd184}: s2wr3 <= 184;
	      {1'd0, 8'd185}: s2wr3 <= 185;
	      {1'd0, 8'd186}: s2wr3 <= 186;
	      {1'd0, 8'd187}: s2wr3 <= 187;
	      {1'd0, 8'd188}: s2wr3 <= 188;
	      {1'd0, 8'd189}: s2wr3 <= 189;
	      {1'd0, 8'd190}: s2wr3 <= 190;
	      {1'd0, 8'd191}: s2wr3 <= 191;
	      {1'd0, 8'd192}: s2wr3 <= 192;
	      {1'd0, 8'd193}: s2wr3 <= 193;
	      {1'd0, 8'd194}: s2wr3 <= 194;
	      {1'd0, 8'd195}: s2wr3 <= 195;
	      {1'd0, 8'd196}: s2wr3 <= 196;
	      {1'd0, 8'd197}: s2wr3 <= 197;
	      {1'd0, 8'd198}: s2wr3 <= 198;
	      {1'd0, 8'd199}: s2wr3 <= 199;
	      {1'd0, 8'd200}: s2wr3 <= 200;
	      {1'd0, 8'd201}: s2wr3 <= 201;
	      {1'd0, 8'd202}: s2wr3 <= 202;
	      {1'd0, 8'd203}: s2wr3 <= 203;
	      {1'd0, 8'd204}: s2wr3 <= 204;
	      {1'd0, 8'd205}: s2wr3 <= 205;
	      {1'd0, 8'd206}: s2wr3 <= 206;
	      {1'd0, 8'd207}: s2wr3 <= 207;
	      {1'd0, 8'd208}: s2wr3 <= 208;
	      {1'd0, 8'd209}: s2wr3 <= 209;
	      {1'd0, 8'd210}: s2wr3 <= 210;
	      {1'd0, 8'd211}: s2wr3 <= 211;
	      {1'd0, 8'd212}: s2wr3 <= 212;
	      {1'd0, 8'd213}: s2wr3 <= 213;
	      {1'd0, 8'd214}: s2wr3 <= 214;
	      {1'd0, 8'd215}: s2wr3 <= 215;
	      {1'd0, 8'd216}: s2wr3 <= 216;
	      {1'd0, 8'd217}: s2wr3 <= 217;
	      {1'd0, 8'd218}: s2wr3 <= 218;
	      {1'd0, 8'd219}: s2wr3 <= 219;
	      {1'd0, 8'd220}: s2wr3 <= 220;
	      {1'd0, 8'd221}: s2wr3 <= 221;
	      {1'd0, 8'd222}: s2wr3 <= 222;
	      {1'd0, 8'd223}: s2wr3 <= 223;
	      {1'd0, 8'd224}: s2wr3 <= 224;
	      {1'd0, 8'd225}: s2wr3 <= 225;
	      {1'd0, 8'd226}: s2wr3 <= 226;
	      {1'd0, 8'd227}: s2wr3 <= 227;
	      {1'd0, 8'd228}: s2wr3 <= 228;
	      {1'd0, 8'd229}: s2wr3 <= 229;
	      {1'd0, 8'd230}: s2wr3 <= 230;
	      {1'd0, 8'd231}: s2wr3 <= 231;
	      {1'd0, 8'd232}: s2wr3 <= 232;
	      {1'd0, 8'd233}: s2wr3 <= 233;
	      {1'd0, 8'd234}: s2wr3 <= 234;
	      {1'd0, 8'd235}: s2wr3 <= 235;
	      {1'd0, 8'd236}: s2wr3 <= 236;
	      {1'd0, 8'd237}: s2wr3 <= 237;
	      {1'd0, 8'd238}: s2wr3 <= 238;
	      {1'd0, 8'd239}: s2wr3 <= 239;
	      {1'd0, 8'd240}: s2wr3 <= 240;
	      {1'd0, 8'd241}: s2wr3 <= 241;
	      {1'd0, 8'd242}: s2wr3 <= 242;
	      {1'd0, 8'd243}: s2wr3 <= 243;
	      {1'd0, 8'd244}: s2wr3 <= 244;
	      {1'd0, 8'd245}: s2wr3 <= 245;
	      {1'd0, 8'd246}: s2wr3 <= 246;
	      {1'd0, 8'd247}: s2wr3 <= 247;
	      {1'd0, 8'd248}: s2wr3 <= 248;
	      {1'd0, 8'd249}: s2wr3 <= 249;
	      {1'd0, 8'd250}: s2wr3 <= 250;
	      {1'd0, 8'd251}: s2wr3 <= 251;
	      {1'd0, 8'd252}: s2wr3 <= 252;
	      {1'd0, 8'd253}: s2wr3 <= 253;
	      {1'd0, 8'd254}: s2wr3 <= 254;
	      {1'd0, 8'd255}: s2wr3 <= 255;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr3 is "distributed"
endmodule


// Latency: 12
// Gap: 256
module DirSum_41747(clk, reset, next, next_out,
      X0, Y0,
      X1, Y1,
      X2, Y2,
      X3, Y3,
      X4, Y4,
      X5, Y5,
      X6, Y6,
      X7, Y7);

   output next_out;
   input clk, reset, next;

   reg [7:0] i1;

   input [19:0] X0,
      X1,
      X2,
      X3,
      X4,
      X5,
      X6,
      X7;

   output [19:0] Y0,
      Y1,
      Y2,
      Y3,
      Y4,
      Y5,
      Y6,
      Y7;

   always @(posedge clk) begin
      if (reset == 1) begin
         i1 <= 0;
      end
      else begin
         if (next == 1)
            i1 <= 0;
         else if (i1 == 255)
            i1 <= 0;
         else
            i1 <= i1 + 1;
      end
   end

   codeBlock39361 codeBlockIsnt43989(.clk(clk), .reset(reset), .next_in(next), .next_out(next_out),
.i1_in(i1),
       .X0_in(X0), .Y0(Y0),
       .X1_in(X1), .Y1(Y1),
       .X2_in(X2), .Y2(Y2),
       .X3_in(X3), .Y3(Y3),
       .X4_in(X4), .Y4(Y4),
       .X5_in(X5), .Y5(Y5),
       .X6_in(X6), .Y6(Y6),
       .X7_in(X7), .Y7(Y7));

endmodule

module D4_39939(addr, out, clk);
   input clk;
   output [19:0] out;
   reg [19:0] out, out2, out3;
   input [7:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 20'h40000;
      1: out3 <= 20'h3fffb;
      2: out3 <= 20'h3ffec;
      3: out3 <= 20'h3ffd4;
      4: out3 <= 20'h3ffb1;
      5: out3 <= 20'h3ff85;
      6: out3 <= 20'h3ff4e;
      7: out3 <= 20'h3ff0e;
      8: out3 <= 20'h3fec4;
      9: out3 <= 20'h3fe70;
      10: out3 <= 20'h3fe13;
      11: out3 <= 20'h3fdab;
      12: out3 <= 20'h3fd3a;
      13: out3 <= 20'h3fcbe;
      14: out3 <= 20'h3fc39;
      15: out3 <= 20'h3fbaa;
      16: out3 <= 20'h3fb12;
      17: out3 <= 20'h3fa6f;
      18: out3 <= 20'h3f9c3;
      19: out3 <= 20'h3f90d;
      20: out3 <= 20'h3f84d;
      21: out3 <= 20'h3f783;
      22: out3 <= 20'h3f6af;
      23: out3 <= 20'h3f5d2;
      24: out3 <= 20'h3f4eb;
      25: out3 <= 20'h3f3fa;
      26: out3 <= 20'h3f2ff;
      27: out3 <= 20'h3f1fb;
      28: out3 <= 20'h3f0ed;
      29: out3 <= 20'h3efd5;
      30: out3 <= 20'h3eeb3;
      31: out3 <= 20'h3ed88;
      32: out3 <= 20'h3ec53;
      33: out3 <= 20'h3eb14;
      34: out3 <= 20'h3e9cc;
      35: out3 <= 20'h3e87a;
      36: out3 <= 20'h3e71e;
      37: out3 <= 20'h3e5b9;
      38: out3 <= 20'h3e44a;
      39: out3 <= 20'h3e2d2;
      40: out3 <= 20'h3e150;
      41: out3 <= 20'h3dfc4;
      42: out3 <= 20'h3de2f;
      43: out3 <= 20'h3dc90;
      44: out3 <= 20'h3dae8;
      45: out3 <= 20'h3d936;
      46: out3 <= 20'h3d77b;
      47: out3 <= 20'h3d5b6;
      48: out3 <= 20'h3d3e8;
      49: out3 <= 20'h3d211;
      50: out3 <= 20'h3d02f;
      51: out3 <= 20'h3ce45;
      52: out3 <= 20'h3cc51;
      53: out3 <= 20'h3ca54;
      54: out3 <= 20'h3c84d;
      55: out3 <= 20'h3c63d;
      56: out3 <= 20'h3c424;
      57: out3 <= 20'h3c202;
      58: out3 <= 20'h3bfd6;
      59: out3 <= 20'h3bda1;
      60: out3 <= 20'h3bb62;
      61: out3 <= 20'h3b91b;
      62: out3 <= 20'h3b6ca;
      63: out3 <= 20'h3b470;
      64: out3 <= 20'h3b20d;
      65: out3 <= 20'h3afa1;
      66: out3 <= 20'h3ad2c;
      67: out3 <= 20'h3aaae;
      68: out3 <= 20'h3a827;
      69: out3 <= 20'h3a596;
      70: out3 <= 20'h3a2fd;
      71: out3 <= 20'h3a05b;
      72: out3 <= 20'h39daf;
      73: out3 <= 20'h39afb;
      74: out3 <= 20'h3983e;
      75: out3 <= 20'h39578;
      76: out3 <= 20'h392a9;
      77: out3 <= 20'h38fd2;
      78: out3 <= 20'h38cf1;
      79: out3 <= 20'h38a08;
      80: out3 <= 20'h38716;
      81: out3 <= 20'h3841c;
      82: out3 <= 20'h38119;
      83: out3 <= 20'h37e0d;
      84: out3 <= 20'h37af8;
      85: out3 <= 20'h377db;
      86: out3 <= 20'h374b5;
      87: out3 <= 20'h37187;
      88: out3 <= 20'h36e50;
      89: out3 <= 20'h36b11;
      90: out3 <= 20'h367ca;
      91: out3 <= 20'h3647a;
      92: out3 <= 20'h36121;
      93: out3 <= 20'h35dc1;
      94: out3 <= 20'h35a58;
      95: out3 <= 20'h356e6;
      96: out3 <= 20'h3536d;
      97: out3 <= 20'h34feb;
      98: out3 <= 20'h34c61;
      99: out3 <= 20'h348cf;
      100: out3 <= 20'h34535;
      101: out3 <= 20'h34193;
      102: out3 <= 20'h33de8;
      103: out3 <= 20'h33a36;
      104: out3 <= 20'h3367c;
      105: out3 <= 20'h332ba;
      106: out3 <= 20'h32ef0;
      107: out3 <= 20'h32b1e;
      108: out3 <= 20'h32744;
      109: out3 <= 20'h32363;
      110: out3 <= 20'h31f7a;
      111: out3 <= 20'h31b89;
      112: out3 <= 20'h31790;
      113: out3 <= 20'h31390;
      114: out3 <= 20'h30f88;
      115: out3 <= 20'h30b79;
      116: out3 <= 20'h30762;
      117: out3 <= 20'h30343;
      118: out3 <= 20'h2ff1e;
      119: out3 <= 20'h2faf0;
      120: out3 <= 20'h2f6bc;
      121: out3 <= 20'h2f280;
      122: out3 <= 20'h2ee3d;
      123: out3 <= 20'h2e9f3;
      124: out3 <= 20'h2e5a1;
      125: out3 <= 20'h2e148;
      126: out3 <= 20'h2dce9;
      127: out3 <= 20'h2d882;
      128: out3 <= 20'h2d414;
      129: out3 <= 20'h2cf9f;
      130: out3 <= 20'h2cb23;
      131: out3 <= 20'h2c6a0;
      132: out3 <= 20'h2c217;
      133: out3 <= 20'h2bd87;
      134: out3 <= 20'h2b8ef;
      135: out3 <= 20'h2b452;
      136: out3 <= 20'h2afad;
      137: out3 <= 20'h2ab02;
      138: out3 <= 20'h2a650;
      139: out3 <= 20'h2a198;
      140: out3 <= 20'h29cd9;
      141: out3 <= 20'h29814;
      142: out3 <= 20'h29349;
      143: out3 <= 20'h28e77;
      144: out3 <= 20'h2899e;
      145: out3 <= 20'h284c0;
      146: out3 <= 20'h27fdb;
      147: out3 <= 20'h27af0;
      148: out3 <= 20'h275ff;
      149: out3 <= 20'h27108;
      150: out3 <= 20'h26c0b;
      151: out3 <= 20'h26708;
      152: out3 <= 20'h261ff;
      153: out3 <= 20'h25cf0;
      154: out3 <= 20'h257db;
      155: out3 <= 20'h252c1;
      156: out3 <= 20'h24da1;
      157: out3 <= 20'h2487b;
      158: out3 <= 20'h2434f;
      159: out3 <= 20'h23e1e;
      160: out3 <= 20'h238e7;
      161: out3 <= 20'h233ab;
      162: out3 <= 20'h22e6a;
      163: out3 <= 20'h22923;
      164: out3 <= 20'h223d6;
      165: out3 <= 20'h21e85;
      166: out3 <= 20'h2192e;
      167: out3 <= 20'h213d2;
      168: out3 <= 20'h20e71;
      169: out3 <= 20'h2090b;
      170: out3 <= 20'h203a0;
      171: out3 <= 20'h1fe2f;
      172: out3 <= 20'h1f8ba;
      173: out3 <= 20'h1f340;
      174: out3 <= 20'h1edc2;
      175: out3 <= 20'h1e83e;
      176: out3 <= 20'h1e2b6;
      177: out3 <= 20'h1dd29;
      178: out3 <= 20'h1d797;
      179: out3 <= 20'h1d201;
      180: out3 <= 20'h1cc67;
      181: out3 <= 20'h1c6c8;
      182: out3 <= 20'h1c125;
      183: out3 <= 20'h1bb7d;
      184: out3 <= 20'h1b5d1;
      185: out3 <= 20'h1b021;
      186: out3 <= 20'h1aa6d;
      187: out3 <= 20'h1a4b4;
      188: out3 <= 20'h19ef8;
      189: out3 <= 20'h19937;
      190: out3 <= 20'h19373;
      191: out3 <= 20'h18daa;
      192: out3 <= 20'h187de;
      193: out3 <= 20'h1820e;
      194: out3 <= 20'h17c3b;
      195: out3 <= 20'h17663;
      196: out3 <= 20'h17088;
      197: out3 <= 20'h16aaa;
      198: out3 <= 20'h164c8;
      199: out3 <= 20'h15ee2;
      200: out3 <= 20'h158fa;
      201: out3 <= 20'h1530e;
      202: out3 <= 20'h14d1e;
      203: out3 <= 20'h1472c;
      204: out3 <= 20'h14136;
      205: out3 <= 20'h13b3d;
      206: out3 <= 20'h13541;
      207: out3 <= 20'h12f42;
      208: out3 <= 20'h12940;
      209: out3 <= 20'h1233c;
      210: out3 <= 20'h11d34;
      211: out3 <= 20'h1172a;
      212: out3 <= 20'h1111d;
      213: out3 <= 20'h10b0e;
      214: out3 <= 20'h104fc;
      215: out3 <= 20'hfee7;
      216: out3 <= 20'hf8d0;
      217: out3 <= 20'hf2b6;
      218: out3 <= 20'hec9a;
      219: out3 <= 20'he67c;
      220: out3 <= 20'he05c;
      221: out3 <= 20'hda3a;
      222: out3 <= 20'hd415;
      223: out3 <= 20'hcdee;
      224: out3 <= 20'hc7c6;
      225: out3 <= 20'hc19b;
      226: out3 <= 20'hbb6f;
      227: out3 <= 20'hb541;
      228: out3 <= 20'haf11;
      229: out3 <= 20'ha8df;
      230: out3 <= 20'ha2ac;
      231: out3 <= 20'h9c77;
      232: out3 <= 20'h9641;
      233: out3 <= 20'h9009;
      234: out3 <= 20'h89d0;
      235: out3 <= 20'h8395;
      236: out3 <= 20'h7d59;
      237: out3 <= 20'h771c;
      238: out3 <= 20'h70de;
      239: out3 <= 20'h6a9f;
      240: out3 <= 20'h645f;
      241: out3 <= 20'h5e1d;
      242: out3 <= 20'h57db;
      243: out3 <= 20'h5198;
      244: out3 <= 20'h4b55;
      245: out3 <= 20'h4510;
      246: out3 <= 20'h3ecb;
      247: out3 <= 20'h3885;
      248: out3 <= 20'h323f;
      249: out3 <= 20'h2bf8;
      250: out3 <= 20'h25b1;
      251: out3 <= 20'h1f69;
      252: out3 <= 20'h1921;
      253: out3 <= 20'h12d9;
      254: out3 <= 20'hc91;
      255: out3 <= 20'h648;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



module D9_40197(addr, out, clk);
   input clk;
   output [19:0] out;
   reg [19:0] out, out2, out3;
   input [7:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 20'h0;
      1: out3 <= 20'hff36f;
      2: out3 <= 20'hfe6df;
      3: out3 <= 20'hfda4f;
      4: out3 <= 20'hfcdc1;
      5: out3 <= 20'hfc135;
      6: out3 <= 20'hfb4ab;
      7: out3 <= 20'hfa825;
      8: out3 <= 20'hf9ba1;
      9: out3 <= 20'hf8f22;
      10: out3 <= 20'hf82a7;
      11: out3 <= 20'hf7630;
      12: out3 <= 20'hf69bf;
      13: out3 <= 20'hf5d54;
      14: out3 <= 20'hf50ef;
      15: out3 <= 20'hf4491;
      16: out3 <= 20'hf383a;
      17: out3 <= 20'hf2beb;
      18: out3 <= 20'hf1fa4;
      19: out3 <= 20'hf1366;
      20: out3 <= 20'hf0730;
      21: out3 <= 20'hefb04;
      22: out3 <= 20'heeee3;
      23: out3 <= 20'hee2cc;
      24: out3 <= 20'hed6c0;
      25: out3 <= 20'hecabf;
      26: out3 <= 20'hebeca;
      27: out3 <= 20'heb2e2;
      28: out3 <= 20'hea706;
      29: out3 <= 20'he9b38;
      30: out3 <= 20'he8f78;
      31: out3 <= 20'he83c5;
      32: out3 <= 20'he7822;
      33: out3 <= 20'he6c8d;
      34: out3 <= 20'he6108;
      35: out3 <= 20'he5593;
      36: out3 <= 20'he4a2f;
      37: out3 <= 20'he3edb;
      38: out3 <= 20'he3399;
      39: out3 <= 20'he2869;
      40: out3 <= 20'he1d4a;
      41: out3 <= 20'he123e;
      42: out3 <= 20'he0746;
      43: out3 <= 20'hdfc60;
      44: out3 <= 20'hdf18f;
      45: out3 <= 20'hde6d2;
      46: out3 <= 20'hddc2a;
      47: out3 <= 20'hdd196;
      48: out3 <= 20'hdc719;
      49: out3 <= 20'hdbcb1;
      50: out3 <= 20'hdb25f;
      51: out3 <= 20'hda825;
      52: out3 <= 20'hd9e01;
      53: out3 <= 20'hd93f5;
      54: out3 <= 20'hd8a01;
      55: out3 <= 20'hd8025;
      56: out3 <= 20'hd7662;
      57: out3 <= 20'hd6cb7;
      58: out3 <= 20'hd6327;
      59: out3 <= 20'hd59b0;
      60: out3 <= 20'hd5053;
      61: out3 <= 20'hd4711;
      62: out3 <= 20'hd3de9;
      63: out3 <= 20'hd34dd;
      64: out3 <= 20'hd2bec;
      65: out3 <= 20'hd2317;
      66: out3 <= 20'hd1a5f;
      67: out3 <= 20'hd11c3;
      68: out3 <= 20'hd0944;
      69: out3 <= 20'hd00e2;
      70: out3 <= 20'hcf89e;
      71: out3 <= 20'hcf078;
      72: out3 <= 20'hce870;
      73: out3 <= 20'hce086;
      74: out3 <= 20'hcd8bc;
      75: out3 <= 20'hcd110;
      76: out3 <= 20'hcc984;
      77: out3 <= 20'hcc218;
      78: out3 <= 20'hcbacb;
      79: out3 <= 20'hcb39f;
      80: out3 <= 20'hcac93;
      81: out3 <= 20'hca5a8;
      82: out3 <= 20'hc9edf;
      83: out3 <= 20'hc9836;
      84: out3 <= 20'hc91b0;
      85: out3 <= 20'hc8b4b;
      86: out3 <= 20'hc8508;
      87: out3 <= 20'hc7ee7;
      88: out3 <= 20'hc78ea;
      89: out3 <= 20'hc730f;
      90: out3 <= 20'hc6d57;
      91: out3 <= 20'hc67c2;
      92: out3 <= 20'hc6251;
      93: out3 <= 20'hc5d03;
      94: out3 <= 20'hc57d9;
      95: out3 <= 20'hc52d4;
      96: out3 <= 20'hc4df3;
      97: out3 <= 20'hc4936;
      98: out3 <= 20'hc449e;
      99: out3 <= 20'hc402a;
      100: out3 <= 20'hc3bdc;
      101: out3 <= 20'hc37b3;
      102: out3 <= 20'hc33af;
      103: out3 <= 20'hc2fd1;
      104: out3 <= 20'hc2c18;
      105: out3 <= 20'hc2885;
      106: out3 <= 20'hc2518;
      107: out3 <= 20'hc21d1;
      108: out3 <= 20'hc1eb0;
      109: out3 <= 20'hc1bb6;
      110: out3 <= 20'hc18e2;
      111: out3 <= 20'hc1634;
      112: out3 <= 20'hc13ad;
      113: out3 <= 20'hc114d;
      114: out3 <= 20'hc0f13;
      115: out3 <= 20'hc0d01;
      116: out3 <= 20'hc0b15;
      117: out3 <= 20'hc0951;
      118: out3 <= 20'hc07b3;
      119: out3 <= 20'hc063d;
      120: out3 <= 20'hc04ee;
      121: out3 <= 20'hc03c7;
      122: out3 <= 20'hc02c6;
      123: out3 <= 20'hc01ed;
      124: out3 <= 20'hc013c;
      125: out3 <= 20'hc00b2;
      126: out3 <= 20'hc004f;
      127: out3 <= 20'hc0014;
      128: out3 <= 20'hc0000;
      129: out3 <= 20'hc0014;
      130: out3 <= 20'hc004f;
      131: out3 <= 20'hc00b2;
      132: out3 <= 20'hc013c;
      133: out3 <= 20'hc01ed;
      134: out3 <= 20'hc02c6;
      135: out3 <= 20'hc03c7;
      136: out3 <= 20'hc04ee;
      137: out3 <= 20'hc063d;
      138: out3 <= 20'hc07b3;
      139: out3 <= 20'hc0951;
      140: out3 <= 20'hc0b15;
      141: out3 <= 20'hc0d01;
      142: out3 <= 20'hc0f13;
      143: out3 <= 20'hc114d;
      144: out3 <= 20'hc13ad;
      145: out3 <= 20'hc1634;
      146: out3 <= 20'hc18e2;
      147: out3 <= 20'hc1bb6;
      148: out3 <= 20'hc1eb0;
      149: out3 <= 20'hc21d1;
      150: out3 <= 20'hc2518;
      151: out3 <= 20'hc2885;
      152: out3 <= 20'hc2c18;
      153: out3 <= 20'hc2fd1;
      154: out3 <= 20'hc33af;
      155: out3 <= 20'hc37b3;
      156: out3 <= 20'hc3bdc;
      157: out3 <= 20'hc402a;
      158: out3 <= 20'hc449e;
      159: out3 <= 20'hc4936;
      160: out3 <= 20'hc4df3;
      161: out3 <= 20'hc52d4;
      162: out3 <= 20'hc57d9;
      163: out3 <= 20'hc5d03;
      164: out3 <= 20'hc6251;
      165: out3 <= 20'hc67c2;
      166: out3 <= 20'hc6d57;
      167: out3 <= 20'hc730f;
      168: out3 <= 20'hc78ea;
      169: out3 <= 20'hc7ee7;
      170: out3 <= 20'hc8508;
      171: out3 <= 20'hc8b4b;
      172: out3 <= 20'hc91b0;
      173: out3 <= 20'hc9836;
      174: out3 <= 20'hc9edf;
      175: out3 <= 20'hca5a8;
      176: out3 <= 20'hcac93;
      177: out3 <= 20'hcb39f;
      178: out3 <= 20'hcbacb;
      179: out3 <= 20'hcc218;
      180: out3 <= 20'hcc984;
      181: out3 <= 20'hcd110;
      182: out3 <= 20'hcd8bc;
      183: out3 <= 20'hce086;
      184: out3 <= 20'hce870;
      185: out3 <= 20'hcf078;
      186: out3 <= 20'hcf89e;
      187: out3 <= 20'hd00e2;
      188: out3 <= 20'hd0944;
      189: out3 <= 20'hd11c3;
      190: out3 <= 20'hd1a5f;
      191: out3 <= 20'hd2317;
      192: out3 <= 20'hd2bec;
      193: out3 <= 20'hd34dd;
      194: out3 <= 20'hd3de9;
      195: out3 <= 20'hd4711;
      196: out3 <= 20'hd5053;
      197: out3 <= 20'hd59b0;
      198: out3 <= 20'hd6327;
      199: out3 <= 20'hd6cb7;
      200: out3 <= 20'hd7662;
      201: out3 <= 20'hd8025;
      202: out3 <= 20'hd8a01;
      203: out3 <= 20'hd93f5;
      204: out3 <= 20'hd9e01;
      205: out3 <= 20'hda825;
      206: out3 <= 20'hdb25f;
      207: out3 <= 20'hdbcb1;
      208: out3 <= 20'hdc719;
      209: out3 <= 20'hdd196;
      210: out3 <= 20'hddc2a;
      211: out3 <= 20'hde6d2;
      212: out3 <= 20'hdf18f;
      213: out3 <= 20'hdfc60;
      214: out3 <= 20'he0746;
      215: out3 <= 20'he123e;
      216: out3 <= 20'he1d4a;
      217: out3 <= 20'he2869;
      218: out3 <= 20'he3399;
      219: out3 <= 20'he3edb;
      220: out3 <= 20'he4a2f;
      221: out3 <= 20'he5593;
      222: out3 <= 20'he6108;
      223: out3 <= 20'he6c8d;
      224: out3 <= 20'he7822;
      225: out3 <= 20'he83c5;
      226: out3 <= 20'he8f78;
      227: out3 <= 20'he9b38;
      228: out3 <= 20'hea706;
      229: out3 <= 20'heb2e2;
      230: out3 <= 20'hebeca;
      231: out3 <= 20'hecabf;
      232: out3 <= 20'hed6c0;
      233: out3 <= 20'hee2cc;
      234: out3 <= 20'heeee3;
      235: out3 <= 20'hefb04;
      236: out3 <= 20'hf0730;
      237: out3 <= 20'hf1366;
      238: out3 <= 20'hf1fa4;
      239: out3 <= 20'hf2beb;
      240: out3 <= 20'hf383a;
      241: out3 <= 20'hf4491;
      242: out3 <= 20'hf50ef;
      243: out3 <= 20'hf5d54;
      244: out3 <= 20'hf69bf;
      245: out3 <= 20'hf7630;
      246: out3 <= 20'hf82a7;
      247: out3 <= 20'hf8f22;
      248: out3 <= 20'hf9ba1;
      249: out3 <= 20'hfa825;
      250: out3 <= 20'hfb4ab;
      251: out3 <= 20'hfc135;
      252: out3 <= 20'hfcdc1;
      253: out3 <= 20'hfda4f;
      254: out3 <= 20'hfe6df;
      255: out3 <= 20'hff36f;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



module D5_40455(addr, out, clk);
   input clk;
   output [19:0] out;
   reg [19:0] out, out2, out3;
   input [7:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 20'h40000;
      1: out3 <= 20'h3ffec;
      2: out3 <= 20'h3ffb1;
      3: out3 <= 20'h3ff4e;
      4: out3 <= 20'h3fec4;
      5: out3 <= 20'h3fe13;
      6: out3 <= 20'h3fd3a;
      7: out3 <= 20'h3fc39;
      8: out3 <= 20'h3fb12;
      9: out3 <= 20'h3f9c3;
      10: out3 <= 20'h3f84d;
      11: out3 <= 20'h3f6af;
      12: out3 <= 20'h3f4eb;
      13: out3 <= 20'h3f2ff;
      14: out3 <= 20'h3f0ed;
      15: out3 <= 20'h3eeb3;
      16: out3 <= 20'h3ec53;
      17: out3 <= 20'h3e9cc;
      18: out3 <= 20'h3e71e;
      19: out3 <= 20'h3e44a;
      20: out3 <= 20'h3e150;
      21: out3 <= 20'h3de2f;
      22: out3 <= 20'h3dae8;
      23: out3 <= 20'h3d77b;
      24: out3 <= 20'h3d3e8;
      25: out3 <= 20'h3d02f;
      26: out3 <= 20'h3cc51;
      27: out3 <= 20'h3c84d;
      28: out3 <= 20'h3c424;
      29: out3 <= 20'h3bfd6;
      30: out3 <= 20'h3bb62;
      31: out3 <= 20'h3b6ca;
      32: out3 <= 20'h3b20d;
      33: out3 <= 20'h3ad2c;
      34: out3 <= 20'h3a827;
      35: out3 <= 20'h3a2fd;
      36: out3 <= 20'h39daf;
      37: out3 <= 20'h3983e;
      38: out3 <= 20'h392a9;
      39: out3 <= 20'h38cf1;
      40: out3 <= 20'h38716;
      41: out3 <= 20'h38119;
      42: out3 <= 20'h37af8;
      43: out3 <= 20'h374b5;
      44: out3 <= 20'h36e50;
      45: out3 <= 20'h367ca;
      46: out3 <= 20'h36121;
      47: out3 <= 20'h35a58;
      48: out3 <= 20'h3536d;
      49: out3 <= 20'h34c61;
      50: out3 <= 20'h34535;
      51: out3 <= 20'h33de8;
      52: out3 <= 20'h3367c;
      53: out3 <= 20'h32ef0;
      54: out3 <= 20'h32744;
      55: out3 <= 20'h31f7a;
      56: out3 <= 20'h31790;
      57: out3 <= 20'h30f88;
      58: out3 <= 20'h30762;
      59: out3 <= 20'h2ff1e;
      60: out3 <= 20'h2f6bc;
      61: out3 <= 20'h2ee3d;
      62: out3 <= 20'h2e5a1;
      63: out3 <= 20'h2dce9;
      64: out3 <= 20'h2d414;
      65: out3 <= 20'h2cb23;
      66: out3 <= 20'h2c217;
      67: out3 <= 20'h2b8ef;
      68: out3 <= 20'h2afad;
      69: out3 <= 20'h2a650;
      70: out3 <= 20'h29cd9;
      71: out3 <= 20'h29349;
      72: out3 <= 20'h2899e;
      73: out3 <= 20'h27fdb;
      74: out3 <= 20'h275ff;
      75: out3 <= 20'h26c0b;
      76: out3 <= 20'h261ff;
      77: out3 <= 20'h257db;
      78: out3 <= 20'h24da1;
      79: out3 <= 20'h2434f;
      80: out3 <= 20'h238e7;
      81: out3 <= 20'h22e6a;
      82: out3 <= 20'h223d6;
      83: out3 <= 20'h2192e;
      84: out3 <= 20'h20e71;
      85: out3 <= 20'h203a0;
      86: out3 <= 20'h1f8ba;
      87: out3 <= 20'h1edc2;
      88: out3 <= 20'h1e2b6;
      89: out3 <= 20'h1d797;
      90: out3 <= 20'h1cc67;
      91: out3 <= 20'h1c125;
      92: out3 <= 20'h1b5d1;
      93: out3 <= 20'h1aa6d;
      94: out3 <= 20'h19ef8;
      95: out3 <= 20'h19373;
      96: out3 <= 20'h187de;
      97: out3 <= 20'h17c3b;
      98: out3 <= 20'h17088;
      99: out3 <= 20'h164c8;
      100: out3 <= 20'h158fa;
      101: out3 <= 20'h14d1e;
      102: out3 <= 20'h14136;
      103: out3 <= 20'h13541;
      104: out3 <= 20'h12940;
      105: out3 <= 20'h11d34;
      106: out3 <= 20'h1111d;
      107: out3 <= 20'h104fc;
      108: out3 <= 20'hf8d0;
      109: out3 <= 20'hec9a;
      110: out3 <= 20'he05c;
      111: out3 <= 20'hd415;
      112: out3 <= 20'hc7c6;
      113: out3 <= 20'hbb6f;
      114: out3 <= 20'haf11;
      115: out3 <= 20'ha2ac;
      116: out3 <= 20'h9641;
      117: out3 <= 20'h89d0;
      118: out3 <= 20'h7d59;
      119: out3 <= 20'h70de;
      120: out3 <= 20'h645f;
      121: out3 <= 20'h57db;
      122: out3 <= 20'h4b55;
      123: out3 <= 20'h3ecb;
      124: out3 <= 20'h323f;
      125: out3 <= 20'h25b1;
      126: out3 <= 20'h1921;
      127: out3 <= 20'hc91;
      128: out3 <= 20'h0;
      129: out3 <= 20'hff36f;
      130: out3 <= 20'hfe6df;
      131: out3 <= 20'hfda4f;
      132: out3 <= 20'hfcdc1;
      133: out3 <= 20'hfc135;
      134: out3 <= 20'hfb4ab;
      135: out3 <= 20'hfa825;
      136: out3 <= 20'hf9ba1;
      137: out3 <= 20'hf8f22;
      138: out3 <= 20'hf82a7;
      139: out3 <= 20'hf7630;
      140: out3 <= 20'hf69bf;
      141: out3 <= 20'hf5d54;
      142: out3 <= 20'hf50ef;
      143: out3 <= 20'hf4491;
      144: out3 <= 20'hf383a;
      145: out3 <= 20'hf2beb;
      146: out3 <= 20'hf1fa4;
      147: out3 <= 20'hf1366;
      148: out3 <= 20'hf0730;
      149: out3 <= 20'hefb04;
      150: out3 <= 20'heeee3;
      151: out3 <= 20'hee2cc;
      152: out3 <= 20'hed6c0;
      153: out3 <= 20'hecabf;
      154: out3 <= 20'hebeca;
      155: out3 <= 20'heb2e2;
      156: out3 <= 20'hea706;
      157: out3 <= 20'he9b38;
      158: out3 <= 20'he8f78;
      159: out3 <= 20'he83c5;
      160: out3 <= 20'he7822;
      161: out3 <= 20'he6c8d;
      162: out3 <= 20'he6108;
      163: out3 <= 20'he5593;
      164: out3 <= 20'he4a2f;
      165: out3 <= 20'he3edb;
      166: out3 <= 20'he3399;
      167: out3 <= 20'he2869;
      168: out3 <= 20'he1d4a;
      169: out3 <= 20'he123e;
      170: out3 <= 20'he0746;
      171: out3 <= 20'hdfc60;
      172: out3 <= 20'hdf18f;
      173: out3 <= 20'hde6d2;
      174: out3 <= 20'hddc2a;
      175: out3 <= 20'hdd196;
      176: out3 <= 20'hdc719;
      177: out3 <= 20'hdbcb1;
      178: out3 <= 20'hdb25f;
      179: out3 <= 20'hda825;
      180: out3 <= 20'hd9e01;
      181: out3 <= 20'hd93f5;
      182: out3 <= 20'hd8a01;
      183: out3 <= 20'hd8025;
      184: out3 <= 20'hd7662;
      185: out3 <= 20'hd6cb7;
      186: out3 <= 20'hd6327;
      187: out3 <= 20'hd59b0;
      188: out3 <= 20'hd5053;
      189: out3 <= 20'hd4711;
      190: out3 <= 20'hd3de9;
      191: out3 <= 20'hd34dd;
      192: out3 <= 20'hd2bec;
      193: out3 <= 20'hd2317;
      194: out3 <= 20'hd1a5f;
      195: out3 <= 20'hd11c3;
      196: out3 <= 20'hd0944;
      197: out3 <= 20'hd00e2;
      198: out3 <= 20'hcf89e;
      199: out3 <= 20'hcf078;
      200: out3 <= 20'hce870;
      201: out3 <= 20'hce086;
      202: out3 <= 20'hcd8bc;
      203: out3 <= 20'hcd110;
      204: out3 <= 20'hcc984;
      205: out3 <= 20'hcc218;
      206: out3 <= 20'hcbacb;
      207: out3 <= 20'hcb39f;
      208: out3 <= 20'hcac93;
      209: out3 <= 20'hca5a8;
      210: out3 <= 20'hc9edf;
      211: out3 <= 20'hc9836;
      212: out3 <= 20'hc91b0;
      213: out3 <= 20'hc8b4b;
      214: out3 <= 20'hc8508;
      215: out3 <= 20'hc7ee7;
      216: out3 <= 20'hc78ea;
      217: out3 <= 20'hc730f;
      218: out3 <= 20'hc6d57;
      219: out3 <= 20'hc67c2;
      220: out3 <= 20'hc6251;
      221: out3 <= 20'hc5d03;
      222: out3 <= 20'hc57d9;
      223: out3 <= 20'hc52d4;
      224: out3 <= 20'hc4df3;
      225: out3 <= 20'hc4936;
      226: out3 <= 20'hc449e;
      227: out3 <= 20'hc402a;
      228: out3 <= 20'hc3bdc;
      229: out3 <= 20'hc37b3;
      230: out3 <= 20'hc33af;
      231: out3 <= 20'hc2fd1;
      232: out3 <= 20'hc2c18;
      233: out3 <= 20'hc2885;
      234: out3 <= 20'hc2518;
      235: out3 <= 20'hc21d1;
      236: out3 <= 20'hc1eb0;
      237: out3 <= 20'hc1bb6;
      238: out3 <= 20'hc18e2;
      239: out3 <= 20'hc1634;
      240: out3 <= 20'hc13ad;
      241: out3 <= 20'hc114d;
      242: out3 <= 20'hc0f13;
      243: out3 <= 20'hc0d01;
      244: out3 <= 20'hc0b15;
      245: out3 <= 20'hc0951;
      246: out3 <= 20'hc07b3;
      247: out3 <= 20'hc063d;
      248: out3 <= 20'hc04ee;
      249: out3 <= 20'hc03c7;
      250: out3 <= 20'hc02c6;
      251: out3 <= 20'hc01ed;
      252: out3 <= 20'hc013c;
      253: out3 <= 20'hc00b2;
      254: out3 <= 20'hc004f;
      255: out3 <= 20'hc0014;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



module D8_40713(addr, out, clk);
   input clk;
   output [19:0] out;
   reg [19:0] out, out2, out3;
   input [7:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 20'h0;
      1: out3 <= 20'hff9b8;
      2: out3 <= 20'hff36f;
      3: out3 <= 20'hfed27;
      4: out3 <= 20'hfe6df;
      5: out3 <= 20'hfe097;
      6: out3 <= 20'hfda4f;
      7: out3 <= 20'hfd408;
      8: out3 <= 20'hfcdc1;
      9: out3 <= 20'hfc77b;
      10: out3 <= 20'hfc135;
      11: out3 <= 20'hfbaf0;
      12: out3 <= 20'hfb4ab;
      13: out3 <= 20'hfae68;
      14: out3 <= 20'hfa825;
      15: out3 <= 20'hfa1e3;
      16: out3 <= 20'hf9ba1;
      17: out3 <= 20'hf9561;
      18: out3 <= 20'hf8f22;
      19: out3 <= 20'hf88e4;
      20: out3 <= 20'hf82a7;
      21: out3 <= 20'hf7c6b;
      22: out3 <= 20'hf7630;
      23: out3 <= 20'hf6ff7;
      24: out3 <= 20'hf69bf;
      25: out3 <= 20'hf6389;
      26: out3 <= 20'hf5d54;
      27: out3 <= 20'hf5721;
      28: out3 <= 20'hf50ef;
      29: out3 <= 20'hf4abf;
      30: out3 <= 20'hf4491;
      31: out3 <= 20'hf3e65;
      32: out3 <= 20'hf383a;
      33: out3 <= 20'hf3212;
      34: out3 <= 20'hf2beb;
      35: out3 <= 20'hf25c6;
      36: out3 <= 20'hf1fa4;
      37: out3 <= 20'hf1984;
      38: out3 <= 20'hf1366;
      39: out3 <= 20'hf0d4a;
      40: out3 <= 20'hf0730;
      41: out3 <= 20'hf0119;
      42: out3 <= 20'hefb04;
      43: out3 <= 20'hef4f2;
      44: out3 <= 20'heeee3;
      45: out3 <= 20'hee8d6;
      46: out3 <= 20'hee2cc;
      47: out3 <= 20'hedcc4;
      48: out3 <= 20'hed6c0;
      49: out3 <= 20'hed0be;
      50: out3 <= 20'hecabf;
      51: out3 <= 20'hec4c3;
      52: out3 <= 20'hebeca;
      53: out3 <= 20'heb8d4;
      54: out3 <= 20'heb2e2;
      55: out3 <= 20'heacf2;
      56: out3 <= 20'hea706;
      57: out3 <= 20'hea11e;
      58: out3 <= 20'he9b38;
      59: out3 <= 20'he9556;
      60: out3 <= 20'he8f78;
      61: out3 <= 20'he899d;
      62: out3 <= 20'he83c5;
      63: out3 <= 20'he7df2;
      64: out3 <= 20'he7822;
      65: out3 <= 20'he7256;
      66: out3 <= 20'he6c8d;
      67: out3 <= 20'he66c9;
      68: out3 <= 20'he6108;
      69: out3 <= 20'he5b4c;
      70: out3 <= 20'he5593;
      71: out3 <= 20'he4fdf;
      72: out3 <= 20'he4a2f;
      73: out3 <= 20'he4483;
      74: out3 <= 20'he3edb;
      75: out3 <= 20'he3938;
      76: out3 <= 20'he3399;
      77: out3 <= 20'he2dff;
      78: out3 <= 20'he2869;
      79: out3 <= 20'he22d7;
      80: out3 <= 20'he1d4a;
      81: out3 <= 20'he17c2;
      82: out3 <= 20'he123e;
      83: out3 <= 20'he0cc0;
      84: out3 <= 20'he0746;
      85: out3 <= 20'he01d1;
      86: out3 <= 20'hdfc60;
      87: out3 <= 20'hdf6f5;
      88: out3 <= 20'hdf18f;
      89: out3 <= 20'hdec2e;
      90: out3 <= 20'hde6d2;
      91: out3 <= 20'hde17b;
      92: out3 <= 20'hddc2a;
      93: out3 <= 20'hdd6dd;
      94: out3 <= 20'hdd196;
      95: out3 <= 20'hdcc55;
      96: out3 <= 20'hdc719;
      97: out3 <= 20'hdc1e2;
      98: out3 <= 20'hdbcb1;
      99: out3 <= 20'hdb785;
      100: out3 <= 20'hdb25f;
      101: out3 <= 20'hdad3f;
      102: out3 <= 20'hda825;
      103: out3 <= 20'hda310;
      104: out3 <= 20'hd9e01;
      105: out3 <= 20'hd98f8;
      106: out3 <= 20'hd93f5;
      107: out3 <= 20'hd8ef8;
      108: out3 <= 20'hd8a01;
      109: out3 <= 20'hd8510;
      110: out3 <= 20'hd8025;
      111: out3 <= 20'hd7b40;
      112: out3 <= 20'hd7662;
      113: out3 <= 20'hd7189;
      114: out3 <= 20'hd6cb7;
      115: out3 <= 20'hd67ec;
      116: out3 <= 20'hd6327;
      117: out3 <= 20'hd5e68;
      118: out3 <= 20'hd59b0;
      119: out3 <= 20'hd54fe;
      120: out3 <= 20'hd5053;
      121: out3 <= 20'hd4bae;
      122: out3 <= 20'hd4711;
      123: out3 <= 20'hd4279;
      124: out3 <= 20'hd3de9;
      125: out3 <= 20'hd3960;
      126: out3 <= 20'hd34dd;
      127: out3 <= 20'hd3061;
      128: out3 <= 20'hd2bec;
      129: out3 <= 20'hd277e;
      130: out3 <= 20'hd2317;
      131: out3 <= 20'hd1eb8;
      132: out3 <= 20'hd1a5f;
      133: out3 <= 20'hd160d;
      134: out3 <= 20'hd11c3;
      135: out3 <= 20'hd0d80;
      136: out3 <= 20'hd0944;
      137: out3 <= 20'hd0510;
      138: out3 <= 20'hd00e2;
      139: out3 <= 20'hcfcbd;
      140: out3 <= 20'hcf89e;
      141: out3 <= 20'hcf487;
      142: out3 <= 20'hcf078;
      143: out3 <= 20'hcec70;
      144: out3 <= 20'hce870;
      145: out3 <= 20'hce477;
      146: out3 <= 20'hce086;
      147: out3 <= 20'hcdc9d;
      148: out3 <= 20'hcd8bc;
      149: out3 <= 20'hcd4e2;
      150: out3 <= 20'hcd110;
      151: out3 <= 20'hccd46;
      152: out3 <= 20'hcc984;
      153: out3 <= 20'hcc5ca;
      154: out3 <= 20'hcc218;
      155: out3 <= 20'hcbe6d;
      156: out3 <= 20'hcbacb;
      157: out3 <= 20'hcb731;
      158: out3 <= 20'hcb39f;
      159: out3 <= 20'hcb015;
      160: out3 <= 20'hcac93;
      161: out3 <= 20'hca91a;
      162: out3 <= 20'hca5a8;
      163: out3 <= 20'hca23f;
      164: out3 <= 20'hc9edf;
      165: out3 <= 20'hc9b86;
      166: out3 <= 20'hc9836;
      167: out3 <= 20'hc94ef;
      168: out3 <= 20'hc91b0;
      169: out3 <= 20'hc8e79;
      170: out3 <= 20'hc8b4b;
      171: out3 <= 20'hc8825;
      172: out3 <= 20'hc8508;
      173: out3 <= 20'hc81f3;
      174: out3 <= 20'hc7ee7;
      175: out3 <= 20'hc7be4;
      176: out3 <= 20'hc78ea;
      177: out3 <= 20'hc75f8;
      178: out3 <= 20'hc730f;
      179: out3 <= 20'hc702e;
      180: out3 <= 20'hc6d57;
      181: out3 <= 20'hc6a88;
      182: out3 <= 20'hc67c2;
      183: out3 <= 20'hc6505;
      184: out3 <= 20'hc6251;
      185: out3 <= 20'hc5fa5;
      186: out3 <= 20'hc5d03;
      187: out3 <= 20'hc5a6a;
      188: out3 <= 20'hc57d9;
      189: out3 <= 20'hc5552;
      190: out3 <= 20'hc52d4;
      191: out3 <= 20'hc505f;
      192: out3 <= 20'hc4df3;
      193: out3 <= 20'hc4b90;
      194: out3 <= 20'hc4936;
      195: out3 <= 20'hc46e5;
      196: out3 <= 20'hc449e;
      197: out3 <= 20'hc425f;
      198: out3 <= 20'hc402a;
      199: out3 <= 20'hc3dfe;
      200: out3 <= 20'hc3bdc;
      201: out3 <= 20'hc39c3;
      202: out3 <= 20'hc37b3;
      203: out3 <= 20'hc35ac;
      204: out3 <= 20'hc33af;
      205: out3 <= 20'hc31bb;
      206: out3 <= 20'hc2fd1;
      207: out3 <= 20'hc2def;
      208: out3 <= 20'hc2c18;
      209: out3 <= 20'hc2a4a;
      210: out3 <= 20'hc2885;
      211: out3 <= 20'hc26ca;
      212: out3 <= 20'hc2518;
      213: out3 <= 20'hc2370;
      214: out3 <= 20'hc21d1;
      215: out3 <= 20'hc203c;
      216: out3 <= 20'hc1eb0;
      217: out3 <= 20'hc1d2e;
      218: out3 <= 20'hc1bb6;
      219: out3 <= 20'hc1a47;
      220: out3 <= 20'hc18e2;
      221: out3 <= 20'hc1786;
      222: out3 <= 20'hc1634;
      223: out3 <= 20'hc14ec;
      224: out3 <= 20'hc13ad;
      225: out3 <= 20'hc1278;
      226: out3 <= 20'hc114d;
      227: out3 <= 20'hc102b;
      228: out3 <= 20'hc0f13;
      229: out3 <= 20'hc0e05;
      230: out3 <= 20'hc0d01;
      231: out3 <= 20'hc0c06;
      232: out3 <= 20'hc0b15;
      233: out3 <= 20'hc0a2e;
      234: out3 <= 20'hc0951;
      235: out3 <= 20'hc087d;
      236: out3 <= 20'hc07b3;
      237: out3 <= 20'hc06f3;
      238: out3 <= 20'hc063d;
      239: out3 <= 20'hc0591;
      240: out3 <= 20'hc04ee;
      241: out3 <= 20'hc0456;
      242: out3 <= 20'hc03c7;
      243: out3 <= 20'hc0342;
      244: out3 <= 20'hc02c6;
      245: out3 <= 20'hc0255;
      246: out3 <= 20'hc01ed;
      247: out3 <= 20'hc0190;
      248: out3 <= 20'hc013c;
      249: out3 <= 20'hc00f2;
      250: out3 <= 20'hc00b2;
      251: out3 <= 20'hc007b;
      252: out3 <= 20'hc004f;
      253: out3 <= 20'hc002c;
      254: out3 <= 20'hc0014;
      255: out3 <= 20'hc0005;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



module D10_41229(addr, out, clk);
   input clk;
   output [19:0] out;
   reg [19:0] out, out2, out3;
   input [7:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 20'h0;
      1: out3 <= 20'hfed27;
      2: out3 <= 20'hfda4f;
      3: out3 <= 20'hfc77b;
      4: out3 <= 20'hfb4ab;
      5: out3 <= 20'hfa1e3;
      6: out3 <= 20'hf8f22;
      7: out3 <= 20'hf7c6b;
      8: out3 <= 20'hf69bf;
      9: out3 <= 20'hf5721;
      10: out3 <= 20'hf4491;
      11: out3 <= 20'hf3212;
      12: out3 <= 20'hf1fa4;
      13: out3 <= 20'hf0d4a;
      14: out3 <= 20'hefb04;
      15: out3 <= 20'hee8d6;
      16: out3 <= 20'hed6c0;
      17: out3 <= 20'hec4c3;
      18: out3 <= 20'heb2e2;
      19: out3 <= 20'hea11e;
      20: out3 <= 20'he8f78;
      21: out3 <= 20'he7df2;
      22: out3 <= 20'he6c8d;
      23: out3 <= 20'he5b4c;
      24: out3 <= 20'he4a2f;
      25: out3 <= 20'he3938;
      26: out3 <= 20'he2869;
      27: out3 <= 20'he17c2;
      28: out3 <= 20'he0746;
      29: out3 <= 20'hdf6f5;
      30: out3 <= 20'hde6d2;
      31: out3 <= 20'hdd6dd;
      32: out3 <= 20'hdc719;
      33: out3 <= 20'hdb785;
      34: out3 <= 20'hda825;
      35: out3 <= 20'hd98f8;
      36: out3 <= 20'hd8a01;
      37: out3 <= 20'hd7b40;
      38: out3 <= 20'hd6cb7;
      39: out3 <= 20'hd5e68;
      40: out3 <= 20'hd5053;
      41: out3 <= 20'hd4279;
      42: out3 <= 20'hd34dd;
      43: out3 <= 20'hd277e;
      44: out3 <= 20'hd1a5f;
      45: out3 <= 20'hd0d80;
      46: out3 <= 20'hd00e2;
      47: out3 <= 20'hcf487;
      48: out3 <= 20'hce870;
      49: out3 <= 20'hcdc9d;
      50: out3 <= 20'hcd110;
      51: out3 <= 20'hcc5ca;
      52: out3 <= 20'hcbacb;
      53: out3 <= 20'hcb015;
      54: out3 <= 20'hca5a8;
      55: out3 <= 20'hc9b86;
      56: out3 <= 20'hc91b0;
      57: out3 <= 20'hc8825;
      58: out3 <= 20'hc7ee7;
      59: out3 <= 20'hc75f8;
      60: out3 <= 20'hc6d57;
      61: out3 <= 20'hc6505;
      62: out3 <= 20'hc5d03;
      63: out3 <= 20'hc5552;
      64: out3 <= 20'hc4df3;
      65: out3 <= 20'hc46e5;
      66: out3 <= 20'hc402a;
      67: out3 <= 20'hc39c3;
      68: out3 <= 20'hc33af;
      69: out3 <= 20'hc2def;
      70: out3 <= 20'hc2885;
      71: out3 <= 20'hc2370;
      72: out3 <= 20'hc1eb0;
      73: out3 <= 20'hc1a47;
      74: out3 <= 20'hc1634;
      75: out3 <= 20'hc1278;
      76: out3 <= 20'hc0f13;
      77: out3 <= 20'hc0c06;
      78: out3 <= 20'hc0951;
      79: out3 <= 20'hc06f3;
      80: out3 <= 20'hc04ee;
      81: out3 <= 20'hc0342;
      82: out3 <= 20'hc01ed;
      83: out3 <= 20'hc00f2;
      84: out3 <= 20'hc004f;
      85: out3 <= 20'hc0005;
      86: out3 <= 20'hc0014;
      87: out3 <= 20'hc007b;
      88: out3 <= 20'hc013c;
      89: out3 <= 20'hc0255;
      90: out3 <= 20'hc03c7;
      91: out3 <= 20'hc0591;
      92: out3 <= 20'hc07b3;
      93: out3 <= 20'hc0a2e;
      94: out3 <= 20'hc0d01;
      95: out3 <= 20'hc102b;
      96: out3 <= 20'hc13ad;
      97: out3 <= 20'hc1786;
      98: out3 <= 20'hc1bb6;
      99: out3 <= 20'hc203c;
      100: out3 <= 20'hc2518;
      101: out3 <= 20'hc2a4a;
      102: out3 <= 20'hc2fd1;
      103: out3 <= 20'hc35ac;
      104: out3 <= 20'hc3bdc;
      105: out3 <= 20'hc425f;
      106: out3 <= 20'hc4936;
      107: out3 <= 20'hc505f;
      108: out3 <= 20'hc57d9;
      109: out3 <= 20'hc5fa5;
      110: out3 <= 20'hc67c2;
      111: out3 <= 20'hc702e;
      112: out3 <= 20'hc78ea;
      113: out3 <= 20'hc81f3;
      114: out3 <= 20'hc8b4b;
      115: out3 <= 20'hc94ef;
      116: out3 <= 20'hc9edf;
      117: out3 <= 20'hca91a;
      118: out3 <= 20'hcb39f;
      119: out3 <= 20'hcbe6d;
      120: out3 <= 20'hcc984;
      121: out3 <= 20'hcd4e2;
      122: out3 <= 20'hce086;
      123: out3 <= 20'hcec70;
      124: out3 <= 20'hcf89e;
      125: out3 <= 20'hd0510;
      126: out3 <= 20'hd11c3;
      127: out3 <= 20'hd1eb8;
      128: out3 <= 20'hd2bec;
      129: out3 <= 20'hd3960;
      130: out3 <= 20'hd4711;
      131: out3 <= 20'hd54fe;
      132: out3 <= 20'hd6327;
      133: out3 <= 20'hd7189;
      134: out3 <= 20'hd8025;
      135: out3 <= 20'hd8ef8;
      136: out3 <= 20'hd9e01;
      137: out3 <= 20'hdad3f;
      138: out3 <= 20'hdbcb1;
      139: out3 <= 20'hdcc55;
      140: out3 <= 20'hddc2a;
      141: out3 <= 20'hdec2e;
      142: out3 <= 20'hdfc60;
      143: out3 <= 20'he0cc0;
      144: out3 <= 20'he1d4a;
      145: out3 <= 20'he2dff;
      146: out3 <= 20'he3edb;
      147: out3 <= 20'he4fdf;
      148: out3 <= 20'he6108;
      149: out3 <= 20'he7256;
      150: out3 <= 20'he83c5;
      151: out3 <= 20'he9556;
      152: out3 <= 20'hea706;
      153: out3 <= 20'heb8d4;
      154: out3 <= 20'hecabf;
      155: out3 <= 20'hedcc4;
      156: out3 <= 20'heeee3;
      157: out3 <= 20'hf0119;
      158: out3 <= 20'hf1366;
      159: out3 <= 20'hf25c6;
      160: out3 <= 20'hf383a;
      161: out3 <= 20'hf4abf;
      162: out3 <= 20'hf5d54;
      163: out3 <= 20'hf6ff7;
      164: out3 <= 20'hf82a7;
      165: out3 <= 20'hf9561;
      166: out3 <= 20'hfa825;
      167: out3 <= 20'hfbaf0;
      168: out3 <= 20'hfcdc1;
      169: out3 <= 20'hfe097;
      170: out3 <= 20'hff36f;
      171: out3 <= 20'h648;
      172: out3 <= 20'h1921;
      173: out3 <= 20'h2bf8;
      174: out3 <= 20'h3ecb;
      175: out3 <= 20'h5198;
      176: out3 <= 20'h645f;
      177: out3 <= 20'h771c;
      178: out3 <= 20'h89d0;
      179: out3 <= 20'h9c77;
      180: out3 <= 20'haf11;
      181: out3 <= 20'hc19b;
      182: out3 <= 20'hd415;
      183: out3 <= 20'he67c;
      184: out3 <= 20'hf8d0;
      185: out3 <= 20'h10b0e;
      186: out3 <= 20'h11d34;
      187: out3 <= 20'h12f42;
      188: out3 <= 20'h14136;
      189: out3 <= 20'h1530e;
      190: out3 <= 20'h164c8;
      191: out3 <= 20'h17663;
      192: out3 <= 20'h187de;
      193: out3 <= 20'h19937;
      194: out3 <= 20'h1aa6d;
      195: out3 <= 20'h1bb7d;
      196: out3 <= 20'h1cc67;
      197: out3 <= 20'h1dd29;
      198: out3 <= 20'h1edc2;
      199: out3 <= 20'h1fe2f;
      200: out3 <= 20'h20e71;
      201: out3 <= 20'h21e85;
      202: out3 <= 20'h22e6a;
      203: out3 <= 20'h23e1e;
      204: out3 <= 20'h24da1;
      205: out3 <= 20'h25cf0;
      206: out3 <= 20'h26c0b;
      207: out3 <= 20'h27af0;
      208: out3 <= 20'h2899e;
      209: out3 <= 20'h29814;
      210: out3 <= 20'h2a650;
      211: out3 <= 20'h2b452;
      212: out3 <= 20'h2c217;
      213: out3 <= 20'h2cf9f;
      214: out3 <= 20'h2dce9;
      215: out3 <= 20'h2e9f3;
      216: out3 <= 20'h2f6bc;
      217: out3 <= 20'h30343;
      218: out3 <= 20'h30f88;
      219: out3 <= 20'h31b89;
      220: out3 <= 20'h32744;
      221: out3 <= 20'h332ba;
      222: out3 <= 20'h33de8;
      223: out3 <= 20'h348cf;
      224: out3 <= 20'h3536d;
      225: out3 <= 20'h35dc1;
      226: out3 <= 20'h367ca;
      227: out3 <= 20'h37187;
      228: out3 <= 20'h37af8;
      229: out3 <= 20'h3841c;
      230: out3 <= 20'h38cf1;
      231: out3 <= 20'h39578;
      232: out3 <= 20'h39daf;
      233: out3 <= 20'h3a596;
      234: out3 <= 20'h3ad2c;
      235: out3 <= 20'h3b470;
      236: out3 <= 20'h3bb62;
      237: out3 <= 20'h3c202;
      238: out3 <= 20'h3c84d;
      239: out3 <= 20'h3ce45;
      240: out3 <= 20'h3d3e8;
      241: out3 <= 20'h3d936;
      242: out3 <= 20'h3de2f;
      243: out3 <= 20'h3e2d2;
      244: out3 <= 20'h3e71e;
      245: out3 <= 20'h3eb14;
      246: out3 <= 20'h3eeb3;
      247: out3 <= 20'h3f1fb;
      248: out3 <= 20'h3f4eb;
      249: out3 <= 20'h3f783;
      250: out3 <= 20'h3f9c3;
      251: out3 <= 20'h3fbaa;
      252: out3 <= 20'h3fd3a;
      253: out3 <= 20'h3fe70;
      254: out3 <= 20'h3ff4e;
      255: out3 <= 20'h3ffd4;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



module D6_41487(addr, out, clk);
   input clk;
   output [19:0] out;
   reg [19:0] out, out2, out3;
   input [7:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 20'h40000;
      1: out3 <= 20'h3ffd4;
      2: out3 <= 20'h3ff4e;
      3: out3 <= 20'h3fe70;
      4: out3 <= 20'h3fd3a;
      5: out3 <= 20'h3fbaa;
      6: out3 <= 20'h3f9c3;
      7: out3 <= 20'h3f783;
      8: out3 <= 20'h3f4eb;
      9: out3 <= 20'h3f1fb;
      10: out3 <= 20'h3eeb3;
      11: out3 <= 20'h3eb14;
      12: out3 <= 20'h3e71e;
      13: out3 <= 20'h3e2d2;
      14: out3 <= 20'h3de2f;
      15: out3 <= 20'h3d936;
      16: out3 <= 20'h3d3e8;
      17: out3 <= 20'h3ce45;
      18: out3 <= 20'h3c84d;
      19: out3 <= 20'h3c202;
      20: out3 <= 20'h3bb62;
      21: out3 <= 20'h3b470;
      22: out3 <= 20'h3ad2c;
      23: out3 <= 20'h3a596;
      24: out3 <= 20'h39daf;
      25: out3 <= 20'h39578;
      26: out3 <= 20'h38cf1;
      27: out3 <= 20'h3841c;
      28: out3 <= 20'h37af8;
      29: out3 <= 20'h37187;
      30: out3 <= 20'h367ca;
      31: out3 <= 20'h35dc1;
      32: out3 <= 20'h3536d;
      33: out3 <= 20'h348cf;
      34: out3 <= 20'h33de8;
      35: out3 <= 20'h332ba;
      36: out3 <= 20'h32744;
      37: out3 <= 20'h31b89;
      38: out3 <= 20'h30f88;
      39: out3 <= 20'h30343;
      40: out3 <= 20'h2f6bc;
      41: out3 <= 20'h2e9f3;
      42: out3 <= 20'h2dce9;
      43: out3 <= 20'h2cf9f;
      44: out3 <= 20'h2c217;
      45: out3 <= 20'h2b452;
      46: out3 <= 20'h2a650;
      47: out3 <= 20'h29814;
      48: out3 <= 20'h2899e;
      49: out3 <= 20'h27af0;
      50: out3 <= 20'h26c0b;
      51: out3 <= 20'h25cf0;
      52: out3 <= 20'h24da1;
      53: out3 <= 20'h23e1e;
      54: out3 <= 20'h22e6a;
      55: out3 <= 20'h21e85;
      56: out3 <= 20'h20e71;
      57: out3 <= 20'h1fe2f;
      58: out3 <= 20'h1edc2;
      59: out3 <= 20'h1dd29;
      60: out3 <= 20'h1cc67;
      61: out3 <= 20'h1bb7d;
      62: out3 <= 20'h1aa6d;
      63: out3 <= 20'h19937;
      64: out3 <= 20'h187de;
      65: out3 <= 20'h17663;
      66: out3 <= 20'h164c8;
      67: out3 <= 20'h1530e;
      68: out3 <= 20'h14136;
      69: out3 <= 20'h12f42;
      70: out3 <= 20'h11d34;
      71: out3 <= 20'h10b0e;
      72: out3 <= 20'hf8d0;
      73: out3 <= 20'he67c;
      74: out3 <= 20'hd415;
      75: out3 <= 20'hc19b;
      76: out3 <= 20'haf11;
      77: out3 <= 20'h9c77;
      78: out3 <= 20'h89d0;
      79: out3 <= 20'h771c;
      80: out3 <= 20'h645f;
      81: out3 <= 20'h5198;
      82: out3 <= 20'h3ecb;
      83: out3 <= 20'h2bf8;
      84: out3 <= 20'h1921;
      85: out3 <= 20'h648;
      86: out3 <= 20'hff36f;
      87: out3 <= 20'hfe097;
      88: out3 <= 20'hfcdc1;
      89: out3 <= 20'hfbaf0;
      90: out3 <= 20'hfa825;
      91: out3 <= 20'hf9561;
      92: out3 <= 20'hf82a7;
      93: out3 <= 20'hf6ff7;
      94: out3 <= 20'hf5d54;
      95: out3 <= 20'hf4abf;
      96: out3 <= 20'hf383a;
      97: out3 <= 20'hf25c6;
      98: out3 <= 20'hf1366;
      99: out3 <= 20'hf0119;
      100: out3 <= 20'heeee3;
      101: out3 <= 20'hedcc4;
      102: out3 <= 20'hecabf;
      103: out3 <= 20'heb8d4;
      104: out3 <= 20'hea706;
      105: out3 <= 20'he9556;
      106: out3 <= 20'he83c5;
      107: out3 <= 20'he7256;
      108: out3 <= 20'he6108;
      109: out3 <= 20'he4fdf;
      110: out3 <= 20'he3edb;
      111: out3 <= 20'he2dff;
      112: out3 <= 20'he1d4a;
      113: out3 <= 20'he0cc0;
      114: out3 <= 20'hdfc60;
      115: out3 <= 20'hdec2e;
      116: out3 <= 20'hddc2a;
      117: out3 <= 20'hdcc55;
      118: out3 <= 20'hdbcb1;
      119: out3 <= 20'hdad3f;
      120: out3 <= 20'hd9e01;
      121: out3 <= 20'hd8ef8;
      122: out3 <= 20'hd8025;
      123: out3 <= 20'hd7189;
      124: out3 <= 20'hd6327;
      125: out3 <= 20'hd54fe;
      126: out3 <= 20'hd4711;
      127: out3 <= 20'hd3960;
      128: out3 <= 20'hd2bec;
      129: out3 <= 20'hd1eb8;
      130: out3 <= 20'hd11c3;
      131: out3 <= 20'hd0510;
      132: out3 <= 20'hcf89e;
      133: out3 <= 20'hcec70;
      134: out3 <= 20'hce086;
      135: out3 <= 20'hcd4e2;
      136: out3 <= 20'hcc984;
      137: out3 <= 20'hcbe6d;
      138: out3 <= 20'hcb39f;
      139: out3 <= 20'hca91a;
      140: out3 <= 20'hc9edf;
      141: out3 <= 20'hc94ef;
      142: out3 <= 20'hc8b4b;
      143: out3 <= 20'hc81f3;
      144: out3 <= 20'hc78ea;
      145: out3 <= 20'hc702e;
      146: out3 <= 20'hc67c2;
      147: out3 <= 20'hc5fa5;
      148: out3 <= 20'hc57d9;
      149: out3 <= 20'hc505f;
      150: out3 <= 20'hc4936;
      151: out3 <= 20'hc425f;
      152: out3 <= 20'hc3bdc;
      153: out3 <= 20'hc35ac;
      154: out3 <= 20'hc2fd1;
      155: out3 <= 20'hc2a4a;
      156: out3 <= 20'hc2518;
      157: out3 <= 20'hc203c;
      158: out3 <= 20'hc1bb6;
      159: out3 <= 20'hc1786;
      160: out3 <= 20'hc13ad;
      161: out3 <= 20'hc102b;
      162: out3 <= 20'hc0d01;
      163: out3 <= 20'hc0a2e;
      164: out3 <= 20'hc07b3;
      165: out3 <= 20'hc0591;
      166: out3 <= 20'hc03c7;
      167: out3 <= 20'hc0255;
      168: out3 <= 20'hc013c;
      169: out3 <= 20'hc007b;
      170: out3 <= 20'hc0014;
      171: out3 <= 20'hc0005;
      172: out3 <= 20'hc004f;
      173: out3 <= 20'hc00f2;
      174: out3 <= 20'hc01ed;
      175: out3 <= 20'hc0342;
      176: out3 <= 20'hc04ee;
      177: out3 <= 20'hc06f3;
      178: out3 <= 20'hc0951;
      179: out3 <= 20'hc0c06;
      180: out3 <= 20'hc0f13;
      181: out3 <= 20'hc1278;
      182: out3 <= 20'hc1634;
      183: out3 <= 20'hc1a47;
      184: out3 <= 20'hc1eb0;
      185: out3 <= 20'hc2370;
      186: out3 <= 20'hc2885;
      187: out3 <= 20'hc2def;
      188: out3 <= 20'hc33af;
      189: out3 <= 20'hc39c3;
      190: out3 <= 20'hc402a;
      191: out3 <= 20'hc46e5;
      192: out3 <= 20'hc4df3;
      193: out3 <= 20'hc5552;
      194: out3 <= 20'hc5d03;
      195: out3 <= 20'hc6505;
      196: out3 <= 20'hc6d57;
      197: out3 <= 20'hc75f8;
      198: out3 <= 20'hc7ee7;
      199: out3 <= 20'hc8825;
      200: out3 <= 20'hc91b0;
      201: out3 <= 20'hc9b86;
      202: out3 <= 20'hca5a8;
      203: out3 <= 20'hcb015;
      204: out3 <= 20'hcbacb;
      205: out3 <= 20'hcc5ca;
      206: out3 <= 20'hcd110;
      207: out3 <= 20'hcdc9d;
      208: out3 <= 20'hce870;
      209: out3 <= 20'hcf487;
      210: out3 <= 20'hd00e2;
      211: out3 <= 20'hd0d80;
      212: out3 <= 20'hd1a5f;
      213: out3 <= 20'hd277e;
      214: out3 <= 20'hd34dd;
      215: out3 <= 20'hd4279;
      216: out3 <= 20'hd5053;
      217: out3 <= 20'hd5e68;
      218: out3 <= 20'hd6cb7;
      219: out3 <= 20'hd7b40;
      220: out3 <= 20'hd8a01;
      221: out3 <= 20'hd98f8;
      222: out3 <= 20'hda825;
      223: out3 <= 20'hdb785;
      224: out3 <= 20'hdc719;
      225: out3 <= 20'hdd6dd;
      226: out3 <= 20'hde6d2;
      227: out3 <= 20'hdf6f5;
      228: out3 <= 20'he0746;
      229: out3 <= 20'he17c2;
      230: out3 <= 20'he2869;
      231: out3 <= 20'he3938;
      232: out3 <= 20'he4a2f;
      233: out3 <= 20'he5b4c;
      234: out3 <= 20'he6c8d;
      235: out3 <= 20'he7df2;
      236: out3 <= 20'he8f78;
      237: out3 <= 20'hea11e;
      238: out3 <= 20'heb2e2;
      239: out3 <= 20'hec4c3;
      240: out3 <= 20'hed6c0;
      241: out3 <= 20'hee8d6;
      242: out3 <= 20'hefb04;
      243: out3 <= 20'hf0d4a;
      244: out3 <= 20'hf1fa4;
      245: out3 <= 20'hf3212;
      246: out3 <= 20'hf4491;
      247: out3 <= 20'hf5721;
      248: out3 <= 20'hf69bf;
      249: out3 <= 20'hf7c6b;
      250: out3 <= 20'hf8f22;
      251: out3 <= 20'hfa1e3;
      252: out3 <= 20'hfb4ab;
      253: out3 <= 20'hfc77b;
      254: out3 <= 20'hfda4f;
      255: out3 <= 20'hfed27;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



// Latency: 12
// Gap: 1
module codeBlock39361(clk, reset, next_in, next_out,
   i1_in,
   X0_in, Y0,
   X1_in, Y1,
   X2_in, Y2,
   X3_in, Y3,
   X4_in, Y4,
   X5_in, Y5,
   X6_in, Y6,
   X7_in, Y7);

   output next_out;
   input clk, reset, next_in;

   reg next;
   input [7:0] i1_in;
   reg [7:0] i1;

   input [19:0] X0_in,
      X1_in,
      X2_in,
      X3_in,
      X4_in,
      X5_in,
      X6_in,
      X7_in;

   reg   [19:0] X0,
      X1,
      X2,
      X3,
      X4,
      X5,
      X6,
      X7;

   output [19:0] Y0,
      Y1,
      Y2,
      Y3,
      Y4,
      Y5,
      Y6,
      Y7;

   shiftRegFIFO #(11, 1) shiftFIFO_43992(.X(next), .Y(next_out), .clk(clk));


   wire signed [19:0] a105;
   wire signed [19:0] a82;
   wire signed [19:0] a108;
   wire signed [19:0] a86;
   wire signed [19:0] a109;
   wire signed [19:0] a110;
   wire signed [19:0] a113;
   wire signed [19:0] a114;
   wire signed [19:0] a117;
   wire signed [19:0] a118;
   reg signed [19:0] tm448;
   reg signed [19:0] tm452;
   reg signed [19:0] tm464;
   reg signed [19:0] tm468;
   reg signed [19:0] tm480;
   reg signed [19:0] tm484;
   reg signed [19:0] tm496;
   reg signed [19:0] tm507;
   reg signed [19:0] tm449;
   reg signed [19:0] tm453;
   reg signed [19:0] tm465;
   reg signed [19:0] tm469;
   reg signed [19:0] tm481;
   reg signed [19:0] tm485;
   reg signed [19:0] tm497;
   reg signed [19:0] tm508;
   wire signed [19:0] tm31;
   wire signed [19:0] a87;
   wire signed [19:0] tm32;
   wire signed [19:0] a89;
   wire signed [19:0] tm33;
   wire signed [19:0] a93;
   wire signed [19:0] tm34;
   wire signed [19:0] a95;
   wire signed [19:0] tm35;
   wire signed [19:0] a99;
   wire signed [19:0] tm36;
   wire signed [19:0] a101;
   reg signed [19:0] tm450;
   reg signed [19:0] tm454;
   reg signed [19:0] tm466;
   reg signed [19:0] tm470;
   reg signed [19:0] tm482;
   reg signed [19:0] tm486;
   reg signed [19:0] tm498;
   reg signed [19:0] tm509;
   reg signed [19:0] tm90;
   reg signed [19:0] tm91;
   reg signed [19:0] tm94;
   reg signed [19:0] tm95;
   reg signed [19:0] tm98;
   reg signed [19:0] tm99;
   reg signed [19:0] tm451;
   reg signed [19:0] tm455;
   reg signed [19:0] tm467;
   reg signed [19:0] tm471;
   reg signed [19:0] tm483;
   reg signed [19:0] tm487;
   reg signed [19:0] tm499;
   reg signed [19:0] tm510;
   reg signed [19:0] tm500;
   reg signed [19:0] tm511;
   reg signed [19:0] tm501;
   reg signed [19:0] tm512;
   reg signed [19:0] tm502;
   reg signed [19:0] tm513;
   reg signed [19:0] tm503;
   reg signed [19:0] tm514;
   reg signed [19:0] tm504;
   reg signed [19:0] tm515;
   wire signed [19:0] a88;
   wire signed [19:0] a90;
   wire signed [19:0] a91;
   wire signed [19:0] a92;
   wire signed [19:0] a94;
   wire signed [19:0] a96;
   wire signed [19:0] a97;
   wire signed [19:0] a98;
   wire signed [19:0] a100;
   wire signed [19:0] a102;
   wire signed [19:0] a103;
   wire signed [19:0] a104;
   reg signed [19:0] tm505;
   reg signed [19:0] tm516;
   wire signed [19:0] Y0;
   wire signed [19:0] Y1;
   wire signed [19:0] Y2;
   wire signed [19:0] Y3;
   wire signed [19:0] Y4;
   wire signed [19:0] Y5;
   wire signed [19:0] Y6;
   wire signed [19:0] Y7;
   reg signed [19:0] tm506;
   reg signed [19:0] tm517;


   assign a105 = X0;
   assign a82 = a105;
   assign a108 = X1;
   assign a86 = a108;
   assign a109 = X2;
   assign a110 = X3;
   assign a113 = X4;
   assign a114 = X5;
   assign a117 = X6;
   assign a118 = X7;
   assign a87 = tm31;
   assign a89 = tm32;
   assign a93 = tm33;
   assign a95 = tm34;
   assign a99 = tm35;
   assign a101 = tm36;
   assign Y0 = tm506;
   assign Y1 = tm517;

   D4_39939 instD4inst0_39939(.addr(i1[7:0]), .out(tm31), .clk(clk));

   D9_40197 instD9inst0_40197(.addr(i1[7:0]), .out(tm34), .clk(clk));

   D5_40455 instD5inst0_40455(.addr(i1[7:0]), .out(tm33), .clk(clk));

   D8_40713 instD8inst0_40713(.addr(i1[7:0]), .out(tm32), .clk(clk));

   D10_41229 instD10inst0_41229(.addr(i1[7:0]), .out(tm36), .clk(clk));

   D6_41487 instD6inst0_41487(.addr(i1[7:0]), .out(tm35), .clk(clk));

    multfix #(20, 6) m39460(.a(tm90), .b(tm451), .clk(clk), .q_sc(a88), .q_unsc(), .rst(reset));
    multfix #(20, 6) m39482(.a(tm91), .b(tm455), .clk(clk), .q_sc(a90), .q_unsc(), .rst(reset));
    multfix #(20, 6) m39500(.a(tm91), .b(tm451), .clk(clk), .q_sc(a91), .q_unsc(), .rst(reset));
    multfix #(20, 6) m39511(.a(tm90), .b(tm455), .clk(clk), .q_sc(a92), .q_unsc(), .rst(reset));
    multfix #(20, 6) m39540(.a(tm94), .b(tm467), .clk(clk), .q_sc(a94), .q_unsc(), .rst(reset));
    multfix #(20, 6) m39562(.a(tm95), .b(tm471), .clk(clk), .q_sc(a96), .q_unsc(), .rst(reset));
    multfix #(20, 6) m39580(.a(tm95), .b(tm467), .clk(clk), .q_sc(a97), .q_unsc(), .rst(reset));
    multfix #(20, 6) m39591(.a(tm94), .b(tm471), .clk(clk), .q_sc(a98), .q_unsc(), .rst(reset));
    multfix #(20, 6) m39620(.a(tm98), .b(tm483), .clk(clk), .q_sc(a100), .q_unsc(), .rst(reset));
    multfix #(20, 6) m39642(.a(tm99), .b(tm487), .clk(clk), .q_sc(a102), .q_unsc(), .rst(reset));
    multfix #(20, 6) m39660(.a(tm99), .b(tm483), .clk(clk), .q_sc(a103), .q_unsc(), .rst(reset));
    multfix #(20, 6) m39671(.a(tm98), .b(tm487), .clk(clk), .q_sc(a104), .q_unsc(), .rst(reset));
    subfxp #(20, 1) sub39489(.a(a88), .b(a90), .clk(clk), .q(Y2));    // 10
    addfxp #(20, 1) add39518(.a(a91), .b(a92), .clk(clk), .q(Y3));    // 10
    subfxp #(20, 1) sub39569(.a(a94), .b(a96), .clk(clk), .q(Y4));    // 10
    addfxp #(20, 1) add39598(.a(a97), .b(a98), .clk(clk), .q(Y5));    // 10
    subfxp #(20, 1) sub39649(.a(a100), .b(a102), .clk(clk), .q(Y6));    // 10
    addfxp #(20, 1) add39678(.a(a103), .b(a104), .clk(clk), .q(Y7));    // 10


   always @(posedge clk) begin
      if (reset == 1) begin
         tm90 <= 0;
         tm451 <= 0;
         tm91 <= 0;
         tm455 <= 0;
         tm91 <= 0;
         tm451 <= 0;
         tm90 <= 0;
         tm455 <= 0;
         tm94 <= 0;
         tm467 <= 0;
         tm95 <= 0;
         tm471 <= 0;
         tm95 <= 0;
         tm467 <= 0;
         tm94 <= 0;
         tm471 <= 0;
         tm98 <= 0;
         tm483 <= 0;
         tm99 <= 0;
         tm487 <= 0;
         tm99 <= 0;
         tm483 <= 0;
         tm98 <= 0;
         tm487 <= 0;
      end
      else begin
         i1 <= i1_in;
         X0 <= X0_in;
         X1 <= X1_in;
         X2 <= X2_in;
         X3 <= X3_in;
         X4 <= X4_in;
         X5 <= X5_in;
         X6 <= X6_in;
         X7 <= X7_in;
         next <= next_in;
         tm448 <= a109;
         tm452 <= a110;
         tm464 <= a113;
         tm468 <= a114;
         tm480 <= a117;
         tm484 <= a118;
         tm496 <= a82;
         tm507 <= a86;
         tm449 <= tm448;
         tm453 <= tm452;
         tm465 <= tm464;
         tm469 <= tm468;
         tm481 <= tm480;
         tm485 <= tm484;
         tm497 <= tm496;
         tm508 <= tm507;
         tm450 <= tm449;
         tm454 <= tm453;
         tm466 <= tm465;
         tm470 <= tm469;
         tm482 <= tm481;
         tm486 <= tm485;
         tm498 <= tm497;
         tm509 <= tm508;
         tm90 <= a87;
         tm91 <= a89;
         tm94 <= a93;
         tm95 <= a95;
         tm98 <= a99;
         tm99 <= a101;
         tm451 <= tm450;
         tm455 <= tm454;
         tm467 <= tm466;
         tm471 <= tm470;
         tm483 <= tm482;
         tm487 <= tm486;
         tm499 <= tm498;
         tm510 <= tm509;
         tm500 <= tm499;
         tm511 <= tm510;
         tm501 <= tm500;
         tm512 <= tm511;
         tm502 <= tm501;
         tm513 <= tm512;
         tm503 <= tm502;
         tm514 <= tm513;
         tm504 <= tm503;
         tm515 <= tm514;
         tm505 <= tm504;
         tm516 <= tm515;
         tm506 <= tm505;
         tm517 <= tm516;
      end
   end
endmodule

// Latency: 3
// Gap: 1
module codeBlock41750(clk, reset, next_in, next_out,
   X0_in, Y0,
   X1_in, Y1,
   X2_in, Y2,
   X3_in, Y3,
   X4_in, Y4,
   X5_in, Y5,
   X6_in, Y6,
   X7_in, Y7);

   output next_out;
   input clk, reset, next_in;

   reg next;

   input [19:0] X0_in,
      X1_in,
      X2_in,
      X3_in,
      X4_in,
      X5_in,
      X6_in,
      X7_in;

   reg   [19:0] X0,
      X1,
      X2,
      X3,
      X4,
      X5,
      X6,
      X7;

   output [19:0] Y0,
      Y1,
      Y2,
      Y3,
      Y4,
      Y5,
      Y6,
      Y7;

   shiftRegFIFO #(2, 1) shiftFIFO_43995(.X(next), .Y(next_out), .clk(clk));


   wire signed [19:0] a17;
   wire signed [19:0] a18;
   wire signed [19:0] a19;
   wire signed [19:0] a20;
   wire signed [19:0] a25;
   wire signed [19:0] a26;
   wire signed [19:0] a27;
   wire signed [19:0] a28;
   wire signed [20:0] tm222;
   wire signed [20:0] tm223;
   wire signed [20:0] tm224;
   wire signed [20:0] tm225;
   wire signed [20:0] tm226;
   wire signed [20:0] tm227;
   wire signed [20:0] tm228;
   wire signed [20:0] tm229;
   wire signed [19:0] t113;
   wire signed [19:0] t114;
   wire signed [19:0] t115;
   wire signed [19:0] t116;
   wire signed [19:0] t117;
   wire signed [19:0] t118;
   wire signed [19:0] t119;
   wire signed [19:0] t120;
   wire signed [20:0] tm230;
   wire signed [20:0] tm231;
   wire signed [20:0] tm232;
   wire signed [20:0] tm233;
   wire signed [19:0] Y0;
   wire signed [19:0] Y1;
   wire signed [19:0] Y4;
   wire signed [19:0] Y5;
   wire signed [20:0] tm234;
   wire signed [20:0] tm235;
   wire signed [20:0] tm236;
   wire signed [20:0] tm237;
   wire signed [19:0] Y2;
   wire signed [19:0] Y3;
   wire signed [19:0] Y6;
   wire signed [19:0] Y7;
   wire signed [19:0] t121;
   wire signed [19:0] t122;
   wire signed [19:0] t123;
   wire signed [19:0] t124;
   wire signed [19:0] t125;
   wire signed [19:0] t126;
   wire signed [19:0] t127;
   wire signed [19:0] t128;


   assign a17 = X0;
   assign a18 = X4;
   assign a19 = X1;
   assign a20 = X5;
   assign a25 = X2;
   assign a26 = X6;
   assign a27 = X3;
   assign a28 = X7;
   assign t113 = tm222[20:1];
   assign t114 = tm223[20:1];
   assign t115 = tm224[20:1];
   assign t116 = tm225[20:1];
   assign t117 = tm226[20:1];
   assign t118 = tm227[20:1];
   assign t119 = tm228[20:1];
   assign t120 = tm229[20:1];
   assign Y0 = t121;
   assign Y1 = t122;
   assign Y4 = t123;
   assign Y5 = t124;
   assign Y2 = t125;
   assign Y3 = t126;
   assign Y6 = t127;
   assign Y7 = t128;
   assign t121 = tm230[20:1];
   assign t122 = tm231[20:1];
   assign t123 = tm232[20:1];
   assign t124 = tm233[20:1];
   assign t125 = tm234[20:1];
   assign t126 = tm235[20:1];
   assign t127 = tm236[20:1];
   assign t128 = tm237[20:1];

    addfxp #(21, 1) add41762(.a({{1{a17[19]}}, a17}), .b({{1{a18[19]}}, a18}), .clk(clk), .q(tm222));    // 0
    addfxp #(21, 1) add41777(.a({{1{a19[19]}}, a19}), .b({{1{a20[19]}}, a20}), .clk(clk), .q(tm223));    // 0
    subfxp #(21, 1) sub41792(.a({{1{a17[19]}}, a17}), .b({{1{a18[19]}}, a18}), .clk(clk), .q(tm224));    // 0
    subfxp #(21, 1) sub41807(.a({{1{a19[19]}}, a19}), .b({{1{a20[19]}}, a20}), .clk(clk), .q(tm225));    // 0
    addfxp #(21, 1) add41822(.a({{1{a25[19]}}, a25}), .b({{1{a26[19]}}, a26}), .clk(clk), .q(tm226));    // 0
    addfxp #(21, 1) add41837(.a({{1{a27[19]}}, a27}), .b({{1{a28[19]}}, a28}), .clk(clk), .q(tm227));    // 0
    subfxp #(21, 1) sub41852(.a({{1{a25[19]}}, a25}), .b({{1{a26[19]}}, a26}), .clk(clk), .q(tm228));    // 0
    subfxp #(21, 1) sub41867(.a({{1{a27[19]}}, a27}), .b({{1{a28[19]}}, a28}), .clk(clk), .q(tm229));    // 0
    addfxp #(21, 1) add41874(.a({{1{t113[19]}}, t113}), .b({{1{t117[19]}}, t117}), .clk(clk), .q(tm230));    // 1
    addfxp #(21, 1) add41881(.a({{1{t114[19]}}, t114}), .b({{1{t118[19]}}, t118}), .clk(clk), .q(tm231));    // 1
    subfxp #(21, 1) sub41888(.a({{1{t113[19]}}, t113}), .b({{1{t117[19]}}, t117}), .clk(clk), .q(tm232));    // 1
    subfxp #(21, 1) sub41895(.a({{1{t114[19]}}, t114}), .b({{1{t118[19]}}, t118}), .clk(clk), .q(tm233));    // 1
    addfxp #(21, 1) add41918(.a({{1{t115[19]}}, t115}), .b({{1{t120[19]}}, t120}), .clk(clk), .q(tm234));    // 1
    subfxp #(21, 1) sub41925(.a({{1{t116[19]}}, t116}), .b({{1{t119[19]}}, t119}), .clk(clk), .q(tm235));    // 1
    subfxp #(21, 1) sub41932(.a({{1{t115[19]}}, t115}), .b({{1{t120[19]}}, t120}), .clk(clk), .q(tm236));    // 1
    addfxp #(21, 1) add41939(.a({{1{t116[19]}}, t116}), .b({{1{t119[19]}}, t119}), .clk(clk), .q(tm237));    // 1


   always @(posedge clk) begin
      if (reset == 1) begin
      end
      else begin
         X0 <= X0_in;
         X1 <= X1_in;
         X2 <= X2_in;
         X3 <= X3_in;
         X4 <= X4_in;
         X5 <= X5_in;
         X6 <= X6_in;
         X7 <= X7_in;
         next <= next_in;
      end
   end
endmodule

// Latency: 517
// Gap: 256
module rc41964(clk, reset, next, next_out,
   X0, Y0,
   X1, Y1,
   X2, Y2,
   X3, Y3,
   X4, Y4,
   X5, Y5,
   X6, Y6,
   X7, Y7);

   output next_out;
   input clk, reset, next;

   input [19:0] X0,
      X1,
      X2,
      X3,
      X4,
      X5,
      X6,
      X7;

   output [19:0] Y0,
      Y1,
      Y2,
      Y3,
      Y4,
      Y5,
      Y6,
      Y7;

   wire [39:0] t0;
   wire [39:0] s0;
   assign t0 = {X0, X1};
   wire [39:0] t1;
   wire [39:0] s1;
   assign t1 = {X2, X3};
   wire [39:0] t2;
   wire [39:0] s2;
   assign t2 = {X4, X5};
   wire [39:0] t3;
   wire [39:0] s3;
   assign t3 = {X6, X7};
   assign Y0 = s0[39:20];
   assign Y1 = s0[19:0];
   assign Y2 = s1[39:20];
   assign Y3 = s1[19:0];
   assign Y4 = s2[39:20];
   assign Y5 = s2[19:0];
   assign Y6 = s3[39:20];
   assign Y7 = s3[19:0];

   perm41962 instPerm43996(.x0(t0), .y0(s0),
    .x1(t1), .y1(s1),
    .x2(t2), .y2(s2),
    .x3(t3), .y3(s3),
   .clk(clk), .next(next), .next_out(next_out), .reset(reset)
);



endmodule

module swNet41962(itr, clk, ct
,       x0, y0
,       x1, y1
,       x2, y2
,       x3, y3
);

    parameter width = 40;

    input [7:0] ct;
    input clk;
    input [0:0] itr;
    input [width-1:0] x0;
    output reg [width-1:0] y0;
    input [width-1:0] x1;
    output reg [width-1:0] y1;
    input [width-1:0] x2;
    output reg [width-1:0] y2;
    input [width-1:0] x3;
    output reg [width-1:0] y3;
    wire [width-1:0] t0_0, t0_1, t0_2, t0_3;
    wire [width-1:0] t1_0, t1_1, t1_2, t1_3;
    wire [width-1:0] t2_0, t2_1, t2_2, t2_3;
    reg [width-1:0] t3_0, t3_1, t3_2, t3_3;
    wire [width-1:0] t4_0, t4_1, t4_2, t4_3;
    reg [width-1:0] t5_0, t5_1, t5_2, t5_3;

    reg [3:0] control;

    always @(posedge clk) begin
      case(ct)
        8'd0: control <= 4'b1111;
        8'd1: control <= 4'b1111;
        8'd2: control <= 4'b1111;
        8'd3: control <= 4'b1111;
        8'd4: control <= 4'b1111;
        8'd5: control <= 4'b1111;
        8'd6: control <= 4'b1111;
        8'd7: control <= 4'b1111;
        8'd8: control <= 4'b1111;
        8'd9: control <= 4'b1111;
        8'd10: control <= 4'b1111;
        8'd11: control <= 4'b1111;
        8'd12: control <= 4'b1111;
        8'd13: control <= 4'b1111;
        8'd14: control <= 4'b1111;
        8'd15: control <= 4'b1111;
        8'd16: control <= 4'b1111;
        8'd17: control <= 4'b1111;
        8'd18: control <= 4'b1111;
        8'd19: control <= 4'b1111;
        8'd20: control <= 4'b1111;
        8'd21: control <= 4'b1111;
        8'd22: control <= 4'b1111;
        8'd23: control <= 4'b1111;
        8'd24: control <= 4'b1111;
        8'd25: control <= 4'b1111;
        8'd26: control <= 4'b1111;
        8'd27: control <= 4'b1111;
        8'd28: control <= 4'b1111;
        8'd29: control <= 4'b1111;
        8'd30: control <= 4'b1111;
        8'd31: control <= 4'b1111;
        8'd32: control <= 4'b1111;
        8'd33: control <= 4'b1111;
        8'd34: control <= 4'b1111;
        8'd35: control <= 4'b1111;
        8'd36: control <= 4'b1111;
        8'd37: control <= 4'b1111;
        8'd38: control <= 4'b1111;
        8'd39: control <= 4'b1111;
        8'd40: control <= 4'b1111;
        8'd41: control <= 4'b1111;
        8'd42: control <= 4'b1111;
        8'd43: control <= 4'b1111;
        8'd44: control <= 4'b1111;
        8'd45: control <= 4'b1111;
        8'd46: control <= 4'b1111;
        8'd47: control <= 4'b1111;
        8'd48: control <= 4'b1111;
        8'd49: control <= 4'b1111;
        8'd50: control <= 4'b1111;
        8'd51: control <= 4'b1111;
        8'd52: control <= 4'b1111;
        8'd53: control <= 4'b1111;
        8'd54: control <= 4'b1111;
        8'd55: control <= 4'b1111;
        8'd56: control <= 4'b1111;
        8'd57: control <= 4'b1111;
        8'd58: control <= 4'b1111;
        8'd59: control <= 4'b1111;
        8'd60: control <= 4'b1111;
        8'd61: control <= 4'b1111;
        8'd62: control <= 4'b1111;
        8'd63: control <= 4'b1111;
        8'd64: control <= 4'b0011;
        8'd65: control <= 4'b0011;
        8'd66: control <= 4'b0011;
        8'd67: control <= 4'b0011;
        8'd68: control <= 4'b0011;
        8'd69: control <= 4'b0011;
        8'd70: control <= 4'b0011;
        8'd71: control <= 4'b0011;
        8'd72: control <= 4'b0011;
        8'd73: control <= 4'b0011;
        8'd74: control <= 4'b0011;
        8'd75: control <= 4'b0011;
        8'd76: control <= 4'b0011;
        8'd77: control <= 4'b0011;
        8'd78: control <= 4'b0011;
        8'd79: control <= 4'b0011;
        8'd80: control <= 4'b0011;
        8'd81: control <= 4'b0011;
        8'd82: control <= 4'b0011;
        8'd83: control <= 4'b0011;
        8'd84: control <= 4'b0011;
        8'd85: control <= 4'b0011;
        8'd86: control <= 4'b0011;
        8'd87: control <= 4'b0011;
        8'd88: control <= 4'b0011;
        8'd89: control <= 4'b0011;
        8'd90: control <= 4'b0011;
        8'd91: control <= 4'b0011;
        8'd92: control <= 4'b0011;
        8'd93: control <= 4'b0011;
        8'd94: control <= 4'b0011;
        8'd95: control <= 4'b0011;
        8'd96: control <= 4'b0011;
        8'd97: control <= 4'b0011;
        8'd98: control <= 4'b0011;
        8'd99: control <= 4'b0011;
        8'd100: control <= 4'b0011;
        8'd101: control <= 4'b0011;
        8'd102: control <= 4'b0011;
        8'd103: control <= 4'b0011;
        8'd104: control <= 4'b0011;
        8'd105: control <= 4'b0011;
        8'd106: control <= 4'b0011;
        8'd107: control <= 4'b0011;
        8'd108: control <= 4'b0011;
        8'd109: control <= 4'b0011;
        8'd110: control <= 4'b0011;
        8'd111: control <= 4'b0011;
        8'd112: control <= 4'b0011;
        8'd113: control <= 4'b0011;
        8'd114: control <= 4'b0011;
        8'd115: control <= 4'b0011;
        8'd116: control <= 4'b0011;
        8'd117: control <= 4'b0011;
        8'd118: control <= 4'b0011;
        8'd119: control <= 4'b0011;
        8'd120: control <= 4'b0011;
        8'd121: control <= 4'b0011;
        8'd122: control <= 4'b0011;
        8'd123: control <= 4'b0011;
        8'd124: control <= 4'b0011;
        8'd125: control <= 4'b0011;
        8'd126: control <= 4'b0011;
        8'd127: control <= 4'b0011;
        8'd128: control <= 4'b1100;
        8'd129: control <= 4'b1100;
        8'd130: control <= 4'b1100;
        8'd131: control <= 4'b1100;
        8'd132: control <= 4'b1100;
        8'd133: control <= 4'b1100;
        8'd134: control <= 4'b1100;
        8'd135: control <= 4'b1100;
        8'd136: control <= 4'b1100;
        8'd137: control <= 4'b1100;
        8'd138: control <= 4'b1100;
        8'd139: control <= 4'b1100;
        8'd140: control <= 4'b1100;
        8'd141: control <= 4'b1100;
        8'd142: control <= 4'b1100;
        8'd143: control <= 4'b1100;
        8'd144: control <= 4'b1100;
        8'd145: control <= 4'b1100;
        8'd146: control <= 4'b1100;
        8'd147: control <= 4'b1100;
        8'd148: control <= 4'b1100;
        8'd149: control <= 4'b1100;
        8'd150: control <= 4'b1100;
        8'd151: control <= 4'b1100;
        8'd152: control <= 4'b1100;
        8'd153: control <= 4'b1100;
        8'd154: control <= 4'b1100;
        8'd155: control <= 4'b1100;
        8'd156: control <= 4'b1100;
        8'd157: control <= 4'b1100;
        8'd158: control <= 4'b1100;
        8'd159: control <= 4'b1100;
        8'd160: control <= 4'b1100;
        8'd161: control <= 4'b1100;
        8'd162: control <= 4'b1100;
        8'd163: control <= 4'b1100;
        8'd164: control <= 4'b1100;
        8'd165: control <= 4'b1100;
        8'd166: control <= 4'b1100;
        8'd167: control <= 4'b1100;
        8'd168: control <= 4'b1100;
        8'd169: control <= 4'b1100;
        8'd170: control <= 4'b1100;
        8'd171: control <= 4'b1100;
        8'd172: control <= 4'b1100;
        8'd173: control <= 4'b1100;
        8'd174: control <= 4'b1100;
        8'd175: control <= 4'b1100;
        8'd176: control <= 4'b1100;
        8'd177: control <= 4'b1100;
        8'd178: control <= 4'b1100;
        8'd179: control <= 4'b1100;
        8'd180: control <= 4'b1100;
        8'd181: control <= 4'b1100;
        8'd182: control <= 4'b1100;
        8'd183: control <= 4'b1100;
        8'd184: control <= 4'b1100;
        8'd185: control <= 4'b1100;
        8'd186: control <= 4'b1100;
        8'd187: control <= 4'b1100;
        8'd188: control <= 4'b1100;
        8'd189: control <= 4'b1100;
        8'd190: control <= 4'b1100;
        8'd191: control <= 4'b1100;
        8'd192: control <= 4'b0000;
        8'd193: control <= 4'b0000;
        8'd194: control <= 4'b0000;
        8'd195: control <= 4'b0000;
        8'd196: control <= 4'b0000;
        8'd197: control <= 4'b0000;
        8'd198: control <= 4'b0000;
        8'd199: control <= 4'b0000;
        8'd200: control <= 4'b0000;
        8'd201: control <= 4'b0000;
        8'd202: control <= 4'b0000;
        8'd203: control <= 4'b0000;
        8'd204: control <= 4'b0000;
        8'd205: control <= 4'b0000;
        8'd206: control <= 4'b0000;
        8'd207: control <= 4'b0000;
        8'd208: control <= 4'b0000;
        8'd209: control <= 4'b0000;
        8'd210: control <= 4'b0000;
        8'd211: control <= 4'b0000;
        8'd212: control <= 4'b0000;
        8'd213: control <= 4'b0000;
        8'd214: control <= 4'b0000;
        8'd215: control <= 4'b0000;
        8'd216: control <= 4'b0000;
        8'd217: control <= 4'b0000;
        8'd218: control <= 4'b0000;
        8'd219: control <= 4'b0000;
        8'd220: control <= 4'b0000;
        8'd221: control <= 4'b0000;
        8'd222: control <= 4'b0000;
        8'd223: control <= 4'b0000;
        8'd224: control <= 4'b0000;
        8'd225: control <= 4'b0000;
        8'd226: control <= 4'b0000;
        8'd227: control <= 4'b0000;
        8'd228: control <= 4'b0000;
        8'd229: control <= 4'b0000;
        8'd230: control <= 4'b0000;
        8'd231: control <= 4'b0000;
        8'd232: control <= 4'b0000;
        8'd233: control <= 4'b0000;
        8'd234: control <= 4'b0000;
        8'd235: control <= 4'b0000;
        8'd236: control <= 4'b0000;
        8'd237: control <= 4'b0000;
        8'd238: control <= 4'b0000;
        8'd239: control <= 4'b0000;
        8'd240: control <= 4'b0000;
        8'd241: control <= 4'b0000;
        8'd242: control <= 4'b0000;
        8'd243: control <= 4'b0000;
        8'd244: control <= 4'b0000;
        8'd245: control <= 4'b0000;
        8'd246: control <= 4'b0000;
        8'd247: control <= 4'b0000;
        8'd248: control <= 4'b0000;
        8'd249: control <= 4'b0000;
        8'd250: control <= 4'b0000;
        8'd251: control <= 4'b0000;
        8'd252: control <= 4'b0000;
        8'd253: control <= 4'b0000;
        8'd254: control <= 4'b0000;
        8'd255: control <= 4'b0000;
      endcase
   end

// synthesis attribute rom_style of control is "block"
   reg [3:0] control0;
   reg [3:0] control1;
    always @(posedge clk) begin
       control0 <= control;
        control1 <= control0;
    end
    assign t0_0 = x0;
    assign t0_1 = x2;
    assign t0_2 = x1;
    assign t0_3 = x3;
     assign t1_0 = t0_0;
     assign t1_1 = t0_1;
     assign t1_2 = t0_2;
     assign t1_3 = t0_3;
    assign t2_0 = t1_0;
    assign t2_1 = t1_2;
    assign t2_2 = t1_1;
    assign t2_3 = t1_3;
   always @(posedge clk) begin
         t3_0 <= (control0[3] == 0) ? t2_0 : t2_1;
         t3_1 <= (control0[3] == 0) ? t2_1 : t2_0;
         t3_2 <= (control0[2] == 0) ? t2_2 : t2_3;
         t3_3 <= (control0[2] == 0) ? t2_3 : t2_2;
   end
    assign t4_0 = t3_0;
    assign t4_1 = t3_2;
    assign t4_2 = t3_1;
    assign t4_3 = t3_3;
   always @(posedge clk) begin
         t5_0 <= (control1[1] == 0) ? t4_0 : t4_1;
         t5_1 <= (control1[1] == 0) ? t4_1 : t4_0;
         t5_2 <= (control1[0] == 0) ? t4_2 : t4_3;
         t5_3 <= (control1[0] == 0) ? t4_3 : t4_2;
   end
    always @(posedge clk) begin
        y0 <= t5_0;
        y1 <= t5_2;
        y2 <= t5_1;
        y3 <= t5_3;
    end
endmodule

// Latency: 517
// Gap: 256
module perm41962(clk, next, reset, next_out,
   x0, y0,
   x1, y1,
   x2, y2,
   x3, y3);
   parameter width = 40;

   parameter depth = 256;

   parameter addrbits = 8;

   parameter muxbits = 2;

   input [width-1:0]  x0;
   output [width-1:0]  y0;
   wire [width-1:0]  t0;
   wire [width-1:0]  s0;
   input [width-1:0]  x1;
   output [width-1:0]  y1;
   wire [width-1:0]  t1;
   wire [width-1:0]  s1;
   input [width-1:0]  x2;
   output [width-1:0]  y2;
   wire [width-1:0]  t2;
   wire [width-1:0]  s2;
   input [width-1:0]  x3;
   output [width-1:0]  y3;
   wire [width-1:0]  t3;
   wire [width-1:0]  s3;
   input next, reset, clk;
   output next_out;
   reg [addrbits-1:0] s1rdloc, s2rdloc;

    reg [addrbits-1:0] s1wr0;
   reg [addrbits-1:0] s1rd0, s2wr0, s2rd0;
   reg [addrbits-1:0] s1rd1, s2wr1, s2rd1;
   reg [addrbits-1:0] s1rd2, s2wr2, s2rd2;
   reg [addrbits-1:0] s1rd3, s2wr3, s2rd3;
   reg s1wr_en, state1, state2, state3;
   wire 	      next2, next3, next4;
   reg 		      inFlip0, outFlip0_z, outFlip1;
   wire 	      inFlip1, outFlip0;

   wire [0:0] tm37;
   assign tm37 = 0;

shiftRegFIFO #(4, 1) shiftFIFO_44001(.X(outFlip0), .Y(inFlip1), .clk(clk));
shiftRegFIFO #(1, 1) shiftFIFO_44002(.X(outFlip0_z), .Y(outFlip0), .clk(clk));
//   shiftRegFIFO #(2, 1) inFlip1Reg(outFlip0, inFlip1, clk);
//   shiftRegFIFO #(1, 1) outFlip0Reg(outFlip0_z, outFlip0, clk);
   
   memMod #(depth*2, width, addrbits+1) s1mem0(x0, t0, {inFlip0, s1wr0}, {outFlip0, s1rd0}, s1wr_en, clk);
   memMod #(depth*2, width, addrbits+1) s1mem1(x1, t1, {inFlip0, s1wr0}, {outFlip0, s1rd1}, s1wr_en, clk);
   memMod #(depth*2, width, addrbits+1) s1mem2(x2, t2, {inFlip0, s1wr0}, {outFlip0, s1rd2}, s1wr_en, clk);
   memMod #(depth*2, width, addrbits+1) s1mem3(x3, t3, {inFlip0, s1wr0}, {outFlip0, s1rd3}, s1wr_en, clk);

nextReg #(255, 8) nextReg_44013(.X(next), .Y(next2), .reset(reset), .clk(clk));
shiftRegFIFO #(5, 1) shiftFIFO_44014(.X(next2), .Y(next3), .clk(clk));
nextReg #(256, 8) nextReg_44017(.X(next3), .Y(next4), .reset(reset), .clk(clk));
shiftRegFIFO #(1, 1) shiftFIFO_44018(.X(next4), .Y(next_out), .clk(clk));
shiftRegFIFO #(255, 1) shiftFIFO_44021(.X(tm37), .Y(tm37_d), .clk(clk));
shiftRegFIFO #(4, 1) shiftFIFO_44024(.X(tm37_d), .Y(tm37_dd), .clk(clk));
   
   wire [addrbits-1:0] 	      muxCycle, writeCycle;
assign muxCycle = s1rdloc;
shiftRegFIFO #(4, 8) shiftFIFO_44029(.X(muxCycle), .Y(writeCycle), .clk(clk));
        
   wire 		      readInt, s2wr_en;   
   assign 		      readInt = (state2 == 1);

   shiftRegFIFO #(5, 1) writeIntReg(readInt, s2wr_en, clk);

   memMod #(depth*2, width, addrbits+1) s2mem0(s0, y0, {inFlip1, s2wr0}, {outFlip1, s2rdloc}, s2wr_en, clk);
   memMod #(depth*2, width, addrbits+1) s2mem1(s1, y1, {inFlip1, s2wr1}, {outFlip1, s2rdloc}, s2wr_en, clk);
   memMod #(depth*2, width, addrbits+1) s2mem2(s2, y2, {inFlip1, s2wr2}, {outFlip1, s2rdloc}, s2wr_en, clk);
   memMod #(depth*2, width, addrbits+1) s2mem3(s3, y3, {inFlip1, s2wr3}, {outFlip1, s2rdloc}, s2wr_en, clk);
   always @(posedge clk) begin
      if (reset == 1) begin
	 state1 <= 0;
	 inFlip0 <= 0;	 
	 s1wr0 <= 0;
      end
      else if (next == 1) begin
	 s1wr0 <= 0;
	 state1 <= 1;
	 s1wr_en <= 1;
	 inFlip0 <= (s1wr0 == depth-1) ? ~inFlip0 : inFlip0;
      end
      else begin
	 case(state1)
	   0: begin
	      s1wr0 <= 0;
	      state1 <= 0;
	      s1wr_en <= 0;
	      inFlip0 <= inFlip0;	      
	   end
	   1: begin
	      s1wr0 <= (s1wr0 == depth-1) ? 0 : s1wr0 + 1;
	      state1 <= 1;
         s1wr_en <= 1;
	      inFlip0 <= (s1wr0 == depth-1) ? ~inFlip0 : inFlip0;
	   end
	 endcase
      end      
   end
   
   always @(posedge clk) begin
      if (reset == 1) begin
	       state2 <= 0;
	       outFlip0_z <= 0;	 
      end
      else if (next2 == 1) begin
	       s1rdloc <= 0;
	       state2 <= 1;
	       outFlip0_z <= (s1rdloc == depth-1) ? ~outFlip0_z : outFlip0_z;
      end
      else begin
	 case(state2)
	   0: begin
	      s1rdloc <= 0;
	      state2 <= 0;
	      outFlip0_z <= outFlip0_z;	 
	   end
	   1: begin
	      s1rdloc <= (s1rdloc == depth-1) ? 0 : s1rdloc + 1;
         state2 <= 1;
	      outFlip0_z <= (s1rdloc == depth-1) ? ~outFlip0_z : outFlip0_z;
	   end	     
	 endcase
      end
   end
   
   always @(posedge clk) begin
      if (reset == 1) begin
	 state3 <= 0;
	 outFlip1 <= 0;	 
      end
      else if (next4 == 1) begin
	 s2rdloc <= 0;
	 state3 <= 1;
	 outFlip1 <= (s2rdloc == depth-1) ? ~outFlip1 : outFlip1;	      
      end
      else begin
	 case(state3)
	   0: begin
	      s2rdloc <= 0;
	      state3 <= 0;
	      outFlip1 <= outFlip1;
	   end
	   1: begin
	      s2rdloc <= (s2rdloc == depth-1) ? 0 : s2rdloc + 1;
         state3 <= 1;
	      outFlip1 <= (s2rdloc == depth-1) ? ~outFlip1 : outFlip1;
	   end	     
	 endcase
      end
   end
   always @(posedge clk) begin
      case({tm37_d, s1rdloc})
	     {1'd0,  8'd0}: s1rd0 <= 3;
	     {1'd0,  8'd1}: s1rd0 <= 7;
	     {1'd0,  8'd2}: s1rd0 <= 11;
	     {1'd0,  8'd3}: s1rd0 <= 15;
	     {1'd0,  8'd4}: s1rd0 <= 19;
	     {1'd0,  8'd5}: s1rd0 <= 23;
	     {1'd0,  8'd6}: s1rd0 <= 27;
	     {1'd0,  8'd7}: s1rd0 <= 31;
	     {1'd0,  8'd8}: s1rd0 <= 35;
	     {1'd0,  8'd9}: s1rd0 <= 39;
	     {1'd0,  8'd10}: s1rd0 <= 43;
	     {1'd0,  8'd11}: s1rd0 <= 47;
	     {1'd0,  8'd12}: s1rd0 <= 51;
	     {1'd0,  8'd13}: s1rd0 <= 55;
	     {1'd0,  8'd14}: s1rd0 <= 59;
	     {1'd0,  8'd15}: s1rd0 <= 63;
	     {1'd0,  8'd16}: s1rd0 <= 67;
	     {1'd0,  8'd17}: s1rd0 <= 71;
	     {1'd0,  8'd18}: s1rd0 <= 75;
	     {1'd0,  8'd19}: s1rd0 <= 79;
	     {1'd0,  8'd20}: s1rd0 <= 83;
	     {1'd0,  8'd21}: s1rd0 <= 87;
	     {1'd0,  8'd22}: s1rd0 <= 91;
	     {1'd0,  8'd23}: s1rd0 <= 95;
	     {1'd0,  8'd24}: s1rd0 <= 99;
	     {1'd0,  8'd25}: s1rd0 <= 103;
	     {1'd0,  8'd26}: s1rd0 <= 107;
	     {1'd0,  8'd27}: s1rd0 <= 111;
	     {1'd0,  8'd28}: s1rd0 <= 115;
	     {1'd0,  8'd29}: s1rd0 <= 119;
	     {1'd0,  8'd30}: s1rd0 <= 123;
	     {1'd0,  8'd31}: s1rd0 <= 127;
	     {1'd0,  8'd32}: s1rd0 <= 131;
	     {1'd0,  8'd33}: s1rd0 <= 135;
	     {1'd0,  8'd34}: s1rd0 <= 139;
	     {1'd0,  8'd35}: s1rd0 <= 143;
	     {1'd0,  8'd36}: s1rd0 <= 147;
	     {1'd0,  8'd37}: s1rd0 <= 151;
	     {1'd0,  8'd38}: s1rd0 <= 155;
	     {1'd0,  8'd39}: s1rd0 <= 159;
	     {1'd0,  8'd40}: s1rd0 <= 163;
	     {1'd0,  8'd41}: s1rd0 <= 167;
	     {1'd0,  8'd42}: s1rd0 <= 171;
	     {1'd0,  8'd43}: s1rd0 <= 175;
	     {1'd0,  8'd44}: s1rd0 <= 179;
	     {1'd0,  8'd45}: s1rd0 <= 183;
	     {1'd0,  8'd46}: s1rd0 <= 187;
	     {1'd0,  8'd47}: s1rd0 <= 191;
	     {1'd0,  8'd48}: s1rd0 <= 195;
	     {1'd0,  8'd49}: s1rd0 <= 199;
	     {1'd0,  8'd50}: s1rd0 <= 203;
	     {1'd0,  8'd51}: s1rd0 <= 207;
	     {1'd0,  8'd52}: s1rd0 <= 211;
	     {1'd0,  8'd53}: s1rd0 <= 215;
	     {1'd0,  8'd54}: s1rd0 <= 219;
	     {1'd0,  8'd55}: s1rd0 <= 223;
	     {1'd0,  8'd56}: s1rd0 <= 227;
	     {1'd0,  8'd57}: s1rd0 <= 231;
	     {1'd0,  8'd58}: s1rd0 <= 235;
	     {1'd0,  8'd59}: s1rd0 <= 239;
	     {1'd0,  8'd60}: s1rd0 <= 243;
	     {1'd0,  8'd61}: s1rd0 <= 247;
	     {1'd0,  8'd62}: s1rd0 <= 251;
	     {1'd0,  8'd63}: s1rd0 <= 255;
	     {1'd0,  8'd64}: s1rd0 <= 2;
	     {1'd0,  8'd65}: s1rd0 <= 6;
	     {1'd0,  8'd66}: s1rd0 <= 10;
	     {1'd0,  8'd67}: s1rd0 <= 14;
	     {1'd0,  8'd68}: s1rd0 <= 18;
	     {1'd0,  8'd69}: s1rd0 <= 22;
	     {1'd0,  8'd70}: s1rd0 <= 26;
	     {1'd0,  8'd71}: s1rd0 <= 30;
	     {1'd0,  8'd72}: s1rd0 <= 34;
	     {1'd0,  8'd73}: s1rd0 <= 38;
	     {1'd0,  8'd74}: s1rd0 <= 42;
	     {1'd0,  8'd75}: s1rd0 <= 46;
	     {1'd0,  8'd76}: s1rd0 <= 50;
	     {1'd0,  8'd77}: s1rd0 <= 54;
	     {1'd0,  8'd78}: s1rd0 <= 58;
	     {1'd0,  8'd79}: s1rd0 <= 62;
	     {1'd0,  8'd80}: s1rd0 <= 66;
	     {1'd0,  8'd81}: s1rd0 <= 70;
	     {1'd0,  8'd82}: s1rd0 <= 74;
	     {1'd0,  8'd83}: s1rd0 <= 78;
	     {1'd0,  8'd84}: s1rd0 <= 82;
	     {1'd0,  8'd85}: s1rd0 <= 86;
	     {1'd0,  8'd86}: s1rd0 <= 90;
	     {1'd0,  8'd87}: s1rd0 <= 94;
	     {1'd0,  8'd88}: s1rd0 <= 98;
	     {1'd0,  8'd89}: s1rd0 <= 102;
	     {1'd0,  8'd90}: s1rd0 <= 106;
	     {1'd0,  8'd91}: s1rd0 <= 110;
	     {1'd0,  8'd92}: s1rd0 <= 114;
	     {1'd0,  8'd93}: s1rd0 <= 118;
	     {1'd0,  8'd94}: s1rd0 <= 122;
	     {1'd0,  8'd95}: s1rd0 <= 126;
	     {1'd0,  8'd96}: s1rd0 <= 130;
	     {1'd0,  8'd97}: s1rd0 <= 134;
	     {1'd0,  8'd98}: s1rd0 <= 138;
	     {1'd0,  8'd99}: s1rd0 <= 142;
	     {1'd0,  8'd100}: s1rd0 <= 146;
	     {1'd0,  8'd101}: s1rd0 <= 150;
	     {1'd0,  8'd102}: s1rd0 <= 154;
	     {1'd0,  8'd103}: s1rd0 <= 158;
	     {1'd0,  8'd104}: s1rd0 <= 162;
	     {1'd0,  8'd105}: s1rd0 <= 166;
	     {1'd0,  8'd106}: s1rd0 <= 170;
	     {1'd0,  8'd107}: s1rd0 <= 174;
	     {1'd0,  8'd108}: s1rd0 <= 178;
	     {1'd0,  8'd109}: s1rd0 <= 182;
	     {1'd0,  8'd110}: s1rd0 <= 186;
	     {1'd0,  8'd111}: s1rd0 <= 190;
	     {1'd0,  8'd112}: s1rd0 <= 194;
	     {1'd0,  8'd113}: s1rd0 <= 198;
	     {1'd0,  8'd114}: s1rd0 <= 202;
	     {1'd0,  8'd115}: s1rd0 <= 206;
	     {1'd0,  8'd116}: s1rd0 <= 210;
	     {1'd0,  8'd117}: s1rd0 <= 214;
	     {1'd0,  8'd118}: s1rd0 <= 218;
	     {1'd0,  8'd119}: s1rd0 <= 222;
	     {1'd0,  8'd120}: s1rd0 <= 226;
	     {1'd0,  8'd121}: s1rd0 <= 230;
	     {1'd0,  8'd122}: s1rd0 <= 234;
	     {1'd0,  8'd123}: s1rd0 <= 238;
	     {1'd0,  8'd124}: s1rd0 <= 242;
	     {1'd0,  8'd125}: s1rd0 <= 246;
	     {1'd0,  8'd126}: s1rd0 <= 250;
	     {1'd0,  8'd127}: s1rd0 <= 254;
	     {1'd0,  8'd128}: s1rd0 <= 1;
	     {1'd0,  8'd129}: s1rd0 <= 5;
	     {1'd0,  8'd130}: s1rd0 <= 9;
	     {1'd0,  8'd131}: s1rd0 <= 13;
	     {1'd0,  8'd132}: s1rd0 <= 17;
	     {1'd0,  8'd133}: s1rd0 <= 21;
	     {1'd0,  8'd134}: s1rd0 <= 25;
	     {1'd0,  8'd135}: s1rd0 <= 29;
	     {1'd0,  8'd136}: s1rd0 <= 33;
	     {1'd0,  8'd137}: s1rd0 <= 37;
	     {1'd0,  8'd138}: s1rd0 <= 41;
	     {1'd0,  8'd139}: s1rd0 <= 45;
	     {1'd0,  8'd140}: s1rd0 <= 49;
	     {1'd0,  8'd141}: s1rd0 <= 53;
	     {1'd0,  8'd142}: s1rd0 <= 57;
	     {1'd0,  8'd143}: s1rd0 <= 61;
	     {1'd0,  8'd144}: s1rd0 <= 65;
	     {1'd0,  8'd145}: s1rd0 <= 69;
	     {1'd0,  8'd146}: s1rd0 <= 73;
	     {1'd0,  8'd147}: s1rd0 <= 77;
	     {1'd0,  8'd148}: s1rd0 <= 81;
	     {1'd0,  8'd149}: s1rd0 <= 85;
	     {1'd0,  8'd150}: s1rd0 <= 89;
	     {1'd0,  8'd151}: s1rd0 <= 93;
	     {1'd0,  8'd152}: s1rd0 <= 97;
	     {1'd0,  8'd153}: s1rd0 <= 101;
	     {1'd0,  8'd154}: s1rd0 <= 105;
	     {1'd0,  8'd155}: s1rd0 <= 109;
	     {1'd0,  8'd156}: s1rd0 <= 113;
	     {1'd0,  8'd157}: s1rd0 <= 117;
	     {1'd0,  8'd158}: s1rd0 <= 121;
	     {1'd0,  8'd159}: s1rd0 <= 125;
	     {1'd0,  8'd160}: s1rd0 <= 129;
	     {1'd0,  8'd161}: s1rd0 <= 133;
	     {1'd0,  8'd162}: s1rd0 <= 137;
	     {1'd0,  8'd163}: s1rd0 <= 141;
	     {1'd0,  8'd164}: s1rd0 <= 145;
	     {1'd0,  8'd165}: s1rd0 <= 149;
	     {1'd0,  8'd166}: s1rd0 <= 153;
	     {1'd0,  8'd167}: s1rd0 <= 157;
	     {1'd0,  8'd168}: s1rd0 <= 161;
	     {1'd0,  8'd169}: s1rd0 <= 165;
	     {1'd0,  8'd170}: s1rd0 <= 169;
	     {1'd0,  8'd171}: s1rd0 <= 173;
	     {1'd0,  8'd172}: s1rd0 <= 177;
	     {1'd0,  8'd173}: s1rd0 <= 181;
	     {1'd0,  8'd174}: s1rd0 <= 185;
	     {1'd0,  8'd175}: s1rd0 <= 189;
	     {1'd0,  8'd176}: s1rd0 <= 193;
	     {1'd0,  8'd177}: s1rd0 <= 197;
	     {1'd0,  8'd178}: s1rd0 <= 201;
	     {1'd0,  8'd179}: s1rd0 <= 205;
	     {1'd0,  8'd180}: s1rd0 <= 209;
	     {1'd0,  8'd181}: s1rd0 <= 213;
	     {1'd0,  8'd182}: s1rd0 <= 217;
	     {1'd0,  8'd183}: s1rd0 <= 221;
	     {1'd0,  8'd184}: s1rd0 <= 225;
	     {1'd0,  8'd185}: s1rd0 <= 229;
	     {1'd0,  8'd186}: s1rd0 <= 233;
	     {1'd0,  8'd187}: s1rd0 <= 237;
	     {1'd0,  8'd188}: s1rd0 <= 241;
	     {1'd0,  8'd189}: s1rd0 <= 245;
	     {1'd0,  8'd190}: s1rd0 <= 249;
	     {1'd0,  8'd191}: s1rd0 <= 253;
	     {1'd0,  8'd192}: s1rd0 <= 0;
	     {1'd0,  8'd193}: s1rd0 <= 4;
	     {1'd0,  8'd194}: s1rd0 <= 8;
	     {1'd0,  8'd195}: s1rd0 <= 12;
	     {1'd0,  8'd196}: s1rd0 <= 16;
	     {1'd0,  8'd197}: s1rd0 <= 20;
	     {1'd0,  8'd198}: s1rd0 <= 24;
	     {1'd0,  8'd199}: s1rd0 <= 28;
	     {1'd0,  8'd200}: s1rd0 <= 32;
	     {1'd0,  8'd201}: s1rd0 <= 36;
	     {1'd0,  8'd202}: s1rd0 <= 40;
	     {1'd0,  8'd203}: s1rd0 <= 44;
	     {1'd0,  8'd204}: s1rd0 <= 48;
	     {1'd0,  8'd205}: s1rd0 <= 52;
	     {1'd0,  8'd206}: s1rd0 <= 56;
	     {1'd0,  8'd207}: s1rd0 <= 60;
	     {1'd0,  8'd208}: s1rd0 <= 64;
	     {1'd0,  8'd209}: s1rd0 <= 68;
	     {1'd0,  8'd210}: s1rd0 <= 72;
	     {1'd0,  8'd211}: s1rd0 <= 76;
	     {1'd0,  8'd212}: s1rd0 <= 80;
	     {1'd0,  8'd213}: s1rd0 <= 84;
	     {1'd0,  8'd214}: s1rd0 <= 88;
	     {1'd0,  8'd215}: s1rd0 <= 92;
	     {1'd0,  8'd216}: s1rd0 <= 96;
	     {1'd0,  8'd217}: s1rd0 <= 100;
	     {1'd0,  8'd218}: s1rd0 <= 104;
	     {1'd0,  8'd219}: s1rd0 <= 108;
	     {1'd0,  8'd220}: s1rd0 <= 112;
	     {1'd0,  8'd221}: s1rd0 <= 116;
	     {1'd0,  8'd222}: s1rd0 <= 120;
	     {1'd0,  8'd223}: s1rd0 <= 124;
	     {1'd0,  8'd224}: s1rd0 <= 128;
	     {1'd0,  8'd225}: s1rd0 <= 132;
	     {1'd0,  8'd226}: s1rd0 <= 136;
	     {1'd0,  8'd227}: s1rd0 <= 140;
	     {1'd0,  8'd228}: s1rd0 <= 144;
	     {1'd0,  8'd229}: s1rd0 <= 148;
	     {1'd0,  8'd230}: s1rd0 <= 152;
	     {1'd0,  8'd231}: s1rd0 <= 156;
	     {1'd0,  8'd232}: s1rd0 <= 160;
	     {1'd0,  8'd233}: s1rd0 <= 164;
	     {1'd0,  8'd234}: s1rd0 <= 168;
	     {1'd0,  8'd235}: s1rd0 <= 172;
	     {1'd0,  8'd236}: s1rd0 <= 176;
	     {1'd0,  8'd237}: s1rd0 <= 180;
	     {1'd0,  8'd238}: s1rd0 <= 184;
	     {1'd0,  8'd239}: s1rd0 <= 188;
	     {1'd0,  8'd240}: s1rd0 <= 192;
	     {1'd0,  8'd241}: s1rd0 <= 196;
	     {1'd0,  8'd242}: s1rd0 <= 200;
	     {1'd0,  8'd243}: s1rd0 <= 204;
	     {1'd0,  8'd244}: s1rd0 <= 208;
	     {1'd0,  8'd245}: s1rd0 <= 212;
	     {1'd0,  8'd246}: s1rd0 <= 216;
	     {1'd0,  8'd247}: s1rd0 <= 220;
	     {1'd0,  8'd248}: s1rd0 <= 224;
	     {1'd0,  8'd249}: s1rd0 <= 228;
	     {1'd0,  8'd250}: s1rd0 <= 232;
	     {1'd0,  8'd251}: s1rd0 <= 236;
	     {1'd0,  8'd252}: s1rd0 <= 240;
	     {1'd0,  8'd253}: s1rd0 <= 244;
	     {1'd0,  8'd254}: s1rd0 <= 248;
	     {1'd0,  8'd255}: s1rd0 <= 252;
      endcase      
   end

// synthesis attribute rom_style of s1rd0 is "distributed"
   always @(posedge clk) begin
      case({tm37_d, s1rdloc})
	     {1'd0,  8'd0}: s1rd1 <= 2;
	     {1'd0,  8'd1}: s1rd1 <= 6;
	     {1'd0,  8'd2}: s1rd1 <= 10;
	     {1'd0,  8'd3}: s1rd1 <= 14;
	     {1'd0,  8'd4}: s1rd1 <= 18;
	     {1'd0,  8'd5}: s1rd1 <= 22;
	     {1'd0,  8'd6}: s1rd1 <= 26;
	     {1'd0,  8'd7}: s1rd1 <= 30;
	     {1'd0,  8'd8}: s1rd1 <= 34;
	     {1'd0,  8'd9}: s1rd1 <= 38;
	     {1'd0,  8'd10}: s1rd1 <= 42;
	     {1'd0,  8'd11}: s1rd1 <= 46;
	     {1'd0,  8'd12}: s1rd1 <= 50;
	     {1'd0,  8'd13}: s1rd1 <= 54;
	     {1'd0,  8'd14}: s1rd1 <= 58;
	     {1'd0,  8'd15}: s1rd1 <= 62;
	     {1'd0,  8'd16}: s1rd1 <= 66;
	     {1'd0,  8'd17}: s1rd1 <= 70;
	     {1'd0,  8'd18}: s1rd1 <= 74;
	     {1'd0,  8'd19}: s1rd1 <= 78;
	     {1'd0,  8'd20}: s1rd1 <= 82;
	     {1'd0,  8'd21}: s1rd1 <= 86;
	     {1'd0,  8'd22}: s1rd1 <= 90;
	     {1'd0,  8'd23}: s1rd1 <= 94;
	     {1'd0,  8'd24}: s1rd1 <= 98;
	     {1'd0,  8'd25}: s1rd1 <= 102;
	     {1'd0,  8'd26}: s1rd1 <= 106;
	     {1'd0,  8'd27}: s1rd1 <= 110;
	     {1'd0,  8'd28}: s1rd1 <= 114;
	     {1'd0,  8'd29}: s1rd1 <= 118;
	     {1'd0,  8'd30}: s1rd1 <= 122;
	     {1'd0,  8'd31}: s1rd1 <= 126;
	     {1'd0,  8'd32}: s1rd1 <= 130;
	     {1'd0,  8'd33}: s1rd1 <= 134;
	     {1'd0,  8'd34}: s1rd1 <= 138;
	     {1'd0,  8'd35}: s1rd1 <= 142;
	     {1'd0,  8'd36}: s1rd1 <= 146;
	     {1'd0,  8'd37}: s1rd1 <= 150;
	     {1'd0,  8'd38}: s1rd1 <= 154;
	     {1'd0,  8'd39}: s1rd1 <= 158;
	     {1'd0,  8'd40}: s1rd1 <= 162;
	     {1'd0,  8'd41}: s1rd1 <= 166;
	     {1'd0,  8'd42}: s1rd1 <= 170;
	     {1'd0,  8'd43}: s1rd1 <= 174;
	     {1'd0,  8'd44}: s1rd1 <= 178;
	     {1'd0,  8'd45}: s1rd1 <= 182;
	     {1'd0,  8'd46}: s1rd1 <= 186;
	     {1'd0,  8'd47}: s1rd1 <= 190;
	     {1'd0,  8'd48}: s1rd1 <= 194;
	     {1'd0,  8'd49}: s1rd1 <= 198;
	     {1'd0,  8'd50}: s1rd1 <= 202;
	     {1'd0,  8'd51}: s1rd1 <= 206;
	     {1'd0,  8'd52}: s1rd1 <= 210;
	     {1'd0,  8'd53}: s1rd1 <= 214;
	     {1'd0,  8'd54}: s1rd1 <= 218;
	     {1'd0,  8'd55}: s1rd1 <= 222;
	     {1'd0,  8'd56}: s1rd1 <= 226;
	     {1'd0,  8'd57}: s1rd1 <= 230;
	     {1'd0,  8'd58}: s1rd1 <= 234;
	     {1'd0,  8'd59}: s1rd1 <= 238;
	     {1'd0,  8'd60}: s1rd1 <= 242;
	     {1'd0,  8'd61}: s1rd1 <= 246;
	     {1'd0,  8'd62}: s1rd1 <= 250;
	     {1'd0,  8'd63}: s1rd1 <= 254;
	     {1'd0,  8'd64}: s1rd1 <= 3;
	     {1'd0,  8'd65}: s1rd1 <= 7;
	     {1'd0,  8'd66}: s1rd1 <= 11;
	     {1'd0,  8'd67}: s1rd1 <= 15;
	     {1'd0,  8'd68}: s1rd1 <= 19;
	     {1'd0,  8'd69}: s1rd1 <= 23;
	     {1'd0,  8'd70}: s1rd1 <= 27;
	     {1'd0,  8'd71}: s1rd1 <= 31;
	     {1'd0,  8'd72}: s1rd1 <= 35;
	     {1'd0,  8'd73}: s1rd1 <= 39;
	     {1'd0,  8'd74}: s1rd1 <= 43;
	     {1'd0,  8'd75}: s1rd1 <= 47;
	     {1'd0,  8'd76}: s1rd1 <= 51;
	     {1'd0,  8'd77}: s1rd1 <= 55;
	     {1'd0,  8'd78}: s1rd1 <= 59;
	     {1'd0,  8'd79}: s1rd1 <= 63;
	     {1'd0,  8'd80}: s1rd1 <= 67;
	     {1'd0,  8'd81}: s1rd1 <= 71;
	     {1'd0,  8'd82}: s1rd1 <= 75;
	     {1'd0,  8'd83}: s1rd1 <= 79;
	     {1'd0,  8'd84}: s1rd1 <= 83;
	     {1'd0,  8'd85}: s1rd1 <= 87;
	     {1'd0,  8'd86}: s1rd1 <= 91;
	     {1'd0,  8'd87}: s1rd1 <= 95;
	     {1'd0,  8'd88}: s1rd1 <= 99;
	     {1'd0,  8'd89}: s1rd1 <= 103;
	     {1'd0,  8'd90}: s1rd1 <= 107;
	     {1'd0,  8'd91}: s1rd1 <= 111;
	     {1'd0,  8'd92}: s1rd1 <= 115;
	     {1'd0,  8'd93}: s1rd1 <= 119;
	     {1'd0,  8'd94}: s1rd1 <= 123;
	     {1'd0,  8'd95}: s1rd1 <= 127;
	     {1'd0,  8'd96}: s1rd1 <= 131;
	     {1'd0,  8'd97}: s1rd1 <= 135;
	     {1'd0,  8'd98}: s1rd1 <= 139;
	     {1'd0,  8'd99}: s1rd1 <= 143;
	     {1'd0,  8'd100}: s1rd1 <= 147;
	     {1'd0,  8'd101}: s1rd1 <= 151;
	     {1'd0,  8'd102}: s1rd1 <= 155;
	     {1'd0,  8'd103}: s1rd1 <= 159;
	     {1'd0,  8'd104}: s1rd1 <= 163;
	     {1'd0,  8'd105}: s1rd1 <= 167;
	     {1'd0,  8'd106}: s1rd1 <= 171;
	     {1'd0,  8'd107}: s1rd1 <= 175;
	     {1'd0,  8'd108}: s1rd1 <= 179;
	     {1'd0,  8'd109}: s1rd1 <= 183;
	     {1'd0,  8'd110}: s1rd1 <= 187;
	     {1'd0,  8'd111}: s1rd1 <= 191;
	     {1'd0,  8'd112}: s1rd1 <= 195;
	     {1'd0,  8'd113}: s1rd1 <= 199;
	     {1'd0,  8'd114}: s1rd1 <= 203;
	     {1'd0,  8'd115}: s1rd1 <= 207;
	     {1'd0,  8'd116}: s1rd1 <= 211;
	     {1'd0,  8'd117}: s1rd1 <= 215;
	     {1'd0,  8'd118}: s1rd1 <= 219;
	     {1'd0,  8'd119}: s1rd1 <= 223;
	     {1'd0,  8'd120}: s1rd1 <= 227;
	     {1'd0,  8'd121}: s1rd1 <= 231;
	     {1'd0,  8'd122}: s1rd1 <= 235;
	     {1'd0,  8'd123}: s1rd1 <= 239;
	     {1'd0,  8'd124}: s1rd1 <= 243;
	     {1'd0,  8'd125}: s1rd1 <= 247;
	     {1'd0,  8'd126}: s1rd1 <= 251;
	     {1'd0,  8'd127}: s1rd1 <= 255;
	     {1'd0,  8'd128}: s1rd1 <= 0;
	     {1'd0,  8'd129}: s1rd1 <= 4;
	     {1'd0,  8'd130}: s1rd1 <= 8;
	     {1'd0,  8'd131}: s1rd1 <= 12;
	     {1'd0,  8'd132}: s1rd1 <= 16;
	     {1'd0,  8'd133}: s1rd1 <= 20;
	     {1'd0,  8'd134}: s1rd1 <= 24;
	     {1'd0,  8'd135}: s1rd1 <= 28;
	     {1'd0,  8'd136}: s1rd1 <= 32;
	     {1'd0,  8'd137}: s1rd1 <= 36;
	     {1'd0,  8'd138}: s1rd1 <= 40;
	     {1'd0,  8'd139}: s1rd1 <= 44;
	     {1'd0,  8'd140}: s1rd1 <= 48;
	     {1'd0,  8'd141}: s1rd1 <= 52;
	     {1'd0,  8'd142}: s1rd1 <= 56;
	     {1'd0,  8'd143}: s1rd1 <= 60;
	     {1'd0,  8'd144}: s1rd1 <= 64;
	     {1'd0,  8'd145}: s1rd1 <= 68;
	     {1'd0,  8'd146}: s1rd1 <= 72;
	     {1'd0,  8'd147}: s1rd1 <= 76;
	     {1'd0,  8'd148}: s1rd1 <= 80;
	     {1'd0,  8'd149}: s1rd1 <= 84;
	     {1'd0,  8'd150}: s1rd1 <= 88;
	     {1'd0,  8'd151}: s1rd1 <= 92;
	     {1'd0,  8'd152}: s1rd1 <= 96;
	     {1'd0,  8'd153}: s1rd1 <= 100;
	     {1'd0,  8'd154}: s1rd1 <= 104;
	     {1'd0,  8'd155}: s1rd1 <= 108;
	     {1'd0,  8'd156}: s1rd1 <= 112;
	     {1'd0,  8'd157}: s1rd1 <= 116;
	     {1'd0,  8'd158}: s1rd1 <= 120;
	     {1'd0,  8'd159}: s1rd1 <= 124;
	     {1'd0,  8'd160}: s1rd1 <= 128;
	     {1'd0,  8'd161}: s1rd1 <= 132;
	     {1'd0,  8'd162}: s1rd1 <= 136;
	     {1'd0,  8'd163}: s1rd1 <= 140;
	     {1'd0,  8'd164}: s1rd1 <= 144;
	     {1'd0,  8'd165}: s1rd1 <= 148;
	     {1'd0,  8'd166}: s1rd1 <= 152;
	     {1'd0,  8'd167}: s1rd1 <= 156;
	     {1'd0,  8'd168}: s1rd1 <= 160;
	     {1'd0,  8'd169}: s1rd1 <= 164;
	     {1'd0,  8'd170}: s1rd1 <= 168;
	     {1'd0,  8'd171}: s1rd1 <= 172;
	     {1'd0,  8'd172}: s1rd1 <= 176;
	     {1'd0,  8'd173}: s1rd1 <= 180;
	     {1'd0,  8'd174}: s1rd1 <= 184;
	     {1'd0,  8'd175}: s1rd1 <= 188;
	     {1'd0,  8'd176}: s1rd1 <= 192;
	     {1'd0,  8'd177}: s1rd1 <= 196;
	     {1'd0,  8'd178}: s1rd1 <= 200;
	     {1'd0,  8'd179}: s1rd1 <= 204;
	     {1'd0,  8'd180}: s1rd1 <= 208;
	     {1'd0,  8'd181}: s1rd1 <= 212;
	     {1'd0,  8'd182}: s1rd1 <= 216;
	     {1'd0,  8'd183}: s1rd1 <= 220;
	     {1'd0,  8'd184}: s1rd1 <= 224;
	     {1'd0,  8'd185}: s1rd1 <= 228;
	     {1'd0,  8'd186}: s1rd1 <= 232;
	     {1'd0,  8'd187}: s1rd1 <= 236;
	     {1'd0,  8'd188}: s1rd1 <= 240;
	     {1'd0,  8'd189}: s1rd1 <= 244;
	     {1'd0,  8'd190}: s1rd1 <= 248;
	     {1'd0,  8'd191}: s1rd1 <= 252;
	     {1'd0,  8'd192}: s1rd1 <= 1;
	     {1'd0,  8'd193}: s1rd1 <= 5;
	     {1'd0,  8'd194}: s1rd1 <= 9;
	     {1'd0,  8'd195}: s1rd1 <= 13;
	     {1'd0,  8'd196}: s1rd1 <= 17;
	     {1'd0,  8'd197}: s1rd1 <= 21;
	     {1'd0,  8'd198}: s1rd1 <= 25;
	     {1'd0,  8'd199}: s1rd1 <= 29;
	     {1'd0,  8'd200}: s1rd1 <= 33;
	     {1'd0,  8'd201}: s1rd1 <= 37;
	     {1'd0,  8'd202}: s1rd1 <= 41;
	     {1'd0,  8'd203}: s1rd1 <= 45;
	     {1'd0,  8'd204}: s1rd1 <= 49;
	     {1'd0,  8'd205}: s1rd1 <= 53;
	     {1'd0,  8'd206}: s1rd1 <= 57;
	     {1'd0,  8'd207}: s1rd1 <= 61;
	     {1'd0,  8'd208}: s1rd1 <= 65;
	     {1'd0,  8'd209}: s1rd1 <= 69;
	     {1'd0,  8'd210}: s1rd1 <= 73;
	     {1'd0,  8'd211}: s1rd1 <= 77;
	     {1'd0,  8'd212}: s1rd1 <= 81;
	     {1'd0,  8'd213}: s1rd1 <= 85;
	     {1'd0,  8'd214}: s1rd1 <= 89;
	     {1'd0,  8'd215}: s1rd1 <= 93;
	     {1'd0,  8'd216}: s1rd1 <= 97;
	     {1'd0,  8'd217}: s1rd1 <= 101;
	     {1'd0,  8'd218}: s1rd1 <= 105;
	     {1'd0,  8'd219}: s1rd1 <= 109;
	     {1'd0,  8'd220}: s1rd1 <= 113;
	     {1'd0,  8'd221}: s1rd1 <= 117;
	     {1'd0,  8'd222}: s1rd1 <= 121;
	     {1'd0,  8'd223}: s1rd1 <= 125;
	     {1'd0,  8'd224}: s1rd1 <= 129;
	     {1'd0,  8'd225}: s1rd1 <= 133;
	     {1'd0,  8'd226}: s1rd1 <= 137;
	     {1'd0,  8'd227}: s1rd1 <= 141;
	     {1'd0,  8'd228}: s1rd1 <= 145;
	     {1'd0,  8'd229}: s1rd1 <= 149;
	     {1'd0,  8'd230}: s1rd1 <= 153;
	     {1'd0,  8'd231}: s1rd1 <= 157;
	     {1'd0,  8'd232}: s1rd1 <= 161;
	     {1'd0,  8'd233}: s1rd1 <= 165;
	     {1'd0,  8'd234}: s1rd1 <= 169;
	     {1'd0,  8'd235}: s1rd1 <= 173;
	     {1'd0,  8'd236}: s1rd1 <= 177;
	     {1'd0,  8'd237}: s1rd1 <= 181;
	     {1'd0,  8'd238}: s1rd1 <= 185;
	     {1'd0,  8'd239}: s1rd1 <= 189;
	     {1'd0,  8'd240}: s1rd1 <= 193;
	     {1'd0,  8'd241}: s1rd1 <= 197;
	     {1'd0,  8'd242}: s1rd1 <= 201;
	     {1'd0,  8'd243}: s1rd1 <= 205;
	     {1'd0,  8'd244}: s1rd1 <= 209;
	     {1'd0,  8'd245}: s1rd1 <= 213;
	     {1'd0,  8'd246}: s1rd1 <= 217;
	     {1'd0,  8'd247}: s1rd1 <= 221;
	     {1'd0,  8'd248}: s1rd1 <= 225;
	     {1'd0,  8'd249}: s1rd1 <= 229;
	     {1'd0,  8'd250}: s1rd1 <= 233;
	     {1'd0,  8'd251}: s1rd1 <= 237;
	     {1'd0,  8'd252}: s1rd1 <= 241;
	     {1'd0,  8'd253}: s1rd1 <= 245;
	     {1'd0,  8'd254}: s1rd1 <= 249;
	     {1'd0,  8'd255}: s1rd1 <= 253;
      endcase      
   end

// synthesis attribute rom_style of s1rd1 is "distributed"
   always @(posedge clk) begin
      case({tm37_d, s1rdloc})
	     {1'd0,  8'd0}: s1rd2 <= 1;
	     {1'd0,  8'd1}: s1rd2 <= 5;
	     {1'd0,  8'd2}: s1rd2 <= 9;
	     {1'd0,  8'd3}: s1rd2 <= 13;
	     {1'd0,  8'd4}: s1rd2 <= 17;
	     {1'd0,  8'd5}: s1rd2 <= 21;
	     {1'd0,  8'd6}: s1rd2 <= 25;
	     {1'd0,  8'd7}: s1rd2 <= 29;
	     {1'd0,  8'd8}: s1rd2 <= 33;
	     {1'd0,  8'd9}: s1rd2 <= 37;
	     {1'd0,  8'd10}: s1rd2 <= 41;
	     {1'd0,  8'd11}: s1rd2 <= 45;
	     {1'd0,  8'd12}: s1rd2 <= 49;
	     {1'd0,  8'd13}: s1rd2 <= 53;
	     {1'd0,  8'd14}: s1rd2 <= 57;
	     {1'd0,  8'd15}: s1rd2 <= 61;
	     {1'd0,  8'd16}: s1rd2 <= 65;
	     {1'd0,  8'd17}: s1rd2 <= 69;
	     {1'd0,  8'd18}: s1rd2 <= 73;
	     {1'd0,  8'd19}: s1rd2 <= 77;
	     {1'd0,  8'd20}: s1rd2 <= 81;
	     {1'd0,  8'd21}: s1rd2 <= 85;
	     {1'd0,  8'd22}: s1rd2 <= 89;
	     {1'd0,  8'd23}: s1rd2 <= 93;
	     {1'd0,  8'd24}: s1rd2 <= 97;
	     {1'd0,  8'd25}: s1rd2 <= 101;
	     {1'd0,  8'd26}: s1rd2 <= 105;
	     {1'd0,  8'd27}: s1rd2 <= 109;
	     {1'd0,  8'd28}: s1rd2 <= 113;
	     {1'd0,  8'd29}: s1rd2 <= 117;
	     {1'd0,  8'd30}: s1rd2 <= 121;
	     {1'd0,  8'd31}: s1rd2 <= 125;
	     {1'd0,  8'd32}: s1rd2 <= 129;
	     {1'd0,  8'd33}: s1rd2 <= 133;
	     {1'd0,  8'd34}: s1rd2 <= 137;
	     {1'd0,  8'd35}: s1rd2 <= 141;
	     {1'd0,  8'd36}: s1rd2 <= 145;
	     {1'd0,  8'd37}: s1rd2 <= 149;
	     {1'd0,  8'd38}: s1rd2 <= 153;
	     {1'd0,  8'd39}: s1rd2 <= 157;
	     {1'd0,  8'd40}: s1rd2 <= 161;
	     {1'd0,  8'd41}: s1rd2 <= 165;
	     {1'd0,  8'd42}: s1rd2 <= 169;
	     {1'd0,  8'd43}: s1rd2 <= 173;
	     {1'd0,  8'd44}: s1rd2 <= 177;
	     {1'd0,  8'd45}: s1rd2 <= 181;
	     {1'd0,  8'd46}: s1rd2 <= 185;
	     {1'd0,  8'd47}: s1rd2 <= 189;
	     {1'd0,  8'd48}: s1rd2 <= 193;
	     {1'd0,  8'd49}: s1rd2 <= 197;
	     {1'd0,  8'd50}: s1rd2 <= 201;
	     {1'd0,  8'd51}: s1rd2 <= 205;
	     {1'd0,  8'd52}: s1rd2 <= 209;
	     {1'd0,  8'd53}: s1rd2 <= 213;
	     {1'd0,  8'd54}: s1rd2 <= 217;
	     {1'd0,  8'd55}: s1rd2 <= 221;
	     {1'd0,  8'd56}: s1rd2 <= 225;
	     {1'd0,  8'd57}: s1rd2 <= 229;
	     {1'd0,  8'd58}: s1rd2 <= 233;
	     {1'd0,  8'd59}: s1rd2 <= 237;
	     {1'd0,  8'd60}: s1rd2 <= 241;
	     {1'd0,  8'd61}: s1rd2 <= 245;
	     {1'd0,  8'd62}: s1rd2 <= 249;
	     {1'd0,  8'd63}: s1rd2 <= 253;
	     {1'd0,  8'd64}: s1rd2 <= 0;
	     {1'd0,  8'd65}: s1rd2 <= 4;
	     {1'd0,  8'd66}: s1rd2 <= 8;
	     {1'd0,  8'd67}: s1rd2 <= 12;
	     {1'd0,  8'd68}: s1rd2 <= 16;
	     {1'd0,  8'd69}: s1rd2 <= 20;
	     {1'd0,  8'd70}: s1rd2 <= 24;
	     {1'd0,  8'd71}: s1rd2 <= 28;
	     {1'd0,  8'd72}: s1rd2 <= 32;
	     {1'd0,  8'd73}: s1rd2 <= 36;
	     {1'd0,  8'd74}: s1rd2 <= 40;
	     {1'd0,  8'd75}: s1rd2 <= 44;
	     {1'd0,  8'd76}: s1rd2 <= 48;
	     {1'd0,  8'd77}: s1rd2 <= 52;
	     {1'd0,  8'd78}: s1rd2 <= 56;
	     {1'd0,  8'd79}: s1rd2 <= 60;
	     {1'd0,  8'd80}: s1rd2 <= 64;
	     {1'd0,  8'd81}: s1rd2 <= 68;
	     {1'd0,  8'd82}: s1rd2 <= 72;
	     {1'd0,  8'd83}: s1rd2 <= 76;
	     {1'd0,  8'd84}: s1rd2 <= 80;
	     {1'd0,  8'd85}: s1rd2 <= 84;
	     {1'd0,  8'd86}: s1rd2 <= 88;
	     {1'd0,  8'd87}: s1rd2 <= 92;
	     {1'd0,  8'd88}: s1rd2 <= 96;
	     {1'd0,  8'd89}: s1rd2 <= 100;
	     {1'd0,  8'd90}: s1rd2 <= 104;
	     {1'd0,  8'd91}: s1rd2 <= 108;
	     {1'd0,  8'd92}: s1rd2 <= 112;
	     {1'd0,  8'd93}: s1rd2 <= 116;
	     {1'd0,  8'd94}: s1rd2 <= 120;
	     {1'd0,  8'd95}: s1rd2 <= 124;
	     {1'd0,  8'd96}: s1rd2 <= 128;
	     {1'd0,  8'd97}: s1rd2 <= 132;
	     {1'd0,  8'd98}: s1rd2 <= 136;
	     {1'd0,  8'd99}: s1rd2 <= 140;
	     {1'd0,  8'd100}: s1rd2 <= 144;
	     {1'd0,  8'd101}: s1rd2 <= 148;
	     {1'd0,  8'd102}: s1rd2 <= 152;
	     {1'd0,  8'd103}: s1rd2 <= 156;
	     {1'd0,  8'd104}: s1rd2 <= 160;
	     {1'd0,  8'd105}: s1rd2 <= 164;
	     {1'd0,  8'd106}: s1rd2 <= 168;
	     {1'd0,  8'd107}: s1rd2 <= 172;
	     {1'd0,  8'd108}: s1rd2 <= 176;
	     {1'd0,  8'd109}: s1rd2 <= 180;
	     {1'd0,  8'd110}: s1rd2 <= 184;
	     {1'd0,  8'd111}: s1rd2 <= 188;
	     {1'd0,  8'd112}: s1rd2 <= 192;
	     {1'd0,  8'd113}: s1rd2 <= 196;
	     {1'd0,  8'd114}: s1rd2 <= 200;
	     {1'd0,  8'd115}: s1rd2 <= 204;
	     {1'd0,  8'd116}: s1rd2 <= 208;
	     {1'd0,  8'd117}: s1rd2 <= 212;
	     {1'd0,  8'd118}: s1rd2 <= 216;
	     {1'd0,  8'd119}: s1rd2 <= 220;
	     {1'd0,  8'd120}: s1rd2 <= 224;
	     {1'd0,  8'd121}: s1rd2 <= 228;
	     {1'd0,  8'd122}: s1rd2 <= 232;
	     {1'd0,  8'd123}: s1rd2 <= 236;
	     {1'd0,  8'd124}: s1rd2 <= 240;
	     {1'd0,  8'd125}: s1rd2 <= 244;
	     {1'd0,  8'd126}: s1rd2 <= 248;
	     {1'd0,  8'd127}: s1rd2 <= 252;
	     {1'd0,  8'd128}: s1rd2 <= 3;
	     {1'd0,  8'd129}: s1rd2 <= 7;
	     {1'd0,  8'd130}: s1rd2 <= 11;
	     {1'd0,  8'd131}: s1rd2 <= 15;
	     {1'd0,  8'd132}: s1rd2 <= 19;
	     {1'd0,  8'd133}: s1rd2 <= 23;
	     {1'd0,  8'd134}: s1rd2 <= 27;
	     {1'd0,  8'd135}: s1rd2 <= 31;
	     {1'd0,  8'd136}: s1rd2 <= 35;
	     {1'd0,  8'd137}: s1rd2 <= 39;
	     {1'd0,  8'd138}: s1rd2 <= 43;
	     {1'd0,  8'd139}: s1rd2 <= 47;
	     {1'd0,  8'd140}: s1rd2 <= 51;
	     {1'd0,  8'd141}: s1rd2 <= 55;
	     {1'd0,  8'd142}: s1rd2 <= 59;
	     {1'd0,  8'd143}: s1rd2 <= 63;
	     {1'd0,  8'd144}: s1rd2 <= 67;
	     {1'd0,  8'd145}: s1rd2 <= 71;
	     {1'd0,  8'd146}: s1rd2 <= 75;
	     {1'd0,  8'd147}: s1rd2 <= 79;
	     {1'd0,  8'd148}: s1rd2 <= 83;
	     {1'd0,  8'd149}: s1rd2 <= 87;
	     {1'd0,  8'd150}: s1rd2 <= 91;
	     {1'd0,  8'd151}: s1rd2 <= 95;
	     {1'd0,  8'd152}: s1rd2 <= 99;
	     {1'd0,  8'd153}: s1rd2 <= 103;
	     {1'd0,  8'd154}: s1rd2 <= 107;
	     {1'd0,  8'd155}: s1rd2 <= 111;
	     {1'd0,  8'd156}: s1rd2 <= 115;
	     {1'd0,  8'd157}: s1rd2 <= 119;
	     {1'd0,  8'd158}: s1rd2 <= 123;
	     {1'd0,  8'd159}: s1rd2 <= 127;
	     {1'd0,  8'd160}: s1rd2 <= 131;
	     {1'd0,  8'd161}: s1rd2 <= 135;
	     {1'd0,  8'd162}: s1rd2 <= 139;
	     {1'd0,  8'd163}: s1rd2 <= 143;
	     {1'd0,  8'd164}: s1rd2 <= 147;
	     {1'd0,  8'd165}: s1rd2 <= 151;
	     {1'd0,  8'd166}: s1rd2 <= 155;
	     {1'd0,  8'd167}: s1rd2 <= 159;
	     {1'd0,  8'd168}: s1rd2 <= 163;
	     {1'd0,  8'd169}: s1rd2 <= 167;
	     {1'd0,  8'd170}: s1rd2 <= 171;
	     {1'd0,  8'd171}: s1rd2 <= 175;
	     {1'd0,  8'd172}: s1rd2 <= 179;
	     {1'd0,  8'd173}: s1rd2 <= 183;
	     {1'd0,  8'd174}: s1rd2 <= 187;
	     {1'd0,  8'd175}: s1rd2 <= 191;
	     {1'd0,  8'd176}: s1rd2 <= 195;
	     {1'd0,  8'd177}: s1rd2 <= 199;
	     {1'd0,  8'd178}: s1rd2 <= 203;
	     {1'd0,  8'd179}: s1rd2 <= 207;
	     {1'd0,  8'd180}: s1rd2 <= 211;
	     {1'd0,  8'd181}: s1rd2 <= 215;
	     {1'd0,  8'd182}: s1rd2 <= 219;
	     {1'd0,  8'd183}: s1rd2 <= 223;
	     {1'd0,  8'd184}: s1rd2 <= 227;
	     {1'd0,  8'd185}: s1rd2 <= 231;
	     {1'd0,  8'd186}: s1rd2 <= 235;
	     {1'd0,  8'd187}: s1rd2 <= 239;
	     {1'd0,  8'd188}: s1rd2 <= 243;
	     {1'd0,  8'd189}: s1rd2 <= 247;
	     {1'd0,  8'd190}: s1rd2 <= 251;
	     {1'd0,  8'd191}: s1rd2 <= 255;
	     {1'd0,  8'd192}: s1rd2 <= 2;
	     {1'd0,  8'd193}: s1rd2 <= 6;
	     {1'd0,  8'd194}: s1rd2 <= 10;
	     {1'd0,  8'd195}: s1rd2 <= 14;
	     {1'd0,  8'd196}: s1rd2 <= 18;
	     {1'd0,  8'd197}: s1rd2 <= 22;
	     {1'd0,  8'd198}: s1rd2 <= 26;
	     {1'd0,  8'd199}: s1rd2 <= 30;
	     {1'd0,  8'd200}: s1rd2 <= 34;
	     {1'd0,  8'd201}: s1rd2 <= 38;
	     {1'd0,  8'd202}: s1rd2 <= 42;
	     {1'd0,  8'd203}: s1rd2 <= 46;
	     {1'd0,  8'd204}: s1rd2 <= 50;
	     {1'd0,  8'd205}: s1rd2 <= 54;
	     {1'd0,  8'd206}: s1rd2 <= 58;
	     {1'd0,  8'd207}: s1rd2 <= 62;
	     {1'd0,  8'd208}: s1rd2 <= 66;
	     {1'd0,  8'd209}: s1rd2 <= 70;
	     {1'd0,  8'd210}: s1rd2 <= 74;
	     {1'd0,  8'd211}: s1rd2 <= 78;
	     {1'd0,  8'd212}: s1rd2 <= 82;
	     {1'd0,  8'd213}: s1rd2 <= 86;
	     {1'd0,  8'd214}: s1rd2 <= 90;
	     {1'd0,  8'd215}: s1rd2 <= 94;
	     {1'd0,  8'd216}: s1rd2 <= 98;
	     {1'd0,  8'd217}: s1rd2 <= 102;
	     {1'd0,  8'd218}: s1rd2 <= 106;
	     {1'd0,  8'd219}: s1rd2 <= 110;
	     {1'd0,  8'd220}: s1rd2 <= 114;
	     {1'd0,  8'd221}: s1rd2 <= 118;
	     {1'd0,  8'd222}: s1rd2 <= 122;
	     {1'd0,  8'd223}: s1rd2 <= 126;
	     {1'd0,  8'd224}: s1rd2 <= 130;
	     {1'd0,  8'd225}: s1rd2 <= 134;
	     {1'd0,  8'd226}: s1rd2 <= 138;
	     {1'd0,  8'd227}: s1rd2 <= 142;
	     {1'd0,  8'd228}: s1rd2 <= 146;
	     {1'd0,  8'd229}: s1rd2 <= 150;
	     {1'd0,  8'd230}: s1rd2 <= 154;
	     {1'd0,  8'd231}: s1rd2 <= 158;
	     {1'd0,  8'd232}: s1rd2 <= 162;
	     {1'd0,  8'd233}: s1rd2 <= 166;
	     {1'd0,  8'd234}: s1rd2 <= 170;
	     {1'd0,  8'd235}: s1rd2 <= 174;
	     {1'd0,  8'd236}: s1rd2 <= 178;
	     {1'd0,  8'd237}: s1rd2 <= 182;
	     {1'd0,  8'd238}: s1rd2 <= 186;
	     {1'd0,  8'd239}: s1rd2 <= 190;
	     {1'd0,  8'd240}: s1rd2 <= 194;
	     {1'd0,  8'd241}: s1rd2 <= 198;
	     {1'd0,  8'd242}: s1rd2 <= 202;
	     {1'd0,  8'd243}: s1rd2 <= 206;
	     {1'd0,  8'd244}: s1rd2 <= 210;
	     {1'd0,  8'd245}: s1rd2 <= 214;
	     {1'd0,  8'd246}: s1rd2 <= 218;
	     {1'd0,  8'd247}: s1rd2 <= 222;
	     {1'd0,  8'd248}: s1rd2 <= 226;
	     {1'd0,  8'd249}: s1rd2 <= 230;
	     {1'd0,  8'd250}: s1rd2 <= 234;
	     {1'd0,  8'd251}: s1rd2 <= 238;
	     {1'd0,  8'd252}: s1rd2 <= 242;
	     {1'd0,  8'd253}: s1rd2 <= 246;
	     {1'd0,  8'd254}: s1rd2 <= 250;
	     {1'd0,  8'd255}: s1rd2 <= 254;
      endcase      
   end

// synthesis attribute rom_style of s1rd2 is "distributed"
   always @(posedge clk) begin
      case({tm37_d, s1rdloc})
	     {1'd0,  8'd0}: s1rd3 <= 0;
	     {1'd0,  8'd1}: s1rd3 <= 4;
	     {1'd0,  8'd2}: s1rd3 <= 8;
	     {1'd0,  8'd3}: s1rd3 <= 12;
	     {1'd0,  8'd4}: s1rd3 <= 16;
	     {1'd0,  8'd5}: s1rd3 <= 20;
	     {1'd0,  8'd6}: s1rd3 <= 24;
	     {1'd0,  8'd7}: s1rd3 <= 28;
	     {1'd0,  8'd8}: s1rd3 <= 32;
	     {1'd0,  8'd9}: s1rd3 <= 36;
	     {1'd0,  8'd10}: s1rd3 <= 40;
	     {1'd0,  8'd11}: s1rd3 <= 44;
	     {1'd0,  8'd12}: s1rd3 <= 48;
	     {1'd0,  8'd13}: s1rd3 <= 52;
	     {1'd0,  8'd14}: s1rd3 <= 56;
	     {1'd0,  8'd15}: s1rd3 <= 60;
	     {1'd0,  8'd16}: s1rd3 <= 64;
	     {1'd0,  8'd17}: s1rd3 <= 68;
	     {1'd0,  8'd18}: s1rd3 <= 72;
	     {1'd0,  8'd19}: s1rd3 <= 76;
	     {1'd0,  8'd20}: s1rd3 <= 80;
	     {1'd0,  8'd21}: s1rd3 <= 84;
	     {1'd0,  8'd22}: s1rd3 <= 88;
	     {1'd0,  8'd23}: s1rd3 <= 92;
	     {1'd0,  8'd24}: s1rd3 <= 96;
	     {1'd0,  8'd25}: s1rd3 <= 100;
	     {1'd0,  8'd26}: s1rd3 <= 104;
	     {1'd0,  8'd27}: s1rd3 <= 108;
	     {1'd0,  8'd28}: s1rd3 <= 112;
	     {1'd0,  8'd29}: s1rd3 <= 116;
	     {1'd0,  8'd30}: s1rd3 <= 120;
	     {1'd0,  8'd31}: s1rd3 <= 124;
	     {1'd0,  8'd32}: s1rd3 <= 128;
	     {1'd0,  8'd33}: s1rd3 <= 132;
	     {1'd0,  8'd34}: s1rd3 <= 136;
	     {1'd0,  8'd35}: s1rd3 <= 140;
	     {1'd0,  8'd36}: s1rd3 <= 144;
	     {1'd0,  8'd37}: s1rd3 <= 148;
	     {1'd0,  8'd38}: s1rd3 <= 152;
	     {1'd0,  8'd39}: s1rd3 <= 156;
	     {1'd0,  8'd40}: s1rd3 <= 160;
	     {1'd0,  8'd41}: s1rd3 <= 164;
	     {1'd0,  8'd42}: s1rd3 <= 168;
	     {1'd0,  8'd43}: s1rd3 <= 172;
	     {1'd0,  8'd44}: s1rd3 <= 176;
	     {1'd0,  8'd45}: s1rd3 <= 180;
	     {1'd0,  8'd46}: s1rd3 <= 184;
	     {1'd0,  8'd47}: s1rd3 <= 188;
	     {1'd0,  8'd48}: s1rd3 <= 192;
	     {1'd0,  8'd49}: s1rd3 <= 196;
	     {1'd0,  8'd50}: s1rd3 <= 200;
	     {1'd0,  8'd51}: s1rd3 <= 204;
	     {1'd0,  8'd52}: s1rd3 <= 208;
	     {1'd0,  8'd53}: s1rd3 <= 212;
	     {1'd0,  8'd54}: s1rd3 <= 216;
	     {1'd0,  8'd55}: s1rd3 <= 220;
	     {1'd0,  8'd56}: s1rd3 <= 224;
	     {1'd0,  8'd57}: s1rd3 <= 228;
	     {1'd0,  8'd58}: s1rd3 <= 232;
	     {1'd0,  8'd59}: s1rd3 <= 236;
	     {1'd0,  8'd60}: s1rd3 <= 240;
	     {1'd0,  8'd61}: s1rd3 <= 244;
	     {1'd0,  8'd62}: s1rd3 <= 248;
	     {1'd0,  8'd63}: s1rd3 <= 252;
	     {1'd0,  8'd64}: s1rd3 <= 1;
	     {1'd0,  8'd65}: s1rd3 <= 5;
	     {1'd0,  8'd66}: s1rd3 <= 9;
	     {1'd0,  8'd67}: s1rd3 <= 13;
	     {1'd0,  8'd68}: s1rd3 <= 17;
	     {1'd0,  8'd69}: s1rd3 <= 21;
	     {1'd0,  8'd70}: s1rd3 <= 25;
	     {1'd0,  8'd71}: s1rd3 <= 29;
	     {1'd0,  8'd72}: s1rd3 <= 33;
	     {1'd0,  8'd73}: s1rd3 <= 37;
	     {1'd0,  8'd74}: s1rd3 <= 41;
	     {1'd0,  8'd75}: s1rd3 <= 45;
	     {1'd0,  8'd76}: s1rd3 <= 49;
	     {1'd0,  8'd77}: s1rd3 <= 53;
	     {1'd0,  8'd78}: s1rd3 <= 57;
	     {1'd0,  8'd79}: s1rd3 <= 61;
	     {1'd0,  8'd80}: s1rd3 <= 65;
	     {1'd0,  8'd81}: s1rd3 <= 69;
	     {1'd0,  8'd82}: s1rd3 <= 73;
	     {1'd0,  8'd83}: s1rd3 <= 77;
	     {1'd0,  8'd84}: s1rd3 <= 81;
	     {1'd0,  8'd85}: s1rd3 <= 85;
	     {1'd0,  8'd86}: s1rd3 <= 89;
	     {1'd0,  8'd87}: s1rd3 <= 93;
	     {1'd0,  8'd88}: s1rd3 <= 97;
	     {1'd0,  8'd89}: s1rd3 <= 101;
	     {1'd0,  8'd90}: s1rd3 <= 105;
	     {1'd0,  8'd91}: s1rd3 <= 109;
	     {1'd0,  8'd92}: s1rd3 <= 113;
	     {1'd0,  8'd93}: s1rd3 <= 117;
	     {1'd0,  8'd94}: s1rd3 <= 121;
	     {1'd0,  8'd95}: s1rd3 <= 125;
	     {1'd0,  8'd96}: s1rd3 <= 129;
	     {1'd0,  8'd97}: s1rd3 <= 133;
	     {1'd0,  8'd98}: s1rd3 <= 137;
	     {1'd0,  8'd99}: s1rd3 <= 141;
	     {1'd0,  8'd100}: s1rd3 <= 145;
	     {1'd0,  8'd101}: s1rd3 <= 149;
	     {1'd0,  8'd102}: s1rd3 <= 153;
	     {1'd0,  8'd103}: s1rd3 <= 157;
	     {1'd0,  8'd104}: s1rd3 <= 161;
	     {1'd0,  8'd105}: s1rd3 <= 165;
	     {1'd0,  8'd106}: s1rd3 <= 169;
	     {1'd0,  8'd107}: s1rd3 <= 173;
	     {1'd0,  8'd108}: s1rd3 <= 177;
	     {1'd0,  8'd109}: s1rd3 <= 181;
	     {1'd0,  8'd110}: s1rd3 <= 185;
	     {1'd0,  8'd111}: s1rd3 <= 189;
	     {1'd0,  8'd112}: s1rd3 <= 193;
	     {1'd0,  8'd113}: s1rd3 <= 197;
	     {1'd0,  8'd114}: s1rd3 <= 201;
	     {1'd0,  8'd115}: s1rd3 <= 205;
	     {1'd0,  8'd116}: s1rd3 <= 209;
	     {1'd0,  8'd117}: s1rd3 <= 213;
	     {1'd0,  8'd118}: s1rd3 <= 217;
	     {1'd0,  8'd119}: s1rd3 <= 221;
	     {1'd0,  8'd120}: s1rd3 <= 225;
	     {1'd0,  8'd121}: s1rd3 <= 229;
	     {1'd0,  8'd122}: s1rd3 <= 233;
	     {1'd0,  8'd123}: s1rd3 <= 237;
	     {1'd0,  8'd124}: s1rd3 <= 241;
	     {1'd0,  8'd125}: s1rd3 <= 245;
	     {1'd0,  8'd126}: s1rd3 <= 249;
	     {1'd0,  8'd127}: s1rd3 <= 253;
	     {1'd0,  8'd128}: s1rd3 <= 2;
	     {1'd0,  8'd129}: s1rd3 <= 6;
	     {1'd0,  8'd130}: s1rd3 <= 10;
	     {1'd0,  8'd131}: s1rd3 <= 14;
	     {1'd0,  8'd132}: s1rd3 <= 18;
	     {1'd0,  8'd133}: s1rd3 <= 22;
	     {1'd0,  8'd134}: s1rd3 <= 26;
	     {1'd0,  8'd135}: s1rd3 <= 30;
	     {1'd0,  8'd136}: s1rd3 <= 34;
	     {1'd0,  8'd137}: s1rd3 <= 38;
	     {1'd0,  8'd138}: s1rd3 <= 42;
	     {1'd0,  8'd139}: s1rd3 <= 46;
	     {1'd0,  8'd140}: s1rd3 <= 50;
	     {1'd0,  8'd141}: s1rd3 <= 54;
	     {1'd0,  8'd142}: s1rd3 <= 58;
	     {1'd0,  8'd143}: s1rd3 <= 62;
	     {1'd0,  8'd144}: s1rd3 <= 66;
	     {1'd0,  8'd145}: s1rd3 <= 70;
	     {1'd0,  8'd146}: s1rd3 <= 74;
	     {1'd0,  8'd147}: s1rd3 <= 78;
	     {1'd0,  8'd148}: s1rd3 <= 82;
	     {1'd0,  8'd149}: s1rd3 <= 86;
	     {1'd0,  8'd150}: s1rd3 <= 90;
	     {1'd0,  8'd151}: s1rd3 <= 94;
	     {1'd0,  8'd152}: s1rd3 <= 98;
	     {1'd0,  8'd153}: s1rd3 <= 102;
	     {1'd0,  8'd154}: s1rd3 <= 106;
	     {1'd0,  8'd155}: s1rd3 <= 110;
	     {1'd0,  8'd156}: s1rd3 <= 114;
	     {1'd0,  8'd157}: s1rd3 <= 118;
	     {1'd0,  8'd158}: s1rd3 <= 122;
	     {1'd0,  8'd159}: s1rd3 <= 126;
	     {1'd0,  8'd160}: s1rd3 <= 130;
	     {1'd0,  8'd161}: s1rd3 <= 134;
	     {1'd0,  8'd162}: s1rd3 <= 138;
	     {1'd0,  8'd163}: s1rd3 <= 142;
	     {1'd0,  8'd164}: s1rd3 <= 146;
	     {1'd0,  8'd165}: s1rd3 <= 150;
	     {1'd0,  8'd166}: s1rd3 <= 154;
	     {1'd0,  8'd167}: s1rd3 <= 158;
	     {1'd0,  8'd168}: s1rd3 <= 162;
	     {1'd0,  8'd169}: s1rd3 <= 166;
	     {1'd0,  8'd170}: s1rd3 <= 170;
	     {1'd0,  8'd171}: s1rd3 <= 174;
	     {1'd0,  8'd172}: s1rd3 <= 178;
	     {1'd0,  8'd173}: s1rd3 <= 182;
	     {1'd0,  8'd174}: s1rd3 <= 186;
	     {1'd0,  8'd175}: s1rd3 <= 190;
	     {1'd0,  8'd176}: s1rd3 <= 194;
	     {1'd0,  8'd177}: s1rd3 <= 198;
	     {1'd0,  8'd178}: s1rd3 <= 202;
	     {1'd0,  8'd179}: s1rd3 <= 206;
	     {1'd0,  8'd180}: s1rd3 <= 210;
	     {1'd0,  8'd181}: s1rd3 <= 214;
	     {1'd0,  8'd182}: s1rd3 <= 218;
	     {1'd0,  8'd183}: s1rd3 <= 222;
	     {1'd0,  8'd184}: s1rd3 <= 226;
	     {1'd0,  8'd185}: s1rd3 <= 230;
	     {1'd0,  8'd186}: s1rd3 <= 234;
	     {1'd0,  8'd187}: s1rd3 <= 238;
	     {1'd0,  8'd188}: s1rd3 <= 242;
	     {1'd0,  8'd189}: s1rd3 <= 246;
	     {1'd0,  8'd190}: s1rd3 <= 250;
	     {1'd0,  8'd191}: s1rd3 <= 254;
	     {1'd0,  8'd192}: s1rd3 <= 3;
	     {1'd0,  8'd193}: s1rd3 <= 7;
	     {1'd0,  8'd194}: s1rd3 <= 11;
	     {1'd0,  8'd195}: s1rd3 <= 15;
	     {1'd0,  8'd196}: s1rd3 <= 19;
	     {1'd0,  8'd197}: s1rd3 <= 23;
	     {1'd0,  8'd198}: s1rd3 <= 27;
	     {1'd0,  8'd199}: s1rd3 <= 31;
	     {1'd0,  8'd200}: s1rd3 <= 35;
	     {1'd0,  8'd201}: s1rd3 <= 39;
	     {1'd0,  8'd202}: s1rd3 <= 43;
	     {1'd0,  8'd203}: s1rd3 <= 47;
	     {1'd0,  8'd204}: s1rd3 <= 51;
	     {1'd0,  8'd205}: s1rd3 <= 55;
	     {1'd0,  8'd206}: s1rd3 <= 59;
	     {1'd0,  8'd207}: s1rd3 <= 63;
	     {1'd0,  8'd208}: s1rd3 <= 67;
	     {1'd0,  8'd209}: s1rd3 <= 71;
	     {1'd0,  8'd210}: s1rd3 <= 75;
	     {1'd0,  8'd211}: s1rd3 <= 79;
	     {1'd0,  8'd212}: s1rd3 <= 83;
	     {1'd0,  8'd213}: s1rd3 <= 87;
	     {1'd0,  8'd214}: s1rd3 <= 91;
	     {1'd0,  8'd215}: s1rd3 <= 95;
	     {1'd0,  8'd216}: s1rd3 <= 99;
	     {1'd0,  8'd217}: s1rd3 <= 103;
	     {1'd0,  8'd218}: s1rd3 <= 107;
	     {1'd0,  8'd219}: s1rd3 <= 111;
	     {1'd0,  8'd220}: s1rd3 <= 115;
	     {1'd0,  8'd221}: s1rd3 <= 119;
	     {1'd0,  8'd222}: s1rd3 <= 123;
	     {1'd0,  8'd223}: s1rd3 <= 127;
	     {1'd0,  8'd224}: s1rd3 <= 131;
	     {1'd0,  8'd225}: s1rd3 <= 135;
	     {1'd0,  8'd226}: s1rd3 <= 139;
	     {1'd0,  8'd227}: s1rd3 <= 143;
	     {1'd0,  8'd228}: s1rd3 <= 147;
	     {1'd0,  8'd229}: s1rd3 <= 151;
	     {1'd0,  8'd230}: s1rd3 <= 155;
	     {1'd0,  8'd231}: s1rd3 <= 159;
	     {1'd0,  8'd232}: s1rd3 <= 163;
	     {1'd0,  8'd233}: s1rd3 <= 167;
	     {1'd0,  8'd234}: s1rd3 <= 171;
	     {1'd0,  8'd235}: s1rd3 <= 175;
	     {1'd0,  8'd236}: s1rd3 <= 179;
	     {1'd0,  8'd237}: s1rd3 <= 183;
	     {1'd0,  8'd238}: s1rd3 <= 187;
	     {1'd0,  8'd239}: s1rd3 <= 191;
	     {1'd0,  8'd240}: s1rd3 <= 195;
	     {1'd0,  8'd241}: s1rd3 <= 199;
	     {1'd0,  8'd242}: s1rd3 <= 203;
	     {1'd0,  8'd243}: s1rd3 <= 207;
	     {1'd0,  8'd244}: s1rd3 <= 211;
	     {1'd0,  8'd245}: s1rd3 <= 215;
	     {1'd0,  8'd246}: s1rd3 <= 219;
	     {1'd0,  8'd247}: s1rd3 <= 223;
	     {1'd0,  8'd248}: s1rd3 <= 227;
	     {1'd0,  8'd249}: s1rd3 <= 231;
	     {1'd0,  8'd250}: s1rd3 <= 235;
	     {1'd0,  8'd251}: s1rd3 <= 239;
	     {1'd0,  8'd252}: s1rd3 <= 243;
	     {1'd0,  8'd253}: s1rd3 <= 247;
	     {1'd0,  8'd254}: s1rd3 <= 251;
	     {1'd0,  8'd255}: s1rd3 <= 255;
      endcase      
   end

// synthesis attribute rom_style of s1rd3 is "distributed"
    swNet41962 sw(tm37_d, clk, muxCycle, t0, s0, t1, s1, t2, s2, t3, s3);

   always @(posedge clk) begin
      case({tm37_dd, writeCycle})
	      {1'd0, 8'd0}: s2wr0 <= 192;
	      {1'd0, 8'd1}: s2wr0 <= 193;
	      {1'd0, 8'd2}: s2wr0 <= 194;
	      {1'd0, 8'd3}: s2wr0 <= 195;
	      {1'd0, 8'd4}: s2wr0 <= 196;
	      {1'd0, 8'd5}: s2wr0 <= 197;
	      {1'd0, 8'd6}: s2wr0 <= 198;
	      {1'd0, 8'd7}: s2wr0 <= 199;
	      {1'd0, 8'd8}: s2wr0 <= 200;
	      {1'd0, 8'd9}: s2wr0 <= 201;
	      {1'd0, 8'd10}: s2wr0 <= 202;
	      {1'd0, 8'd11}: s2wr0 <= 203;
	      {1'd0, 8'd12}: s2wr0 <= 204;
	      {1'd0, 8'd13}: s2wr0 <= 205;
	      {1'd0, 8'd14}: s2wr0 <= 206;
	      {1'd0, 8'd15}: s2wr0 <= 207;
	      {1'd0, 8'd16}: s2wr0 <= 208;
	      {1'd0, 8'd17}: s2wr0 <= 209;
	      {1'd0, 8'd18}: s2wr0 <= 210;
	      {1'd0, 8'd19}: s2wr0 <= 211;
	      {1'd0, 8'd20}: s2wr0 <= 212;
	      {1'd0, 8'd21}: s2wr0 <= 213;
	      {1'd0, 8'd22}: s2wr0 <= 214;
	      {1'd0, 8'd23}: s2wr0 <= 215;
	      {1'd0, 8'd24}: s2wr0 <= 216;
	      {1'd0, 8'd25}: s2wr0 <= 217;
	      {1'd0, 8'd26}: s2wr0 <= 218;
	      {1'd0, 8'd27}: s2wr0 <= 219;
	      {1'd0, 8'd28}: s2wr0 <= 220;
	      {1'd0, 8'd29}: s2wr0 <= 221;
	      {1'd0, 8'd30}: s2wr0 <= 222;
	      {1'd0, 8'd31}: s2wr0 <= 223;
	      {1'd0, 8'd32}: s2wr0 <= 224;
	      {1'd0, 8'd33}: s2wr0 <= 225;
	      {1'd0, 8'd34}: s2wr0 <= 226;
	      {1'd0, 8'd35}: s2wr0 <= 227;
	      {1'd0, 8'd36}: s2wr0 <= 228;
	      {1'd0, 8'd37}: s2wr0 <= 229;
	      {1'd0, 8'd38}: s2wr0 <= 230;
	      {1'd0, 8'd39}: s2wr0 <= 231;
	      {1'd0, 8'd40}: s2wr0 <= 232;
	      {1'd0, 8'd41}: s2wr0 <= 233;
	      {1'd0, 8'd42}: s2wr0 <= 234;
	      {1'd0, 8'd43}: s2wr0 <= 235;
	      {1'd0, 8'd44}: s2wr0 <= 236;
	      {1'd0, 8'd45}: s2wr0 <= 237;
	      {1'd0, 8'd46}: s2wr0 <= 238;
	      {1'd0, 8'd47}: s2wr0 <= 239;
	      {1'd0, 8'd48}: s2wr0 <= 240;
	      {1'd0, 8'd49}: s2wr0 <= 241;
	      {1'd0, 8'd50}: s2wr0 <= 242;
	      {1'd0, 8'd51}: s2wr0 <= 243;
	      {1'd0, 8'd52}: s2wr0 <= 244;
	      {1'd0, 8'd53}: s2wr0 <= 245;
	      {1'd0, 8'd54}: s2wr0 <= 246;
	      {1'd0, 8'd55}: s2wr0 <= 247;
	      {1'd0, 8'd56}: s2wr0 <= 248;
	      {1'd0, 8'd57}: s2wr0 <= 249;
	      {1'd0, 8'd58}: s2wr0 <= 250;
	      {1'd0, 8'd59}: s2wr0 <= 251;
	      {1'd0, 8'd60}: s2wr0 <= 252;
	      {1'd0, 8'd61}: s2wr0 <= 253;
	      {1'd0, 8'd62}: s2wr0 <= 254;
	      {1'd0, 8'd63}: s2wr0 <= 255;
	      {1'd0, 8'd64}: s2wr0 <= 128;
	      {1'd0, 8'd65}: s2wr0 <= 129;
	      {1'd0, 8'd66}: s2wr0 <= 130;
	      {1'd0, 8'd67}: s2wr0 <= 131;
	      {1'd0, 8'd68}: s2wr0 <= 132;
	      {1'd0, 8'd69}: s2wr0 <= 133;
	      {1'd0, 8'd70}: s2wr0 <= 134;
	      {1'd0, 8'd71}: s2wr0 <= 135;
	      {1'd0, 8'd72}: s2wr0 <= 136;
	      {1'd0, 8'd73}: s2wr0 <= 137;
	      {1'd0, 8'd74}: s2wr0 <= 138;
	      {1'd0, 8'd75}: s2wr0 <= 139;
	      {1'd0, 8'd76}: s2wr0 <= 140;
	      {1'd0, 8'd77}: s2wr0 <= 141;
	      {1'd0, 8'd78}: s2wr0 <= 142;
	      {1'd0, 8'd79}: s2wr0 <= 143;
	      {1'd0, 8'd80}: s2wr0 <= 144;
	      {1'd0, 8'd81}: s2wr0 <= 145;
	      {1'd0, 8'd82}: s2wr0 <= 146;
	      {1'd0, 8'd83}: s2wr0 <= 147;
	      {1'd0, 8'd84}: s2wr0 <= 148;
	      {1'd0, 8'd85}: s2wr0 <= 149;
	      {1'd0, 8'd86}: s2wr0 <= 150;
	      {1'd0, 8'd87}: s2wr0 <= 151;
	      {1'd0, 8'd88}: s2wr0 <= 152;
	      {1'd0, 8'd89}: s2wr0 <= 153;
	      {1'd0, 8'd90}: s2wr0 <= 154;
	      {1'd0, 8'd91}: s2wr0 <= 155;
	      {1'd0, 8'd92}: s2wr0 <= 156;
	      {1'd0, 8'd93}: s2wr0 <= 157;
	      {1'd0, 8'd94}: s2wr0 <= 158;
	      {1'd0, 8'd95}: s2wr0 <= 159;
	      {1'd0, 8'd96}: s2wr0 <= 160;
	      {1'd0, 8'd97}: s2wr0 <= 161;
	      {1'd0, 8'd98}: s2wr0 <= 162;
	      {1'd0, 8'd99}: s2wr0 <= 163;
	      {1'd0, 8'd100}: s2wr0 <= 164;
	      {1'd0, 8'd101}: s2wr0 <= 165;
	      {1'd0, 8'd102}: s2wr0 <= 166;
	      {1'd0, 8'd103}: s2wr0 <= 167;
	      {1'd0, 8'd104}: s2wr0 <= 168;
	      {1'd0, 8'd105}: s2wr0 <= 169;
	      {1'd0, 8'd106}: s2wr0 <= 170;
	      {1'd0, 8'd107}: s2wr0 <= 171;
	      {1'd0, 8'd108}: s2wr0 <= 172;
	      {1'd0, 8'd109}: s2wr0 <= 173;
	      {1'd0, 8'd110}: s2wr0 <= 174;
	      {1'd0, 8'd111}: s2wr0 <= 175;
	      {1'd0, 8'd112}: s2wr0 <= 176;
	      {1'd0, 8'd113}: s2wr0 <= 177;
	      {1'd0, 8'd114}: s2wr0 <= 178;
	      {1'd0, 8'd115}: s2wr0 <= 179;
	      {1'd0, 8'd116}: s2wr0 <= 180;
	      {1'd0, 8'd117}: s2wr0 <= 181;
	      {1'd0, 8'd118}: s2wr0 <= 182;
	      {1'd0, 8'd119}: s2wr0 <= 183;
	      {1'd0, 8'd120}: s2wr0 <= 184;
	      {1'd0, 8'd121}: s2wr0 <= 185;
	      {1'd0, 8'd122}: s2wr0 <= 186;
	      {1'd0, 8'd123}: s2wr0 <= 187;
	      {1'd0, 8'd124}: s2wr0 <= 188;
	      {1'd0, 8'd125}: s2wr0 <= 189;
	      {1'd0, 8'd126}: s2wr0 <= 190;
	      {1'd0, 8'd127}: s2wr0 <= 191;
	      {1'd0, 8'd128}: s2wr0 <= 64;
	      {1'd0, 8'd129}: s2wr0 <= 65;
	      {1'd0, 8'd130}: s2wr0 <= 66;
	      {1'd0, 8'd131}: s2wr0 <= 67;
	      {1'd0, 8'd132}: s2wr0 <= 68;
	      {1'd0, 8'd133}: s2wr0 <= 69;
	      {1'd0, 8'd134}: s2wr0 <= 70;
	      {1'd0, 8'd135}: s2wr0 <= 71;
	      {1'd0, 8'd136}: s2wr0 <= 72;
	      {1'd0, 8'd137}: s2wr0 <= 73;
	      {1'd0, 8'd138}: s2wr0 <= 74;
	      {1'd0, 8'd139}: s2wr0 <= 75;
	      {1'd0, 8'd140}: s2wr0 <= 76;
	      {1'd0, 8'd141}: s2wr0 <= 77;
	      {1'd0, 8'd142}: s2wr0 <= 78;
	      {1'd0, 8'd143}: s2wr0 <= 79;
	      {1'd0, 8'd144}: s2wr0 <= 80;
	      {1'd0, 8'd145}: s2wr0 <= 81;
	      {1'd0, 8'd146}: s2wr0 <= 82;
	      {1'd0, 8'd147}: s2wr0 <= 83;
	      {1'd0, 8'd148}: s2wr0 <= 84;
	      {1'd0, 8'd149}: s2wr0 <= 85;
	      {1'd0, 8'd150}: s2wr0 <= 86;
	      {1'd0, 8'd151}: s2wr0 <= 87;
	      {1'd0, 8'd152}: s2wr0 <= 88;
	      {1'd0, 8'd153}: s2wr0 <= 89;
	      {1'd0, 8'd154}: s2wr0 <= 90;
	      {1'd0, 8'd155}: s2wr0 <= 91;
	      {1'd0, 8'd156}: s2wr0 <= 92;
	      {1'd0, 8'd157}: s2wr0 <= 93;
	      {1'd0, 8'd158}: s2wr0 <= 94;
	      {1'd0, 8'd159}: s2wr0 <= 95;
	      {1'd0, 8'd160}: s2wr0 <= 96;
	      {1'd0, 8'd161}: s2wr0 <= 97;
	      {1'd0, 8'd162}: s2wr0 <= 98;
	      {1'd0, 8'd163}: s2wr0 <= 99;
	      {1'd0, 8'd164}: s2wr0 <= 100;
	      {1'd0, 8'd165}: s2wr0 <= 101;
	      {1'd0, 8'd166}: s2wr0 <= 102;
	      {1'd0, 8'd167}: s2wr0 <= 103;
	      {1'd0, 8'd168}: s2wr0 <= 104;
	      {1'd0, 8'd169}: s2wr0 <= 105;
	      {1'd0, 8'd170}: s2wr0 <= 106;
	      {1'd0, 8'd171}: s2wr0 <= 107;
	      {1'd0, 8'd172}: s2wr0 <= 108;
	      {1'd0, 8'd173}: s2wr0 <= 109;
	      {1'd0, 8'd174}: s2wr0 <= 110;
	      {1'd0, 8'd175}: s2wr0 <= 111;
	      {1'd0, 8'd176}: s2wr0 <= 112;
	      {1'd0, 8'd177}: s2wr0 <= 113;
	      {1'd0, 8'd178}: s2wr0 <= 114;
	      {1'd0, 8'd179}: s2wr0 <= 115;
	      {1'd0, 8'd180}: s2wr0 <= 116;
	      {1'd0, 8'd181}: s2wr0 <= 117;
	      {1'd0, 8'd182}: s2wr0 <= 118;
	      {1'd0, 8'd183}: s2wr0 <= 119;
	      {1'd0, 8'd184}: s2wr0 <= 120;
	      {1'd0, 8'd185}: s2wr0 <= 121;
	      {1'd0, 8'd186}: s2wr0 <= 122;
	      {1'd0, 8'd187}: s2wr0 <= 123;
	      {1'd0, 8'd188}: s2wr0 <= 124;
	      {1'd0, 8'd189}: s2wr0 <= 125;
	      {1'd0, 8'd190}: s2wr0 <= 126;
	      {1'd0, 8'd191}: s2wr0 <= 127;
	      {1'd0, 8'd192}: s2wr0 <= 0;
	      {1'd0, 8'd193}: s2wr0 <= 1;
	      {1'd0, 8'd194}: s2wr0 <= 2;
	      {1'd0, 8'd195}: s2wr0 <= 3;
	      {1'd0, 8'd196}: s2wr0 <= 4;
	      {1'd0, 8'd197}: s2wr0 <= 5;
	      {1'd0, 8'd198}: s2wr0 <= 6;
	      {1'd0, 8'd199}: s2wr0 <= 7;
	      {1'd0, 8'd200}: s2wr0 <= 8;
	      {1'd0, 8'd201}: s2wr0 <= 9;
	      {1'd0, 8'd202}: s2wr0 <= 10;
	      {1'd0, 8'd203}: s2wr0 <= 11;
	      {1'd0, 8'd204}: s2wr0 <= 12;
	      {1'd0, 8'd205}: s2wr0 <= 13;
	      {1'd0, 8'd206}: s2wr0 <= 14;
	      {1'd0, 8'd207}: s2wr0 <= 15;
	      {1'd0, 8'd208}: s2wr0 <= 16;
	      {1'd0, 8'd209}: s2wr0 <= 17;
	      {1'd0, 8'd210}: s2wr0 <= 18;
	      {1'd0, 8'd211}: s2wr0 <= 19;
	      {1'd0, 8'd212}: s2wr0 <= 20;
	      {1'd0, 8'd213}: s2wr0 <= 21;
	      {1'd0, 8'd214}: s2wr0 <= 22;
	      {1'd0, 8'd215}: s2wr0 <= 23;
	      {1'd0, 8'd216}: s2wr0 <= 24;
	      {1'd0, 8'd217}: s2wr0 <= 25;
	      {1'd0, 8'd218}: s2wr0 <= 26;
	      {1'd0, 8'd219}: s2wr0 <= 27;
	      {1'd0, 8'd220}: s2wr0 <= 28;
	      {1'd0, 8'd221}: s2wr0 <= 29;
	      {1'd0, 8'd222}: s2wr0 <= 30;
	      {1'd0, 8'd223}: s2wr0 <= 31;
	      {1'd0, 8'd224}: s2wr0 <= 32;
	      {1'd0, 8'd225}: s2wr0 <= 33;
	      {1'd0, 8'd226}: s2wr0 <= 34;
	      {1'd0, 8'd227}: s2wr0 <= 35;
	      {1'd0, 8'd228}: s2wr0 <= 36;
	      {1'd0, 8'd229}: s2wr0 <= 37;
	      {1'd0, 8'd230}: s2wr0 <= 38;
	      {1'd0, 8'd231}: s2wr0 <= 39;
	      {1'd0, 8'd232}: s2wr0 <= 40;
	      {1'd0, 8'd233}: s2wr0 <= 41;
	      {1'd0, 8'd234}: s2wr0 <= 42;
	      {1'd0, 8'd235}: s2wr0 <= 43;
	      {1'd0, 8'd236}: s2wr0 <= 44;
	      {1'd0, 8'd237}: s2wr0 <= 45;
	      {1'd0, 8'd238}: s2wr0 <= 46;
	      {1'd0, 8'd239}: s2wr0 <= 47;
	      {1'd0, 8'd240}: s2wr0 <= 48;
	      {1'd0, 8'd241}: s2wr0 <= 49;
	      {1'd0, 8'd242}: s2wr0 <= 50;
	      {1'd0, 8'd243}: s2wr0 <= 51;
	      {1'd0, 8'd244}: s2wr0 <= 52;
	      {1'd0, 8'd245}: s2wr0 <= 53;
	      {1'd0, 8'd246}: s2wr0 <= 54;
	      {1'd0, 8'd247}: s2wr0 <= 55;
	      {1'd0, 8'd248}: s2wr0 <= 56;
	      {1'd0, 8'd249}: s2wr0 <= 57;
	      {1'd0, 8'd250}: s2wr0 <= 58;
	      {1'd0, 8'd251}: s2wr0 <= 59;
	      {1'd0, 8'd252}: s2wr0 <= 60;
	      {1'd0, 8'd253}: s2wr0 <= 61;
	      {1'd0, 8'd254}: s2wr0 <= 62;
	      {1'd0, 8'd255}: s2wr0 <= 63;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr0 is "distributed"
   always @(posedge clk) begin
      case({tm37_dd, writeCycle})
	      {1'd0, 8'd0}: s2wr1 <= 128;
	      {1'd0, 8'd1}: s2wr1 <= 129;
	      {1'd0, 8'd2}: s2wr1 <= 130;
	      {1'd0, 8'd3}: s2wr1 <= 131;
	      {1'd0, 8'd4}: s2wr1 <= 132;
	      {1'd0, 8'd5}: s2wr1 <= 133;
	      {1'd0, 8'd6}: s2wr1 <= 134;
	      {1'd0, 8'd7}: s2wr1 <= 135;
	      {1'd0, 8'd8}: s2wr1 <= 136;
	      {1'd0, 8'd9}: s2wr1 <= 137;
	      {1'd0, 8'd10}: s2wr1 <= 138;
	      {1'd0, 8'd11}: s2wr1 <= 139;
	      {1'd0, 8'd12}: s2wr1 <= 140;
	      {1'd0, 8'd13}: s2wr1 <= 141;
	      {1'd0, 8'd14}: s2wr1 <= 142;
	      {1'd0, 8'd15}: s2wr1 <= 143;
	      {1'd0, 8'd16}: s2wr1 <= 144;
	      {1'd0, 8'd17}: s2wr1 <= 145;
	      {1'd0, 8'd18}: s2wr1 <= 146;
	      {1'd0, 8'd19}: s2wr1 <= 147;
	      {1'd0, 8'd20}: s2wr1 <= 148;
	      {1'd0, 8'd21}: s2wr1 <= 149;
	      {1'd0, 8'd22}: s2wr1 <= 150;
	      {1'd0, 8'd23}: s2wr1 <= 151;
	      {1'd0, 8'd24}: s2wr1 <= 152;
	      {1'd0, 8'd25}: s2wr1 <= 153;
	      {1'd0, 8'd26}: s2wr1 <= 154;
	      {1'd0, 8'd27}: s2wr1 <= 155;
	      {1'd0, 8'd28}: s2wr1 <= 156;
	      {1'd0, 8'd29}: s2wr1 <= 157;
	      {1'd0, 8'd30}: s2wr1 <= 158;
	      {1'd0, 8'd31}: s2wr1 <= 159;
	      {1'd0, 8'd32}: s2wr1 <= 160;
	      {1'd0, 8'd33}: s2wr1 <= 161;
	      {1'd0, 8'd34}: s2wr1 <= 162;
	      {1'd0, 8'd35}: s2wr1 <= 163;
	      {1'd0, 8'd36}: s2wr1 <= 164;
	      {1'd0, 8'd37}: s2wr1 <= 165;
	      {1'd0, 8'd38}: s2wr1 <= 166;
	      {1'd0, 8'd39}: s2wr1 <= 167;
	      {1'd0, 8'd40}: s2wr1 <= 168;
	      {1'd0, 8'd41}: s2wr1 <= 169;
	      {1'd0, 8'd42}: s2wr1 <= 170;
	      {1'd0, 8'd43}: s2wr1 <= 171;
	      {1'd0, 8'd44}: s2wr1 <= 172;
	      {1'd0, 8'd45}: s2wr1 <= 173;
	      {1'd0, 8'd46}: s2wr1 <= 174;
	      {1'd0, 8'd47}: s2wr1 <= 175;
	      {1'd0, 8'd48}: s2wr1 <= 176;
	      {1'd0, 8'd49}: s2wr1 <= 177;
	      {1'd0, 8'd50}: s2wr1 <= 178;
	      {1'd0, 8'd51}: s2wr1 <= 179;
	      {1'd0, 8'd52}: s2wr1 <= 180;
	      {1'd0, 8'd53}: s2wr1 <= 181;
	      {1'd0, 8'd54}: s2wr1 <= 182;
	      {1'd0, 8'd55}: s2wr1 <= 183;
	      {1'd0, 8'd56}: s2wr1 <= 184;
	      {1'd0, 8'd57}: s2wr1 <= 185;
	      {1'd0, 8'd58}: s2wr1 <= 186;
	      {1'd0, 8'd59}: s2wr1 <= 187;
	      {1'd0, 8'd60}: s2wr1 <= 188;
	      {1'd0, 8'd61}: s2wr1 <= 189;
	      {1'd0, 8'd62}: s2wr1 <= 190;
	      {1'd0, 8'd63}: s2wr1 <= 191;
	      {1'd0, 8'd64}: s2wr1 <= 192;
	      {1'd0, 8'd65}: s2wr1 <= 193;
	      {1'd0, 8'd66}: s2wr1 <= 194;
	      {1'd0, 8'd67}: s2wr1 <= 195;
	      {1'd0, 8'd68}: s2wr1 <= 196;
	      {1'd0, 8'd69}: s2wr1 <= 197;
	      {1'd0, 8'd70}: s2wr1 <= 198;
	      {1'd0, 8'd71}: s2wr1 <= 199;
	      {1'd0, 8'd72}: s2wr1 <= 200;
	      {1'd0, 8'd73}: s2wr1 <= 201;
	      {1'd0, 8'd74}: s2wr1 <= 202;
	      {1'd0, 8'd75}: s2wr1 <= 203;
	      {1'd0, 8'd76}: s2wr1 <= 204;
	      {1'd0, 8'd77}: s2wr1 <= 205;
	      {1'd0, 8'd78}: s2wr1 <= 206;
	      {1'd0, 8'd79}: s2wr1 <= 207;
	      {1'd0, 8'd80}: s2wr1 <= 208;
	      {1'd0, 8'd81}: s2wr1 <= 209;
	      {1'd0, 8'd82}: s2wr1 <= 210;
	      {1'd0, 8'd83}: s2wr1 <= 211;
	      {1'd0, 8'd84}: s2wr1 <= 212;
	      {1'd0, 8'd85}: s2wr1 <= 213;
	      {1'd0, 8'd86}: s2wr1 <= 214;
	      {1'd0, 8'd87}: s2wr1 <= 215;
	      {1'd0, 8'd88}: s2wr1 <= 216;
	      {1'd0, 8'd89}: s2wr1 <= 217;
	      {1'd0, 8'd90}: s2wr1 <= 218;
	      {1'd0, 8'd91}: s2wr1 <= 219;
	      {1'd0, 8'd92}: s2wr1 <= 220;
	      {1'd0, 8'd93}: s2wr1 <= 221;
	      {1'd0, 8'd94}: s2wr1 <= 222;
	      {1'd0, 8'd95}: s2wr1 <= 223;
	      {1'd0, 8'd96}: s2wr1 <= 224;
	      {1'd0, 8'd97}: s2wr1 <= 225;
	      {1'd0, 8'd98}: s2wr1 <= 226;
	      {1'd0, 8'd99}: s2wr1 <= 227;
	      {1'd0, 8'd100}: s2wr1 <= 228;
	      {1'd0, 8'd101}: s2wr1 <= 229;
	      {1'd0, 8'd102}: s2wr1 <= 230;
	      {1'd0, 8'd103}: s2wr1 <= 231;
	      {1'd0, 8'd104}: s2wr1 <= 232;
	      {1'd0, 8'd105}: s2wr1 <= 233;
	      {1'd0, 8'd106}: s2wr1 <= 234;
	      {1'd0, 8'd107}: s2wr1 <= 235;
	      {1'd0, 8'd108}: s2wr1 <= 236;
	      {1'd0, 8'd109}: s2wr1 <= 237;
	      {1'd0, 8'd110}: s2wr1 <= 238;
	      {1'd0, 8'd111}: s2wr1 <= 239;
	      {1'd0, 8'd112}: s2wr1 <= 240;
	      {1'd0, 8'd113}: s2wr1 <= 241;
	      {1'd0, 8'd114}: s2wr1 <= 242;
	      {1'd0, 8'd115}: s2wr1 <= 243;
	      {1'd0, 8'd116}: s2wr1 <= 244;
	      {1'd0, 8'd117}: s2wr1 <= 245;
	      {1'd0, 8'd118}: s2wr1 <= 246;
	      {1'd0, 8'd119}: s2wr1 <= 247;
	      {1'd0, 8'd120}: s2wr1 <= 248;
	      {1'd0, 8'd121}: s2wr1 <= 249;
	      {1'd0, 8'd122}: s2wr1 <= 250;
	      {1'd0, 8'd123}: s2wr1 <= 251;
	      {1'd0, 8'd124}: s2wr1 <= 252;
	      {1'd0, 8'd125}: s2wr1 <= 253;
	      {1'd0, 8'd126}: s2wr1 <= 254;
	      {1'd0, 8'd127}: s2wr1 <= 255;
	      {1'd0, 8'd128}: s2wr1 <= 0;
	      {1'd0, 8'd129}: s2wr1 <= 1;
	      {1'd0, 8'd130}: s2wr1 <= 2;
	      {1'd0, 8'd131}: s2wr1 <= 3;
	      {1'd0, 8'd132}: s2wr1 <= 4;
	      {1'd0, 8'd133}: s2wr1 <= 5;
	      {1'd0, 8'd134}: s2wr1 <= 6;
	      {1'd0, 8'd135}: s2wr1 <= 7;
	      {1'd0, 8'd136}: s2wr1 <= 8;
	      {1'd0, 8'd137}: s2wr1 <= 9;
	      {1'd0, 8'd138}: s2wr1 <= 10;
	      {1'd0, 8'd139}: s2wr1 <= 11;
	      {1'd0, 8'd140}: s2wr1 <= 12;
	      {1'd0, 8'd141}: s2wr1 <= 13;
	      {1'd0, 8'd142}: s2wr1 <= 14;
	      {1'd0, 8'd143}: s2wr1 <= 15;
	      {1'd0, 8'd144}: s2wr1 <= 16;
	      {1'd0, 8'd145}: s2wr1 <= 17;
	      {1'd0, 8'd146}: s2wr1 <= 18;
	      {1'd0, 8'd147}: s2wr1 <= 19;
	      {1'd0, 8'd148}: s2wr1 <= 20;
	      {1'd0, 8'd149}: s2wr1 <= 21;
	      {1'd0, 8'd150}: s2wr1 <= 22;
	      {1'd0, 8'd151}: s2wr1 <= 23;
	      {1'd0, 8'd152}: s2wr1 <= 24;
	      {1'd0, 8'd153}: s2wr1 <= 25;
	      {1'd0, 8'd154}: s2wr1 <= 26;
	      {1'd0, 8'd155}: s2wr1 <= 27;
	      {1'd0, 8'd156}: s2wr1 <= 28;
	      {1'd0, 8'd157}: s2wr1 <= 29;
	      {1'd0, 8'd158}: s2wr1 <= 30;
	      {1'd0, 8'd159}: s2wr1 <= 31;
	      {1'd0, 8'd160}: s2wr1 <= 32;
	      {1'd0, 8'd161}: s2wr1 <= 33;
	      {1'd0, 8'd162}: s2wr1 <= 34;
	      {1'd0, 8'd163}: s2wr1 <= 35;
	      {1'd0, 8'd164}: s2wr1 <= 36;
	      {1'd0, 8'd165}: s2wr1 <= 37;
	      {1'd0, 8'd166}: s2wr1 <= 38;
	      {1'd0, 8'd167}: s2wr1 <= 39;
	      {1'd0, 8'd168}: s2wr1 <= 40;
	      {1'd0, 8'd169}: s2wr1 <= 41;
	      {1'd0, 8'd170}: s2wr1 <= 42;
	      {1'd0, 8'd171}: s2wr1 <= 43;
	      {1'd0, 8'd172}: s2wr1 <= 44;
	      {1'd0, 8'd173}: s2wr1 <= 45;
	      {1'd0, 8'd174}: s2wr1 <= 46;
	      {1'd0, 8'd175}: s2wr1 <= 47;
	      {1'd0, 8'd176}: s2wr1 <= 48;
	      {1'd0, 8'd177}: s2wr1 <= 49;
	      {1'd0, 8'd178}: s2wr1 <= 50;
	      {1'd0, 8'd179}: s2wr1 <= 51;
	      {1'd0, 8'd180}: s2wr1 <= 52;
	      {1'd0, 8'd181}: s2wr1 <= 53;
	      {1'd0, 8'd182}: s2wr1 <= 54;
	      {1'd0, 8'd183}: s2wr1 <= 55;
	      {1'd0, 8'd184}: s2wr1 <= 56;
	      {1'd0, 8'd185}: s2wr1 <= 57;
	      {1'd0, 8'd186}: s2wr1 <= 58;
	      {1'd0, 8'd187}: s2wr1 <= 59;
	      {1'd0, 8'd188}: s2wr1 <= 60;
	      {1'd0, 8'd189}: s2wr1 <= 61;
	      {1'd0, 8'd190}: s2wr1 <= 62;
	      {1'd0, 8'd191}: s2wr1 <= 63;
	      {1'd0, 8'd192}: s2wr1 <= 64;
	      {1'd0, 8'd193}: s2wr1 <= 65;
	      {1'd0, 8'd194}: s2wr1 <= 66;
	      {1'd0, 8'd195}: s2wr1 <= 67;
	      {1'd0, 8'd196}: s2wr1 <= 68;
	      {1'd0, 8'd197}: s2wr1 <= 69;
	      {1'd0, 8'd198}: s2wr1 <= 70;
	      {1'd0, 8'd199}: s2wr1 <= 71;
	      {1'd0, 8'd200}: s2wr1 <= 72;
	      {1'd0, 8'd201}: s2wr1 <= 73;
	      {1'd0, 8'd202}: s2wr1 <= 74;
	      {1'd0, 8'd203}: s2wr1 <= 75;
	      {1'd0, 8'd204}: s2wr1 <= 76;
	      {1'd0, 8'd205}: s2wr1 <= 77;
	      {1'd0, 8'd206}: s2wr1 <= 78;
	      {1'd0, 8'd207}: s2wr1 <= 79;
	      {1'd0, 8'd208}: s2wr1 <= 80;
	      {1'd0, 8'd209}: s2wr1 <= 81;
	      {1'd0, 8'd210}: s2wr1 <= 82;
	      {1'd0, 8'd211}: s2wr1 <= 83;
	      {1'd0, 8'd212}: s2wr1 <= 84;
	      {1'd0, 8'd213}: s2wr1 <= 85;
	      {1'd0, 8'd214}: s2wr1 <= 86;
	      {1'd0, 8'd215}: s2wr1 <= 87;
	      {1'd0, 8'd216}: s2wr1 <= 88;
	      {1'd0, 8'd217}: s2wr1 <= 89;
	      {1'd0, 8'd218}: s2wr1 <= 90;
	      {1'd0, 8'd219}: s2wr1 <= 91;
	      {1'd0, 8'd220}: s2wr1 <= 92;
	      {1'd0, 8'd221}: s2wr1 <= 93;
	      {1'd0, 8'd222}: s2wr1 <= 94;
	      {1'd0, 8'd223}: s2wr1 <= 95;
	      {1'd0, 8'd224}: s2wr1 <= 96;
	      {1'd0, 8'd225}: s2wr1 <= 97;
	      {1'd0, 8'd226}: s2wr1 <= 98;
	      {1'd0, 8'd227}: s2wr1 <= 99;
	      {1'd0, 8'd228}: s2wr1 <= 100;
	      {1'd0, 8'd229}: s2wr1 <= 101;
	      {1'd0, 8'd230}: s2wr1 <= 102;
	      {1'd0, 8'd231}: s2wr1 <= 103;
	      {1'd0, 8'd232}: s2wr1 <= 104;
	      {1'd0, 8'd233}: s2wr1 <= 105;
	      {1'd0, 8'd234}: s2wr1 <= 106;
	      {1'd0, 8'd235}: s2wr1 <= 107;
	      {1'd0, 8'd236}: s2wr1 <= 108;
	      {1'd0, 8'd237}: s2wr1 <= 109;
	      {1'd0, 8'd238}: s2wr1 <= 110;
	      {1'd0, 8'd239}: s2wr1 <= 111;
	      {1'd0, 8'd240}: s2wr1 <= 112;
	      {1'd0, 8'd241}: s2wr1 <= 113;
	      {1'd0, 8'd242}: s2wr1 <= 114;
	      {1'd0, 8'd243}: s2wr1 <= 115;
	      {1'd0, 8'd244}: s2wr1 <= 116;
	      {1'd0, 8'd245}: s2wr1 <= 117;
	      {1'd0, 8'd246}: s2wr1 <= 118;
	      {1'd0, 8'd247}: s2wr1 <= 119;
	      {1'd0, 8'd248}: s2wr1 <= 120;
	      {1'd0, 8'd249}: s2wr1 <= 121;
	      {1'd0, 8'd250}: s2wr1 <= 122;
	      {1'd0, 8'd251}: s2wr1 <= 123;
	      {1'd0, 8'd252}: s2wr1 <= 124;
	      {1'd0, 8'd253}: s2wr1 <= 125;
	      {1'd0, 8'd254}: s2wr1 <= 126;
	      {1'd0, 8'd255}: s2wr1 <= 127;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr1 is "distributed"
   always @(posedge clk) begin
      case({tm37_dd, writeCycle})
	      {1'd0, 8'd0}: s2wr2 <= 64;
	      {1'd0, 8'd1}: s2wr2 <= 65;
	      {1'd0, 8'd2}: s2wr2 <= 66;
	      {1'd0, 8'd3}: s2wr2 <= 67;
	      {1'd0, 8'd4}: s2wr2 <= 68;
	      {1'd0, 8'd5}: s2wr2 <= 69;
	      {1'd0, 8'd6}: s2wr2 <= 70;
	      {1'd0, 8'd7}: s2wr2 <= 71;
	      {1'd0, 8'd8}: s2wr2 <= 72;
	      {1'd0, 8'd9}: s2wr2 <= 73;
	      {1'd0, 8'd10}: s2wr2 <= 74;
	      {1'd0, 8'd11}: s2wr2 <= 75;
	      {1'd0, 8'd12}: s2wr2 <= 76;
	      {1'd0, 8'd13}: s2wr2 <= 77;
	      {1'd0, 8'd14}: s2wr2 <= 78;
	      {1'd0, 8'd15}: s2wr2 <= 79;
	      {1'd0, 8'd16}: s2wr2 <= 80;
	      {1'd0, 8'd17}: s2wr2 <= 81;
	      {1'd0, 8'd18}: s2wr2 <= 82;
	      {1'd0, 8'd19}: s2wr2 <= 83;
	      {1'd0, 8'd20}: s2wr2 <= 84;
	      {1'd0, 8'd21}: s2wr2 <= 85;
	      {1'd0, 8'd22}: s2wr2 <= 86;
	      {1'd0, 8'd23}: s2wr2 <= 87;
	      {1'd0, 8'd24}: s2wr2 <= 88;
	      {1'd0, 8'd25}: s2wr2 <= 89;
	      {1'd0, 8'd26}: s2wr2 <= 90;
	      {1'd0, 8'd27}: s2wr2 <= 91;
	      {1'd0, 8'd28}: s2wr2 <= 92;
	      {1'd0, 8'd29}: s2wr2 <= 93;
	      {1'd0, 8'd30}: s2wr2 <= 94;
	      {1'd0, 8'd31}: s2wr2 <= 95;
	      {1'd0, 8'd32}: s2wr2 <= 96;
	      {1'd0, 8'd33}: s2wr2 <= 97;
	      {1'd0, 8'd34}: s2wr2 <= 98;
	      {1'd0, 8'd35}: s2wr2 <= 99;
	      {1'd0, 8'd36}: s2wr2 <= 100;
	      {1'd0, 8'd37}: s2wr2 <= 101;
	      {1'd0, 8'd38}: s2wr2 <= 102;
	      {1'd0, 8'd39}: s2wr2 <= 103;
	      {1'd0, 8'd40}: s2wr2 <= 104;
	      {1'd0, 8'd41}: s2wr2 <= 105;
	      {1'd0, 8'd42}: s2wr2 <= 106;
	      {1'd0, 8'd43}: s2wr2 <= 107;
	      {1'd0, 8'd44}: s2wr2 <= 108;
	      {1'd0, 8'd45}: s2wr2 <= 109;
	      {1'd0, 8'd46}: s2wr2 <= 110;
	      {1'd0, 8'd47}: s2wr2 <= 111;
	      {1'd0, 8'd48}: s2wr2 <= 112;
	      {1'd0, 8'd49}: s2wr2 <= 113;
	      {1'd0, 8'd50}: s2wr2 <= 114;
	      {1'd0, 8'd51}: s2wr2 <= 115;
	      {1'd0, 8'd52}: s2wr2 <= 116;
	      {1'd0, 8'd53}: s2wr2 <= 117;
	      {1'd0, 8'd54}: s2wr2 <= 118;
	      {1'd0, 8'd55}: s2wr2 <= 119;
	      {1'd0, 8'd56}: s2wr2 <= 120;
	      {1'd0, 8'd57}: s2wr2 <= 121;
	      {1'd0, 8'd58}: s2wr2 <= 122;
	      {1'd0, 8'd59}: s2wr2 <= 123;
	      {1'd0, 8'd60}: s2wr2 <= 124;
	      {1'd0, 8'd61}: s2wr2 <= 125;
	      {1'd0, 8'd62}: s2wr2 <= 126;
	      {1'd0, 8'd63}: s2wr2 <= 127;
	      {1'd0, 8'd64}: s2wr2 <= 0;
	      {1'd0, 8'd65}: s2wr2 <= 1;
	      {1'd0, 8'd66}: s2wr2 <= 2;
	      {1'd0, 8'd67}: s2wr2 <= 3;
	      {1'd0, 8'd68}: s2wr2 <= 4;
	      {1'd0, 8'd69}: s2wr2 <= 5;
	      {1'd0, 8'd70}: s2wr2 <= 6;
	      {1'd0, 8'd71}: s2wr2 <= 7;
	      {1'd0, 8'd72}: s2wr2 <= 8;
	      {1'd0, 8'd73}: s2wr2 <= 9;
	      {1'd0, 8'd74}: s2wr2 <= 10;
	      {1'd0, 8'd75}: s2wr2 <= 11;
	      {1'd0, 8'd76}: s2wr2 <= 12;
	      {1'd0, 8'd77}: s2wr2 <= 13;
	      {1'd0, 8'd78}: s2wr2 <= 14;
	      {1'd0, 8'd79}: s2wr2 <= 15;
	      {1'd0, 8'd80}: s2wr2 <= 16;
	      {1'd0, 8'd81}: s2wr2 <= 17;
	      {1'd0, 8'd82}: s2wr2 <= 18;
	      {1'd0, 8'd83}: s2wr2 <= 19;
	      {1'd0, 8'd84}: s2wr2 <= 20;
	      {1'd0, 8'd85}: s2wr2 <= 21;
	      {1'd0, 8'd86}: s2wr2 <= 22;
	      {1'd0, 8'd87}: s2wr2 <= 23;
	      {1'd0, 8'd88}: s2wr2 <= 24;
	      {1'd0, 8'd89}: s2wr2 <= 25;
	      {1'd0, 8'd90}: s2wr2 <= 26;
	      {1'd0, 8'd91}: s2wr2 <= 27;
	      {1'd0, 8'd92}: s2wr2 <= 28;
	      {1'd0, 8'd93}: s2wr2 <= 29;
	      {1'd0, 8'd94}: s2wr2 <= 30;
	      {1'd0, 8'd95}: s2wr2 <= 31;
	      {1'd0, 8'd96}: s2wr2 <= 32;
	      {1'd0, 8'd97}: s2wr2 <= 33;
	      {1'd0, 8'd98}: s2wr2 <= 34;
	      {1'd0, 8'd99}: s2wr2 <= 35;
	      {1'd0, 8'd100}: s2wr2 <= 36;
	      {1'd0, 8'd101}: s2wr2 <= 37;
	      {1'd0, 8'd102}: s2wr2 <= 38;
	      {1'd0, 8'd103}: s2wr2 <= 39;
	      {1'd0, 8'd104}: s2wr2 <= 40;
	      {1'd0, 8'd105}: s2wr2 <= 41;
	      {1'd0, 8'd106}: s2wr2 <= 42;
	      {1'd0, 8'd107}: s2wr2 <= 43;
	      {1'd0, 8'd108}: s2wr2 <= 44;
	      {1'd0, 8'd109}: s2wr2 <= 45;
	      {1'd0, 8'd110}: s2wr2 <= 46;
	      {1'd0, 8'd111}: s2wr2 <= 47;
	      {1'd0, 8'd112}: s2wr2 <= 48;
	      {1'd0, 8'd113}: s2wr2 <= 49;
	      {1'd0, 8'd114}: s2wr2 <= 50;
	      {1'd0, 8'd115}: s2wr2 <= 51;
	      {1'd0, 8'd116}: s2wr2 <= 52;
	      {1'd0, 8'd117}: s2wr2 <= 53;
	      {1'd0, 8'd118}: s2wr2 <= 54;
	      {1'd0, 8'd119}: s2wr2 <= 55;
	      {1'd0, 8'd120}: s2wr2 <= 56;
	      {1'd0, 8'd121}: s2wr2 <= 57;
	      {1'd0, 8'd122}: s2wr2 <= 58;
	      {1'd0, 8'd123}: s2wr2 <= 59;
	      {1'd0, 8'd124}: s2wr2 <= 60;
	      {1'd0, 8'd125}: s2wr2 <= 61;
	      {1'd0, 8'd126}: s2wr2 <= 62;
	      {1'd0, 8'd127}: s2wr2 <= 63;
	      {1'd0, 8'd128}: s2wr2 <= 192;
	      {1'd0, 8'd129}: s2wr2 <= 193;
	      {1'd0, 8'd130}: s2wr2 <= 194;
	      {1'd0, 8'd131}: s2wr2 <= 195;
	      {1'd0, 8'd132}: s2wr2 <= 196;
	      {1'd0, 8'd133}: s2wr2 <= 197;
	      {1'd0, 8'd134}: s2wr2 <= 198;
	      {1'd0, 8'd135}: s2wr2 <= 199;
	      {1'd0, 8'd136}: s2wr2 <= 200;
	      {1'd0, 8'd137}: s2wr2 <= 201;
	      {1'd0, 8'd138}: s2wr2 <= 202;
	      {1'd0, 8'd139}: s2wr2 <= 203;
	      {1'd0, 8'd140}: s2wr2 <= 204;
	      {1'd0, 8'd141}: s2wr2 <= 205;
	      {1'd0, 8'd142}: s2wr2 <= 206;
	      {1'd0, 8'd143}: s2wr2 <= 207;
	      {1'd0, 8'd144}: s2wr2 <= 208;
	      {1'd0, 8'd145}: s2wr2 <= 209;
	      {1'd0, 8'd146}: s2wr2 <= 210;
	      {1'd0, 8'd147}: s2wr2 <= 211;
	      {1'd0, 8'd148}: s2wr2 <= 212;
	      {1'd0, 8'd149}: s2wr2 <= 213;
	      {1'd0, 8'd150}: s2wr2 <= 214;
	      {1'd0, 8'd151}: s2wr2 <= 215;
	      {1'd0, 8'd152}: s2wr2 <= 216;
	      {1'd0, 8'd153}: s2wr2 <= 217;
	      {1'd0, 8'd154}: s2wr2 <= 218;
	      {1'd0, 8'd155}: s2wr2 <= 219;
	      {1'd0, 8'd156}: s2wr2 <= 220;
	      {1'd0, 8'd157}: s2wr2 <= 221;
	      {1'd0, 8'd158}: s2wr2 <= 222;
	      {1'd0, 8'd159}: s2wr2 <= 223;
	      {1'd0, 8'd160}: s2wr2 <= 224;
	      {1'd0, 8'd161}: s2wr2 <= 225;
	      {1'd0, 8'd162}: s2wr2 <= 226;
	      {1'd0, 8'd163}: s2wr2 <= 227;
	      {1'd0, 8'd164}: s2wr2 <= 228;
	      {1'd0, 8'd165}: s2wr2 <= 229;
	      {1'd0, 8'd166}: s2wr2 <= 230;
	      {1'd0, 8'd167}: s2wr2 <= 231;
	      {1'd0, 8'd168}: s2wr2 <= 232;
	      {1'd0, 8'd169}: s2wr2 <= 233;
	      {1'd0, 8'd170}: s2wr2 <= 234;
	      {1'd0, 8'd171}: s2wr2 <= 235;
	      {1'd0, 8'd172}: s2wr2 <= 236;
	      {1'd0, 8'd173}: s2wr2 <= 237;
	      {1'd0, 8'd174}: s2wr2 <= 238;
	      {1'd0, 8'd175}: s2wr2 <= 239;
	      {1'd0, 8'd176}: s2wr2 <= 240;
	      {1'd0, 8'd177}: s2wr2 <= 241;
	      {1'd0, 8'd178}: s2wr2 <= 242;
	      {1'd0, 8'd179}: s2wr2 <= 243;
	      {1'd0, 8'd180}: s2wr2 <= 244;
	      {1'd0, 8'd181}: s2wr2 <= 245;
	      {1'd0, 8'd182}: s2wr2 <= 246;
	      {1'd0, 8'd183}: s2wr2 <= 247;
	      {1'd0, 8'd184}: s2wr2 <= 248;
	      {1'd0, 8'd185}: s2wr2 <= 249;
	      {1'd0, 8'd186}: s2wr2 <= 250;
	      {1'd0, 8'd187}: s2wr2 <= 251;
	      {1'd0, 8'd188}: s2wr2 <= 252;
	      {1'd0, 8'd189}: s2wr2 <= 253;
	      {1'd0, 8'd190}: s2wr2 <= 254;
	      {1'd0, 8'd191}: s2wr2 <= 255;
	      {1'd0, 8'd192}: s2wr2 <= 128;
	      {1'd0, 8'd193}: s2wr2 <= 129;
	      {1'd0, 8'd194}: s2wr2 <= 130;
	      {1'd0, 8'd195}: s2wr2 <= 131;
	      {1'd0, 8'd196}: s2wr2 <= 132;
	      {1'd0, 8'd197}: s2wr2 <= 133;
	      {1'd0, 8'd198}: s2wr2 <= 134;
	      {1'd0, 8'd199}: s2wr2 <= 135;
	      {1'd0, 8'd200}: s2wr2 <= 136;
	      {1'd0, 8'd201}: s2wr2 <= 137;
	      {1'd0, 8'd202}: s2wr2 <= 138;
	      {1'd0, 8'd203}: s2wr2 <= 139;
	      {1'd0, 8'd204}: s2wr2 <= 140;
	      {1'd0, 8'd205}: s2wr2 <= 141;
	      {1'd0, 8'd206}: s2wr2 <= 142;
	      {1'd0, 8'd207}: s2wr2 <= 143;
	      {1'd0, 8'd208}: s2wr2 <= 144;
	      {1'd0, 8'd209}: s2wr2 <= 145;
	      {1'd0, 8'd210}: s2wr2 <= 146;
	      {1'd0, 8'd211}: s2wr2 <= 147;
	      {1'd0, 8'd212}: s2wr2 <= 148;
	      {1'd0, 8'd213}: s2wr2 <= 149;
	      {1'd0, 8'd214}: s2wr2 <= 150;
	      {1'd0, 8'd215}: s2wr2 <= 151;
	      {1'd0, 8'd216}: s2wr2 <= 152;
	      {1'd0, 8'd217}: s2wr2 <= 153;
	      {1'd0, 8'd218}: s2wr2 <= 154;
	      {1'd0, 8'd219}: s2wr2 <= 155;
	      {1'd0, 8'd220}: s2wr2 <= 156;
	      {1'd0, 8'd221}: s2wr2 <= 157;
	      {1'd0, 8'd222}: s2wr2 <= 158;
	      {1'd0, 8'd223}: s2wr2 <= 159;
	      {1'd0, 8'd224}: s2wr2 <= 160;
	      {1'd0, 8'd225}: s2wr2 <= 161;
	      {1'd0, 8'd226}: s2wr2 <= 162;
	      {1'd0, 8'd227}: s2wr2 <= 163;
	      {1'd0, 8'd228}: s2wr2 <= 164;
	      {1'd0, 8'd229}: s2wr2 <= 165;
	      {1'd0, 8'd230}: s2wr2 <= 166;
	      {1'd0, 8'd231}: s2wr2 <= 167;
	      {1'd0, 8'd232}: s2wr2 <= 168;
	      {1'd0, 8'd233}: s2wr2 <= 169;
	      {1'd0, 8'd234}: s2wr2 <= 170;
	      {1'd0, 8'd235}: s2wr2 <= 171;
	      {1'd0, 8'd236}: s2wr2 <= 172;
	      {1'd0, 8'd237}: s2wr2 <= 173;
	      {1'd0, 8'd238}: s2wr2 <= 174;
	      {1'd0, 8'd239}: s2wr2 <= 175;
	      {1'd0, 8'd240}: s2wr2 <= 176;
	      {1'd0, 8'd241}: s2wr2 <= 177;
	      {1'd0, 8'd242}: s2wr2 <= 178;
	      {1'd0, 8'd243}: s2wr2 <= 179;
	      {1'd0, 8'd244}: s2wr2 <= 180;
	      {1'd0, 8'd245}: s2wr2 <= 181;
	      {1'd0, 8'd246}: s2wr2 <= 182;
	      {1'd0, 8'd247}: s2wr2 <= 183;
	      {1'd0, 8'd248}: s2wr2 <= 184;
	      {1'd0, 8'd249}: s2wr2 <= 185;
	      {1'd0, 8'd250}: s2wr2 <= 186;
	      {1'd0, 8'd251}: s2wr2 <= 187;
	      {1'd0, 8'd252}: s2wr2 <= 188;
	      {1'd0, 8'd253}: s2wr2 <= 189;
	      {1'd0, 8'd254}: s2wr2 <= 190;
	      {1'd0, 8'd255}: s2wr2 <= 191;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr2 is "distributed"
   always @(posedge clk) begin
      case({tm37_dd, writeCycle})
	      {1'd0, 8'd0}: s2wr3 <= 0;
	      {1'd0, 8'd1}: s2wr3 <= 1;
	      {1'd0, 8'd2}: s2wr3 <= 2;
	      {1'd0, 8'd3}: s2wr3 <= 3;
	      {1'd0, 8'd4}: s2wr3 <= 4;
	      {1'd0, 8'd5}: s2wr3 <= 5;
	      {1'd0, 8'd6}: s2wr3 <= 6;
	      {1'd0, 8'd7}: s2wr3 <= 7;
	      {1'd0, 8'd8}: s2wr3 <= 8;
	      {1'd0, 8'd9}: s2wr3 <= 9;
	      {1'd0, 8'd10}: s2wr3 <= 10;
	      {1'd0, 8'd11}: s2wr3 <= 11;
	      {1'd0, 8'd12}: s2wr3 <= 12;
	      {1'd0, 8'd13}: s2wr3 <= 13;
	      {1'd0, 8'd14}: s2wr3 <= 14;
	      {1'd0, 8'd15}: s2wr3 <= 15;
	      {1'd0, 8'd16}: s2wr3 <= 16;
	      {1'd0, 8'd17}: s2wr3 <= 17;
	      {1'd0, 8'd18}: s2wr3 <= 18;
	      {1'd0, 8'd19}: s2wr3 <= 19;
	      {1'd0, 8'd20}: s2wr3 <= 20;
	      {1'd0, 8'd21}: s2wr3 <= 21;
	      {1'd0, 8'd22}: s2wr3 <= 22;
	      {1'd0, 8'd23}: s2wr3 <= 23;
	      {1'd0, 8'd24}: s2wr3 <= 24;
	      {1'd0, 8'd25}: s2wr3 <= 25;
	      {1'd0, 8'd26}: s2wr3 <= 26;
	      {1'd0, 8'd27}: s2wr3 <= 27;
	      {1'd0, 8'd28}: s2wr3 <= 28;
	      {1'd0, 8'd29}: s2wr3 <= 29;
	      {1'd0, 8'd30}: s2wr3 <= 30;
	      {1'd0, 8'd31}: s2wr3 <= 31;
	      {1'd0, 8'd32}: s2wr3 <= 32;
	      {1'd0, 8'd33}: s2wr3 <= 33;
	      {1'd0, 8'd34}: s2wr3 <= 34;
	      {1'd0, 8'd35}: s2wr3 <= 35;
	      {1'd0, 8'd36}: s2wr3 <= 36;
	      {1'd0, 8'd37}: s2wr3 <= 37;
	      {1'd0, 8'd38}: s2wr3 <= 38;
	      {1'd0, 8'd39}: s2wr3 <= 39;
	      {1'd0, 8'd40}: s2wr3 <= 40;
	      {1'd0, 8'd41}: s2wr3 <= 41;
	      {1'd0, 8'd42}: s2wr3 <= 42;
	      {1'd0, 8'd43}: s2wr3 <= 43;
	      {1'd0, 8'd44}: s2wr3 <= 44;
	      {1'd0, 8'd45}: s2wr3 <= 45;
	      {1'd0, 8'd46}: s2wr3 <= 46;
	      {1'd0, 8'd47}: s2wr3 <= 47;
	      {1'd0, 8'd48}: s2wr3 <= 48;
	      {1'd0, 8'd49}: s2wr3 <= 49;
	      {1'd0, 8'd50}: s2wr3 <= 50;
	      {1'd0, 8'd51}: s2wr3 <= 51;
	      {1'd0, 8'd52}: s2wr3 <= 52;
	      {1'd0, 8'd53}: s2wr3 <= 53;
	      {1'd0, 8'd54}: s2wr3 <= 54;
	      {1'd0, 8'd55}: s2wr3 <= 55;
	      {1'd0, 8'd56}: s2wr3 <= 56;
	      {1'd0, 8'd57}: s2wr3 <= 57;
	      {1'd0, 8'd58}: s2wr3 <= 58;
	      {1'd0, 8'd59}: s2wr3 <= 59;
	      {1'd0, 8'd60}: s2wr3 <= 60;
	      {1'd0, 8'd61}: s2wr3 <= 61;
	      {1'd0, 8'd62}: s2wr3 <= 62;
	      {1'd0, 8'd63}: s2wr3 <= 63;
	      {1'd0, 8'd64}: s2wr3 <= 64;
	      {1'd0, 8'd65}: s2wr3 <= 65;
	      {1'd0, 8'd66}: s2wr3 <= 66;
	      {1'd0, 8'd67}: s2wr3 <= 67;
	      {1'd0, 8'd68}: s2wr3 <= 68;
	      {1'd0, 8'd69}: s2wr3 <= 69;
	      {1'd0, 8'd70}: s2wr3 <= 70;
	      {1'd0, 8'd71}: s2wr3 <= 71;
	      {1'd0, 8'd72}: s2wr3 <= 72;
	      {1'd0, 8'd73}: s2wr3 <= 73;
	      {1'd0, 8'd74}: s2wr3 <= 74;
	      {1'd0, 8'd75}: s2wr3 <= 75;
	      {1'd0, 8'd76}: s2wr3 <= 76;
	      {1'd0, 8'd77}: s2wr3 <= 77;
	      {1'd0, 8'd78}: s2wr3 <= 78;
	      {1'd0, 8'd79}: s2wr3 <= 79;
	      {1'd0, 8'd80}: s2wr3 <= 80;
	      {1'd0, 8'd81}: s2wr3 <= 81;
	      {1'd0, 8'd82}: s2wr3 <= 82;
	      {1'd0, 8'd83}: s2wr3 <= 83;
	      {1'd0, 8'd84}: s2wr3 <= 84;
	      {1'd0, 8'd85}: s2wr3 <= 85;
	      {1'd0, 8'd86}: s2wr3 <= 86;
	      {1'd0, 8'd87}: s2wr3 <= 87;
	      {1'd0, 8'd88}: s2wr3 <= 88;
	      {1'd0, 8'd89}: s2wr3 <= 89;
	      {1'd0, 8'd90}: s2wr3 <= 90;
	      {1'd0, 8'd91}: s2wr3 <= 91;
	      {1'd0, 8'd92}: s2wr3 <= 92;
	      {1'd0, 8'd93}: s2wr3 <= 93;
	      {1'd0, 8'd94}: s2wr3 <= 94;
	      {1'd0, 8'd95}: s2wr3 <= 95;
	      {1'd0, 8'd96}: s2wr3 <= 96;
	      {1'd0, 8'd97}: s2wr3 <= 97;
	      {1'd0, 8'd98}: s2wr3 <= 98;
	      {1'd0, 8'd99}: s2wr3 <= 99;
	      {1'd0, 8'd100}: s2wr3 <= 100;
	      {1'd0, 8'd101}: s2wr3 <= 101;
	      {1'd0, 8'd102}: s2wr3 <= 102;
	      {1'd0, 8'd103}: s2wr3 <= 103;
	      {1'd0, 8'd104}: s2wr3 <= 104;
	      {1'd0, 8'd105}: s2wr3 <= 105;
	      {1'd0, 8'd106}: s2wr3 <= 106;
	      {1'd0, 8'd107}: s2wr3 <= 107;
	      {1'd0, 8'd108}: s2wr3 <= 108;
	      {1'd0, 8'd109}: s2wr3 <= 109;
	      {1'd0, 8'd110}: s2wr3 <= 110;
	      {1'd0, 8'd111}: s2wr3 <= 111;
	      {1'd0, 8'd112}: s2wr3 <= 112;
	      {1'd0, 8'd113}: s2wr3 <= 113;
	      {1'd0, 8'd114}: s2wr3 <= 114;
	      {1'd0, 8'd115}: s2wr3 <= 115;
	      {1'd0, 8'd116}: s2wr3 <= 116;
	      {1'd0, 8'd117}: s2wr3 <= 117;
	      {1'd0, 8'd118}: s2wr3 <= 118;
	      {1'd0, 8'd119}: s2wr3 <= 119;
	      {1'd0, 8'd120}: s2wr3 <= 120;
	      {1'd0, 8'd121}: s2wr3 <= 121;
	      {1'd0, 8'd122}: s2wr3 <= 122;
	      {1'd0, 8'd123}: s2wr3 <= 123;
	      {1'd0, 8'd124}: s2wr3 <= 124;
	      {1'd0, 8'd125}: s2wr3 <= 125;
	      {1'd0, 8'd126}: s2wr3 <= 126;
	      {1'd0, 8'd127}: s2wr3 <= 127;
	      {1'd0, 8'd128}: s2wr3 <= 128;
	      {1'd0, 8'd129}: s2wr3 <= 129;
	      {1'd0, 8'd130}: s2wr3 <= 130;
	      {1'd0, 8'd131}: s2wr3 <= 131;
	      {1'd0, 8'd132}: s2wr3 <= 132;
	      {1'd0, 8'd133}: s2wr3 <= 133;
	      {1'd0, 8'd134}: s2wr3 <= 134;
	      {1'd0, 8'd135}: s2wr3 <= 135;
	      {1'd0, 8'd136}: s2wr3 <= 136;
	      {1'd0, 8'd137}: s2wr3 <= 137;
	      {1'd0, 8'd138}: s2wr3 <= 138;
	      {1'd0, 8'd139}: s2wr3 <= 139;
	      {1'd0, 8'd140}: s2wr3 <= 140;
	      {1'd0, 8'd141}: s2wr3 <= 141;
	      {1'd0, 8'd142}: s2wr3 <= 142;
	      {1'd0, 8'd143}: s2wr3 <= 143;
	      {1'd0, 8'd144}: s2wr3 <= 144;
	      {1'd0, 8'd145}: s2wr3 <= 145;
	      {1'd0, 8'd146}: s2wr3 <= 146;
	      {1'd0, 8'd147}: s2wr3 <= 147;
	      {1'd0, 8'd148}: s2wr3 <= 148;
	      {1'd0, 8'd149}: s2wr3 <= 149;
	      {1'd0, 8'd150}: s2wr3 <= 150;
	      {1'd0, 8'd151}: s2wr3 <= 151;
	      {1'd0, 8'd152}: s2wr3 <= 152;
	      {1'd0, 8'd153}: s2wr3 <= 153;
	      {1'd0, 8'd154}: s2wr3 <= 154;
	      {1'd0, 8'd155}: s2wr3 <= 155;
	      {1'd0, 8'd156}: s2wr3 <= 156;
	      {1'd0, 8'd157}: s2wr3 <= 157;
	      {1'd0, 8'd158}: s2wr3 <= 158;
	      {1'd0, 8'd159}: s2wr3 <= 159;
	      {1'd0, 8'd160}: s2wr3 <= 160;
	      {1'd0, 8'd161}: s2wr3 <= 161;
	      {1'd0, 8'd162}: s2wr3 <= 162;
	      {1'd0, 8'd163}: s2wr3 <= 163;
	      {1'd0, 8'd164}: s2wr3 <= 164;
	      {1'd0, 8'd165}: s2wr3 <= 165;
	      {1'd0, 8'd166}: s2wr3 <= 166;
	      {1'd0, 8'd167}: s2wr3 <= 167;
	      {1'd0, 8'd168}: s2wr3 <= 168;
	      {1'd0, 8'd169}: s2wr3 <= 169;
	      {1'd0, 8'd170}: s2wr3 <= 170;
	      {1'd0, 8'd171}: s2wr3 <= 171;
	      {1'd0, 8'd172}: s2wr3 <= 172;
	      {1'd0, 8'd173}: s2wr3 <= 173;
	      {1'd0, 8'd174}: s2wr3 <= 174;
	      {1'd0, 8'd175}: s2wr3 <= 175;
	      {1'd0, 8'd176}: s2wr3 <= 176;
	      {1'd0, 8'd177}: s2wr3 <= 177;
	      {1'd0, 8'd178}: s2wr3 <= 178;
	      {1'd0, 8'd179}: s2wr3 <= 179;
	      {1'd0, 8'd180}: s2wr3 <= 180;
	      {1'd0, 8'd181}: s2wr3 <= 181;
	      {1'd0, 8'd182}: s2wr3 <= 182;
	      {1'd0, 8'd183}: s2wr3 <= 183;
	      {1'd0, 8'd184}: s2wr3 <= 184;
	      {1'd0, 8'd185}: s2wr3 <= 185;
	      {1'd0, 8'd186}: s2wr3 <= 186;
	      {1'd0, 8'd187}: s2wr3 <= 187;
	      {1'd0, 8'd188}: s2wr3 <= 188;
	      {1'd0, 8'd189}: s2wr3 <= 189;
	      {1'd0, 8'd190}: s2wr3 <= 190;
	      {1'd0, 8'd191}: s2wr3 <= 191;
	      {1'd0, 8'd192}: s2wr3 <= 192;
	      {1'd0, 8'd193}: s2wr3 <= 193;
	      {1'd0, 8'd194}: s2wr3 <= 194;
	      {1'd0, 8'd195}: s2wr3 <= 195;
	      {1'd0, 8'd196}: s2wr3 <= 196;
	      {1'd0, 8'd197}: s2wr3 <= 197;
	      {1'd0, 8'd198}: s2wr3 <= 198;
	      {1'd0, 8'd199}: s2wr3 <= 199;
	      {1'd0, 8'd200}: s2wr3 <= 200;
	      {1'd0, 8'd201}: s2wr3 <= 201;
	      {1'd0, 8'd202}: s2wr3 <= 202;
	      {1'd0, 8'd203}: s2wr3 <= 203;
	      {1'd0, 8'd204}: s2wr3 <= 204;
	      {1'd0, 8'd205}: s2wr3 <= 205;
	      {1'd0, 8'd206}: s2wr3 <= 206;
	      {1'd0, 8'd207}: s2wr3 <= 207;
	      {1'd0, 8'd208}: s2wr3 <= 208;
	      {1'd0, 8'd209}: s2wr3 <= 209;
	      {1'd0, 8'd210}: s2wr3 <= 210;
	      {1'd0, 8'd211}: s2wr3 <= 211;
	      {1'd0, 8'd212}: s2wr3 <= 212;
	      {1'd0, 8'd213}: s2wr3 <= 213;
	      {1'd0, 8'd214}: s2wr3 <= 214;
	      {1'd0, 8'd215}: s2wr3 <= 215;
	      {1'd0, 8'd216}: s2wr3 <= 216;
	      {1'd0, 8'd217}: s2wr3 <= 217;
	      {1'd0, 8'd218}: s2wr3 <= 218;
	      {1'd0, 8'd219}: s2wr3 <= 219;
	      {1'd0, 8'd220}: s2wr3 <= 220;
	      {1'd0, 8'd221}: s2wr3 <= 221;
	      {1'd0, 8'd222}: s2wr3 <= 222;
	      {1'd0, 8'd223}: s2wr3 <= 223;
	      {1'd0, 8'd224}: s2wr3 <= 224;
	      {1'd0, 8'd225}: s2wr3 <= 225;
	      {1'd0, 8'd226}: s2wr3 <= 226;
	      {1'd0, 8'd227}: s2wr3 <= 227;
	      {1'd0, 8'd228}: s2wr3 <= 228;
	      {1'd0, 8'd229}: s2wr3 <= 229;
	      {1'd0, 8'd230}: s2wr3 <= 230;
	      {1'd0, 8'd231}: s2wr3 <= 231;
	      {1'd0, 8'd232}: s2wr3 <= 232;
	      {1'd0, 8'd233}: s2wr3 <= 233;
	      {1'd0, 8'd234}: s2wr3 <= 234;
	      {1'd0, 8'd235}: s2wr3 <= 235;
	      {1'd0, 8'd236}: s2wr3 <= 236;
	      {1'd0, 8'd237}: s2wr3 <= 237;
	      {1'd0, 8'd238}: s2wr3 <= 238;
	      {1'd0, 8'd239}: s2wr3 <= 239;
	      {1'd0, 8'd240}: s2wr3 <= 240;
	      {1'd0, 8'd241}: s2wr3 <= 241;
	      {1'd0, 8'd242}: s2wr3 <= 242;
	      {1'd0, 8'd243}: s2wr3 <= 243;
	      {1'd0, 8'd244}: s2wr3 <= 244;
	      {1'd0, 8'd245}: s2wr3 <= 245;
	      {1'd0, 8'd246}: s2wr3 <= 246;
	      {1'd0, 8'd247}: s2wr3 <= 247;
	      {1'd0, 8'd248}: s2wr3 <= 248;
	      {1'd0, 8'd249}: s2wr3 <= 249;
	      {1'd0, 8'd250}: s2wr3 <= 250;
	      {1'd0, 8'd251}: s2wr3 <= 251;
	      {1'd0, 8'd252}: s2wr3 <= 252;
	      {1'd0, 8'd253}: s2wr3 <= 253;
	      {1'd0, 8'd254}: s2wr3 <= 254;
	      {1'd0, 8'd255}: s2wr3 <= 255;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr3 is "distributed"
endmodule



						module multfix(clk, rst, a, b, q_sc, q_unsc);
						   parameter WIDTH=35, CYCLES=6;

						   input signed [WIDTH-1:0]    a,b;
						   output [WIDTH-1:0]          q_sc;
						   output [WIDTH-1:0]              q_unsc;

						   input                       clk, rst;
						   
						   reg signed [2*WIDTH-1:0]    q[CYCLES-1:0];
						   wire signed [2*WIDTH-1:0]   res;   
						   integer                     i;

						   assign                      res = q[CYCLES-1];   
						   
						   assign                      q_unsc = res[WIDTH-1:0];
						   assign                      q_sc = {res[2*WIDTH-1], res[2*WIDTH-4:WIDTH-2]};
						      
						   always @(posedge clk) begin
						      q[0] <= a * b;
						      for (i = 1; i < CYCLES; i=i+1) begin
						         q[i] <= q[i-1];
						      end
						   end
						                  
						endmodule 
module addfxp(a, b, q, clk);

   parameter width = 16, cycles=1;
   
   input signed [width-1:0]  a, b;
   input                     clk;   
   output signed [width-1:0] q;
   reg signed [width-1:0]    res[cycles-1:0];

   assign                    q = res[cycles-1];
   
   integer                   i;   
   
   always @(posedge clk) begin
     res[0] <= a+b;
      for (i=1; i < cycles; i = i+1)
        res[i] <= res[i-1];
      
   end
   
endmodule

module subfxp(a, b, q, clk);

   parameter width = 16, cycles=1;
   
   input signed [width-1:0]  a, b;
   input                     clk;   
   output signed [width-1:0] q;
   reg signed [width-1:0]    res[cycles-1:0];

   assign                    q = res[cycles-1];
   
   integer                   i;   
   
   always @(posedge clk) begin
     res[0] <= a-b;
      for (i=1; i < cycles; i = i+1)
        res[i] <= res[i-1];
      
   end
  
endmodule