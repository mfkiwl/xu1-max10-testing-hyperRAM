# +----------------------------------------------------------------------------+
# | License Agreement                                                          |
# |                                                                            |
# | Copyright (c) 1991-2013 Altera Corporation, San Jose, California, USA.     |
# | All rights reserved.                                                       |
# |                                                                            |
# | Any megafunction design, and related net list (encrypted or decrypted),    |
# |  support information, device programming or simulation file, and any other |
# |  associated documentation or information provided by Altera or a partner   |
# |  under Altera's Megafunction Partnership Program may be used only to       |
# |  program PLD devices (but not masked PLD devices) from Altera.  Any other  |
# |  use of such megafunction design, net list, support information, device    |
# |  programming or simulation file, or any other related documentation or     |
# |  information is prohibited for any other purpose, including, but not       |
# |  limited to modification, reverse engineering, de-compiling, or use with   |
# |  any other silicon devices, unless such use is explicitly licensed under   |
# |  a separate agreement with Altera or a megafunction partner.  Title to     |
# |  the intellectual property, including patents, copyrights, trademarks,     |
# |  trade secrets, or maskworks, embodied in any such megafunction design,    |
# |  net list, support information, device programming or simulation file, or  |
# |  any other related documentation or information provided by Altera or a    |
# |  megafunction partner, remains with Altera, the megafunction partner, or   |
# |  their respective licensors.  No other licenses, including any licenses    |
# |  needed under any third party's intellectual property, are provided herein.|
# |  Copying or modifying any file, or portion thereof, to which this notice   |
# |  is attached violates this copyright.                                      |
# |                                                                            |
# | THIS FILE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR    |
# | IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,   |
# | FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL    |
# | THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER |
# | LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING    |
# | FROM, OUT OF OR IN CONNECTION WITH THIS FILE OR THE USE OR OTHER DEALINGS  |
# | IN THIS FILE.                                                              |
# |                                                                            |
# | This agreement shall be governed in all respects by the laws of the State  |
# |  of California and by the laws of the United States of America.            |
# |                                                                            |
# +----------------------------------------------------------------------------+

# TCL File Generated by Altera University Program
# DO NOT MODIFY

# +-----------------------------------
# | module altera_up_avalon_video_vga_controller
# | 
set_module_property DESCRIPTION "VGA controller for DE-series Boards"
set_module_property NAME altera_up_avalon_video_vga_controller
set_module_property VERSION 13.0
set_module_property GROUP "University Program/Audio & Video/Video"
set_module_property AUTHOR "Altera University Program"
set_module_property DISPLAY_NAME "VGA Controller"
set_module_property DATASHEET_URL "../doc/Video.pdf"
#set_module_property TOP_LEVEL_HDL_FILE altera_up_avalon_video_vga_controller.v
#set_module_property TOP_LEVEL_HDL_MODULE altera_up_avalon_video_vga_controller
set_module_property INSTANTIATE_IN_SYSTEM_MODULE true
set_module_property EDITABLE false
set_module_property ANALYZE_HDL false
set_module_property VALIDATION_CALLBACK validate
set_module_property ELABORATION_CALLBACK elaborate
set_module_property GENERATION_CALLBACK generate
# | 
# +-----------------------------------

# +-----------------------------------
# | files
# | 
#add_file altera_up_avalon_video_vga_controller.v {SYNTHESIS SIMULATION}
add_file "hdl/altera_up_avalon_video_vga_timing.v" {SYNTHESIS SIMULATION}
# | 
# +-----------------------------------

# +-----------------------------------
# | parameters
# | 
add_parameter board string DE2
set_parameter_property board DISPLAY_NAME "DE-Series Board"
set_parameter_property board GROUP "Device and Mode"
set_parameter_property board UNITS None
set_parameter_property board AFFECTS_ELABORATION true
set_parameter_property board AFFECTS_GENERATION true
set_parameter_property board ALLOWED_RANGES {DE0 DE1 DE2 "DE2-70" "DE2-115"}
set_parameter_property board VISIBLE true
set_parameter_property board ENABLED true

add_parameter device string "VGA Connector"
set_parameter_property device DISPLAY_NAME "Video Out Device"
set_parameter_property device GROUP "Device and Mode"
set_parameter_property device UNITS None
set_parameter_property device AFFECTS_ELABORATION true
set_parameter_property device AFFECTS_GENERATION true
#set_parameter_property device ALLOWED_RANGES {"VGA Connector" "LCD Screen (TRDB_LCM)" "LCD with touchscreen (TRDB_LTM)"}
set_parameter_property device ALLOWED_RANGES {"VGA Connector" "LCD with touchscreen (TRDB_LTM)" "8\" LCD on TPad/VEEK" "7\" LCD on VEEK-MT"}
set_parameter_property device VISIBLE true
set_parameter_property device ENABLED true

add_parameter underflow_flag boolean false
set_parameter_property underflow_flag DISPLAY_NAME "Include Underflow Flag"
set_parameter_property underflow_flag GROUP "Device and Mode"
set_parameter_property underflow_flag UNITS None
set_parameter_property underflow_flag AFFECTS_ELABORATION true
set_parameter_property underflow_flag AFFECTS_GENERATION true
set_parameter_property underflow_flag VISIBLE false
set_parameter_property underflow_flag ENABLED true
# | 
# +-----------------------------------

# +-----------------------------------
# | connection point clock_reset
# | 
add_interface clock_reset clock end
set_interface_property clock_reset ptfSchematicName ""

add_interface_port clock_reset clk clk Input 1
add_interface_port clock_reset reset reset Input 1
# | 
# +-----------------------------------

# +-----------------------------------
# | connection point avalon_vga_sink
# | 
add_interface avalon_vga_sink avalon_streaming end clock_reset
set_interface_property avalon_vga_sink dataBitsPerSymbol 10
set_interface_property avalon_vga_sink errorDescriptor ""
set_interface_property avalon_vga_sink maxChannel 0
set_interface_property avalon_vga_sink readyLatency 0
set_interface_property avalon_vga_sink symbolsPerBeat 3


add_interface_port avalon_vga_sink data data Input 30
add_interface_port avalon_vga_sink startofpacket startofpacket Input 1
add_interface_port avalon_vga_sink endofpacket endofpacket Input 1
#add_interface_port avalon_vga_sink empty empty Input 2
add_interface_port avalon_vga_sink valid valid Input 1
add_interface_port avalon_vga_sink ready ready Output 1
# | 
# +-----------------------------------

# +-----------------------------------
# | connection point external_interface
# | 
add_interface external_interface conduit end 

add_interface_port external_interface VGA_CLK export Output 1
add_interface_port external_interface VGA_HS export Output 1
add_interface_port external_interface VGA_VS export Output 1
# | 
# +-----------------------------------

# +-----------------------------------
# | Validation function
# | 
proc validate {} {
	set board	[ get_parameter_value "board" ]
	set device	[ get_parameter_value "device" ]

	if { $device == "LCD Screen (TRDB_LCM)" } {
		send_message info "Video Output Stream: Format: 320 x 240 with Color: 10 (bits) x 3 (planes) converted to 8 (bits) per color plane"
	} elseif { $device == "LCD with touchscreen (TRDB_LTM)" } {
		send_message info "Video Output Stream: Format: 800 x 480 with Color: 10 (bits) x 3 (planes) converted to 8 (bits) per color plane"
	} elseif { $device == "8\" LCD on TPad/VEEK" } {
		send_message info "Video Output Stream: Format: 800 x 600 with Color: 10 (bits) x 3 (planes) converted to 6 (bits) per color plane"
	} elseif { $device == "7\" LCD on VEEK-MT" } {
		send_message info "Video Output Stream: Format: 800 x 480 with Color: 10 (bits) x 3 (planes) converted to 8 (bits) per color plane"
	} else {
		if { ($board == "DE0") || ($board == "DE1") } {
			send_message info "Video Output Stream: Format: 640 x 480 with Color: 10 (bits) x 3 (planes) converted to 4 (bits) per color plane"
		} else {
			send_message info "Video Output Stream: Format: 640 x 480 with Color: 10 (bits) x 3 (planes)"
		}
	}
}
# | 
# +-----------------------------------

# +-----------------------------------
# | Elaboration function
# | 
proc elaborate {} {
	set board			[ get_parameter_value "board" ]
	set device			[ get_parameter_value "device" ]
	set underflow_flag	[ get_parameter_value "underflow_flag" ]

	if { $device == "LCD Screen (TRDB_LCM)" } {
		add_interface_port external_interface VGA_BLANK export Output 1
		add_interface_port external_interface VGA_SYNC export Output 1
		add_interface_port external_interface VGA_COLOR export Output 10
	} elseif { $device == "LCD with touchscreen (TRDB_LTM)" } {
		add_interface_port external_interface VGA_BLANK export Output 1
		add_interface_port external_interface VGA_SYNC export Output 1
		add_interface_port external_interface VGA_DATA_EN export Output 1
		add_interface_port external_interface VGA_R export Output 8
		add_interface_port external_interface VGA_G export Output 8
		add_interface_port external_interface VGA_B export Output 8
	} elseif { $device == "8\" LCD on TPad/VEEK" } {
#		add_interface_port external_interface VGA_BLANK export Output 1
#		add_interface_port external_interface VGA_SYNC export Output 1
		add_interface_port external_interface VGA_DATA_EN export Output 1
		add_interface_port external_interface VGA_R export Output 6
		add_interface_port external_interface VGA_G export Output 6
		add_interface_port external_interface VGA_B export Output 6
	} elseif { $device == "7\" LCD on VEEK-MT" } {
#		add_interface_port external_interface VGA_BLANK export Output 1
#		add_interface_port external_interface VGA_SYNC export Output 1
		add_interface_port external_interface VGA_DATA_EN export Output 1
		add_interface_port external_interface VGA_R export Output 8
		add_interface_port external_interface VGA_G export Output 8
		add_interface_port external_interface VGA_B export Output 8
	} else {
		if { ($board == "DE0") || ($board == "DE1") } {
			add_interface_port external_interface VGA_R export Output 4
			add_interface_port external_interface VGA_G export Output 4
			add_interface_port external_interface VGA_B export Output 4
		} elseif { $board == "DE2-115" } {
			add_interface_port external_interface VGA_BLANK export Output 1
			add_interface_port external_interface VGA_SYNC export Output 1
			add_interface_port external_interface VGA_R export Output 8
			add_interface_port external_interface VGA_G export Output 8
			add_interface_port external_interface VGA_B export Output 8
		} else {
			add_interface_port external_interface VGA_BLANK export Output 1
			add_interface_port external_interface VGA_SYNC export Output 1
			add_interface_port external_interface VGA_R export Output 10
			add_interface_port external_interface VGA_G export Output 10
			add_interface_port external_interface VGA_B export Output 10
		}
	}

	if { $underflow_flag } {
		add_interface_port external_interface underflow_flag export Output 1
	}	
}
# | 
# +-----------------------------------

# +-----------------------------------
# | Generation function
# | 
proc generate {} {
	send_message info "Starting Generation of VGA Controller"

	# get parameter values
	set board			[ get_parameter_value "board" ]
	set device			[ get_parameter_value "device" ]
	set underflow_flag	[ get_parameter_value "underflow_flag" ]

	set dw "DW:29"
	if { $device == "LCD Screen (TRDB_LCM)" } {
		set colour_bits "CW:7"
#		set dw "DW:29"

		set R_UI "R_UI:29"
		set R_LI "R_LI:22"
		set G_UI "G_UI:19"
		set G_LI "G_LI:12"
		set B_UI "B_UI:9"
		set B_LI "B_LI:2"
	} elseif { $device == "LCD with touchscreen (TRDB_LTM)" } {
		set colour_bits "CW:7"
#		set dw "DW:23"

		set R_UI "R_UI:29"
		set R_LI "R_LI:22"
		set G_UI "G_UI:19"
		set G_LI "G_LI:12"
		set B_UI "B_UI:9"
		set B_LI "B_LI:2"
#		set R_UI "R_UI:23"
#		set R_LI "R_LI:16"
#		set G_UI "G_UI:15"
#		set G_LI "G_LI:8"
#		set B_UI "B_UI:7"
#		set B_LI "B_LI:0"
	} elseif { $device == "8\" LCD on TPad/VEEK" } {
		set colour_bits "CW:5"

		set R_UI "R_UI:29"
		set R_LI "R_LI:24"
		set G_UI "G_UI:19"
		set G_LI "G_LI:14"
		set B_UI "B_UI:9"
		set B_LI "B_LI:4"
	} elseif { $device == "7\" LCD on VEEK-MT" } {
		set colour_bits "CW:7"

		set R_UI "R_UI:29"
		set R_LI "R_LI:22"
		set G_UI "G_UI:19"
		set G_LI "G_LI:12"
		set B_UI "B_UI:9"
		set B_LI "B_LI:2"
	} else {
		if { $board == "DE0" } {
			set colour_bits "CW:3"
#			set dw "DW:11"
			
			set R_UI "R_UI:29"
			set R_LI "R_LI:26"
			set G_UI "G_UI:19"
			set G_LI "G_LI:16"
			set B_UI "B_UI:9"
			set B_LI "B_LI:6"
#			set R_UI "R_UI:11"
#			set R_LI "R_LI:8"
#			set G_UI "G_UI:7"
#			set G_LI "G_LI:4"
#			set B_UI "B_UI:3"
#			set B_LI "B_LI:0"
		} elseif { $board == "DE1" } {
			set colour_bits "CW:3"
#			set dw "DW:11"
			
			set R_UI "R_UI:29"
			set R_LI "R_LI:26"
			set G_UI "G_UI:19"
			set G_LI "G_LI:16"
			set B_UI "B_UI:9"
			set B_LI "B_LI:6"
#			set R_UI "R_UI:11"
#			set R_LI "R_LI:8"
#			set G_UI "G_UI:7"
#			set G_LI "G_LI:4"
#			set B_UI "B_UI:3"
#			set B_LI "B_LI:0"
		} elseif { $board == "DE2-115" } {
			set colour_bits "CW:7"

			set R_UI "R_UI:29"
			set R_LI "R_LI:22"
			set G_UI "G_UI:19"
			set G_LI "G_LI:12"
			set B_UI "B_UI:9"
			set B_LI "B_LI:2"
		} else {
			set colour_bits "CW:9"
#			set dw "DW:29"

			set R_UI "R_UI:29"
			set R_LI "R_LI:20"
			set G_UI "G_UI:19"
			set G_LI "G_LI:10"
			set B_UI "B_UI:9"
			set B_LI "B_LI:0"
		}
	}

	# set section values
	set use_de0						[ format "USE_DE0:%d" [ string match "DE0" $board ] ]
	set use_de1						[ format "USE_DE1:%d" [ string match "DE1" $board ] ]
	set use_de2_115				[ format "USE_DE2_115:%d" [ string match "DE2-115" $board ] ]

	set use_lcd_screen			[ format "USE_TRDB_LCM:%d" [ string match "LCD Screen (TRDB_LCM)" $device ] ]
	set use_ltm_screen			[ format "USE_TRDB_LTM:%d" [ string match "LCD with touchscreen (TRDB_LTM)" $device ] ]
	set use_tpad_screen			[ format "USE_TPAD:%d" [ string match "8\" LCD on TPad/VEEK" $device ] ]
	set use_veek_mt_screen		[ format "USE_VEEK_MT:%d" [ string match "7\" LCD on VEEK-MT" $device ] ]

	set use_underflow_flag		[ format "USE_UNDERFLOW_FLAG:%d" [ string match "true" $underflow_flag ] ]

	# set arguments
	set params "$colour_bits;$dw;$R_UI;$R_LI;$G_UI;$G_LI;$B_UI;$B_LI"
	set sections "$use_de0;$use_de1;$use_de2_115;$use_lcd_screen;$use_ltm_screen;$use_tpad_screen;$use_veek_mt_screen;$use_underflow_flag"

	# get generation settings
	set dest_language	[ get_generation_property HDL_LANGUAGE ]
	set dest_dir 		[ get_generation_property OUTPUT_DIRECTORY ]
	set dest_name		[ get_generation_property OUTPUT_NAME ]
	
	set file_ending "v"
	if { $dest_language == "VHDL" || $dest_language == "vhdl" } {
		set file_ending "vhd"
	}

	add_file "$dest_dir$dest_name.$file_ending" {SYNTHESIS SIMULATION}
	#add_file "$dest_dir/altera_up_avalon_video_vga_timing.$file_ending" SYNTHESIS

	# Generate HDL
	source "up_ip_generator.tcl"
	alt_up_generate "$dest_dir$dest_name.$file_ending" "hdl/altera_up_avalon_video_vga_controller.$file_ending" "altera_up_avalon_video_vga_controller" $dest_name $params $sections
	#file copy -force "hdl/altera_up_avalon_video_vga_timing.$file_ending" $dest_dir

	# generate top level template
	#alt_up_create_instantiation_template "$dest_dir$dest_name.inst.v" $dest_name "external_interface"
}
# | 
# +-----------------------------------

