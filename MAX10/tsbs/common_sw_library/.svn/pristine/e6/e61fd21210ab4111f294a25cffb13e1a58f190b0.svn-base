<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>IOF Library: cerrf.hpp File Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.4.7 -->
<div class="tabs">
  <ul>
    <li><a href="main.html"><span>Main&nbsp;Page</span></a></li>
    <li><a href="annotated.html"><span>Classes</span></a></li>
    <li id="current"><a href="files.html"><span>Files</span></a></li>
    <li><a href="pages.html"><span>Related&nbsp;Pages</span></a></li>
  </ul></div>
<h1>cerrf.hpp File Reference</h1><hr><a name="_details"></a><h2>Detailed Description</h2>
Provides formatted output to the std::cerr stream, using functions. 
<p>
<div class="fragment"><pre class="fragment">    **  Copyright (c) 2006, Oliver Schoenborn
    **  Distributed under the BSD Software License (see accompanying 
    **  LICENSE_IOF_1_0.txt in root folder of library for complete 
    **  terms and conditions). 
    </pre></div> 
<p>
<code>#include &quot;<a class="el" href="prints_8hpp-source.html">iof/prints.hpp</a>&quot;</code><br>

<p>
Include dependency graph for cerrf.hpp:<p><center><img src="cerrf_8hpp__incl.png" border="0" usemap="#cerrf.hpp_map" alt=""></center>
<map name="cerrf.hpp_map">
<area href="prints_8hpp.html" shape="rect" coords="130,33,229,59" alt="">
<area href="fmtr_8hpp.html" shape="rect" coords="278,33,366,59" alt="">
</map>

<p>
This graph shows which files directly or indirectly include this file:<p><center><img src="cerrf_8hpp__dep__incl.png" border="0" usemap="#cerrf.hppdep_map" alt=""></center>
<map name="cerrf.hppdep_map">
<area href="output_8hpp.html" shape="rect" coords="130,8,216,34" alt="">
<area href="io_8hpp.html" shape="rect" coords="264,8,322,34" alt="">
</map>

<p>
<a href="cerrf_8hpp-source.html">Go to the source code of this file.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Namespaces</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">namespace &nbsp;</td><td class="memItemRight" valign="bottom"><b>iof</b></td></tr>

<tr><td colspan="2"><br><h2>Functions</h2></td></tr>
<tr><td class="memTemplParams" nowrap colspan="2"><a class="anchor" name="419d352fb8f2b840c5aefaf7bd13a2b2"></a><!-- doxytag: member="cerrf.hpp::cerrf" ref="419d352fb8f2b840c5aefaf7bd13a2b2" args="(const TT &amp;msg)" -->
template&lt;typename TT&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceiof.html#419d352fb8f2b840c5aefaf7bd13a2b2">iof::cerrf</a> (const TT &amp;msg)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Output <em>msg</em> to stderr; just calls iof::prints(). <br></td></tr>
<tr><td class="memTemplParams" nowrap colspan="2"><a class="anchor" name="ef266eb1f32aae8820f5382221af14f0"></a><!-- doxytag: member="cerrf.hpp::cerrf" ref="ef266eb1f32aae8820f5382221af14f0" args="(const char *fmt, const T1 &amp;obj)" -->
template&lt;typename T1&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceiof.html#ef266eb1f32aae8820f5382221af14f0">iof::cerrf</a> (const char *fmt, const T1 &amp;obj)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">parameter; just calls iof::prints() <br></td></tr>
<tr><td class="memTemplParams" nowrap colspan="2"><a class="anchor" name="32bf1e3fc207b71e7f0a8ee4e0ca70a2"></a><!-- doxytag: member="cerrf.hpp::cerrf" ref="32bf1e3fc207b71e7f0a8ee4e0ca70a2" args="(const char *fmt, const T1 &amp;obj1, const T2 &amp;obj2)" -->
template&lt;typename T1, typename T2&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memTemplItemRight" valign="bottom"><b>iof::cerrf</b> (const char *fmt, const T1 &amp;obj1, const T2 &amp;obj2)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2"><a class="anchor" name="bd4ababe0226eb6dc73054154ca7e884"></a><!-- doxytag: member="cerrf.hpp::cerrf" ref="bd4ababe0226eb6dc73054154ca7e884" args="(const char *fmt, const T1 &amp;obj1, const T2 &amp;obj2, const T3 &amp;obj3)" -->
template&lt;typename T1, typename T2, typename T3&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memTemplItemRight" valign="bottom"><b>iof::cerrf</b> (const char *fmt, const T1 &amp;obj1, const T2 &amp;obj2, const T3 &amp;obj3)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2"><a class="anchor" name="d54b0bb500a7553e8f290a598fb507e4"></a><!-- doxytag: member="cerrf.hpp::cerrf" ref="d54b0bb500a7553e8f290a598fb507e4" args="(const char *fmt, const T1 &amp;obj1, const T2 &amp;obj2, const T3 &amp;obj3, const T4 &amp;obj4)" -->
template&lt;typename T1, typename T2, typename T3, typename T4&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memTemplItemRight" valign="bottom"><b>iof::cerrf</b> (const char *fmt, const T1 &amp;obj1, const T2 &amp;obj2, const T3 &amp;obj3, const T4 &amp;obj4)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2"><a class="anchor" name="6e43c836587ee473de1d093291a51aad"></a><!-- doxytag: member="cerrf.hpp::cerrf" ref="6e43c836587ee473de1d093291a51aad" args="(const char *fmt, const T1 &amp;obj1, const T2 &amp;obj2, const T3 &amp;obj3, const T4 &amp;obj4, const T5 &amp;obj5)" -->
template&lt;typename T1, typename T2, typename T3, typename T4, typename T5&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memTemplItemRight" valign="bottom"><b>iof::cerrf</b> (const char *fmt, const T1 &amp;obj1, const T2 &amp;obj2, const T3 &amp;obj3, const T4 &amp;obj4, const T5 &amp;obj5)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2"><a class="anchor" name="bf499d4883379af72ff6ed477bf451df"></a><!-- doxytag: member="cerrf.hpp::cerrf" ref="bf499d4883379af72ff6ed477bf451df" args="(const char *fmt, const T1 &amp;obj1, const T2 &amp;obj2, const T3 &amp;obj3, const T4 &amp;obj4, const T5 &amp;obj5, const T6 &amp;obj6)" -->
template&lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memTemplItemRight" valign="bottom"><b>iof::cerrf</b> (const char *fmt, const T1 &amp;obj1, const T2 &amp;obj2, const T3 &amp;obj3, const T4 &amp;obj4, const T5 &amp;obj5, const T6 &amp;obj6)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2"><a class="anchor" name="ca7a9a48bd4ead316bfefc14babdfcf0"></a><!-- doxytag: member="cerrf.hpp::cerrf" ref="ca7a9a48bd4ead316bfefc14babdfcf0" args="(const char *fmt, const T1 &amp;obj1, const T2 &amp;obj2, const T3 &amp;obj3, const T4 &amp;obj4, const T5 &amp;obj5, const T6 &amp;obj6, const T7 &amp;obj7)" -->
template&lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memTemplItemRight" valign="bottom"><b>iof::cerrf</b> (const char *fmt, const T1 &amp;obj1, const T2 &amp;obj2, const T3 &amp;obj3, const T4 &amp;obj4, const T5 &amp;obj5, const T6 &amp;obj6, const T7 &amp;obj7)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2"><a class="anchor" name="95c17fb79013ebff2c8769956b2d2696"></a><!-- doxytag: member="cerrf.hpp::cerrf" ref="95c17fb79013ebff2c8769956b2d2696" args="(const char *fmt, const T1 &amp;obj1, const T2 &amp;obj2, const T3 &amp;obj3, const T4 &amp;obj4, const T5 &amp;obj5, const T6 &amp;obj6, const T7 &amp;obj7, const T8 &amp;obj8)" -->
template&lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memTemplItemRight" valign="bottom"><b>iof::cerrf</b> (const char *fmt, const T1 &amp;obj1, const T2 &amp;obj2, const T3 &amp;obj3, const T4 &amp;obj4, const T5 &amp;obj5, const T6 &amp;obj6, const T7 &amp;obj7, const T8 &amp;obj8)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2"><a class="anchor" name="9af6827b7e8b498c29e5f2c5b7d392d5"></a><!-- doxytag: member="cerrf.hpp::cerrf" ref="9af6827b7e8b498c29e5f2c5b7d392d5" args="(const char *fmt, const T1 &amp;obj1, const T2 &amp;obj2, const T3 &amp;obj3, const T4 &amp;obj4, const T5 &amp;obj5, const T6 &amp;obj6, const T7 &amp;obj7, const T8 &amp;obj8, const T9 &amp;obj9)" -->
template&lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memTemplItemRight" valign="bottom"><b>iof::cerrf</b> (const char *fmt, const T1 &amp;obj1, const T2 &amp;obj2, const T3 &amp;obj3, const T4 &amp;obj4, const T5 &amp;obj5, const T6 &amp;obj6, const T7 &amp;obj7, const T8 &amp;obj8, const T9 &amp;obj9)</td></tr>

<tr><td class="memTemplParams" nowrap colspan="2"><a class="anchor" name="db98d11d7841dabc75d6ea8aee02007a"></a><!-- doxytag: member="cerrf.hpp::cerrf" ref="db98d11d7841dabc75d6ea8aee02007a" args="(const char *fmt, const T1 &amp;obj1, const T2 &amp;obj2, const T3 &amp;obj3, const T4 &amp;obj4, const T5 &amp;obj5, const T6 &amp;obj6, const T7 &amp;obj7, const T8 &amp;obj8, const T9 &amp;obj9, const T10 &amp;obj10)" -->
template&lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10&gt; </td></tr>
<tr><td class="memTemplItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memTemplItemRight" valign="bottom"><b>iof::cerrf</b> (const char *fmt, const T1 &amp;obj1, const T2 &amp;obj2, const T3 &amp;obj3, const T4 &amp;obj4, const T5 &amp;obj5, const T6 &amp;obj6, const T7 &amp;obj7, const T8 &amp;obj8, const T9 &amp;obj9, const T10 &amp;obj10)</td></tr>

</table>
<hr size="1"><address style="align: right;"><small>Generated on Sun Oct 15 23:55:35 2006 for IOF Library by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.4.7 </small></address>
</body>
</html>
