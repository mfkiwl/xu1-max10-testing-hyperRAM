/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 1.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("debounced_level")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("debounced_tick")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("input_signal")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("reset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("q_next")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("q_next[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_next";
}

SIGNAL("q_next[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_next";
}

SIGNAL("q_next[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_next";
}

SIGNAL("q_next[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_next";
}

SIGNAL("q_next[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_next";
}

SIGNAL("q_reg")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("q_reg[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_reg";
}

SIGNAL("q_reg[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_reg";
}

SIGNAL("q_reg[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_reg";
}

SIGNAL("q_reg[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_reg";
}

SIGNAL("q_reg[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q_reg";
}

SIGNAL("state_next")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("state_next[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_next";
}

SIGNAL("state_next[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_next";
}

SIGNAL("state_reg")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("state_reg[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_reg";
}

SIGNAL("state_reg[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state_reg";
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1000;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
	}
}

TRANSITION_LIST("debounced_level")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 38.5;
		LEVEL 1 FOR 396.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 533.5;
	}
}

TRANSITION_LIST("debounced_tick")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 37.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 427.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 533.5;
	}
}

TRANSITION_LIST("input_signal")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 76.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 208.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 96.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 456.0;
	}
}

TRANSITION_LIST("reset")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("q_next[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 336.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 470.5;
	}
}

TRANSITION_LIST("q_next[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 52.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 88.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 216.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
		}
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 72.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 462.5;
	}
}

TRANSITION_LIST("q_next[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.5;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 48.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 84.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 212.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 68.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 458.5;
	}
}

TRANSITION_LIST("q_next[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.5;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 46.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 82.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 210.0;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 66.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 456.5;
	}
}

TRANSITION_LIST("q_next[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.5;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 45.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 81.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 209.0;
		NODE
		{
			REPEAT = 31;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 65.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 455.5;
	}
}

TRANSITION_LIST("q_reg[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 6.5;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 336.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 469.5;
	}
}

TRANSITION_LIST("q_reg[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 6.5;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 52.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 88.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 216.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
		}
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 72.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 461.5;
	}
}

TRANSITION_LIST("q_reg[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 6.5;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 48.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 84.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 212.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 68.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 457.5;
	}
}

TRANSITION_LIST("q_reg[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 6.5;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 46.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 82.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 210.0;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 66.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 455.5;
	}
}

TRANSITION_LIST("q_reg[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 6.5;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 45.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 81.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 209.0;
		NODE
		{
			REPEAT = 31;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 65.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 454.5;
	}
}

TRANSITION_LIST("state_next[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 76.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 208.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 96.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 454.5;
	}
}

TRANSITION_LIST("state_next[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 31.0;
		LEVEL 0 FOR 45.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 208.0;
		LEVEL 1 FOR 31.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 31.0;
		LEVEL 0 FOR 65.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 454.5;
	}
}

TRANSITION_LIST("state_reg[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 6.5;
		LEVEL 1 FOR 76.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 208.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 96.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 453.5;
	}
}

TRANSITION_LIST("state_reg[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 6.5;
		LEVEL 1 FOR 31.0;
		LEVEL 0 FOR 45.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 208.0;
		LEVEL 1 FOR 31.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 31.0;
		LEVEL 0 FOR 65.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 453.5;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "input_signal";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "reset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "debounced_level";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "debounced_tick";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q_next";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
	CHILDREN = 6, 7, 8, 9, 10;
}

DISPLAY_LINE
{
	CHANNEL = "q_next[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "q_next[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "q_next[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "q_next[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "q_next[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "q_reg";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
	CHILDREN = 12, 13, 14, 15, 16;
}

DISPLAY_LINE
{
	CHANNEL = "q_reg[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "q_reg[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "q_reg[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "q_reg[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "q_reg[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "state_next";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 0;
	CHILDREN = 18, 19;
}

DISPLAY_LINE
{
	CHANNEL = "state_next[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "state_next[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "state_reg";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 0;
	CHILDREN = 21, 22;
}

DISPLAY_LINE
{
	CHANNEL = "state_reg[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "state_reg[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 20;
}

TIME_BAR
{
	TIME = 27800;
	MASTER = TRUE;
}
;
