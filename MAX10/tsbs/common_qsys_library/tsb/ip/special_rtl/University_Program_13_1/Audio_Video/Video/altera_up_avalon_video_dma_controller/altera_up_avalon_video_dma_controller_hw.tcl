# +----------------------------------------------------------------------------+
# | License Agreement                                                          |
# |                                                                            |
# | Copyright (c) 1991-2014 Altera Corporation, San Jose, California, USA.     |
# | All rights reserved.                                                       |
# |                                                                            |
# | Any megafunction design, and related net list (encrypted or decrypted),    |
# |  support information, device programming or simulation file, and any other |
# |  associated documentation or information provided by Altera or a partner   |
# |  under Altera's Megafunction Partnership Program may be used only to       |
# |  program PLD devices (but not masked PLD devices) from Altera.  Any other  |
# |  use of such megafunction design, net list, support information, device    |
# |  programming or simulation file, or any other related documentation or     |
# |  information is prohibited for any other purpose, including, but not       |
# |  limited to modification, reverse engineering, de-compiling, or use with   |
# |  any other silicon devices, unless such use is explicitly licensed under   |
# |  a separate agreement with Altera or a megafunction partner.  Title to     |
# |  the intellectual property, including patents, copyrights, trademarks,     |
# |  trade secrets, or maskworks, embodied in any such megafunction design,    |
# |  net list, support information, device programming or simulation file, or  |
# |  any other related documentation or information provided by Altera or a    |
# |  megafunction partner, remains with Altera, the megafunction partner, or   |
# |  their respective licensors.  No other licenses, including any licenses    |
# |  needed under any third party's intellectual property, are provided herein.|
# |  Copying or modifying any file, or portion thereof, to which this notice   |
# |  is attached violates this copyright.                                      |
# |                                                                            |
# | THIS FILE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR    |
# | IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,   |
# | FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL    |
# | THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER |
# | LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING    |
# | FROM, OUT OF OR IN CONNECTION WITH THIS FILE OR THE USE OR OTHER DEALINGS  |
# | IN THIS FILE.                                                              |
# |                                                                            |
# | This agreement shall be governed in all respects by the laws of the State  |
# |  of California and by the laws of the United States of America.            |
# |                                                                            |
# +----------------------------------------------------------------------------+

# TCL File Generated by Altera University Program
# DO NOT MODIFY

source "../../../lib/aup_version.tcl"
source "../../../lib/aup_ip_generator.tcl"

# +-----------------------------------
# | module altera_up_avalon_video_dma_controller
# | 
set_module_property DESCRIPTION "DMA controller for video processing on DE-Series Boards"
set_module_property NAME altera_up_avalon_video_dma_controller
set_module_property VERSION $aup_version
set_module_property GROUP "University Program/Audio & Video/Video"
set_module_property AUTHOR "Altera University Program"
set_module_property DISPLAY_NAME "DMA Controller"
set_module_property DATASHEET_URL "[pwd]/../doc/Video.pdf"
#set_module_property TOP_LEVEL_HDL_FILE altera_up_avalon_video_dma_controller.v
#set_module_property TOP_LEVEL_HDL_MODULE altera_up_avalon_video_dma_controller
set_module_property INSTANTIATE_IN_SYSTEM_MODULE true
set_module_property HIDE_FROM_QUARTUS true
set_module_property EDITABLE false
set_module_property ANALYZE_HDL false
set_module_property ELABORATION_CALLBACK elaborate
set_module_property GENERATION_CALLBACK generate
set_module_property HIDE_FROM_SOPC true
# | 
# +-----------------------------------

# +-----------------------------------
# | files
# | 
#add_file altera_up_avalon_video_dma_controller.v {SYNTHESIS SIMULATION}
add_file "hdl/altera_up_video_dma_control_slave.v" {SYNTHESIS SIMULATION}
add_file "hdl/altera_up_video_dma_to_stream.v" {SYNTHESIS SIMULATION}
# | 
# +-----------------------------------

# +-----------------------------------
# | parameters
# | 
add_parameter mode string "From Stream to Memory" 
set_parameter_property mode DISPLAY_NAME "DMA Direction"
set_parameter_property mode GROUP "Mode"
set_parameter_property mode UNITS None
set_parameter_property mode AFFECTS_ELABORATION true
set_parameter_property mode AFFECTS_GENERATION true
set_parameter_property mode ALLOWED_RANGES {"From Stream to Memory" "From Memory to Stream"}
set_parameter_property mode VISIBLE true
set_parameter_property mode ENABLED true

add_parameter num_pixels_in_frame positive "320"
set_parameter_property num_pixels_in_frame DISPLAY_NAME "Num of Pixels In Frame"
set_parameter_property num_pixels_in_frame GROUP "Frame Resolution"
set_parameter_property num_pixels_in_frame UNITS None
set_parameter_property num_pixels_in_frame AFFECTS_ELABORATION true
set_parameter_property num_pixels_in_frame AFFECTS_GENERATION true
set_parameter_property num_pixels_in_frame VISIBLE true
set_parameter_property num_pixels_in_frame ENABLED true


add_parameter color_bits positive "8"
set_parameter_property color_bits DISPLAY_NAME "Num. Bits per Pixel"
set_parameter_property color_bits GROUP "Pixel Format"
set_parameter_property color_bits UNITS None
set_parameter_property color_bits AFFECTS_ELABORATION true
set_parameter_property color_bits AFFECTS_GENERATION true
set_parameter_property color_bits ALLOWED_RANGES {1:128}
set_parameter_property color_bits VISIBLE true
set_parameter_property color_bits ENABLED true

add_parameter color_planes positive "3"
set_parameter_property color_planes DISPLAY_NAME "Num Pixels In Parallel To/From Memory"
set_parameter_property color_planes GROUP "Pixel Format"
set_parameter_property color_planes UNITS None
set_parameter_property color_planes AFFECTS_ELABORATION true
set_parameter_property color_planes AFFECTS_GENERATION true
set_parameter_property color_planes ALLOWED_RANGES {1 2 3 4 5 6 7 8}
set_parameter_property color_planes VISIBLE true
set_parameter_property color_planes ENABLED true

add_parameter dma_enabled boolean true
set_parameter_property dma_enabled DISPLAY_NAME "Enabled DMA transfer on reset"
set_parameter_property dma_enabled GROUP "Control"
set_parameter_property dma_enabled UNITS None
set_parameter_property dma_enabled AFFECTS_ELABORATION true
set_parameter_property dma_enabled AFFECTS_GENERATION true
set_parameter_property dma_enabled VISIBLE true
set_parameter_property dma_enabled ENABLED true

add_parameter use_external_backbuffer boolean true
set_parameter_property use_external_backbuffer DISPLAY_NAME "Use External Backbuffer Address"
set_parameter_property use_external_backbuffer GROUP "Control"
set_parameter_property use_external_backbuffer UNITS None
set_parameter_property use_external_backbuffer AFFECTS_ELABORATION true
set_parameter_property use_external_backbuffer AFFECTS_GENERATION true
set_parameter_property use_external_backbuffer VISIBLE true
set_parameter_property use_external_backbuffer ENABLED true

add_parameter always_do_buffer_swap boolean true
set_parameter_property always_do_buffer_swap DISPLAY_NAME "Always Do Buffer Swap"
set_parameter_property always_do_buffer_swap GROUP "Control"
set_parameter_property always_do_buffer_swap UNITS None
set_parameter_property always_do_buffer_swap AFFECTS_ELABORATION true
set_parameter_property always_do_buffer_swap AFFECTS_GENERATION true
set_parameter_property always_do_buffer_swap VISIBLE true
set_parameter_property always_do_buffer_swap ENABLED true

add_parameter watchdog_enabled boolean true
set_parameter_property watchdog_enabled DISPLAY_NAME "Enable Watchdog"
set_parameter_property watchdog_enabled GROUP "Control"
set_parameter_property watchdog_enabled UNITS None
set_parameter_property watchdog_enabled AFFECTS_ELABORATION true
set_parameter_property watchdog_enabled AFFECTS_GENERATION true
set_parameter_property watchdog_enabled VISIBLE true
set_parameter_property watchdog_enabled ENABLED true

add_parameter          watchdog_count integer 2000000000 
set_parameter_property watchdog_count DISPLAY_NAME "Watchdog Count"
set_parameter_property watchdog_count DISPLAY_HINT decimal
set_parameter_property watchdog_count GROUP "Control"
set_parameter_property watchdog_count UNITS None
set_parameter_property watchdog_count AFFECTS_ELABORATION true
set_parameter_property watchdog_count AFFECTS_GENERATION true
set_parameter_property watchdog_count VISIBLE true
set_parameter_property watchdog_count ENABLED true


# | 
# +-----------------------------------

# +-----------------------------------
# | connection point clk
# | 
add_interface clk clock end
set_interface_property clk enabled true

add_interface_port clk clk clk Input 1
# | 
# +-----------------------------------

# +-----------------------------------
# | connection point reset
# | 
add_interface reset reset end
set_interface_property reset associatedClock clk
set_interface_property reset enabled true
set_interface_property reset synchronousEdges DEASSERT

add_interface_port reset reset reset Input 1
# | 
# +-----------------------------------

# +-----------------------------------
# | Elaboration function
# | 
proc elaborate {} {
	set mode				[ get_parameter_value "mode"]
	set num_pixels_in_frame [ get_parameter_value "num_pixels_in_frame" ]
	set color_bits			[ get_parameter_value "color_bits" ]
	set color_planes		[ get_parameter_value "color_planes" ]
	set num_of_dma_locations [expr {$num_pixels_in_frame/$color_planes}];

	set dw [ expr $color_bits * $color_planes ]
	if { ($color_planes == 4) || ($color_planes == 3) } {
		set ew 2
	} else {
		set ew 1
	}

	if { $dw <= 8 } {
		set mdw 8
	} elseif { $dw <= 16 } {
		set mdw 16
	} elseif { $dw <= 32 } {
		set mdw 32
	} else {
		set mdw 64
	}
	

	# 
	# connection point snoop_interface
	# 
	add_interface snoop_interface conduit end
	set_interface_property snoop_interface associatedReset reset
	set_interface_property snoop_interface ENABLED true

	add_interface_port snoop_interface snoop_master_readdata                export Output $mdw
	add_interface_port snoop_interface snoop_master_readdatavalid           export Output 1
	add_interface_port snoop_interface snoop_master_waitrequest             export Output 1
	add_interface_port snoop_interface snoop_master_address                 export Output 32
	add_interface_port snoop_interface snoop_master_write                   export Output 1
	add_interface_port snoop_interface snoop_master_writedata               export Output $mdw
	add_interface_port snoop_interface snoop_master_read                    export Output 1
	add_interface_port snoop_interface snoop_stream_data                    export Output $dw
	add_interface_port snoop_interface snoop_stream_startofpacket           export Output 1
	add_interface_port snoop_interface snoop_stream_endofpacket	            export Output 1
	add_interface_port snoop_interface snoop_stream_empty                   export Output $ew
	add_interface_port snoop_interface snoop_stream_valid                   export Output 1
	add_interface_port snoop_interface snoop_stream_ready                   export Output 1
	add_interface_port snoop_interface snoop_state                          export Output 16
	add_interface_port snoop_interface snoop_back_buf_start_address                         export Output 32
	add_interface_port snoop_interface snoop_dma_enabled                                    export Output 1
	add_interface_port snoop_interface snoop_last_written_buf_start_address                 export Output 32
	add_interface_port snoop_interface snoop_external_priority_backbuffer_address           export Output 32
	add_interface_port snoop_interface snoop_use_external_priority_backbuffer               export Output 1
	add_interface_port snoop_interface snoop_currently_processing_packet                    export Output 1
	add_interface_port snoop_interface snoop_pause_after_each_frame                         export Output 1
	add_interface_port snoop_interface snoop_get_frame_now                                  export Output 1
	add_interface_port snoop_interface snoop_get_frame_now_ack                              export Output 1
	add_interface_port snoop_interface snoop_buffer_start_address                           export Output 32
    add_interface_port snoop_interface snoop_num_buffer_swaps                               export Output 32
	add_interface_port snoop_interface snoop_num_of_packets_processed                       export Output 32
	add_interface_port snoop_interface snoop_num_of_repeated_packets                        export Output 32
	add_interface_port snoop_interface snoop_write_bytes_left                               export Output 32
	add_interface_port snoop_interface snoop_swap_buffers_now                               export Output 1
	add_interface_port snoop_interface snoop_external_swap_buffer_now                       export Output 1
	add_interface_port snoop_interface snoop_wait_for_swap                                  export Output 1
	add_interface_port snoop_interface out_of_band_data_received                            export Output 1
	add_interface_port snoop_interface watchdog_counter                                     export Output 32
	add_interface_port snoop_interface watchdog_reset                                       export Output 1
	add_interface_port snoop_interface increase_watchdog_event_count                        export Output 1
	add_interface_port snoop_interface num_watchdog_events                                  export Output 32
	add_interface_port snoop_interface num_of_discarded_packets                             export Output 32
	add_interface_port snoop_interface discarded_packet_event                               export Output 1
		
	           
	add_interface hw_control conduit end
	set_interface_property hw_control associatedReset reset
	set_interface_property hw_control ENABLED true	
	add_interface_port hw_control state                                export Output 16
	add_interface_port hw_control buffer_start_address                 export Output 32
	add_interface_port hw_control back_buf_start_address               export Output 32      
	add_interface_port hw_control last_written_buf_start_address       export Output 32
	add_interface_port hw_control external_priority_backbuffer_address export Input  32
	add_interface_port hw_control use_external_priority_backbuffer     export Output 1
	add_interface_port hw_control dma_enabled                          export Output 1
	add_interface_port hw_control pause_after_each_frame               export Input 1
	add_interface_port hw_control currently_processing_packet          export Output 1
	add_interface_port hw_control get_frame_now                        export Input 1
	add_interface_port hw_control get_frame_now_ack                    export Output 1
	add_interface_port hw_control num_buffer_swaps                     export Output 32
	add_interface_port hw_control num_of_packets_processed             export Output 32
	add_interface_port hw_control num_of_repeated_packets              export Output 32
	add_interface_port hw_control swap_buffers_now                     export Output 1
	add_interface_port hw_control external_swap_buffer_now             export Input 1
	add_interface_port hw_control wait_for_swap                        export Output 1
	add_interface_port hw_control default_buffer_address               export input 32
	add_interface_port hw_control default_back_buf_address             export input 32
	
	if { $mode == "From Stream to Memory" } {
		# +-----------------------------------
		# | connection point avalon_dma_sink
		# | 
		add_interface avalon_dma_sink avalon_streaming end
		set_interface_property avalon_dma_sink associatedClock clk
		set_interface_property avalon_dma_sink associatedReset reset
		set_interface_property avalon_dma_sink dataBitsPerSymbol $color_bits
		set_interface_property avalon_dma_sink errorDescriptor ""
		set_interface_property avalon_dma_sink maxChannel 0
		set_interface_property avalon_dma_sink readyLatency 0
		set_interface_property avalon_dma_sink symbolsPerBeat $color_planes

		add_interface_port avalon_dma_sink stream_data data Input $dw
		add_interface_port avalon_dma_sink stream_startofpacket startofpacket Input 1
		add_interface_port avalon_dma_sink stream_endofpacket endofpacket Input 1
#		add_interface_port avalon_dma_sink stream_empty empty Input $ew
		add_interface_port avalon_dma_sink stream_valid valid Input 1
		add_interface_port avalon_dma_sink stream_ready ready Output 1
		# | 
		# +-----------------------------------
		
		# +-----------------------------------
		# | connection point avalon_dma_control_slave
		# | 
		add_interface avalon_dma_control_slave avalon end
		set_interface_property avalon_dma_control_slave addressAlignment DYNAMIC
		set_interface_property avalon_dma_control_slave associatedClock clk
		set_interface_property avalon_dma_control_slave associatedReset reset
		set_interface_property avalon_dma_control_slave bridgesToMaster ""
		set_interface_property avalon_dma_control_slave burstOnBurstBoundariesOnly false
		#set_interface_property avalon_dma_control_slave explicitAddressSpan 16
		set_interface_property avalon_dma_control_slave holdTime 0
		set_interface_property avalon_dma_control_slave isBigEndian  false
		set_interface_property avalon_dma_control_slave isFlash false
		set_interface_property avalon_dma_control_slave isMemoryDevice false
		set_interface_property avalon_dma_control_slave isNonVolatileStorage false
		set_interface_property avalon_dma_control_slave linewrapBursts false
		set_interface_property avalon_dma_control_slave maximumPendingReadTransactions 0
		set_interface_property avalon_dma_control_slave minimumUninterruptedRunLength 1
		set_interface_property avalon_dma_control_slave printableDevice false
		set_interface_property avalon_dma_control_slave readLatency 1
		set_interface_property avalon_dma_control_slave readWaitTime 0
		set_interface_property avalon_dma_control_slave setupTime 0
		set_interface_property avalon_dma_control_slave timingUnits cycles
		set_interface_property avalon_dma_control_slave writeWaitTime 0

		add_interface_port avalon_dma_control_slave slave_address address Input 4
		add_interface_port avalon_dma_control_slave slave_byteenable byteenable Input 4
		add_interface_port avalon_dma_control_slave slave_read read Input 1
		add_interface_port avalon_dma_control_slave slave_write write Input 1
		add_interface_port avalon_dma_control_slave slave_writedata writedata Input 32
		add_interface_port avalon_dma_control_slave slave_readdata readdata Output 32
		
		
		
		# |
		# +-----------------------------------

		# +-----------------------------------
		# | connection point avalon_dma_master
		# | 
		add_interface avalon_dma_master avalon start
		set_interface_property avalon_dma_master associatedClock clk
		set_interface_property avalon_dma_master associatedReset reset
		set_interface_property avalon_dma_master burstOnBurstBoundariesOnly false
		set_interface_property avalon_dma_master doStreamReads false
		set_interface_property avalon_dma_master doStreamWrites false
		set_interface_property avalon_dma_master linewrapBursts false

		add_interface_port avalon_dma_master master_address address Output 32
		add_interface_port avalon_dma_master master_waitrequest waitrequest Input 1
		add_interface_port avalon_dma_master master_write write Output 1
		add_interface_port avalon_dma_master master_writedata writedata Output $mdw
		add_interface_port avalon_dma_master master_byteenable byteenable Output [expr $mdw/8]
		add_interface_port avalon_dma_master master_burstcount burstcount Output 4
		
		
		
		
		# | 
		# +-----------------------------------
	} else {
		# +-----------------------------------
		# | connection point avalon_dma_master
		# | 
		add_interface avalon_dma_master avalon start
		set_interface_property avalon_dma_master associatedClock clk
		set_interface_property avalon_dma_master associatedReset reset
		set_interface_property avalon_dma_master burstOnBurstBoundariesOnly false
		set_interface_property avalon_dma_master doStreamReads false
		set_interface_property avalon_dma_master doStreamWrites false
		set_interface_property avalon_dma_master linewrapBursts false

		add_interface_port avalon_dma_master master_address address Output 32
		add_interface_port avalon_dma_master master_waitrequest waitrequest Input 1
		add_interface_port avalon_dma_master master_read read Output 1
		add_interface_port avalon_dma_master master_readdata readdata Input $mdw
		add_interface_port avalon_dma_master master_readdatavalid readdatavalid Input 1
		add_interface_port avalon_dma_master master_byteenable byteenable Output [expr $mdw/8]
		add_interface_port avalon_dma_master master_burstcount burstcount Output 4
		
		
		
		
		# | 
		# +-----------------------------------

		# +-----------------------------------
		# | connection point avalon_dma_control_slave
		# | 
		add_interface avalon_dma_control_slave avalon end
		set_interface_property avalon_dma_control_slave addressAlignment DYNAMIC
		set_interface_property avalon_dma_control_slave associatedClock clk
		set_interface_property avalon_dma_control_slave associatedReset reset
		set_interface_property avalon_dma_control_slave bridgesToMaster ""
		set_interface_property avalon_dma_control_slave burstOnBurstBoundariesOnly false
		#set_interface_property avalon_dma_control_slave explicitAddressSpan 16
		set_interface_property avalon_dma_control_slave holdTime 0
		set_interface_property avalon_dma_control_slave isBigEndian  false
		set_interface_property avalon_dma_control_slave isFlash false
		set_interface_property avalon_dma_control_slave isMemoryDevice false
		set_interface_property avalon_dma_control_slave isNonVolatileStorage false
		set_interface_property avalon_dma_control_slave linewrapBursts false
		set_interface_property avalon_dma_control_slave maximumPendingReadTransactions 0
		set_interface_property avalon_dma_control_slave minimumUninterruptedRunLength 1
		set_interface_property avalon_dma_control_slave printableDevice false
		set_interface_property avalon_dma_control_slave readLatency 1
		set_interface_property avalon_dma_control_slave readWaitTime 0
		set_interface_property avalon_dma_control_slave setupTime 0
		set_interface_property avalon_dma_control_slave timingUnits cycles
		set_interface_property avalon_dma_control_slave writeWaitTime 0

		add_interface_port avalon_dma_control_slave slave_address address Input 4
		add_interface_port avalon_dma_control_slave slave_byteenable byteenable Input 4
		add_interface_port avalon_dma_control_slave slave_read read Input 1
		add_interface_port avalon_dma_control_slave slave_write write Input 1
		add_interface_port avalon_dma_control_slave slave_writedata writedata Input 32
		add_interface_port avalon_dma_control_slave slave_readdata readdata Output 32
		# |
		# +-----------------------------------

		# +-----------------------------------
		# | connection point avalon_pixel_source
		# | 
		add_interface avalon_pixel_source avalon_streaming start
		set_interface_property avalon_pixel_source associatedClock clk
		set_interface_property avalon_pixel_source associatedReset reset
		set_interface_property avalon_pixel_source dataBitsPerSymbol $color_bits
		set_interface_property avalon_pixel_source errorDescriptor ""
		set_interface_property avalon_pixel_source maxChannel 0
		set_interface_property avalon_pixel_source readyLatency 0
		set_interface_property avalon_pixel_source symbolsPerBeat $color_planes

		add_interface_port avalon_pixel_source stream_ready ready Input 1
		add_interface_port avalon_pixel_source stream_data data Output $dw
		add_interface_port avalon_pixel_source stream_startofpacket startofpacket Output 1
		add_interface_port avalon_pixel_source stream_endofpacket endofpacket Output 1
#		add_interface_port avalon_pixel_source stream_empty empty Output 2
		add_interface_port avalon_pixel_source stream_valid valid Output 1
		# | 
		# +-----------------------------------
		
		
	}
}
# | 
# +-----------------------------------

# +-----------------------------------
# | Generation function
# | 
proc generate {} {
	send_message info "Starting Generation of Video DMA Controller"
	
	# get parameter values
	set mode 				[ get_parameter_value "mode" ]
	set num_pixels_in_frame				[ get_parameter_value "num_pixels_in_frame" ]
	set color_bits			[ get_parameter_value "color_bits" ]
	set color_planes		[ get_parameter_value "color_planes" ]
	set dma_enabled		[ get_parameter_value "dma_enabled" ]
	set use_external_backbuffer		[ get_parameter_value "use_external_backbuffer" ]
	set always_do_buffer_swap		[ get_parameter_value "always_do_buffer_swap" ]
	set watchdog_enabled		[ get_parameter_value "watchdog_enabled" ]
	set watchdog_count		[ get_parameter_value "watchdog_count" ]
	set num_of_dma_locations [expr {$num_pixels_in_frame/$color_planes}];

	set dw			[ format "DW:%d" [ expr (($color_bits * $color_planes) - 1) ] ]
	if { ($color_planes == 4) || ($color_planes == 3) } {
		set ew 		"EW:1"
	} else {
		set ew		"EW:0"
	}
	set num_pixels_in_frame_p		"NUM_PIXELS_IN_FRAME:$num_pixels_in_frame"
	set num_of_dma_locations_p	"NUM_OF_DMA_LOCATIONS:$num_of_dma_locations"

	if { ($color_bits * $color_planes) <= 8 } {
		set mdw		"MDW:7"
	} elseif { ($color_bits * $color_planes) <= 16 } {
		set mdw		"MDW:15"
	} elseif { ($color_bits * $color_planes) <= 32 } {
		set mdw		"MDW:31"
	} else {
		set mdw		"MDW:63"
	}

	set watchdog_count_p "MAX_WATCHDOG_COUNT:32'd$watchdog_count"

	set color_bits_p 	[ format "COLOR_BITS:8'd%d" 	$color_bits  ]
	set color_planes_p	[ format "COLOR_PLANES:8'd%d" 	$color_planes]

	set dma_enabled_p	"DEFAULT_DMA_ENABLED:1'b0"
	if { $dma_enabled } {
		set dma_enabled_p	"DEFAULT_DMA_ENABLED:1'b1"
	}
	set use_external_backbuffer_p	"DEFAULT_USE_EXTERNAL_BACKBUFFER_ADDRESS:1'b0"
	if { $use_external_backbuffer } {
		set use_external_backbuffer_p	"DEFAULT_USE_EXTERNAL_BACKBUFFER_ADDRESS:1'b1"
	}
	set always_do_buffer_swap_p	"DEFAULT_ALWAYS_DO_BUFFER_SWAP:1'b0"
	if { $always_do_buffer_swap } {
		set always_do_buffer_swap_p	"DEFAULT_ALWAYS_DO_BUFFER_SWAP:1'b1"
	}
	
	set watchdog_enabled_p	"WATCHDOG_ENABLED:1'b0"
	if { $watchdog_enabled } {
		set watchdog_enabled_p "WATCHDOG_ENABLED:1'b1"
	}
	# set section values
	set use_to_memory "USE_TO_MEMORY:0"
	if { $mode == "From Stream to Memory" } {
		set use_to_memory "USE_TO_MEMORY:1"
	}

	set use_8bit_master "USE_8BIT_MASTER:0"
	set use_16bit_master "USE_16BIT_MASTER:0"
	set use_32bit_master "USE_32BIT_MASTER:0"
	set use_64bit_master "USE_64BIT_MASTER:0"
	if { ($color_bits * $color_planes) <= 8 } {
		set use_8bit_master "USE_8BIT_MASTER:1"
	} elseif { ($color_bits * $color_planes) <= 16 } {
		set use_16bit_master "USE_16BIT_MASTER:1"
	} elseif { ($color_bits * $color_planes) <= 32 } {
		set use_32bit_master "USE_32BIT_MASTER:1"
	} else {
		set use_64bit_master "USE_64BIT_MASTER:1"
	}

	# set arguments
	set params "$dw;$ew;$num_pixels_in_frame_p;$num_of_dma_locations_p;$mdw;$watchdog_count_p;$color_bits_p;$color_planes_p;$dma_enabled_p;$use_external_backbuffer_p;$always_do_buffer_swap_p;$watchdog_enabled_p"
	set sections "$use_to_memory;$use_8bit_master;$use_16bit_master;$use_32bit_master;$use_64bit_master"

	# get generation settings
#	set dest_language	[ get_generation_property HDL_LANGUAGE ]
	set dest_dir 		[ get_generation_property OUTPUT_DIRECTORY ]
	set dest_name		[ get_generation_property OUTPUT_NAME ]
	
	add_file "$dest_dir$dest_name.v" {SYNTHESIS SIMULATION}
	# add_file "$dest_dir/altera_up_video_dma_control_slave.v" SYNTHESIS
	# add_file "$dest_dir/altera_up_video_dma_to_memory.v" SYNTHESIS
	# add_file "$dest_dir/altera_up_video_dma_to_stream.v" SYNTHESIS

	# Generate HDL
	alt_up_generate "$dest_dir$dest_name.v" "hdl/altera_up_avalon_video_dma_controller.v" "altera_up_avalon_video_dma_controller" $dest_name $params $sections
	# file copy -force "hdl/altera_up_video_dma_control_slave.v" $dest_dir
	# file copy -force "hdl/altera_up_video_dma_to_memory.v" $dest_dir
	# file copy -force "hdl/altera_up_video_dma_to_stream.v" $dest_dir
}
# | 
# +-----------------------------------

