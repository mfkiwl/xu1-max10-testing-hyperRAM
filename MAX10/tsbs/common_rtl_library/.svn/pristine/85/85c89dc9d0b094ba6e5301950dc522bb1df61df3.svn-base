/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 1.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clock_in")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("dir")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("serial_in")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("serial_in[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "serial_in";
}

SIGNAL("serial_in[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "serial_in";
}

SIGNAL("serial_in[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "serial_in";
}

SIGNAL("serial_in[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "serial_in";
}

SIGNAL("serial_in[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "serial_in";
}

SIGNAL("serial_in[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "serial_in";
}

SIGNAL("serial_in[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "serial_in";
}

SIGNAL("serial_in[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "serial_in";
}

SIGNAL("clk_counter")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("clk_counter[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "clk_counter";
}

SIGNAL("clk_counter[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "clk_counter";
}

SIGNAL("clk_counter[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "clk_counter";
}

SIGNAL("clk_counter[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "clk_counter";
}

SIGNAL("clk_counter[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "clk_counter";
}

SIGNAL("clock_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("parallel_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 96;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("parallel_out[95]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[94]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[93]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[92]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[91]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[90]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[89]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[88]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[87]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[86]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[85]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[84]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[83]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[82]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[81]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[80]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[79]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[78]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[77]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[76]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[75]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[74]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[73]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[72]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[71]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[70]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[69]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[68]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[67]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[66]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[65]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[64]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[63]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[62]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[61]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[60]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[59]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[58]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[57]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[56]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[55]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[54]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[53]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[52]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[51]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[50]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[49]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[48]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[47]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[46]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[45]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[44]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[43]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[42]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[41]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[40]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[39]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[38]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[37]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[36]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[35]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[34]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[33]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[32]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

SIGNAL("parallel_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "parallel_out";
}

TRANSITION_LIST("clock_in")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1000;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
	}
}

TRANSITION_LIST("dir")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 132.0;
		LEVEL 1 FOR 132.0;
		LEVEL 0 FOR 736.0;
	}
}

TRANSITION_LIST("serial_in[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 128.0;
			LEVEL 1 FOR 128.0;
		}
		LEVEL 0 FOR 128.0;
		LEVEL 1 FOR 104.0;
	}
}

TRANSITION_LIST("serial_in[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 64.0;
			LEVEL 1 FOR 64.0;
		}
		LEVEL 0 FOR 64.0;
		LEVEL 1 FOR 40.0;
	}
}

TRANSITION_LIST("serial_in[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 15;
			LEVEL 0 FOR 32.0;
			LEVEL 1 FOR 32.0;
		}
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 8.0;
	}
}

TRANSITION_LIST("serial_in[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 31;
			LEVEL 0 FOR 16.0;
			LEVEL 1 FOR 16.0;
		}
		LEVEL 0 FOR 8.0;
	}
}

TRANSITION_LIST("serial_in[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 62;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
		}
		LEVEL 0 FOR 8.0;
	}
}

TRANSITION_LIST("serial_in[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 125;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
		}
	}
}

TRANSITION_LIST("serial_in[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 250;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
	}
}

TRANSITION_LIST("serial_in[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 500;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 1.0;
		}
	}
}

TRANSITION_LIST("clk_counter[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("clk_counter[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 83;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 4.0;
	}
}

TRANSITION_LIST("clk_counter[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 83;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
		}
	}
}

TRANSITION_LIST("clk_counter[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 250;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
	}
}

TRANSITION_LIST("clk_counter[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 500;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 1.0;
		}
	}
}

TRANSITION_LIST("clock_out")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 83;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
		}
		LEVEL 0 FOR 4.0;
	}
}

TRANSITION_LIST("parallel_out[95]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 138.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 144.0;
		LEVEL 1 FOR 132.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 132.0;
		LEVEL 0 FOR 132.0;
		LEVEL 1 FOR 82.0;
	}
}

TRANSITION_LIST("parallel_out[94]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 78.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 84.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 72.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 72.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 72.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 22.0;
	}
}

TRANSITION_LIST("parallel_out[93]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 54.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 36.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 36.0;
		LEVEL 0 FOR 36.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 48.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 36.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 36.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 36.0;
		}
		LEVEL 1 FOR 36.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 36.0;
		LEVEL 0 FOR 22.0;
	}
}

TRANSITION_LIST("parallel_out[92]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 24.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
		}
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 36.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 24.0;
		}
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("parallel_out[91]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 42.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 24.0;
		}
		LEVEL 1 FOR 12.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 24.0;
		}
		LEVEL 0 FOR 36.0;
		NODE
		{
			REPEAT = 14;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 24.0;
		}
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 22.0;
	}
}

TRANSITION_LIST("parallel_out[90]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 18.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 4;
				LEVEL 1 FOR 12.0;
				LEVEL 0 FOR 12.0;
			}
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 24.0;
		}
		NODE
		{
			REPEAT = 29;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
		}
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("parallel_out[89]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 144.0;
		LEVEL 1 FOR 718.0;
	}
}

TRANSITION_LIST("parallel_out[88]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 138.0;
		LEVEL 1 FOR 144.0;
		LEVEL 0 FOR 718.0;
	}
}

TRANSITION_LIST("parallel_out[87]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 138.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 144.0;
		LEVEL 1 FOR 132.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 132.0;
		LEVEL 0 FOR 132.0;
		LEVEL 1 FOR 82.0;
	}
}

TRANSITION_LIST("parallel_out[86]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 78.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 84.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 72.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 72.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 72.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 22.0;
	}
}

TRANSITION_LIST("parallel_out[85]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 54.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 36.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 36.0;
		LEVEL 0 FOR 36.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 48.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 36.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 36.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 36.0;
		}
		LEVEL 1 FOR 36.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 36.0;
		LEVEL 0 FOR 22.0;
	}
}

TRANSITION_LIST("parallel_out[84]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 24.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
		}
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 36.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 24.0;
		}
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("parallel_out[83]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 42.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 24.0;
		}
		LEVEL 1 FOR 12.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 24.0;
		}
		LEVEL 0 FOR 36.0;
		NODE
		{
			REPEAT = 14;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 24.0;
		}
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 22.0;
	}
}

TRANSITION_LIST("parallel_out[82]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 18.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 4;
				LEVEL 1 FOR 12.0;
				LEVEL 0 FOR 12.0;
			}
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 24.0;
		}
		NODE
		{
			REPEAT = 29;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
		}
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("parallel_out[81]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 144.0;
		LEVEL 1 FOR 718.0;
	}
}

TRANSITION_LIST("parallel_out[80]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 144.0;
		LEVEL 1 FOR 718.0;
	}
}

TRANSITION_LIST("parallel_out[79]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 138.0;
		LEVEL 1 FOR 144.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 132.0;
		LEVEL 1 FOR 132.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 94.0;
	}
}

TRANSITION_LIST("parallel_out[78]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 78.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 84.0;
		LEVEL 0 FOR 48.0;
		LEVEL 1 FOR 72.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 72.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 72.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 72.0;
		LEVEL 1 FOR 22.0;
	}
}

TRANSITION_LIST("parallel_out[77]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 42.0;
		LEVEL 1 FOR 36.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 24.0;
		}
		LEVEL 0 FOR 36.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 24.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 36.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 36.0;
			LEVEL 0 FOR 36.0;
		}
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 36.0;
		LEVEL 1 FOR 36.0;
		LEVEL 0 FOR 22.0;
	}
}

TRANSITION_LIST("parallel_out[76]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 24.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 12.0;
		}
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 24.0;
		}
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("parallel_out[75]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 12.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 24.0;
		}
		LEVEL 0 FOR 36.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 24.0;
		}
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 12.0;
		NODE
		{
			REPEAT = 14;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 24.0;
		}
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("parallel_out[74]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 24.0;
			NODE
			{
				REPEAT = 4;
				LEVEL 0 FOR 12.0;
				LEVEL 1 FOR 12.0;
			}
			LEVEL 0 FOR 12.0;
		}
		NODE
		{
			REPEAT = 25;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
		}
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("parallel_out[73]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 138.0;
		LEVEL 1 FOR 144.0;
		LEVEL 0 FOR 718.0;
	}
}

TRANSITION_LIST("parallel_out[72]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 138.0;
		LEVEL 1 FOR 144.0;
		LEVEL 0 FOR 718.0;
	}
}

TRANSITION_LIST("parallel_out[71]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 138.0;
		LEVEL 1 FOR 144.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 132.0;
		LEVEL 1 FOR 132.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 94.0;
	}
}

TRANSITION_LIST("parallel_out[70]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 78.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 84.0;
		LEVEL 0 FOR 48.0;
		LEVEL 1 FOR 72.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 72.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 72.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 72.0;
		LEVEL 1 FOR 22.0;
	}
}

TRANSITION_LIST("parallel_out[69]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 42.0;
		LEVEL 1 FOR 36.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 24.0;
		}
		LEVEL 0 FOR 36.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 24.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 36.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 36.0;
			LEVEL 0 FOR 36.0;
		}
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 36.0;
		LEVEL 1 FOR 36.0;
		LEVEL 0 FOR 22.0;
	}
}

TRANSITION_LIST("parallel_out[68]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 24.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 12.0;
		}
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 24.0;
		}
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("parallel_out[67]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 12.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 24.0;
		}
		LEVEL 0 FOR 36.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 24.0;
		}
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 12.0;
		NODE
		{
			REPEAT = 14;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 24.0;
		}
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("parallel_out[66]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 24.0;
			NODE
			{
				REPEAT = 4;
				LEVEL 0 FOR 12.0;
				LEVEL 1 FOR 12.0;
			}
			LEVEL 0 FOR 12.0;
		}
		NODE
		{
			REPEAT = 25;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
		}
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("parallel_out[65]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 138.0;
		LEVEL 1 FOR 144.0;
		LEVEL 0 FOR 718.0;
	}
}

TRANSITION_LIST("parallel_out[64]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 144.0;
		LEVEL 1 FOR 718.0;
	}
}

TRANSITION_LIST("parallel_out[63]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 138.0;
		LEVEL 1 FOR 144.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 132.0;
		LEVEL 1 FOR 132.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 94.0;
	}
}

TRANSITION_LIST("parallel_out[62]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 78.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 84.0;
		LEVEL 0 FOR 48.0;
		LEVEL 1 FOR 72.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 72.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 72.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 72.0;
		LEVEL 1 FOR 22.0;
	}
}

TRANSITION_LIST("parallel_out[61]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 42.0;
		LEVEL 1 FOR 36.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 24.0;
		}
		LEVEL 0 FOR 36.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 24.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 36.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 36.0;
			LEVEL 0 FOR 36.0;
		}
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 36.0;
		LEVEL 1 FOR 36.0;
		LEVEL 0 FOR 22.0;
	}
}

TRANSITION_LIST("parallel_out[60]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 24.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 12.0;
		}
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 24.0;
		}
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("parallel_out[59]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 12.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 24.0;
		}
		LEVEL 0 FOR 36.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 24.0;
		}
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 12.0;
		NODE
		{
			REPEAT = 14;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 24.0;
		}
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("parallel_out[58]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 24.0;
			NODE
			{
				REPEAT = 4;
				LEVEL 0 FOR 12.0;
				LEVEL 1 FOR 12.0;
			}
			LEVEL 0 FOR 12.0;
		}
		NODE
		{
			REPEAT = 25;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
		}
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("parallel_out[57]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 144.0;
		LEVEL 1 FOR 718.0;
	}
}

TRANSITION_LIST("parallel_out[56]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 138.0;
		LEVEL 1 FOR 144.0;
		LEVEL 0 FOR 718.0;
	}
}

TRANSITION_LIST("parallel_out[55]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 138.0;
		LEVEL 1 FOR 144.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 132.0;
		LEVEL 1 FOR 132.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 94.0;
	}
}

TRANSITION_LIST("parallel_out[54]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 78.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 84.0;
		LEVEL 0 FOR 48.0;
		LEVEL 1 FOR 72.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 72.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 72.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 72.0;
		LEVEL 1 FOR 22.0;
	}
}

TRANSITION_LIST("parallel_out[53]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 42.0;
		LEVEL 1 FOR 36.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 24.0;
		}
		LEVEL 0 FOR 36.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 24.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 36.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 36.0;
			LEVEL 0 FOR 36.0;
		}
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 36.0;
		LEVEL 1 FOR 36.0;
		LEVEL 0 FOR 22.0;
	}
}

TRANSITION_LIST("parallel_out[52]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 24.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 12.0;
		}
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 24.0;
		}
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("parallel_out[51]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 12.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 24.0;
		}
		LEVEL 0 FOR 36.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 24.0;
		}
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 12.0;
		NODE
		{
			REPEAT = 14;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 24.0;
		}
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("parallel_out[50]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 24.0;
			NODE
			{
				REPEAT = 4;
				LEVEL 0 FOR 12.0;
				LEVEL 1 FOR 12.0;
			}
			LEVEL 0 FOR 12.0;
		}
		NODE
		{
			REPEAT = 25;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
		}
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("parallel_out[49]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 144.0;
		LEVEL 1 FOR 718.0;
	}
}

TRANSITION_LIST("parallel_out[48]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 144.0;
		LEVEL 1 FOR 718.0;
	}
}

TRANSITION_LIST("parallel_out[47]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 132.0;
		LEVEL 0 FOR 132.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 132.0;
		LEVEL 1 FOR 94.0;
	}
}

TRANSITION_LIST("parallel_out[46]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 78.0;
		LEVEL 1 FOR 72.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 72.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 72.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 72.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 34.0;
	}
}

TRANSITION_LIST("parallel_out[45]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 42.0;
		LEVEL 1 FOR 36.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 48.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 36.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 36.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 36.0;
		}
		LEVEL 0 FOR 36.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 34.0;
	}
}

TRANSITION_LIST("parallel_out[44]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 24.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 12.0;
		}
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 12.0;
		}
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("parallel_out[43]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 18.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 24.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 36.0;
		NODE
		{
			REPEAT = 14;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 24.0;
		}
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 22.0;
	}
}

TRANSITION_LIST("parallel_out[42]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 18.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 4;
				LEVEL 1 FOR 12.0;
				LEVEL 0 FOR 12.0;
			}
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 24.0;
		}
		NODE
		{
			REPEAT = 29;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
		}
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("parallel_out[41]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 730.0;
	}
}

TRANSITION_LIST("parallel_out[40]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 730.0;
	}
}

TRANSITION_LIST("parallel_out[39]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 132.0;
		LEVEL 0 FOR 132.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 132.0;
		LEVEL 1 FOR 94.0;
	}
}

TRANSITION_LIST("parallel_out[38]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 78.0;
		LEVEL 1 FOR 72.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 72.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 72.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 72.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 34.0;
	}
}

TRANSITION_LIST("parallel_out[37]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 42.0;
		LEVEL 1 FOR 36.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 48.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 36.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 36.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 36.0;
		}
		LEVEL 0 FOR 36.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 34.0;
	}
}

TRANSITION_LIST("parallel_out[36]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 24.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 12.0;
		}
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 12.0;
		}
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("parallel_out[35]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 18.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 24.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 36.0;
		NODE
		{
			REPEAT = 14;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 24.0;
		}
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 22.0;
	}
}

TRANSITION_LIST("parallel_out[34]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 18.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 4;
				LEVEL 1 FOR 12.0;
				LEVEL 0 FOR 12.0;
			}
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 24.0;
		}
		NODE
		{
			REPEAT = 29;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
		}
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("parallel_out[33]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 730.0;
	}
}

TRANSITION_LIST("parallel_out[32]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 144.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 730.0;
	}
}

TRANSITION_LIST("parallel_out[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 132.0;
		LEVEL 0 FOR 132.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 132.0;
		LEVEL 1 FOR 94.0;
	}
}

TRANSITION_LIST("parallel_out[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 78.0;
		LEVEL 1 FOR 72.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 72.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 72.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 72.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 34.0;
	}
}

TRANSITION_LIST("parallel_out[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 42.0;
		LEVEL 1 FOR 36.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 48.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 36.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 36.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 36.0;
		}
		LEVEL 0 FOR 36.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 34.0;
	}
}

TRANSITION_LIST("parallel_out[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 24.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 12.0;
		}
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 12.0;
		}
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("parallel_out[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 18.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 24.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 36.0;
		NODE
		{
			REPEAT = 14;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 24.0;
		}
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 22.0;
	}
}

TRANSITION_LIST("parallel_out[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 18.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 4;
				LEVEL 1 FOR 12.0;
				LEVEL 0 FOR 12.0;
			}
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 24.0;
		}
		NODE
		{
			REPEAT = 29;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
		}
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("parallel_out[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 144.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 730.0;
	}
}

TRANSITION_LIST("parallel_out[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 730.0;
	}
}

TRANSITION_LIST("parallel_out[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 132.0;
		LEVEL 0 FOR 132.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 132.0;
		LEVEL 1 FOR 94.0;
	}
}

TRANSITION_LIST("parallel_out[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 78.0;
		LEVEL 1 FOR 72.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 72.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 72.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 72.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 34.0;
	}
}

TRANSITION_LIST("parallel_out[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 42.0;
		LEVEL 1 FOR 36.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 48.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 36.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 36.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 36.0;
		}
		LEVEL 0 FOR 36.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 34.0;
	}
}

TRANSITION_LIST("parallel_out[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 24.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 12.0;
		}
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 12.0;
		}
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("parallel_out[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 18.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 24.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 36.0;
		NODE
		{
			REPEAT = 14;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 24.0;
		}
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 22.0;
	}
}

TRANSITION_LIST("parallel_out[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 18.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 4;
				LEVEL 1 FOR 12.0;
				LEVEL 0 FOR 12.0;
			}
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 24.0;
		}
		NODE
		{
			REPEAT = 29;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
		}
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("parallel_out[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 144.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 730.0;
	}
}

TRANSITION_LIST("parallel_out[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 144.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 730.0;
	}
}

TRANSITION_LIST("parallel_out[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 132.0;
		}
		LEVEL 0 FOR 132.0;
		LEVEL 1 FOR 94.0;
	}
}

TRANSITION_LIST("parallel_out[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 66.0;
		LEVEL 1 FOR 84.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 72.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 72.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 72.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 34.0;
	}
}

TRANSITION_LIST("parallel_out[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 42.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 36.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 36.0;
		LEVEL 0 FOR 36.0;
		LEVEL 1 FOR 24.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 36.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 36.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 36.0;
		}
		LEVEL 0 FOR 34.0;
	}
}

TRANSITION_LIST("parallel_out[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 36.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 24.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
		}
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 12.0;
		}
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 22.0;
	}
}

TRANSITION_LIST("parallel_out[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 24.0;
		}
		LEVEL 1 FOR 36.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 24.0;
		}
		LEVEL 0 FOR 12.0;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 24.0;
		}
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("parallel_out[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 24.0;
			NODE
			{
				REPEAT = 4;
				LEVEL 0 FOR 12.0;
				LEVEL 1 FOR 12.0;
			}
			LEVEL 0 FOR 12.0;
		}
		NODE
		{
			REPEAT = 25;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
		}
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("parallel_out[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 730.0;
	}
}

TRANSITION_LIST("parallel_out[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 730.0;
	}
}

TRANSITION_LIST("parallel_out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 132.0;
		}
		LEVEL 0 FOR 132.0;
		LEVEL 1 FOR 94.0;
	}
}

TRANSITION_LIST("parallel_out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 66.0;
		LEVEL 1 FOR 84.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 72.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 72.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 72.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 34.0;
	}
}

TRANSITION_LIST("parallel_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 42.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 36.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 36.0;
		LEVEL 0 FOR 36.0;
		LEVEL 1 FOR 24.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 36.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 36.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 36.0;
		}
		LEVEL 0 FOR 34.0;
	}
}

TRANSITION_LIST("parallel_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 36.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 24.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
		}
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 12.0;
		}
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 22.0;
	}
}

TRANSITION_LIST("parallel_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 24.0;
		}
		LEVEL 1 FOR 36.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 24.0;
		}
		LEVEL 0 FOR 12.0;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 24.0;
		}
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("parallel_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 24.0;
			NODE
			{
				REPEAT = 4;
				LEVEL 0 FOR 12.0;
				LEVEL 1 FOR 12.0;
			}
			LEVEL 0 FOR 12.0;
		}
		NODE
		{
			REPEAT = 25;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
		}
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("parallel_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 730.0;
	}
}

TRANSITION_LIST("parallel_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 144.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 730.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clock_in";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "dir";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "serial_in";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5, 6, 7, 8, 9, 10;
}

DISPLAY_LINE
{
	CHANNEL = "serial_in[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "serial_in[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "serial_in[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "serial_in[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "serial_in[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "serial_in[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "serial_in[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "serial_in[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "clk_counter";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
	CHILDREN = 12, 13, 14, 15, 16;
}

DISPLAY_LINE
{
	CHANNEL = "clk_counter[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "clk_counter[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "clk_counter[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "clk_counter[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "clk_counter[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "clock_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 17;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 0;
	CHILDREN = 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[95]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[94]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[93]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[92]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[91]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[90]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[89]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[88]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[87]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[86]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[85]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[84]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[83]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[82]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[81]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[80]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[79]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[78]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[77]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[76]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[75]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[74]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[73]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[72]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[71]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[70]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[69]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[68]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[67]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[66]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[65]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[64]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[63]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[62]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[61]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[60]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[59]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[58]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[57]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[56]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[55]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[54]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[53]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[52]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[51]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[50]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[49]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[48]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[47]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[46]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[45]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[44]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[43]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[42]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[41]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[40]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[39]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[38]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[37]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[36]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[35]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[34]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[33]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[32]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 85;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 86;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 90;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 91;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 92;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 93;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 94;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 95;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 96;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 97;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 98;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 99;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 100;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 101;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 102;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 103;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 104;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 105;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 106;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 107;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 108;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 109;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 110;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 111;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 112;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 113;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "parallel_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 114;
	TREE_LEVEL = 1;
	PARENT = 18;
}

TIME_BAR
{
	TIME = 32299;
	MASTER = TRUE;
}
;
