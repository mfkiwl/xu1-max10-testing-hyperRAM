/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 1.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("in_vector")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("in_vector[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "in_vector";
}

SIGNAL("in_vector[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "in_vector";
}

SIGNAL("in_vector[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "in_vector";
}

SIGNAL("out_data")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 29;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("out_data[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data";
}

SIGNAL("out_data[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data";
}

SIGNAL("out_data[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data";
}

SIGNAL("out_data[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data";
}

SIGNAL("out_data[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data";
}

SIGNAL("out_data[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data";
}

SIGNAL("out_data[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data";
}

SIGNAL("out_data[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data";
}

SIGNAL("out_data[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data";
}

SIGNAL("out_data[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data";
}

SIGNAL("out_data[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data";
}

SIGNAL("out_data[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data";
}

SIGNAL("out_data[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data";
}

SIGNAL("out_data[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data";
}

SIGNAL("out_data[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data";
}

SIGNAL("out_data[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data";
}

SIGNAL("out_data[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data";
}

SIGNAL("out_data[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data";
}

SIGNAL("out_data[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data";
}

SIGNAL("out_data[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data";
}

SIGNAL("out_data[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data";
}

SIGNAL("out_data[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data";
}

SIGNAL("out_data[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data";
}

SIGNAL("out_data[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data";
}

SIGNAL("out_data[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data";
}

SIGNAL("out_data[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data";
}

SIGNAL("out_data[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data";
}

SIGNAL("out_data[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data";
}

SIGNAL("out_vectors[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("out_vectors[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("out_vectors[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("out_vectors[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("out_vectors[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("out_vectors[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("out_vectors[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("out_vectors[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("out_vectors[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("out_vectors[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("out_vectors[9][0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_vectors[9]";
}

SIGNAL("out_vectors[9][1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_vectors[9]";
}

SIGNAL("out_vectors[9][2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_vectors[9]";
}

SIGNAL("out_vectors[8][0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_vectors[8]";
}

SIGNAL("out_vectors[8][1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_vectors[8]";
}

SIGNAL("out_vectors[8][2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_vectors[8]";
}

SIGNAL("out_vectors[7][0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_vectors[7]";
}

SIGNAL("out_vectors[7][1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_vectors[7]";
}

SIGNAL("out_vectors[7][2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_vectors[7]";
}

SIGNAL("out_vectors[6][0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_vectors[6]";
}

SIGNAL("out_vectors[6][1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_vectors[6]";
}

SIGNAL("out_vectors[6][2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_vectors[6]";
}

SIGNAL("out_vectors[5][0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_vectors[5]";
}

SIGNAL("out_vectors[5][1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_vectors[5]";
}

SIGNAL("out_vectors[5][2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_vectors[5]";
}

SIGNAL("out_vectors[4][0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_vectors[4]";
}

SIGNAL("out_vectors[4][1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_vectors[4]";
}

SIGNAL("out_vectors[4][2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_vectors[4]";
}

SIGNAL("out_vectors[3][0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_vectors[3]";
}

SIGNAL("out_vectors[3][1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_vectors[3]";
}

SIGNAL("out_vectors[3][2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_vectors[3]";
}

SIGNAL("out_vectors[2][0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_vectors[2]";
}

SIGNAL("out_vectors[2][1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_vectors[2]";
}

SIGNAL("out_vectors[2][2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_vectors[2]";
}

SIGNAL("out_vectors[1][0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_vectors[1]";
}

SIGNAL("out_vectors[1][1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_vectors[1]";
}

SIGNAL("out_vectors[1][2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_vectors[1]";
}

SIGNAL("out_vectors[0][0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_vectors[0]";
}

SIGNAL("out_vectors[0][1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_vectors[0]";
}

SIGNAL("out_vectors[0][2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_vectors[0]";
}

SIGNAL("the_matrix[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("the_matrix[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("the_matrix[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("the_matrix[2][0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "the_matrix[2]";
}

SIGNAL("the_matrix[2][1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "the_matrix[2]";
}

SIGNAL("the_matrix[2][2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "the_matrix[2]";
}

SIGNAL("the_matrix[1][0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "the_matrix[1]";
}

SIGNAL("the_matrix[1][1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "the_matrix[1]";
}

SIGNAL("the_matrix[1][2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "the_matrix[1]";
}

SIGNAL("the_matrix[0][0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "the_matrix[0]";
}

SIGNAL("the_matrix[0][1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "the_matrix[0]";
}

SIGNAL("the_matrix[0][2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "the_matrix[0]";
}

SIGNAL("exact_out_matrix[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("exact_out_matrix[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("exact_out_matrix[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("exact_out_matrix[2][0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "exact_out_matrix[2]";
}

SIGNAL("exact_out_matrix[2][1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "exact_out_matrix[2]";
}

SIGNAL("exact_out_matrix[2][2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "exact_out_matrix[2]";
}

SIGNAL("exact_out_matrix[1][0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "exact_out_matrix[1]";
}

SIGNAL("exact_out_matrix[1][1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "exact_out_matrix[1]";
}

SIGNAL("exact_out_matrix[1][2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "exact_out_matrix[1]";
}

SIGNAL("exact_out_matrix[0][0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "exact_out_matrix[0]";
}

SIGNAL("exact_out_matrix[0][1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "exact_out_matrix[0]";
}

SIGNAL("exact_out_matrix[0][2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "exact_out_matrix[0]";
}

SIGNAL("next_in_vector")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("next_in_vector[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "next_in_vector";
}

SIGNAL("next_in_vector[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "next_in_vector";
}

SIGNAL("next_in_vector[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "next_in_vector";
}

SIGNAL("do_not_transpose_output_data")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("reset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("out_data[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data";
}

GROUP("out_vectors")
{
	MEMBERS = "out_vectors[9]", "out_vectors[8]", "out_vectors[7]", "out_vectors[6]", "out_vectors[5]", "out_vectors[4]", "out_vectors[3]", "out_vectors[2]", "out_vectors[1]", "out_vectors[0]";
}

GROUP("the_matrix")
{
	MEMBERS = "the_matrix[2]", "the_matrix[1]", "the_matrix[0]";
}

GROUP("exact_out_matrix")
{
	MEMBERS = "exact_out_matrix[2]", "exact_out_matrix[1]", "exact_out_matrix[0]";
}

TRANSITION_LIST("in_vector[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("in_vector[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 49.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
	}
}

TRANSITION_LIST("in_vector[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 50.0;
	}
}

TRANSITION_LIST("out_data[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 50.0;
	}
}

TRANSITION_LIST("out_data[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 49.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
	}
}

TRANSITION_LIST("out_data[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("out_data[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 29.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
	}
}

TRANSITION_LIST("out_data[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 9.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("out_data[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 9.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("out_data[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("out_data[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 50.0;
	}
}

TRANSITION_LIST("out_data[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 49.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
	}
}

TRANSITION_LIST("out_data[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("out_data[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 29.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
	}
}

TRANSITION_LIST("out_data[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 9.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("out_data[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 9.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("out_data[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("out_data[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 50.0;
	}
}

TRANSITION_LIST("out_data[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 49.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
	}
}

TRANSITION_LIST("out_data[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("out_data[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 29.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
	}
}

TRANSITION_LIST("out_data[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 9.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("out_data[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 9.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("out_data[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("out_data[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 50.0;
	}
}

TRANSITION_LIST("out_data[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 49.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
	}
}

TRANSITION_LIST("out_data[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("out_data[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 29.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
	}
}

TRANSITION_LIST("out_data[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 9.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("out_data[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 9.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("out_data[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("out_vectors[9][0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 9.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("out_vectors[9][1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("out_vectors[9][2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 50.0;
	}
}

TRANSITION_LIST("out_vectors[8][0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 49.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
	}
}

TRANSITION_LIST("out_vectors[8][1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("out_vectors[8][2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 29.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
	}
}

TRANSITION_LIST("out_vectors[7][0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 9.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("out_vectors[7][1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 9.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("out_vectors[7][2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("out_vectors[6][0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 50.0;
	}
}

TRANSITION_LIST("out_vectors[6][1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 49.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
	}
}

TRANSITION_LIST("out_vectors[6][2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("out_vectors[5][0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 29.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
	}
}

TRANSITION_LIST("out_vectors[5][1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 9.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("out_vectors[5][2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 9.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("out_vectors[4][0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("out_vectors[4][1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 50.0;
	}
}

TRANSITION_LIST("out_vectors[4][2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 49.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
	}
}

TRANSITION_LIST("out_vectors[3][0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("out_vectors[3][1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 29.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
	}
}

TRANSITION_LIST("out_vectors[3][2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 9.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("out_vectors[2][0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 9.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("out_vectors[2][1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("out_vectors[2][2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 50.0;
	}
}

TRANSITION_LIST("out_vectors[1][0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 49.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
	}
}

TRANSITION_LIST("out_vectors[1][1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("out_vectors[1][2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 29.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
	}
}

TRANSITION_LIST("out_vectors[0][0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 9.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("out_vectors[0][1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 9.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("out_vectors[0][2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("the_matrix[2][0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("the_matrix[2][1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("the_matrix[2][2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("the_matrix[1][0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("the_matrix[1][1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("the_matrix[1][2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("the_matrix[0][0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("the_matrix[0][1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("the_matrix[0][2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("exact_out_matrix[2][0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("exact_out_matrix[2][1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("exact_out_matrix[2][2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("exact_out_matrix[1][0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("exact_out_matrix[1][1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("exact_out_matrix[1][2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("exact_out_matrix[0][0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("exact_out_matrix[0][1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("exact_out_matrix[0][2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("next_in_vector[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 49.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
	}
}

TRANSITION_LIST("next_in_vector[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 50.0;
	}
}

TRANSITION_LIST("next_in_vector[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("do_not_transpose_output_data")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 49;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("reset")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("out_data[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 10.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "in_vector";
	EXPAND_STATUS = EXPANDED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4;
}

DISPLAY_LINE
{
	CHANNEL = "in_vector[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "in_vector[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "in_vector[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "exact_out_matrix";
	EXPAND_STATUS = EXPANDED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
	CHILDREN = 6, 10, 14;
}

DISPLAY_LINE
{
	CHANNEL = "exact_out_matrix[0]";
	EXPAND_STATUS = EXPANDED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 5;
	CHILDREN = 7, 8, 9;
}

DISPLAY_LINE
{
	CHANNEL = "exact_out_matrix[0][2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 2;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "exact_out_matrix[0][1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 2;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "exact_out_matrix[0][0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 2;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "exact_out_matrix[1]";
	EXPAND_STATUS = EXPANDED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 5;
	CHILDREN = 11, 12, 13;
}

DISPLAY_LINE
{
	CHANNEL = "exact_out_matrix[1][2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 2;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "exact_out_matrix[1][1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 2;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "exact_out_matrix[1][0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 2;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "exact_out_matrix[2]";
	EXPAND_STATUS = EXPANDED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 5;
	CHILDREN = 15, 16, 17;
}

DISPLAY_LINE
{
	CHANNEL = "exact_out_matrix[2][2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 2;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "exact_out_matrix[2][1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 2;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "exact_out_matrix[2][0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 2;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "next_in_vector";
	EXPAND_STATUS = EXPANDED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 0;
	CHILDREN = 19, 20, 21;
}

DISPLAY_LINE
{
	CHANNEL = "next_in_vector[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "next_in_vector[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "next_in_vector[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "out_data";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 0;
	CHILDREN = 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "out_vectors";
	EXPAND_STATUS = EXPANDED;
	RADIX = Binary;
	TREE_INDEX = 52;
	TREE_LEVEL = 0;
	CHILDREN = 53, 57, 61, 65, 69, 73, 77, 81, 85, 89;
}

DISPLAY_LINE
{
	CHANNEL = "out_vectors[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 52;
	CHILDREN = 54, 55, 56;
}

DISPLAY_LINE
{
	CHANNEL = "out_vectors[0][2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 54;
	TREE_LEVEL = 2;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "out_vectors[0][1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 55;
	TREE_LEVEL = 2;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "out_vectors[0][0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 56;
	TREE_LEVEL = 2;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "out_vectors[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 52;
	CHILDREN = 58, 59, 60;
}

DISPLAY_LINE
{
	CHANNEL = "out_vectors[1][2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 58;
	TREE_LEVEL = 2;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "out_vectors[1][1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 59;
	TREE_LEVEL = 2;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "out_vectors[1][0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 60;
	TREE_LEVEL = 2;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "out_vectors[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 52;
	CHILDREN = 62, 63, 64;
}

DISPLAY_LINE
{
	CHANNEL = "out_vectors[2][2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 62;
	TREE_LEVEL = 2;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "out_vectors[2][1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 63;
	TREE_LEVEL = 2;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "out_vectors[2][0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 64;
	TREE_LEVEL = 2;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "out_vectors[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 52;
	CHILDREN = 66, 67, 68;
}

DISPLAY_LINE
{
	CHANNEL = "out_vectors[3][2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 66;
	TREE_LEVEL = 2;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "out_vectors[3][1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 67;
	TREE_LEVEL = 2;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "out_vectors[3][0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 68;
	TREE_LEVEL = 2;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "out_vectors[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 52;
	CHILDREN = 70, 71, 72;
}

DISPLAY_LINE
{
	CHANNEL = "out_vectors[4][2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 70;
	TREE_LEVEL = 2;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "out_vectors[4][1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 71;
	TREE_LEVEL = 2;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "out_vectors[4][0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 72;
	TREE_LEVEL = 2;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "out_vectors[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 52;
	CHILDREN = 74, 75, 76;
}

DISPLAY_LINE
{
	CHANNEL = "out_vectors[5][2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 74;
	TREE_LEVEL = 2;
	PARENT = 73;
}

DISPLAY_LINE
{
	CHANNEL = "out_vectors[5][1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 75;
	TREE_LEVEL = 2;
	PARENT = 73;
}

DISPLAY_LINE
{
	CHANNEL = "out_vectors[5][0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 76;
	TREE_LEVEL = 2;
	PARENT = 73;
}

DISPLAY_LINE
{
	CHANNEL = "out_vectors[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 52;
	CHILDREN = 78, 79, 80;
}

DISPLAY_LINE
{
	CHANNEL = "out_vectors[6][2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 78;
	TREE_LEVEL = 2;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "out_vectors[6][1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 79;
	TREE_LEVEL = 2;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "out_vectors[6][0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 80;
	TREE_LEVEL = 2;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "out_vectors[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 52;
	CHILDREN = 82, 83, 84;
}

DISPLAY_LINE
{
	CHANNEL = "out_vectors[7][2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 82;
	TREE_LEVEL = 2;
	PARENT = 81;
}

DISPLAY_LINE
{
	CHANNEL = "out_vectors[7][1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 83;
	TREE_LEVEL = 2;
	PARENT = 81;
}

DISPLAY_LINE
{
	CHANNEL = "out_vectors[7][0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 84;
	TREE_LEVEL = 2;
	PARENT = 81;
}

DISPLAY_LINE
{
	CHANNEL = "out_vectors[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 85;
	TREE_LEVEL = 1;
	PARENT = 52;
	CHILDREN = 86, 87, 88;
}

DISPLAY_LINE
{
	CHANNEL = "out_vectors[8][2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 86;
	TREE_LEVEL = 2;
	PARENT = 85;
}

DISPLAY_LINE
{
	CHANNEL = "out_vectors[8][1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 87;
	TREE_LEVEL = 2;
	PARENT = 85;
}

DISPLAY_LINE
{
	CHANNEL = "out_vectors[8][0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 88;
	TREE_LEVEL = 2;
	PARENT = 85;
}

DISPLAY_LINE
{
	CHANNEL = "out_vectors[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 52;
	CHILDREN = 90, 91, 92;
}

DISPLAY_LINE
{
	CHANNEL = "out_vectors[9][2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 90;
	TREE_LEVEL = 2;
	PARENT = 89;
}

DISPLAY_LINE
{
	CHANNEL = "out_vectors[9][1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 91;
	TREE_LEVEL = 2;
	PARENT = 89;
}

DISPLAY_LINE
{
	CHANNEL = "out_vectors[9][0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 92;
	TREE_LEVEL = 2;
	PARENT = 89;
}

DISPLAY_LINE
{
	CHANNEL = "the_matrix";
	EXPAND_STATUS = EXPANDED;
	RADIX = Binary;
	TREE_INDEX = 93;
	TREE_LEVEL = 0;
	CHILDREN = 94, 98, 102;
}

DISPLAY_LINE
{
	CHANNEL = "the_matrix[0]";
	EXPAND_STATUS = EXPANDED;
	RADIX = Binary;
	TREE_INDEX = 94;
	TREE_LEVEL = 1;
	PARENT = 93;
	CHILDREN = 95, 96, 97;
}

DISPLAY_LINE
{
	CHANNEL = "the_matrix[0][2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 95;
	TREE_LEVEL = 2;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "the_matrix[0][1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 96;
	TREE_LEVEL = 2;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "the_matrix[0][0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 97;
	TREE_LEVEL = 2;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "the_matrix[1]";
	EXPAND_STATUS = EXPANDED;
	RADIX = Binary;
	TREE_INDEX = 98;
	TREE_LEVEL = 1;
	PARENT = 93;
	CHILDREN = 99, 100, 101;
}

DISPLAY_LINE
{
	CHANNEL = "the_matrix[1][2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 99;
	TREE_LEVEL = 2;
	PARENT = 98;
}

DISPLAY_LINE
{
	CHANNEL = "the_matrix[1][1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 100;
	TREE_LEVEL = 2;
	PARENT = 98;
}

DISPLAY_LINE
{
	CHANNEL = "the_matrix[1][0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 101;
	TREE_LEVEL = 2;
	PARENT = 98;
}

DISPLAY_LINE
{
	CHANNEL = "the_matrix[2]";
	EXPAND_STATUS = EXPANDED;
	RADIX = Binary;
	TREE_INDEX = 102;
	TREE_LEVEL = 1;
	PARENT = 93;
	CHILDREN = 103, 104, 105;
}

DISPLAY_LINE
{
	CHANNEL = "the_matrix[2][2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 103;
	TREE_LEVEL = 2;
	PARENT = 102;
}

DISPLAY_LINE
{
	CHANNEL = "the_matrix[2][1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 104;
	TREE_LEVEL = 2;
	PARENT = 102;
}

DISPLAY_LINE
{
	CHANNEL = "the_matrix[2][0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 105;
	TREE_LEVEL = 2;
	PARENT = 102;
}

DISPLAY_LINE
{
	CHANNEL = "do_not_transpose_output_data";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 106;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "reset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 107;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 29400;
	MASTER = TRUE;
}
;
