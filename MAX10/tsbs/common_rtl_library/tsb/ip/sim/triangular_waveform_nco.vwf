/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("clken")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("reset_n")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("phi_inc_i")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("phi_inc_i[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "phi_inc_i";
}

SIGNAL("phi_inc_i[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "phi_inc_i";
}

SIGNAL("phi_inc_i[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "phi_inc_i";
}

SIGNAL("phi_inc_i[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "phi_inc_i";
}

SIGNAL("phi_inc_i[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "phi_inc_i";
}

SIGNAL("phi_inc_i[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "phi_inc_i";
}

SIGNAL("phase_accumulator")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("phase_accumulator[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "phase_accumulator";
}

SIGNAL("phase_accumulator[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "phase_accumulator";
}

SIGNAL("phase_accumulator[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "phase_accumulator";
}

SIGNAL("phase_accumulator[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "phase_accumulator";
}

SIGNAL("phase_accumulator[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "phase_accumulator";
}

SIGNAL("phase_accumulator[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "phase_accumulator";
}

SIGNAL("triangular_waveform_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("triangular_waveform_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "triangular_waveform_out";
}

SIGNAL("triangular_waveform_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "triangular_waveform_out";
}

SIGNAL("triangular_waveform_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "triangular_waveform_out";
}

SIGNAL("triangular_waveform_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "triangular_waveform_out";
}

SIGNAL("full_scale_triangular_nco_value")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("full_scale_triangular_nco_value[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "full_scale_triangular_nco_value";
}

SIGNAL("full_scale_triangular_nco_value[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "full_scale_triangular_nco_value";
}

SIGNAL("full_scale_triangular_nco_value[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "full_scale_triangular_nco_value";
}

SIGNAL("full_scale_triangular_nco_value[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "full_scale_triangular_nco_value";
}

SIGNAL("full_scale_triangular_nco_value[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "full_scale_triangular_nco_value";
}

SIGNAL("full_scale_triangular_nco_value[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "full_scale_triangular_nco_value";
}

SIGNAL("intermediate_triangular_nco_values")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("intermediate_triangular_nco_values[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "intermediate_triangular_nco_values";
}

SIGNAL("intermediate_triangular_nco_values[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "intermediate_triangular_nco_values";
}

SIGNAL("intermediate_triangular_nco_values[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "intermediate_triangular_nco_values";
}

SIGNAL("intermediate_triangular_nco_values[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "intermediate_triangular_nco_values";
}

SIGNAL("intermediate_triangular_nco_values[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "intermediate_triangular_nco_values";
}

SIGNAL("intermediate_triangular_nco_values[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "intermediate_triangular_nco_values";
}

SIGNAL("to_add_to_triangular_nco_theta")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("to_add_to_triangular_nco_theta[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "to_add_to_triangular_nco_theta";
}

SIGNAL("to_add_to_triangular_nco_theta[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "to_add_to_triangular_nco_theta";
}

SIGNAL("to_add_to_triangular_nco_theta[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "to_add_to_triangular_nco_theta";
}

SIGNAL("to_add_to_triangular_nco_theta[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "to_add_to_triangular_nco_theta";
}

SIGNAL("to_add_to_triangular_nco_theta[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "to_add_to_triangular_nco_theta";
}

SIGNAL("to_add_to_triangular_nco_theta[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "to_add_to_triangular_nco_theta";
}

SIGNAL("temp_triangular_nco_value")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("temp_triangular_nco_value[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "temp_triangular_nco_value";
}

SIGNAL("temp_triangular_nco_value[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "temp_triangular_nco_value";
}

SIGNAL("temp_triangular_nco_value[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "temp_triangular_nco_value";
}

SIGNAL("temp_triangular_nco_value[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "temp_triangular_nco_value";
}

SIGNAL("temp_triangular_nco_value[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "temp_triangular_nco_value";
}

SIGNAL("principal_theta")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("principal_theta[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "principal_theta";
}

SIGNAL("principal_theta[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "principal_theta";
}

SIGNAL("principal_theta[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "principal_theta";
}

SIGNAL("principal_theta[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "principal_theta";
}

SIGNAL("principal_theta[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "principal_theta";
}

SIGNAL("principal_theta[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "principal_theta";
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1000;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
	}
}

TRANSITION_LIST("clken")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 4.8;
		LEVEL 0 FOR 6.5;
		LEVEL 1 FOR 988.7;
	}
}

TRANSITION_LIST("reset_n")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 0.05;
		LEVEL 0 FOR 1.65;
		LEVEL 1 FOR 998.3;
	}
}

TRANSITION_LIST("phi_inc_i[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("phi_inc_i[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("phi_inc_i[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("phi_inc_i[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("phi_inc_i[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("phi_inc_i[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("phase_accumulator[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 39.5;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 32.0;
			LEVEL 0 FOR 32.0;
		}
		LEVEL 1 FOR 0.5;
	}
}

TRANSITION_LIST("phase_accumulator[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 23.5;
		NODE
		{
			REPEAT = 30;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 16.0;
		}
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 0.5;
	}
}

TRANSITION_LIST("phase_accumulator[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.5;
		NODE
		{
			REPEAT = 61;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
		}
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 0.5;
	}
}

TRANSITION_LIST("phase_accumulator[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 11.5;
		NODE
		{
			REPEAT = 123;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 0.5;
	}
}

TRANSITION_LIST("phase_accumulator[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 8.0;
		NODE
		{
			REPEAT = 247;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 0.5;
	}
}

TRANSITION_LIST("phase_accumulator[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 7.0;
		NODE
		{
			REPEAT = 494;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 1.0;
		}
		LEVEL 0 FOR 0.5;
	}
}

TRANSITION_LIST("triangular_waveform_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 39.5;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 32.0;
			LEVEL 0 FOR 32.0;
		}
		LEVEL 1 FOR 0.5;
	}
}

TRANSITION_LIST("triangular_waveform_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.5;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 18.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 16.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
		}
		LEVEL 1 FOR 18.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 0.5;
	}
}

TRANSITION_LIST("triangular_waveform_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 11.5;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 14;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 4.0;
				LEVEL 0 FOR 4.0;
			}
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
	}
}

TRANSITION_LIST("triangular_waveform_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 14;
			LEVEL 1 FOR 6.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 2.0;
				LEVEL 1 FOR 2.0;
			}
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 4.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 2.0;
				LEVEL 1 FOR 2.0;
			}
			LEVEL 0 FOR 4.0;
			NODE
			{
				REPEAT = 7;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.5;
	}
}

TRANSITION_LIST("full_scale_triangular_nco_value[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 39.5;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 32.0;
			LEVEL 0 FOR 32.0;
		}
		LEVEL 1 FOR 0.5;
	}
}

TRANSITION_LIST("full_scale_triangular_nco_value[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.5;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 18.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 16.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
		}
		LEVEL 1 FOR 18.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 0.5;
	}
}

TRANSITION_LIST("full_scale_triangular_nco_value[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 11.5;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 14;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 4.0;
				LEVEL 0 FOR 4.0;
			}
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
	}
}

TRANSITION_LIST("full_scale_triangular_nco_value[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 14;
			LEVEL 1 FOR 6.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 2.0;
				LEVEL 1 FOR 2.0;
			}
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 4.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 2.0;
				LEVEL 1 FOR 2.0;
			}
			LEVEL 0 FOR 4.0;
			NODE
			{
				REPEAT = 7;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.5;
	}
}

TRANSITION_LIST("full_scale_triangular_nco_value[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 7.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 1.0;
		}
		NODE
		{
			REPEAT = 14;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 1.0;
				LEVEL 1 FOR 4.0;
				NODE
				{
					REPEAT = 13;
					LEVEL 0 FOR 1.0;
					LEVEL 1 FOR 1.0;
				}
			}
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 1.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 4.0;
			NODE
			{
				REPEAT = 13;
				LEVEL 0 FOR 1.0;
				LEVEL 1 FOR 1.0;
			}
		}
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 1.0;
		}
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
	}
}

TRANSITION_LIST("full_scale_triangular_nco_value[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("intermediate_triangular_nco_values[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 39.5;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 32.0;
			LEVEL 0 FOR 32.0;
		}
		LEVEL 1 FOR 0.5;
	}
}

TRANSITION_LIST("intermediate_triangular_nco_values[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 23.5;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 32.0;
			LEVEL 0 FOR 16.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 14.0;
		LEVEL 1 FOR 0.5;
	}
}

TRANSITION_LIST("intermediate_triangular_nco_values[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.5;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 16.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
		}
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 0.5;
	}
}

TRANSITION_LIST("intermediate_triangular_nco_values[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 11.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 14;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 4.0;
				LEVEL 0 FOR 4.0;
			}
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 4.0;
				LEVEL 0 FOR 2.0;
				LEVEL 1 FOR 4.0;
				LEVEL 0 FOR 4.0;
			}
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
	}
}

TRANSITION_LIST("intermediate_triangular_nco_values[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 8.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 14;
			LEVEL 1 FOR 4.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 2.0;
				LEVEL 1 FOR 2.0;
			}
			LEVEL 0 FOR 4.0;
			NODE
			{
				REPEAT = 11;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.5;
	}
}

TRANSITION_LIST("intermediate_triangular_nco_values[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 7.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 1.0;
		}
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 14;
			LEVEL 1 FOR 2.0;
			NODE
			{
				REPEAT = 15;
				LEVEL 0 FOR 1.0;
				LEVEL 1 FOR 1.0;
			}
			LEVEL 0 FOR 2.0;
			NODE
			{
				REPEAT = 15;
				LEVEL 1 FOR 1.0;
				LEVEL 0 FOR 1.0;
			}
		}
		LEVEL 1 FOR 2.0;
		NODE
		{
			REPEAT = 15;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 1.0;
		}
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 2.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 1.0;
		}
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
	}
}

TRANSITION_LIST("to_add_to_triangular_nco_theta[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 23.5;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 48.0;
		}
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 0.5;
	}
}

TRANSITION_LIST("to_add_to_triangular_nco_theta[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 55.5;
		NODE
		{
			REPEAT = 14;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 48.0;
		}
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 32.5;
	}
}

TRANSITION_LIST("to_add_to_triangular_nco_theta[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 23.5;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 48.0;
		}
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 0.5;
	}
}

TRANSITION_LIST("to_add_to_triangular_nco_theta[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 23.5;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 48.0;
		}
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 0.5;
	}
}

TRANSITION_LIST("to_add_to_triangular_nco_theta[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 23.5;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 48.0;
		}
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 0.5;
	}
}

TRANSITION_LIST("to_add_to_triangular_nco_theta[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("temp_triangular_nco_value[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 39.5;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 32.0;
			LEVEL 0 FOR 32.0;
		}
		LEVEL 1 FOR 0.5;
	}
}

TRANSITION_LIST("temp_triangular_nco_value[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.5;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 18.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 16.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
		}
		LEVEL 1 FOR 18.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 0.5;
	}
}

TRANSITION_LIST("temp_triangular_nco_value[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 11.5;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 14;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 4.0;
				LEVEL 0 FOR 4.0;
			}
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
	}
}

TRANSITION_LIST("temp_triangular_nco_value[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 14;
			LEVEL 1 FOR 6.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 2.0;
				LEVEL 1 FOR 2.0;
			}
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 4.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 2.0;
				LEVEL 1 FOR 2.0;
			}
			LEVEL 0 FOR 4.0;
			NODE
			{
				REPEAT = 7;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.5;
	}
}

TRANSITION_LIST("temp_triangular_nco_value[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 7.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 1.0;
		}
		NODE
		{
			REPEAT = 14;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 1.0;
				LEVEL 1 FOR 4.0;
				NODE
				{
					REPEAT = 13;
					LEVEL 0 FOR 1.0;
					LEVEL 1 FOR 1.0;
				}
			}
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 1.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 4.0;
			NODE
			{
				REPEAT = 13;
				LEVEL 0 FOR 1.0;
				LEVEL 1 FOR 1.0;
			}
		}
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 1.0;
		}
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
	}
}

TRANSITION_LIST("principal_theta[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("principal_theta[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("principal_theta[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.5;
		NODE
		{
			REPEAT = 61;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
		}
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 0.5;
	}
}

TRANSITION_LIST("principal_theta[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 11.5;
		NODE
		{
			REPEAT = 123;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 0.5;
	}
}

TRANSITION_LIST("principal_theta[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 8.0;
		NODE
		{
			REPEAT = 247;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 0.5;
	}
}

TRANSITION_LIST("principal_theta[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 7.0;
		NODE
		{
			REPEAT = 494;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 1.0;
		}
		LEVEL 0 FOR 0.5;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clken";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "reset_n";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "phi_inc_i";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
	CHILDREN = 4, 5, 6, 7, 8, 9;
}

DISPLAY_LINE
{
	CHANNEL = "phi_inc_i[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "phi_inc_i[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "phi_inc_i[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "phi_inc_i[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "phi_inc_i[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "phi_inc_i[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "phase_accumulator";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
	CHILDREN = 11, 12, 13, 14, 15, 16;
}

DISPLAY_LINE
{
	CHANNEL = "phase_accumulator[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "phase_accumulator[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "phase_accumulator[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "phase_accumulator[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "phase_accumulator[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "phase_accumulator[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "triangular_waveform_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 17;
	TREE_LEVEL = 0;
	CHILDREN = 18, 19, 20, 21;
}

DISPLAY_LINE
{
	CHANNEL = "triangular_waveform_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "triangular_waveform_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "triangular_waveform_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "triangular_waveform_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "full_scale_triangular_nco_value";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 22;
	TREE_LEVEL = 0;
	CHILDREN = 23, 24, 25, 26, 27, 28;
}

DISPLAY_LINE
{
	CHANNEL = "full_scale_triangular_nco_value[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "full_scale_triangular_nco_value[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "full_scale_triangular_nco_value[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "full_scale_triangular_nco_value[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "full_scale_triangular_nco_value[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "full_scale_triangular_nco_value[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "intermediate_triangular_nco_values";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 29;
	TREE_LEVEL = 0;
	CHILDREN = 30, 31, 32, 33, 34, 35;
}

DISPLAY_LINE
{
	CHANNEL = "intermediate_triangular_nco_values[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "intermediate_triangular_nco_values[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "intermediate_triangular_nco_values[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "intermediate_triangular_nco_values[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "intermediate_triangular_nco_values[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "intermediate_triangular_nco_values[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "to_add_to_triangular_nco_theta";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 36;
	TREE_LEVEL = 0;
	CHILDREN = 37, 38, 39, 40, 41, 42;
}

DISPLAY_LINE
{
	CHANNEL = "to_add_to_triangular_nco_theta[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "to_add_to_triangular_nco_theta[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "to_add_to_triangular_nco_theta[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "to_add_to_triangular_nco_theta[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "to_add_to_triangular_nco_theta[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "to_add_to_triangular_nco_theta[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "temp_triangular_nco_value";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 43;
	TREE_LEVEL = 0;
	CHILDREN = 44, 45, 46, 47, 48;
}

DISPLAY_LINE
{
	CHANNEL = "temp_triangular_nco_value[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "temp_triangular_nco_value[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "temp_triangular_nco_value[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "temp_triangular_nco_value[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "temp_triangular_nco_value[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "principal_theta";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 49;
	TREE_LEVEL = 0;
	CHILDREN = 50, 51, 52, 53, 54, 55;
}

DISPLAY_LINE
{
	CHANNEL = "principal_theta[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "principal_theta[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "principal_theta[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "principal_theta[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "principal_theta[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "principal_theta[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 49;
}

TIME_BAR
{
	TIME = 13775;
	MASTER = TRUE;
}
;
