/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 1.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("async_clear_event_discord")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("async_reset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("counter_a")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("counter_a[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_a";
}

SIGNAL("counter_a[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_a";
}

SIGNAL("counter_a[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_a";
}

SIGNAL("counter_a[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_a";
}

SIGNAL("counter_a[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_a";
}

SIGNAL("counter_a[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_a";
}

SIGNAL("counter_a[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_a";
}

SIGNAL("counter_a[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_a";
}

SIGNAL("counter_a[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_a";
}

SIGNAL("counter_a[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_a";
}

SIGNAL("counter_a[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_a";
}

SIGNAL("counter_a[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_a";
}

SIGNAL("counter_a[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_a";
}

SIGNAL("counter_a[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_a";
}

SIGNAL("counter_a[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_a";
}

SIGNAL("counter_a[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_a";
}

SIGNAL("counter_a[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_a";
}

SIGNAL("counter_a[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_a";
}

SIGNAL("counter_a[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_a";
}

SIGNAL("counter_a[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_a";
}

SIGNAL("counter_a[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_a";
}

SIGNAL("counter_a[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_a";
}

SIGNAL("counter_a[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_a";
}

SIGNAL("counter_a[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_a";
}

SIGNAL("counter_a[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_a";
}

SIGNAL("counter_a[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_a";
}

SIGNAL("counter_a[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_a";
}

SIGNAL("counter_a[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_a";
}

SIGNAL("counter_a[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_a";
}

SIGNAL("counter_a[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_a";
}

SIGNAL("counter_a[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_a";
}

SIGNAL("counter_a[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_a";
}

SIGNAL("counter_b")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("counter_b[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_b";
}

SIGNAL("counter_b[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_b";
}

SIGNAL("counter_b[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_b";
}

SIGNAL("counter_b[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_b";
}

SIGNAL("counter_b[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_b";
}

SIGNAL("counter_b[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_b";
}

SIGNAL("counter_b[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_b";
}

SIGNAL("counter_b[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_b";
}

SIGNAL("counter_b[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_b";
}

SIGNAL("counter_b[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_b";
}

SIGNAL("counter_b[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_b";
}

SIGNAL("counter_b[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_b";
}

SIGNAL("counter_b[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_b";
}

SIGNAL("counter_b[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_b";
}

SIGNAL("counter_b[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_b";
}

SIGNAL("counter_b[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_b";
}

SIGNAL("counter_b[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_b";
}

SIGNAL("counter_b[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_b";
}

SIGNAL("counter_b[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_b";
}

SIGNAL("counter_b[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_b";
}

SIGNAL("counter_b[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_b";
}

SIGNAL("counter_b[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_b";
}

SIGNAL("counter_b[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_b";
}

SIGNAL("counter_b[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_b";
}

SIGNAL("counter_b[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_b";
}

SIGNAL("counter_b[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_b";
}

SIGNAL("counter_b[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_b";
}

SIGNAL("counter_b[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_b";
}

SIGNAL("counter_b[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_b";
}

SIGNAL("counter_b[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_b";
}

SIGNAL("counter_b[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_b";
}

SIGNAL("counter_b[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter_b";
}

SIGNAL("diff_counter")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("diff_counter[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "diff_counter";
}

SIGNAL("diff_counter[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "diff_counter";
}

SIGNAL("diff_counter[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "diff_counter";
}

SIGNAL("diff_counter[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "diff_counter";
}

SIGNAL("diff_counter[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "diff_counter";
}

SIGNAL("diff_counter[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "diff_counter";
}

SIGNAL("diff_counter[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "diff_counter";
}

SIGNAL("diff_counter[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "diff_counter";
}

SIGNAL("diff_counter[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "diff_counter";
}

SIGNAL("diff_counter[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "diff_counter";
}

SIGNAL("diff_counter[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "diff_counter";
}

SIGNAL("diff_counter[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "diff_counter";
}

SIGNAL("diff_counter[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "diff_counter";
}

SIGNAL("diff_counter[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "diff_counter";
}

SIGNAL("diff_counter[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "diff_counter";
}

SIGNAL("diff_counter[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "diff_counter";
}

SIGNAL("diff_counter[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "diff_counter";
}

SIGNAL("diff_counter[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "diff_counter";
}

SIGNAL("diff_counter[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "diff_counter";
}

SIGNAL("diff_counter[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "diff_counter";
}

SIGNAL("diff_counter[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "diff_counter";
}

SIGNAL("diff_counter[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "diff_counter";
}

SIGNAL("diff_counter[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "diff_counter";
}

SIGNAL("diff_counter[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "diff_counter";
}

SIGNAL("diff_counter[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "diff_counter";
}

SIGNAL("diff_counter[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "diff_counter";
}

SIGNAL("diff_counter[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "diff_counter";
}

SIGNAL("diff_counter[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "diff_counter";
}

SIGNAL("diff_counter[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "diff_counter";
}

SIGNAL("diff_counter[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "diff_counter";
}

SIGNAL("diff_counter[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "diff_counter";
}

SIGNAL("diff_counter[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "diff_counter";
}

SIGNAL("enable")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("event_a")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("event_b")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("event_discord")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("sync_clear_event_discord")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("sync_enable")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("sync_reset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("counter_a_increment")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("counter_a_increment[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_a_increment";
}

SIGNAL("counter_a_increment[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_a_increment";
}

SIGNAL("counter_a_increment[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_a_increment";
}

SIGNAL("counter_a_increment[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_a_increment";
}

SIGNAL("counter_a_increment[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_a_increment";
}

SIGNAL("counter_a_increment[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_a_increment";
}

SIGNAL("counter_a_increment[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_a_increment";
}

SIGNAL("counter_a_increment[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_a_increment";
}

SIGNAL("counter_a_increment[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_a_increment";
}

SIGNAL("counter_a_increment[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_a_increment";
}

SIGNAL("counter_a_increment[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_a_increment";
}

SIGNAL("counter_a_increment[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_a_increment";
}

SIGNAL("counter_a_increment[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_a_increment";
}

SIGNAL("counter_a_increment[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_a_increment";
}

SIGNAL("counter_a_increment[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_a_increment";
}

SIGNAL("counter_a_increment[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_a_increment";
}

SIGNAL("counter_a_increment[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_a_increment";
}

SIGNAL("counter_a_increment[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_a_increment";
}

SIGNAL("counter_a_increment[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_a_increment";
}

SIGNAL("counter_a_increment[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_a_increment";
}

SIGNAL("counter_a_increment[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_a_increment";
}

SIGNAL("counter_a_increment[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_a_increment";
}

SIGNAL("counter_a_increment[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_a_increment";
}

SIGNAL("counter_a_increment[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_a_increment";
}

SIGNAL("counter_a_increment[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_a_increment";
}

SIGNAL("counter_a_increment[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_a_increment";
}

SIGNAL("counter_a_increment[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_a_increment";
}

SIGNAL("counter_a_increment[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_a_increment";
}

SIGNAL("counter_a_increment[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_a_increment";
}

SIGNAL("counter_a_increment[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_a_increment";
}

SIGNAL("counter_a_increment[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_a_increment";
}

SIGNAL("counter_a_increment[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_a_increment";
}

SIGNAL("counter_b_increment")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("counter_b_increment[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_b_increment";
}

SIGNAL("counter_b_increment[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_b_increment";
}

SIGNAL("counter_b_increment[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_b_increment";
}

SIGNAL("counter_b_increment[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_b_increment";
}

SIGNAL("counter_b_increment[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_b_increment";
}

SIGNAL("counter_b_increment[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_b_increment";
}

SIGNAL("counter_b_increment[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_b_increment";
}

SIGNAL("counter_b_increment[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_b_increment";
}

SIGNAL("counter_b_increment[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_b_increment";
}

SIGNAL("counter_b_increment[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_b_increment";
}

SIGNAL("counter_b_increment[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_b_increment";
}

SIGNAL("counter_b_increment[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_b_increment";
}

SIGNAL("counter_b_increment[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_b_increment";
}

SIGNAL("counter_b_increment[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_b_increment";
}

SIGNAL("counter_b_increment[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_b_increment";
}

SIGNAL("counter_b_increment[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_b_increment";
}

SIGNAL("counter_b_increment[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_b_increment";
}

SIGNAL("counter_b_increment[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_b_increment";
}

SIGNAL("counter_b_increment[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_b_increment";
}

SIGNAL("counter_b_increment[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_b_increment";
}

SIGNAL("counter_b_increment[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_b_increment";
}

SIGNAL("counter_b_increment[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_b_increment";
}

SIGNAL("counter_b_increment[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_b_increment";
}

SIGNAL("counter_b_increment[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_b_increment";
}

SIGNAL("counter_b_increment[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_b_increment";
}

SIGNAL("counter_b_increment[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_b_increment";
}

SIGNAL("counter_b_increment[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_b_increment";
}

SIGNAL("counter_b_increment[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_b_increment";
}

SIGNAL("counter_b_increment[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_b_increment";
}

SIGNAL("counter_b_increment[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_b_increment";
}

SIGNAL("counter_b_increment[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_b_increment";
}

SIGNAL("counter_b_increment[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "counter_b_increment";
}

SIGNAL("negative_discord_thresh")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("negative_discord_thresh[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "negative_discord_thresh";
}

SIGNAL("negative_discord_thresh[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "negative_discord_thresh";
}

SIGNAL("negative_discord_thresh[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "negative_discord_thresh";
}

SIGNAL("negative_discord_thresh[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "negative_discord_thresh";
}

SIGNAL("negative_discord_thresh[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "negative_discord_thresh";
}

SIGNAL("negative_discord_thresh[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "negative_discord_thresh";
}

SIGNAL("negative_discord_thresh[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "negative_discord_thresh";
}

SIGNAL("negative_discord_thresh[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "negative_discord_thresh";
}

SIGNAL("negative_discord_thresh[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "negative_discord_thresh";
}

SIGNAL("negative_discord_thresh[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "negative_discord_thresh";
}

SIGNAL("negative_discord_thresh[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "negative_discord_thresh";
}

SIGNAL("negative_discord_thresh[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "negative_discord_thresh";
}

SIGNAL("negative_discord_thresh[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "negative_discord_thresh";
}

SIGNAL("negative_discord_thresh[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "negative_discord_thresh";
}

SIGNAL("negative_discord_thresh[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "negative_discord_thresh";
}

SIGNAL("negative_discord_thresh[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "negative_discord_thresh";
}

SIGNAL("negative_discord_thresh[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "negative_discord_thresh";
}

SIGNAL("negative_discord_thresh[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "negative_discord_thresh";
}

SIGNAL("negative_discord_thresh[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "negative_discord_thresh";
}

SIGNAL("negative_discord_thresh[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "negative_discord_thresh";
}

SIGNAL("negative_discord_thresh[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "negative_discord_thresh";
}

SIGNAL("negative_discord_thresh[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "negative_discord_thresh";
}

SIGNAL("negative_discord_thresh[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "negative_discord_thresh";
}

SIGNAL("negative_discord_thresh[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "negative_discord_thresh";
}

SIGNAL("negative_discord_thresh[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "negative_discord_thresh";
}

SIGNAL("negative_discord_thresh[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "negative_discord_thresh";
}

SIGNAL("negative_discord_thresh[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "negative_discord_thresh";
}

SIGNAL("negative_discord_thresh[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "negative_discord_thresh";
}

SIGNAL("negative_discord_thresh[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "negative_discord_thresh";
}

SIGNAL("negative_discord_thresh[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "negative_discord_thresh";
}

SIGNAL("negative_discord_thresh[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "negative_discord_thresh";
}

SIGNAL("negative_discord_thresh[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "negative_discord_thresh";
}

SIGNAL("positive_discord_thresh")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("positive_discord_thresh[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "positive_discord_thresh";
}

SIGNAL("positive_discord_thresh[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "positive_discord_thresh";
}

SIGNAL("positive_discord_thresh[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "positive_discord_thresh";
}

SIGNAL("positive_discord_thresh[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "positive_discord_thresh";
}

SIGNAL("positive_discord_thresh[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "positive_discord_thresh";
}

SIGNAL("positive_discord_thresh[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "positive_discord_thresh";
}

SIGNAL("positive_discord_thresh[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "positive_discord_thresh";
}

SIGNAL("positive_discord_thresh[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "positive_discord_thresh";
}

SIGNAL("positive_discord_thresh[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "positive_discord_thresh";
}

SIGNAL("positive_discord_thresh[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "positive_discord_thresh";
}

SIGNAL("positive_discord_thresh[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "positive_discord_thresh";
}

SIGNAL("positive_discord_thresh[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "positive_discord_thresh";
}

SIGNAL("positive_discord_thresh[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "positive_discord_thresh";
}

SIGNAL("positive_discord_thresh[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "positive_discord_thresh";
}

SIGNAL("positive_discord_thresh[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "positive_discord_thresh";
}

SIGNAL("positive_discord_thresh[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "positive_discord_thresh";
}

SIGNAL("positive_discord_thresh[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "positive_discord_thresh";
}

SIGNAL("positive_discord_thresh[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "positive_discord_thresh";
}

SIGNAL("positive_discord_thresh[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "positive_discord_thresh";
}

SIGNAL("positive_discord_thresh[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "positive_discord_thresh";
}

SIGNAL("positive_discord_thresh[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "positive_discord_thresh";
}

SIGNAL("positive_discord_thresh[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "positive_discord_thresh";
}

SIGNAL("positive_discord_thresh[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "positive_discord_thresh";
}

SIGNAL("positive_discord_thresh[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "positive_discord_thresh";
}

SIGNAL("positive_discord_thresh[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "positive_discord_thresh";
}

SIGNAL("positive_discord_thresh[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "positive_discord_thresh";
}

SIGNAL("positive_discord_thresh[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "positive_discord_thresh";
}

SIGNAL("positive_discord_thresh[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "positive_discord_thresh";
}

SIGNAL("positive_discord_thresh[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "positive_discord_thresh";
}

SIGNAL("positive_discord_thresh[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "positive_discord_thresh";
}

SIGNAL("positive_discord_thresh[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "positive_discord_thresh";
}

SIGNAL("positive_discord_thresh[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "positive_discord_thresh";
}

TRANSITION_LIST("async_clear_event_discord")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 744.0;
	}
}

TRANSITION_LIST("async_reset")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 472.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 208.0;
	}
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1000;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
	}
}

TRANSITION_LIST("counter_a[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 709.5;
		LEVEL 1 FOR 61.0;
		LEVEL 0 FOR 229.5;
	}
}

TRANSITION_LIST("counter_a[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 219.5;
		LEVEL 1 FOR 63.0;
		LEVEL 0 FOR 217.0;
		LEVEL 1 FOR 210.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 10.5;
	}
}

TRANSITION_LIST("counter_a[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 109.5;
		LEVEL 1 FOR 110.0;
		LEVEL 0 FOR 170.0;
		LEVEL 1 FOR 110.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 110.0;
		LEVEL 0 FOR 170.0;
		LEVEL 1 FOR 110.0;
		LEVEL 0 FOR 10.5;
	}
}

TRANSITION_LIST("counter_a[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 59.5;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 13.0;
		LEVEL 0 FOR 57.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 11.0;
		LEVEL 0 FOR 59.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 10.5;
	}
}

TRANSITION_LIST("counter_a[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 29.5;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.5;
	}
}

TRANSITION_LIST("counter_a[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 19.5;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 17.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 0.5;
	}
}

TRANSITION_LIST("counter_a[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 9.5;
		NODE
		{
			REPEAT = 19;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 9.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 0.5;
	}
}

TRANSITION_LIST("counter_a[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 9.5;
		NODE
		{
			REPEAT = 38;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 9.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 0.5;
	}
}

TRANSITION_LIST("counter_b[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 722.5;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 229.5;
	}
}

TRANSITION_LIST("counter_b[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 191.5;
		LEVEL 1 FOR 91.0;
		LEVEL 0 FOR 248.0;
		LEVEL 1 FOR 192.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 37.5;
	}
}

TRANSITION_LIST("counter_b[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 95.5;
		LEVEL 1 FOR 96.0;
		LEVEL 0 FOR 216.0;
		LEVEL 1 FOR 123.0;
		LEVEL 0 FOR 96.0;
		LEVEL 1 FOR 96.0;
		LEVEL 0 FOR 144.0;
		LEVEL 1 FOR 96.0;
		LEVEL 0 FOR 37.5;
	}
}

TRANSITION_LIST("counter_b[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 47.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 48.0;
			LEVEL 0 FOR 48.0;
		}
		LEVEL 1 FOR 43.0;
		LEVEL 0 FOR 61.0;
		LEVEL 1 FOR 64.0;
		LEVEL 0 FOR 64.0;
		LEVEL 1 FOR 59.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 48.0;
			LEVEL 1 FOR 48.0;
		}
		LEVEL 0 FOR 96.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 48.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 37.5;
	}
}

TRANSITION_LIST("counter_b[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 23.5;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 24.0;
		}
		LEVEL 1 FOR 19.0;
		LEVEL 0 FOR 29.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 32.0;
			LEVEL 0 FOR 32.0;
		}
		LEVEL 1 FOR 27.0;
		NODE
		{
			REPEAT = 9;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 24.0;
		}
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 13.5;
	}
}

TRANSITION_LIST("counter_b[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 11.5;
		NODE
		{
			REPEAT = 10;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
		}
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 13.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 16.0;
		}
		LEVEL 1 FOR 11.0;
		NODE
		{
			REPEAT = 19;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
		}
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 1.5;
	}
}

TRANSITION_LIST("counter_b[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.5;
		NODE
		{
			REPEAT = 21;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
		}
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 16;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
		}
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 39;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
		}
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 1.5;
	}
}

TRANSITION_LIST("counter_b[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2.5;
		NODE
		{
			REPEAT = 43;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
		}
		LEVEL 1 FOR 3.0;
		NODE
		{
			REPEAT = 32;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 79;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
		}
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 1.5;
	}
}

TRANSITION_LIST("diff_counter[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 261.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 464.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 198.5;
	}
}

TRANSITION_LIST("diff_counter[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 261.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 464.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 198.5;
	}
}

TRANSITION_LIST("diff_counter[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 261.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 464.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 198.5;
	}
}

TRANSITION_LIST("diff_counter[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 261.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 464.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 198.5;
	}
}

TRANSITION_LIST("diff_counter[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 261.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 464.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 198.5;
	}
}

TRANSITION_LIST("diff_counter[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 261.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 464.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 198.5;
	}
}

TRANSITION_LIST("diff_counter[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 261.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 464.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 198.5;
	}
}

TRANSITION_LIST("diff_counter[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 261.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 464.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 198.5;
	}
}

TRANSITION_LIST("diff_counter[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 261.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 464.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 198.5;
	}
}

TRANSITION_LIST("diff_counter[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 261.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 464.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 198.5;
	}
}

TRANSITION_LIST("diff_counter[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 261.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 464.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 198.5;
	}
}

TRANSITION_LIST("diff_counter[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 261.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 464.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 198.5;
	}
}

TRANSITION_LIST("diff_counter[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 261.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 464.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 198.5;
	}
}

TRANSITION_LIST("diff_counter[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 261.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 464.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 198.5;
	}
}

TRANSITION_LIST("diff_counter[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 261.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 464.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 198.5;
	}
}

TRANSITION_LIST("diff_counter[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 261.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 464.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 198.5;
	}
}

TRANSITION_LIST("diff_counter[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 261.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 464.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 198.5;
	}
}

TRANSITION_LIST("diff_counter[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 261.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 464.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 198.5;
	}
}

TRANSITION_LIST("diff_counter[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 261.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 464.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 198.5;
	}
}

TRANSITION_LIST("diff_counter[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 261.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 464.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 198.5;
	}
}

TRANSITION_LIST("diff_counter[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 261.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 464.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 198.5;
	}
}

TRANSITION_LIST("diff_counter[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 261.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 464.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 198.5;
	}
}

TRANSITION_LIST("diff_counter[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 261.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 464.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 198.5;
	}
}

TRANSITION_LIST("diff_counter[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 261.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 464.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 198.5;
	}
}

TRANSITION_LIST("diff_counter[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 261.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 464.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 198.5;
	}
}

TRANSITION_LIST("diff_counter[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 261.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 464.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 198.5;
	}
}

TRANSITION_LIST("diff_counter[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 261.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 464.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 198.5;
	}
}

TRANSITION_LIST("diff_counter[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 261.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 464.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 198.5;
	}
}

TRANSITION_LIST("diff_counter[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 168.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 9.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 109.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 123.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 168.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.5;
	}
}

TRANSITION_LIST("diff_counter[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 48.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 9.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 8.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 48.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 48.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 3.5;
	}
}

TRANSITION_LIST("diff_counter[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 3.0;
		}
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 3.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 3.0;
		}
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 3.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 3.0;
		}
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 4.0;
				LEVEL 0 FOR 8.0;
			}
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 4.0;
				LEVEL 1 FOR 8.0;
			}
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
		}
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 3.0;
		}
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 3.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 3.0;
		}
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 3.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 3.0;
		}
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 3.0;
		}
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 3.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 3.0;
		}
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 3.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 3.5;
	}
}

TRANSITION_LIST("diff_counter[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 0.5;
	}
}

TRANSITION_LIST("enable")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("event_a")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 100;
			LEVEL 0 FOR 9.0;
			LEVEL 1 FOR 1.0;
		}
	}
}

TRANSITION_LIST("event_b")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.98;
		LEVEL 1 FOR 1.02;
		NODE
		{
			REPEAT = 87;
			LEVEL 0 FOR 1.98;
			LEVEL 1 FOR 1.02;
		}
		NODE
		{
			REPEAT = 64;
			LEVEL 0 FOR 2.72;
			LEVEL 1 FOR 1.28;
		}
		LEVEL 0 FOR 1.04;
		LEVEL 1 FOR 0.96;
		NODE
		{
			REPEAT = 68;
			LEVEL 0 FOR 2.04;
			LEVEL 1 FOR 0.96;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.98;
		LEVEL 1 FOR 1.02;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 1.98;
			LEVEL 1 FOR 1.02;
		}
		LEVEL 0 FOR 1.98;
		LEVEL 1 FOR 1.02;
		NODE
		{
			REPEAT = 84;
			LEVEL 0 FOR 1.98;
			LEVEL 1 FOR 1.02;
		}
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("event_discord")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.5;
		LEVEL 1 FOR 202.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 39.0;
		LEVEL 0 FOR 69.0;
		LEVEL 1 FOR 419.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 179.5;
	}
}

TRANSITION_LIST("sync_clear_event_discord")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 241.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 757.5;
	}
}

TRANSITION_LIST("sync_enable")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 998.5;
	}
}

TRANSITION_LIST("sync_reset")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 281.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 487.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 229.5;
	}
}

TRANSITION_LIST("counter_a_increment[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a_increment[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a_increment[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a_increment[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a_increment[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a_increment[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a_increment[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a_increment[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a_increment[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a_increment[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a_increment[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a_increment[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a_increment[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a_increment[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a_increment[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a_increment[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a_increment[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a_increment[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a_increment[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a_increment[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a_increment[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a_increment[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a_increment[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a_increment[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a_increment[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a_increment[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a_increment[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a_increment[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a_increment[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a_increment[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a_increment[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_a_increment[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b_increment[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b_increment[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b_increment[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b_increment[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b_increment[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b_increment[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b_increment[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b_increment[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b_increment[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b_increment[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b_increment[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b_increment[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b_increment[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b_increment[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b_increment[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b_increment[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b_increment[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b_increment[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b_increment[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b_increment[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b_increment[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b_increment[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b_increment[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b_increment[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b_increment[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b_increment[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b_increment[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b_increment[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b_increment[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b_increment[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b_increment[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter_b_increment[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("negative_discord_thresh[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("negative_discord_thresh[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("negative_discord_thresh[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("negative_discord_thresh[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("negative_discord_thresh[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("negative_discord_thresh[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("negative_discord_thresh[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("negative_discord_thresh[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("negative_discord_thresh[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("negative_discord_thresh[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("negative_discord_thresh[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("negative_discord_thresh[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("negative_discord_thresh[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("negative_discord_thresh[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("negative_discord_thresh[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("negative_discord_thresh[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("negative_discord_thresh[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("negative_discord_thresh[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("negative_discord_thresh[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("negative_discord_thresh[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("negative_discord_thresh[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("negative_discord_thresh[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("negative_discord_thresh[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("negative_discord_thresh[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("negative_discord_thresh[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("negative_discord_thresh[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("negative_discord_thresh[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("negative_discord_thresh[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("negative_discord_thresh[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("negative_discord_thresh[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("negative_discord_thresh[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("negative_discord_thresh[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("positive_discord_thresh[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("positive_discord_thresh[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("positive_discord_thresh[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("positive_discord_thresh[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("positive_discord_thresh[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("positive_discord_thresh[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("positive_discord_thresh[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("positive_discord_thresh[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("positive_discord_thresh[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("positive_discord_thresh[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("positive_discord_thresh[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("positive_discord_thresh[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("positive_discord_thresh[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("positive_discord_thresh[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("positive_discord_thresh[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("positive_discord_thresh[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("positive_discord_thresh[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("positive_discord_thresh[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("positive_discord_thresh[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("positive_discord_thresh[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("positive_discord_thresh[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("positive_discord_thresh[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("positive_discord_thresh[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("positive_discord_thresh[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("positive_discord_thresh[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("positive_discord_thresh[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("positive_discord_thresh[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("positive_discord_thresh[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("positive_discord_thresh[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("positive_discord_thresh[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("positive_discord_thresh[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("positive_discord_thresh[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "async_clear_event_discord";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "async_reset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "enable";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "event_a";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "event_b";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
	CHILDREN = 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 0;
	CHILDREN = 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "diff_counter";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 72;
	TREE_LEVEL = 0;
	CHILDREN = 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104;
}

DISPLAY_LINE
{
	CHANNEL = "diff_counter[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "diff_counter[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "diff_counter[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "diff_counter[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "diff_counter[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "diff_counter[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "diff_counter[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "diff_counter[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "diff_counter[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "diff_counter[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "diff_counter[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "diff_counter[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "diff_counter[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 85;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "diff_counter[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 86;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "diff_counter[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "diff_counter[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "diff_counter[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "diff_counter[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 90;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "diff_counter[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 91;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "diff_counter[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 92;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "diff_counter[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 93;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "diff_counter[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 94;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "diff_counter[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 95;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "diff_counter[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 96;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "diff_counter[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 97;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "diff_counter[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 98;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "diff_counter[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 99;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "diff_counter[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 100;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "diff_counter[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 101;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "diff_counter[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 102;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "diff_counter[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 103;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "diff_counter[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 104;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "event_discord";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 105;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sync_clear_event_discord";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 106;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sync_enable";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 107;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sync_reset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 108;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a_increment";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 109;
	TREE_LEVEL = 0;
	CHILDREN = 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a_increment[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 110;
	TREE_LEVEL = 1;
	PARENT = 109;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a_increment[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 111;
	TREE_LEVEL = 1;
	PARENT = 109;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a_increment[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 112;
	TREE_LEVEL = 1;
	PARENT = 109;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a_increment[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 113;
	TREE_LEVEL = 1;
	PARENT = 109;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a_increment[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 114;
	TREE_LEVEL = 1;
	PARENT = 109;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a_increment[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 115;
	TREE_LEVEL = 1;
	PARENT = 109;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a_increment[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 116;
	TREE_LEVEL = 1;
	PARENT = 109;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a_increment[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 117;
	TREE_LEVEL = 1;
	PARENT = 109;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a_increment[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 118;
	TREE_LEVEL = 1;
	PARENT = 109;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a_increment[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 119;
	TREE_LEVEL = 1;
	PARENT = 109;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a_increment[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 120;
	TREE_LEVEL = 1;
	PARENT = 109;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a_increment[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 121;
	TREE_LEVEL = 1;
	PARENT = 109;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a_increment[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 122;
	TREE_LEVEL = 1;
	PARENT = 109;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a_increment[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 123;
	TREE_LEVEL = 1;
	PARENT = 109;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a_increment[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 124;
	TREE_LEVEL = 1;
	PARENT = 109;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a_increment[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 125;
	TREE_LEVEL = 1;
	PARENT = 109;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a_increment[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 126;
	TREE_LEVEL = 1;
	PARENT = 109;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a_increment[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 127;
	TREE_LEVEL = 1;
	PARENT = 109;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a_increment[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 128;
	TREE_LEVEL = 1;
	PARENT = 109;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a_increment[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 129;
	TREE_LEVEL = 1;
	PARENT = 109;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a_increment[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 130;
	TREE_LEVEL = 1;
	PARENT = 109;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a_increment[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 131;
	TREE_LEVEL = 1;
	PARENT = 109;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a_increment[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 132;
	TREE_LEVEL = 1;
	PARENT = 109;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a_increment[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 133;
	TREE_LEVEL = 1;
	PARENT = 109;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a_increment[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 134;
	TREE_LEVEL = 1;
	PARENT = 109;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a_increment[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 135;
	TREE_LEVEL = 1;
	PARENT = 109;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a_increment[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 136;
	TREE_LEVEL = 1;
	PARENT = 109;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a_increment[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 137;
	TREE_LEVEL = 1;
	PARENT = 109;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a_increment[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 138;
	TREE_LEVEL = 1;
	PARENT = 109;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a_increment[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 139;
	TREE_LEVEL = 1;
	PARENT = 109;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a_increment[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 140;
	TREE_LEVEL = 1;
	PARENT = 109;
}

DISPLAY_LINE
{
	CHANNEL = "counter_a_increment[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 141;
	TREE_LEVEL = 1;
	PARENT = 109;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b_increment";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 142;
	TREE_LEVEL = 0;
	CHILDREN = 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b_increment[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 143;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b_increment[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 144;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b_increment[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 145;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b_increment[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 146;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b_increment[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 147;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b_increment[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 148;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b_increment[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 149;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b_increment[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 150;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b_increment[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 151;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b_increment[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 152;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b_increment[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 153;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b_increment[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 154;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b_increment[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 155;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b_increment[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 156;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b_increment[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 157;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b_increment[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 158;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b_increment[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 159;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b_increment[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 160;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b_increment[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 161;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b_increment[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 162;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b_increment[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 163;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b_increment[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 164;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b_increment[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 165;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b_increment[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 166;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b_increment[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 167;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b_increment[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 168;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b_increment[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 169;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b_increment[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 170;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b_increment[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 171;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b_increment[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 172;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b_increment[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 173;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "counter_b_increment[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 174;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "negative_discord_thresh";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 175;
	TREE_LEVEL = 0;
	CHILDREN = 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207;
}

DISPLAY_LINE
{
	CHANNEL = "negative_discord_thresh[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 176;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "negative_discord_thresh[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 177;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "negative_discord_thresh[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 178;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "negative_discord_thresh[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 179;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "negative_discord_thresh[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 180;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "negative_discord_thresh[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 181;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "negative_discord_thresh[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 182;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "negative_discord_thresh[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 183;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "negative_discord_thresh[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 184;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "negative_discord_thresh[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 185;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "negative_discord_thresh[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 186;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "negative_discord_thresh[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 187;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "negative_discord_thresh[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 188;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "negative_discord_thresh[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 189;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "negative_discord_thresh[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 190;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "negative_discord_thresh[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 191;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "negative_discord_thresh[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 192;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "negative_discord_thresh[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 193;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "negative_discord_thresh[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 194;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "negative_discord_thresh[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 195;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "negative_discord_thresh[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 196;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "negative_discord_thresh[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 197;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "negative_discord_thresh[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 198;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "negative_discord_thresh[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 199;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "negative_discord_thresh[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 200;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "negative_discord_thresh[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 201;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "negative_discord_thresh[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 202;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "negative_discord_thresh[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 203;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "negative_discord_thresh[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 204;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "negative_discord_thresh[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 205;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "negative_discord_thresh[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 206;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "negative_discord_thresh[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 207;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "positive_discord_thresh";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 208;
	TREE_LEVEL = 0;
	CHILDREN = 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240;
}

DISPLAY_LINE
{
	CHANNEL = "positive_discord_thresh[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 209;
	TREE_LEVEL = 1;
	PARENT = 208;
}

DISPLAY_LINE
{
	CHANNEL = "positive_discord_thresh[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 210;
	TREE_LEVEL = 1;
	PARENT = 208;
}

DISPLAY_LINE
{
	CHANNEL = "positive_discord_thresh[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 211;
	TREE_LEVEL = 1;
	PARENT = 208;
}

DISPLAY_LINE
{
	CHANNEL = "positive_discord_thresh[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 212;
	TREE_LEVEL = 1;
	PARENT = 208;
}

DISPLAY_LINE
{
	CHANNEL = "positive_discord_thresh[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 213;
	TREE_LEVEL = 1;
	PARENT = 208;
}

DISPLAY_LINE
{
	CHANNEL = "positive_discord_thresh[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 214;
	TREE_LEVEL = 1;
	PARENT = 208;
}

DISPLAY_LINE
{
	CHANNEL = "positive_discord_thresh[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 215;
	TREE_LEVEL = 1;
	PARENT = 208;
}

DISPLAY_LINE
{
	CHANNEL = "positive_discord_thresh[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 216;
	TREE_LEVEL = 1;
	PARENT = 208;
}

DISPLAY_LINE
{
	CHANNEL = "positive_discord_thresh[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 217;
	TREE_LEVEL = 1;
	PARENT = 208;
}

DISPLAY_LINE
{
	CHANNEL = "positive_discord_thresh[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 218;
	TREE_LEVEL = 1;
	PARENT = 208;
}

DISPLAY_LINE
{
	CHANNEL = "positive_discord_thresh[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 219;
	TREE_LEVEL = 1;
	PARENT = 208;
}

DISPLAY_LINE
{
	CHANNEL = "positive_discord_thresh[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 220;
	TREE_LEVEL = 1;
	PARENT = 208;
}

DISPLAY_LINE
{
	CHANNEL = "positive_discord_thresh[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 221;
	TREE_LEVEL = 1;
	PARENT = 208;
}

DISPLAY_LINE
{
	CHANNEL = "positive_discord_thresh[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 222;
	TREE_LEVEL = 1;
	PARENT = 208;
}

DISPLAY_LINE
{
	CHANNEL = "positive_discord_thresh[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 223;
	TREE_LEVEL = 1;
	PARENT = 208;
}

DISPLAY_LINE
{
	CHANNEL = "positive_discord_thresh[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 224;
	TREE_LEVEL = 1;
	PARENT = 208;
}

DISPLAY_LINE
{
	CHANNEL = "positive_discord_thresh[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 225;
	TREE_LEVEL = 1;
	PARENT = 208;
}

DISPLAY_LINE
{
	CHANNEL = "positive_discord_thresh[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 226;
	TREE_LEVEL = 1;
	PARENT = 208;
}

DISPLAY_LINE
{
	CHANNEL = "positive_discord_thresh[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 227;
	TREE_LEVEL = 1;
	PARENT = 208;
}

DISPLAY_LINE
{
	CHANNEL = "positive_discord_thresh[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 228;
	TREE_LEVEL = 1;
	PARENT = 208;
}

DISPLAY_LINE
{
	CHANNEL = "positive_discord_thresh[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 229;
	TREE_LEVEL = 1;
	PARENT = 208;
}

DISPLAY_LINE
{
	CHANNEL = "positive_discord_thresh[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 230;
	TREE_LEVEL = 1;
	PARENT = 208;
}

DISPLAY_LINE
{
	CHANNEL = "positive_discord_thresh[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 231;
	TREE_LEVEL = 1;
	PARENT = 208;
}

DISPLAY_LINE
{
	CHANNEL = "positive_discord_thresh[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 232;
	TREE_LEVEL = 1;
	PARENT = 208;
}

DISPLAY_LINE
{
	CHANNEL = "positive_discord_thresh[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 233;
	TREE_LEVEL = 1;
	PARENT = 208;
}

DISPLAY_LINE
{
	CHANNEL = "positive_discord_thresh[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 234;
	TREE_LEVEL = 1;
	PARENT = 208;
}

DISPLAY_LINE
{
	CHANNEL = "positive_discord_thresh[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 235;
	TREE_LEVEL = 1;
	PARENT = 208;
}

DISPLAY_LINE
{
	CHANNEL = "positive_discord_thresh[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 236;
	TREE_LEVEL = 1;
	PARENT = 208;
}

DISPLAY_LINE
{
	CHANNEL = "positive_discord_thresh[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 237;
	TREE_LEVEL = 1;
	PARENT = 208;
}

DISPLAY_LINE
{
	CHANNEL = "positive_discord_thresh[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 238;
	TREE_LEVEL = 1;
	PARENT = 208;
}

DISPLAY_LINE
{
	CHANNEL = "positive_discord_thresh[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 239;
	TREE_LEVEL = 1;
	PARENT = 208;
}

DISPLAY_LINE
{
	CHANNEL = "positive_discord_thresh[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 240;
	TREE_LEVEL = 1;
	PARENT = 208;
}

TIME_BAR
{
	TIME = 25875;
	MASTER = TRUE;
}
;
