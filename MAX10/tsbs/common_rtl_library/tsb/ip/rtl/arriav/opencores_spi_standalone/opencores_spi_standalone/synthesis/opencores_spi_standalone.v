// opencores_spi_standalone.v

// Generated using ACDS version 14.1 190 at 2018.07.23.16:25:51

`timescale 1 ps / 1 ps
module opencores_spi_standalone (
		input  wire [31:0] avalon_mm_slave_address,               //                avalon_mm_slave.address
		input  wire        avalon_mm_slave_read,                  //                               .read
		output wire [31:0] avalon_mm_slave_readdata,              //                               .readdata
		input  wire        avalon_mm_slave_write,                 //                               .write
		input  wire [31:0] avalon_mm_slave_writedata,             //                               .writedata
		output wire        avalon_mm_slave_waitrequest,           //                               .waitrequest
		input  wire        clk_clk,                               //                            clk.clk
		input  wire        opencores_spi_miso_pad_i,              //                  opencores_spi.miso_pad_i
		output wire        opencores_spi_mosi_pad_o,              //                               .mosi_pad_o
		output wire        opencores_spi_sclk_pad_o,              //                               .sclk_pad_o
		output wire [7:0]  opencores_spi_ss_pad_o,                //                               .ss_pad_o
		output wire [7:0]  opencores_spi_tx_bit_pos,              //                               .tx_bit_pos
		output wire [7:0]  opencores_spi_rx_bit_pos,              //                               .rx_bit_pos
		output wire [7:0]  opencores_spi_cnt,                     //                               .cnt
		output wire        opencores_spi_wb_err_o,                //                               .wb_err_o
		input  wire        opencores_spi_wb_cyc_i,                //                               .wb_cyc_i
		input  wire [31:0] opencores_spi_aux_control_in_export,   //   opencores_spi_aux_control_in.export
		output wire [31:0] opencores_spi_aux_control_out_export,  //  opencores_spi_aux_control_out.export
		output wire        opencores_spi_currently_active_export, // opencores_spi_currently_active.export
		output wire        opencores_spi_debug_wb_clk_i,          //            opencores_spi_debug.wb_clk_i
		output wire        opencores_spi_debug_wb_rst_i,          //                               .wb_rst_i
		output wire [4:0]  opencores_spi_debug_wb_adr_i,          //                               .wb_adr_i
		output wire [31:0] opencores_spi_debug_wb_dat_i,          //                               .wb_dat_i
		output wire [31:0] opencores_spi_debug_wb_dat_o,          //                               .wb_dat_o
		output wire [3:0]  opencores_spi_debug_wb_sel_i,          //                               .wb_sel_i
		output wire        opencores_spi_debug_wb_we_i,           //                               .wb_we_i
		output wire        opencores_spi_debug_wb_stb_i,          //                               .wb_stb_i
		output wire        opencores_spi_debug_wb_cyc_i,          //                               .wb_cyc_i
		output wire        opencores_spi_debug_wb_ack_o,          //                               .wb_ack_o
		output wire        opencores_spi_debug_wb_err_o,          //                               .wb_err_o
		output wire        opencores_spi_debug_wb_int_o,          //                               .wb_int_o
		output wire [15:0] opencores_spi_debug_divider,           //                               .divider
		output wire [13:0] opencores_spi_debug_ctrl,              //                               .ctrl
		output wire [7:0]  opencores_spi_debug_ss,                //                               .ss
		output wire [31:0] opencores_spi_debug_wb_dat,            //                               .wb_dat
		input  wire [7:0]  opencores_spi_debug_tag_word_in,       //                               .tag_word_in
		output wire [7:0]  opencores_spi_debug_tag_word_out,      //                               .tag_word_out
		output wire [7:0]  opencores_spi_debug_tag_word_export,   //   opencores_spi_debug_tag_word.export
		output wire        opencores_spi_interrupt_sender_irq,    // opencores_spi_interrupt_sender.irq
		output wire [7:0]  opencores_spi_manual_reset_out_export, // opencores_spi_manual_reset_out.export
		output wire [7:0]  opencores_spi_sdio_helper_export,      //      opencores_spi_sdio_helper.export
		input  wire        reset_reset_n                          //                          reset.reset_n
	);

	wire         simple_master_connection_without_burst_0_m0_waitrequest;        // mm_interconnect_0:simple_master_connection_without_burst_0_m0_waitrequest -> simple_master_connection_without_burst_0:avm_m0_waitrequest
	wire  [31:0] simple_master_connection_without_burst_0_m0_readdata;           // mm_interconnect_0:simple_master_connection_without_burst_0_m0_readdata -> simple_master_connection_without_burst_0:avm_m0_readdata
	wire  [31:0] simple_master_connection_without_burst_0_m0_address;            // simple_master_connection_without_burst_0:avm_m0_address -> mm_interconnect_0:simple_master_connection_without_burst_0_m0_address
	wire         simple_master_connection_without_burst_0_m0_read;               // simple_master_connection_without_burst_0:avm_m0_read -> mm_interconnect_0:simple_master_connection_without_burst_0_m0_read
	wire         simple_master_connection_without_burst_0_m0_write;              // simple_master_connection_without_burst_0:avm_m0_write -> mm_interconnect_0:simple_master_connection_without_burst_0_m0_write
	wire  [31:0] simple_master_connection_without_burst_0_m0_writedata;          // simple_master_connection_without_burst_0:avm_m0_writedata -> mm_interconnect_0:simple_master_connection_without_burst_0_m0_writedata
	wire         mm_interconnect_0_opencores_spi_avalon_slave_0_chipselect;      // mm_interconnect_0:opencores_spi_avalon_slave_0_chipselect -> opencores_spi:wb_stb_i
	wire  [31:0] mm_interconnect_0_opencores_spi_avalon_slave_0_readdata;        // opencores_spi:wb_dat_o -> mm_interconnect_0:opencores_spi_avalon_slave_0_readdata
	wire         mm_interconnect_0_opencores_spi_avalon_slave_0_waitrequest;     // opencores_spi:wb_ack_o -> mm_interconnect_0:opencores_spi_avalon_slave_0_waitrequest
	wire   [4:0] mm_interconnect_0_opencores_spi_avalon_slave_0_address;         // mm_interconnect_0:opencores_spi_avalon_slave_0_address -> opencores_spi:wb_adr_i
	wire   [3:0] mm_interconnect_0_opencores_spi_avalon_slave_0_byteenable;      // mm_interconnect_0:opencores_spi_avalon_slave_0_byteenable -> opencores_spi:wb_sel_i
	wire         mm_interconnect_0_opencores_spi_avalon_slave_0_write;           // mm_interconnect_0:opencores_spi_avalon_slave_0_write -> opencores_spi:wb_we_i
	wire  [31:0] mm_interconnect_0_opencores_spi_avalon_slave_0_writedata;       // mm_interconnect_0:opencores_spi_avalon_slave_0_writedata -> opencores_spi:wb_dat_i
	wire         mm_interconnect_0_opencores_spi_sdio_helper_s1_chipselect;      // mm_interconnect_0:opencores_spi_sdio_helper_s1_chipselect -> opencores_spi_sdio_helper:chipselect
	wire  [31:0] mm_interconnect_0_opencores_spi_sdio_helper_s1_readdata;        // opencores_spi_sdio_helper:readdata -> mm_interconnect_0:opencores_spi_sdio_helper_s1_readdata
	wire   [2:0] mm_interconnect_0_opencores_spi_sdio_helper_s1_address;         // mm_interconnect_0:opencores_spi_sdio_helper_s1_address -> opencores_spi_sdio_helper:address
	wire         mm_interconnect_0_opencores_spi_sdio_helper_s1_write;           // mm_interconnect_0:opencores_spi_sdio_helper_s1_write -> opencores_spi_sdio_helper:write_n
	wire  [31:0] mm_interconnect_0_opencores_spi_sdio_helper_s1_writedata;       // mm_interconnect_0:opencores_spi_sdio_helper_s1_writedata -> opencores_spi_sdio_helper:writedata
	wire         mm_interconnect_0_opencores_spi_manual_reset_s1_chipselect;     // mm_interconnect_0:opencores_spi_manual_reset_s1_chipselect -> opencores_spi_manual_reset:chipselect
	wire  [31:0] mm_interconnect_0_opencores_spi_manual_reset_s1_readdata;       // opencores_spi_manual_reset:readdata -> mm_interconnect_0:opencores_spi_manual_reset_s1_readdata
	wire   [2:0] mm_interconnect_0_opencores_spi_manual_reset_s1_address;        // mm_interconnect_0:opencores_spi_manual_reset_s1_address -> opencores_spi_manual_reset:address
	wire         mm_interconnect_0_opencores_spi_manual_reset_s1_write;          // mm_interconnect_0:opencores_spi_manual_reset_s1_write -> opencores_spi_manual_reset:write_n
	wire  [31:0] mm_interconnect_0_opencores_spi_manual_reset_s1_writedata;      // mm_interconnect_0:opencores_spi_manual_reset_s1_writedata -> opencores_spi_manual_reset:writedata
	wire         mm_interconnect_0_opencores_spi_currently_active_s1_chipselect; // mm_interconnect_0:opencores_spi_currently_active_s1_chipselect -> opencores_spi_currently_active:chipselect
	wire  [31:0] mm_interconnect_0_opencores_spi_currently_active_s1_readdata;   // opencores_spi_currently_active:readdata -> mm_interconnect_0:opencores_spi_currently_active_s1_readdata
	wire   [2:0] mm_interconnect_0_opencores_spi_currently_active_s1_address;    // mm_interconnect_0:opencores_spi_currently_active_s1_address -> opencores_spi_currently_active:address
	wire         mm_interconnect_0_opencores_spi_currently_active_s1_write;      // mm_interconnect_0:opencores_spi_currently_active_s1_write -> opencores_spi_currently_active:write_n
	wire  [31:0] mm_interconnect_0_opencores_spi_currently_active_s1_writedata;  // mm_interconnect_0:opencores_spi_currently_active_s1_writedata -> opencores_spi_currently_active:writedata
	wire         mm_interconnect_0_opencores_spi_debug_tag_word_s1_chipselect;   // mm_interconnect_0:opencores_spi_debug_tag_word_s1_chipselect -> opencores_spi_debug_tag_word:chipselect
	wire  [31:0] mm_interconnect_0_opencores_spi_debug_tag_word_s1_readdata;     // opencores_spi_debug_tag_word:readdata -> mm_interconnect_0:opencores_spi_debug_tag_word_s1_readdata
	wire   [1:0] mm_interconnect_0_opencores_spi_debug_tag_word_s1_address;      // mm_interconnect_0:opencores_spi_debug_tag_word_s1_address -> opencores_spi_debug_tag_word:address
	wire         mm_interconnect_0_opencores_spi_debug_tag_word_s1_write;        // mm_interconnect_0:opencores_spi_debug_tag_word_s1_write -> opencores_spi_debug_tag_word:write_n
	wire  [31:0] mm_interconnect_0_opencores_spi_debug_tag_word_s1_writedata;    // mm_interconnect_0:opencores_spi_debug_tag_word_s1_writedata -> opencores_spi_debug_tag_word:writedata
	wire         mm_interconnect_0_opencores_spi_aux_control_out_s1_chipselect;  // mm_interconnect_0:opencores_spi_aux_control_out_s1_chipselect -> opencores_spi_aux_control_out:chipselect
	wire  [31:0] mm_interconnect_0_opencores_spi_aux_control_out_s1_readdata;    // opencores_spi_aux_control_out:readdata -> mm_interconnect_0:opencores_spi_aux_control_out_s1_readdata
	wire   [1:0] mm_interconnect_0_opencores_spi_aux_control_out_s1_address;     // mm_interconnect_0:opencores_spi_aux_control_out_s1_address -> opencores_spi_aux_control_out:address
	wire         mm_interconnect_0_opencores_spi_aux_control_out_s1_write;       // mm_interconnect_0:opencores_spi_aux_control_out_s1_write -> opencores_spi_aux_control_out:write_n
	wire  [31:0] mm_interconnect_0_opencores_spi_aux_control_out_s1_writedata;   // mm_interconnect_0:opencores_spi_aux_control_out_s1_writedata -> opencores_spi_aux_control_out:writedata
	wire  [31:0] mm_interconnect_0_opencores_spi_aux_control_in_s1_readdata;     // opencores_spi_aux_control_in:readdata -> mm_interconnect_0:opencores_spi_aux_control_in_s1_readdata
	wire   [1:0] mm_interconnect_0_opencores_spi_aux_control_in_s1_address;      // mm_interconnect_0:opencores_spi_aux_control_in_s1_address -> opencores_spi_aux_control_in:address
	wire         rst_controller_reset_out_reset;                                 // rst_controller:reset_out -> [mm_interconnect_0:simple_master_connection_without_burst_0_reset_reset_bridge_in_reset_reset, opencores_spi:wb_rst_i, opencores_spi_aux_control_in:reset_n, opencores_spi_aux_control_out:reset_n, opencores_spi_currently_active:reset_n, opencores_spi_debug_tag_word:reset_n, opencores_spi_manual_reset:reset_n, opencores_spi_sdio_helper:reset_n, simple_master_connection_without_burst_0:reset]

	opencores_spi_top #(
		.Tp (1)
	) opencores_spi (
		.wb_adr_i           (mm_interconnect_0_opencores_spi_avalon_slave_0_address),     //   avalon_slave_0.address
		.wb_dat_i           (mm_interconnect_0_opencores_spi_avalon_slave_0_writedata),   //                 .writedata
		.wb_dat_o           (mm_interconnect_0_opencores_spi_avalon_slave_0_readdata),    //                 .readdata
		.wb_sel_i           (mm_interconnect_0_opencores_spi_avalon_slave_0_byteenable),  //                 .byteenable
		.wb_we_i            (mm_interconnect_0_opencores_spi_avalon_slave_0_write),       //                 .write
		.wb_stb_i           (mm_interconnect_0_opencores_spi_avalon_slave_0_chipselect),  //                 .chipselect
		.wb_ack_o           (mm_interconnect_0_opencores_spi_avalon_slave_0_waitrequest), //                 .waitrequest_n
		.wb_clk_i           (clk_clk),                                                    //       clock_sink.clk
		.wb_rst_i           (rst_controller_reset_out_reset),                             //       reset_sink.reset
		.miso_pad_i         (opencores_spi_miso_pad_i),                                   //      conduit_end.export
		.mosi_pad_o         (opencores_spi_mosi_pad_o),                                   //                 .export
		.sclk_pad_o         (opencores_spi_sclk_pad_o),                                   //                 .export
		.ss_pad_o           (opencores_spi_ss_pad_o),                                     //                 .export
		.tx_bit_pos         (opencores_spi_tx_bit_pos),                                   //                 .export
		.rx_bit_pos         (opencores_spi_rx_bit_pos),                                   //                 .export
		.cnt                (opencores_spi_cnt),                                          //                 .export
		.wb_err_o           (opencores_spi_wb_err_o),                                     //                 .export
		.wb_cyc_i           (opencores_spi_wb_cyc_i),                                     //                 .export
		.wb_int_o           (opencores_spi_interrupt_sender_irq),                         // interrupt_sender.irq
		.debug_wb_clk_i     (opencores_spi_debug_wb_clk_i),                               //            debug.export
		.debug_wb_rst_i     (opencores_spi_debug_wb_rst_i),                               //                 .export
		.debug_wb_adr_i     (opencores_spi_debug_wb_adr_i),                               //                 .export
		.debug_wb_dat_i     (opencores_spi_debug_wb_dat_i),                               //                 .export
		.debug_wb_dat_o     (opencores_spi_debug_wb_dat_o),                               //                 .export
		.debug_wb_sel_i     (opencores_spi_debug_wb_sel_i),                               //                 .export
		.debug_wb_we_i      (opencores_spi_debug_wb_we_i),                                //                 .export
		.debug_wb_stb_i     (opencores_spi_debug_wb_stb_i),                               //                 .export
		.debug_wb_cyc_i     (opencores_spi_debug_wb_cyc_i),                               //                 .export
		.debug_wb_ack_o     (opencores_spi_debug_wb_ack_o),                               //                 .export
		.debug_wb_err_o     (opencores_spi_debug_wb_err_o),                               //                 .export
		.debug_wb_int_o     (opencores_spi_debug_wb_int_o),                               //                 .export
		.debug_divider      (opencores_spi_debug_divider),                                //                 .export
		.debug_ctrl         (opencores_spi_debug_ctrl),                                   //                 .export
		.debug_ss           (opencores_spi_debug_ss),                                     //                 .export
		.debug_wb_dat       (opencores_spi_debug_wb_dat),                                 //                 .export
		.debug_tag_word_in  (opencores_spi_debug_tag_word_in),                            //                 .export
		.debug_tag_word_out (opencores_spi_debug_tag_word_out)                            //                 .export
	);

	opencores_spi_standalone_opencores_spi_aux_control_in opencores_spi_aux_control_in (
		.clk      (clk_clk),                                                    //                 clk.clk
		.reset_n  (~rst_controller_reset_out_reset),                            //               reset.reset_n
		.address  (mm_interconnect_0_opencores_spi_aux_control_in_s1_address),  //                  s1.address
		.readdata (mm_interconnect_0_opencores_spi_aux_control_in_s1_readdata), //                    .readdata
		.in_port  (opencores_spi_aux_control_in_export)                         // external_connection.export
	);

	opencores_spi_standalone_opencores_spi_aux_control_out opencores_spi_aux_control_out (
		.clk        (clk_clk),                                                       //                 clk.clk
		.reset_n    (~rst_controller_reset_out_reset),                               //               reset.reset_n
		.address    (mm_interconnect_0_opencores_spi_aux_control_out_s1_address),    //                  s1.address
		.write_n    (~mm_interconnect_0_opencores_spi_aux_control_out_s1_write),     //                    .write_n
		.writedata  (mm_interconnect_0_opencores_spi_aux_control_out_s1_writedata),  //                    .writedata
		.chipselect (mm_interconnect_0_opencores_spi_aux_control_out_s1_chipselect), //                    .chipselect
		.readdata   (mm_interconnect_0_opencores_spi_aux_control_out_s1_readdata),   //                    .readdata
		.out_port   (opencores_spi_aux_control_out_export)                           // external_connection.export
	);

	opencores_spi_standalone_opencores_spi_currently_active opencores_spi_currently_active (
		.clk        (clk_clk),                                                        //                 clk.clk
		.reset_n    (~rst_controller_reset_out_reset),                                //               reset.reset_n
		.address    (mm_interconnect_0_opencores_spi_currently_active_s1_address),    //                  s1.address
		.write_n    (~mm_interconnect_0_opencores_spi_currently_active_s1_write),     //                    .write_n
		.writedata  (mm_interconnect_0_opencores_spi_currently_active_s1_writedata),  //                    .writedata
		.chipselect (mm_interconnect_0_opencores_spi_currently_active_s1_chipselect), //                    .chipselect
		.readdata   (mm_interconnect_0_opencores_spi_currently_active_s1_readdata),   //                    .readdata
		.out_port   (opencores_spi_currently_active_export)                           // external_connection.export
	);

	opencores_spi_standalone_opencores_spi_debug_tag_word opencores_spi_debug_tag_word (
		.clk        (clk_clk),                                                      //                 clk.clk
		.reset_n    (~rst_controller_reset_out_reset),                              //               reset.reset_n
		.address    (mm_interconnect_0_opencores_spi_debug_tag_word_s1_address),    //                  s1.address
		.write_n    (~mm_interconnect_0_opencores_spi_debug_tag_word_s1_write),     //                    .write_n
		.writedata  (mm_interconnect_0_opencores_spi_debug_tag_word_s1_writedata),  //                    .writedata
		.chipselect (mm_interconnect_0_opencores_spi_debug_tag_word_s1_chipselect), //                    .chipselect
		.readdata   (mm_interconnect_0_opencores_spi_debug_tag_word_s1_readdata),   //                    .readdata
		.out_port   (opencores_spi_debug_tag_word_export)                           // external_connection.export
	);

	opencores_spi_standalone_opencores_spi_manual_reset opencores_spi_manual_reset (
		.clk        (clk_clk),                                                    //                 clk.clk
		.reset_n    (~rst_controller_reset_out_reset),                            //               reset.reset_n
		.address    (mm_interconnect_0_opencores_spi_manual_reset_s1_address),    //                  s1.address
		.write_n    (~mm_interconnect_0_opencores_spi_manual_reset_s1_write),     //                    .write_n
		.writedata  (mm_interconnect_0_opencores_spi_manual_reset_s1_writedata),  //                    .writedata
		.chipselect (mm_interconnect_0_opencores_spi_manual_reset_s1_chipselect), //                    .chipselect
		.readdata   (mm_interconnect_0_opencores_spi_manual_reset_s1_readdata),   //                    .readdata
		.out_port   (opencores_spi_manual_reset_out_export)                       // external_connection.export
	);

	opencores_spi_standalone_opencores_spi_manual_reset opencores_spi_sdio_helper (
		.clk        (clk_clk),                                                   //                 clk.clk
		.reset_n    (~rst_controller_reset_out_reset),                           //               reset.reset_n
		.address    (mm_interconnect_0_opencores_spi_sdio_helper_s1_address),    //                  s1.address
		.write_n    (~mm_interconnect_0_opencores_spi_sdio_helper_s1_write),     //                    .write_n
		.writedata  (mm_interconnect_0_opencores_spi_sdio_helper_s1_writedata),  //                    .writedata
		.chipselect (mm_interconnect_0_opencores_spi_sdio_helper_s1_chipselect), //                    .chipselect
		.readdata   (mm_interconnect_0_opencores_spi_sdio_helper_s1_readdata),   //                    .readdata
		.out_port   (opencores_spi_sdio_helper_export)                           // external_connection.export
	);

	simple_master_connection_without_burst simple_master_connection_without_burst_0 (
		.avs_s0_address     (avalon_mm_slave_address),                                 //    s0.address
		.avs_s0_read        (avalon_mm_slave_read),                                    //      .read
		.avs_s0_readdata    (avalon_mm_slave_readdata),                                //      .readdata
		.avs_s0_write       (avalon_mm_slave_write),                                   //      .write
		.avs_s0_writedata   (avalon_mm_slave_writedata),                               //      .writedata
		.avs_s0_waitrequest (avalon_mm_slave_waitrequest),                             //      .waitrequest
		.clk                (clk_clk),                                                 // clock.clk
		.reset              (rst_controller_reset_out_reset),                          // reset.reset
		.avm_m0_address     (simple_master_connection_without_burst_0_m0_address),     //    m0.address
		.avm_m0_read        (simple_master_connection_without_burst_0_m0_read),        //      .read
		.avm_m0_waitrequest (simple_master_connection_without_burst_0_m0_waitrequest), //      .waitrequest
		.avm_m0_readdata    (simple_master_connection_without_burst_0_m0_readdata),    //      .readdata
		.avm_m0_write       (simple_master_connection_without_burst_0_m0_write),       //      .write
		.avm_m0_writedata   (simple_master_connection_without_burst_0_m0_writedata)    //      .writedata
	);

	opencores_spi_standalone_mm_interconnect_0 mm_interconnect_0 (
		.clk_0_clk_clk                                                              (clk_clk),                                                        //                                                            clk_0_clk.clk
		.simple_master_connection_without_burst_0_reset_reset_bridge_in_reset_reset (rst_controller_reset_out_reset),                                 // simple_master_connection_without_burst_0_reset_reset_bridge_in_reset.reset
		.simple_master_connection_without_burst_0_m0_address                        (simple_master_connection_without_burst_0_m0_address),            //                          simple_master_connection_without_burst_0_m0.address
		.simple_master_connection_without_burst_0_m0_waitrequest                    (simple_master_connection_without_burst_0_m0_waitrequest),        //                                                                     .waitrequest
		.simple_master_connection_without_burst_0_m0_read                           (simple_master_connection_without_burst_0_m0_read),               //                                                                     .read
		.simple_master_connection_without_burst_0_m0_readdata                       (simple_master_connection_without_burst_0_m0_readdata),           //                                                                     .readdata
		.simple_master_connection_without_burst_0_m0_write                          (simple_master_connection_without_burst_0_m0_write),              //                                                                     .write
		.simple_master_connection_without_burst_0_m0_writedata                      (simple_master_connection_without_burst_0_m0_writedata),          //                                                                     .writedata
		.opencores_spi_avalon_slave_0_address                                       (mm_interconnect_0_opencores_spi_avalon_slave_0_address),         //                                         opencores_spi_avalon_slave_0.address
		.opencores_spi_avalon_slave_0_write                                         (mm_interconnect_0_opencores_spi_avalon_slave_0_write),           //                                                                     .write
		.opencores_spi_avalon_slave_0_readdata                                      (mm_interconnect_0_opencores_spi_avalon_slave_0_readdata),        //                                                                     .readdata
		.opencores_spi_avalon_slave_0_writedata                                     (mm_interconnect_0_opencores_spi_avalon_slave_0_writedata),       //                                                                     .writedata
		.opencores_spi_avalon_slave_0_byteenable                                    (mm_interconnect_0_opencores_spi_avalon_slave_0_byteenable),      //                                                                     .byteenable
		.opencores_spi_avalon_slave_0_waitrequest                                   (~mm_interconnect_0_opencores_spi_avalon_slave_0_waitrequest),    //                                                                     .waitrequest
		.opencores_spi_avalon_slave_0_chipselect                                    (mm_interconnect_0_opencores_spi_avalon_slave_0_chipselect),      //                                                                     .chipselect
		.opencores_spi_aux_control_in_s1_address                                    (mm_interconnect_0_opencores_spi_aux_control_in_s1_address),      //                                      opencores_spi_aux_control_in_s1.address
		.opencores_spi_aux_control_in_s1_readdata                                   (mm_interconnect_0_opencores_spi_aux_control_in_s1_readdata),     //                                                                     .readdata
		.opencores_spi_aux_control_out_s1_address                                   (mm_interconnect_0_opencores_spi_aux_control_out_s1_address),     //                                     opencores_spi_aux_control_out_s1.address
		.opencores_spi_aux_control_out_s1_write                                     (mm_interconnect_0_opencores_spi_aux_control_out_s1_write),       //                                                                     .write
		.opencores_spi_aux_control_out_s1_readdata                                  (mm_interconnect_0_opencores_spi_aux_control_out_s1_readdata),    //                                                                     .readdata
		.opencores_spi_aux_control_out_s1_writedata                                 (mm_interconnect_0_opencores_spi_aux_control_out_s1_writedata),   //                                                                     .writedata
		.opencores_spi_aux_control_out_s1_chipselect                                (mm_interconnect_0_opencores_spi_aux_control_out_s1_chipselect),  //                                                                     .chipselect
		.opencores_spi_currently_active_s1_address                                  (mm_interconnect_0_opencores_spi_currently_active_s1_address),    //                                    opencores_spi_currently_active_s1.address
		.opencores_spi_currently_active_s1_write                                    (mm_interconnect_0_opencores_spi_currently_active_s1_write),      //                                                                     .write
		.opencores_spi_currently_active_s1_readdata                                 (mm_interconnect_0_opencores_spi_currently_active_s1_readdata),   //                                                                     .readdata
		.opencores_spi_currently_active_s1_writedata                                (mm_interconnect_0_opencores_spi_currently_active_s1_writedata),  //                                                                     .writedata
		.opencores_spi_currently_active_s1_chipselect                               (mm_interconnect_0_opencores_spi_currently_active_s1_chipselect), //                                                                     .chipselect
		.opencores_spi_debug_tag_word_s1_address                                    (mm_interconnect_0_opencores_spi_debug_tag_word_s1_address),      //                                      opencores_spi_debug_tag_word_s1.address
		.opencores_spi_debug_tag_word_s1_write                                      (mm_interconnect_0_opencores_spi_debug_tag_word_s1_write),        //                                                                     .write
		.opencores_spi_debug_tag_word_s1_readdata                                   (mm_interconnect_0_opencores_spi_debug_tag_word_s1_readdata),     //                                                                     .readdata
		.opencores_spi_debug_tag_word_s1_writedata                                  (mm_interconnect_0_opencores_spi_debug_tag_word_s1_writedata),    //                                                                     .writedata
		.opencores_spi_debug_tag_word_s1_chipselect                                 (mm_interconnect_0_opencores_spi_debug_tag_word_s1_chipselect),   //                                                                     .chipselect
		.opencores_spi_manual_reset_s1_address                                      (mm_interconnect_0_opencores_spi_manual_reset_s1_address),        //                                        opencores_spi_manual_reset_s1.address
		.opencores_spi_manual_reset_s1_write                                        (mm_interconnect_0_opencores_spi_manual_reset_s1_write),          //                                                                     .write
		.opencores_spi_manual_reset_s1_readdata                                     (mm_interconnect_0_opencores_spi_manual_reset_s1_readdata),       //                                                                     .readdata
		.opencores_spi_manual_reset_s1_writedata                                    (mm_interconnect_0_opencores_spi_manual_reset_s1_writedata),      //                                                                     .writedata
		.opencores_spi_manual_reset_s1_chipselect                                   (mm_interconnect_0_opencores_spi_manual_reset_s1_chipselect),     //                                                                     .chipselect
		.opencores_spi_sdio_helper_s1_address                                       (mm_interconnect_0_opencores_spi_sdio_helper_s1_address),         //                                         opencores_spi_sdio_helper_s1.address
		.opencores_spi_sdio_helper_s1_write                                         (mm_interconnect_0_opencores_spi_sdio_helper_s1_write),           //                                                                     .write
		.opencores_spi_sdio_helper_s1_readdata                                      (mm_interconnect_0_opencores_spi_sdio_helper_s1_readdata),        //                                                                     .readdata
		.opencores_spi_sdio_helper_s1_writedata                                     (mm_interconnect_0_opencores_spi_sdio_helper_s1_writedata),       //                                                                     .writedata
		.opencores_spi_sdio_helper_s1_chipselect                                    (mm_interconnect_0_opencores_spi_sdio_helper_s1_chipselect)       //                                                                     .chipselect
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (1),
		.OUTPUT_RESET_SYNC_EDGES   ("deassert"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (0),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) rst_controller (
		.reset_in0      (~reset_reset_n),                 // reset_in0.reset
		.clk            (clk_clk),                        //       clk.clk
		.reset_out      (rst_controller_reset_out_reset), // reset_out.reset
		.reset_req      (),                               // (terminated)
		.reset_req_in0  (1'b0),                           // (terminated)
		.reset_in1      (1'b0),                           // (terminated)
		.reset_req_in1  (1'b0),                           // (terminated)
		.reset_in2      (1'b0),                           // (terminated)
		.reset_req_in2  (1'b0),                           // (terminated)
		.reset_in3      (1'b0),                           // (terminated)
		.reset_req_in3  (1'b0),                           // (terminated)
		.reset_in4      (1'b0),                           // (terminated)
		.reset_req_in4  (1'b0),                           // (terminated)
		.reset_in5      (1'b0),                           // (terminated)
		.reset_req_in5  (1'b0),                           // (terminated)
		.reset_in6      (1'b0),                           // (terminated)
		.reset_req_in6  (1'b0),                           // (terminated)
		.reset_in7      (1'b0),                           // (terminated)
		.reset_req_in7  (1'b0),                           // (terminated)
		.reset_in8      (1'b0),                           // (terminated)
		.reset_req_in8  (1'b0),                           // (terminated)
		.reset_in9      (1'b0),                           // (terminated)
		.reset_req_in9  (1'b0),                           // (terminated)
		.reset_in10     (1'b0),                           // (terminated)
		.reset_req_in10 (1'b0),                           // (terminated)
		.reset_in11     (1'b0),                           // (terminated)
		.reset_req_in11 (1'b0),                           // (terminated)
		.reset_in12     (1'b0),                           // (terminated)
		.reset_req_in12 (1'b0),                           // (terminated)
		.reset_in13     (1'b0),                           // (terminated)
		.reset_req_in13 (1'b0),                           // (terminated)
		.reset_in14     (1'b0),                           // (terminated)
		.reset_req_in14 (1'b0),                           // (terminated)
		.reset_in15     (1'b0),                           // (terminated)
		.reset_req_in15 (1'b0)                            // (terminated)
	);

endmodule
