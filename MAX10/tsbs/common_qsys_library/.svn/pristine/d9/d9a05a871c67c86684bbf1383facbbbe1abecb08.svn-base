# (C) 2001-2017 Intel Corporation. All rights reserved.
# Your use of Intel Corporation's design tools, logic functions and other 
# software and tools, and its AMPP partner logic functions, and any output 
# files any of the foregoing (including device programming or simulation 
# files), and any associated documentation or information are expressly subject 
# to the terms and conditions of the Intel Program License Subscription 
# Agreement, Intel MegaCore Function License Agreement, or other applicable 
# license agreement, including, without limitation, that your use is for the 
# sole purpose of programming logic devices manufactured by Intel and sold by 
# Intel or its authorized distributors.  Please refer to the applicable 
# agreement for further details.


# +----------------------------------------------------------------------------+
# |                                                                            |
# | Any megafunction design, and related net list (encrypted or decrypted),    |
# |  support information, device programming or simulation file, and any other |
# |  associated documentation or information provided by Altera or a partner   |
# |  under Altera's Megafunction Partnership Program may be used only to       |
# |  program PLD devices (but not masked PLD devices) from Altera.  Any other  |
# |  use of such megafunction design, net list, support information, device    |
# |  programming or simulation file, or any other related documentation or     |
# |  information is prohibited for any other purpose, including, but not       |
# |  limited to modification, reverse engineering, de-compiling, or use with   |
# |  any other silicon devices, unless such use is explicitly licensed under   |
# |  a separate agreement with Altera or a megafunction partner.  Title to     |
# |  the intellectual property, including patents, copyrights, trademarks,     |
# |  trade secrets, or maskworks, embodied in any such megafunction design,    |
# |  net list, support information, device programming or simulation file, or  |
# |  any other related documentation or information provided by Altera or a    |
# |  megafunction partner, remains with Altera, the megafunction partner, or   |
# |  their respective licensors.  No other licenses, including any licenses    |
# |  needed under any third party's intellectual property, are provided herein.|
# |  Copying or modifying any file, or portion thereof, to which this notice   |
# |  is attached violates this copyright.                                      |
# |                                                                            |
# | THIS FILE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR    |
# | IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,   |
# | FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL    |
# | THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER |
# | LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING    |
# | FROM, OUT OF OR IN CONNECTION WITH THIS FILE OR THE USE OR OTHER DEALINGS  |
# | IN THIS FILE.                                                              |
# |                                                                            |
# | This agreement shall be governed in all respects by the laws of the State  |
# |  of California and by the laws of the United States of America.            |
# |                                                                            |
# +----------------------------------------------------------------------------+

# TCL File Generated by Altera University Program
# DO NOT MODIFY

set aup_version 16.1

source "../../../lib/aup_ip_generator.tcl"

# +-----------------------------------
# | module altera_up_avalon_video_decoder
# | 
set_module_property DESCRIPTION "Video-In Decoder for DE-series Boards"
set_module_property NAME altera_up_avalon_video_decoder
set_module_property VERSION $aup_version
set_module_property GROUP "University Program/Audio & Video/Video"
set_module_property AUTHOR "Altera University Program"
set_module_property DISPLAY_NAME "Video-In Decoder"
set_module_property DATASHEET_URL "[pwd]/../doc/Video.pdf"
#set_module_property TOP_LEVEL_HDL_FILE altera_up_avalon_video_decoder.v
#set_module_property TOP_LEVEL_HDL_MODULE altera_up_avalon_video_decoder
set_module_property INSTANTIATE_IN_SYSTEM_MODULE true
set_module_property HIDE_FROM_QUARTUS true
set_module_property EDITABLE false
set_module_property ANALYZE_HDL false
set_module_property VALIDATION_CALLBACK validate
set_module_property ELABORATION_CALLBACK elaborate
set_module_property GENERATION_CALLBACK generate
# | 
# +-----------------------------------

# +-----------------------------------
# | files
# | 
#add_file altera_up_avalon_video_decoder.v {SYNTHESIS SIMULATION}
add_file "hdl/altera_up_video_itu_656_decoder.v" {SYNTHESIS SIMULATION}
add_file "hdl/altera_up_video_decoder_add_endofpacket.v" {SYNTHESIS SIMULATION}
add_file "hdl/altera_up_video_camera_decoder.v" {SYNTHESIS SIMULATION}
#add_file "hdl/altera_up_video_camera_decoder_bayer.v" {SYNTHESIS SIMULATION}
#add_file "hdl/altera_up_video_camera_decoder_RGB.v" {SYNTHESIS SIMULATION}
add_file "hdl/altera_up_video_dual_clock_fifo.v" {SYNTHESIS SIMULATION}
# | 
# +-----------------------------------

# +-----------------------------------
# | parameters
# | 
add_parameter video_source string "On-board Video In (NTSC or PAL)"
set_parameter_property video_source DISPLAY_NAME "Video-In Source"
set_parameter_property video_source UNITS None
set_parameter_property video_source AFFECTS_ELABORATION true
set_parameter_property video_source AFFECTS_GENERATION true
set_parameter_property video_source ALLOWED_RANGES {"On-board Video In (NTSC or PAL)" "1.3MP Daughtercard (TRDB_DC2)" "5MP Daughtercard (THDB_D5M)"}
#set_parameter_property video_source ALLOWED_RANGES {"On-board Video In (NTSC or PAL)" "5MP Daughtercard (THDB_D5M)"}
set_parameter_property video_source VISIBLE true
set_parameter_property video_source ENABLED true
# | 
# +-----------------------------------

# +-----------------------------------
# | connection point clk
# | 
add_interface clk clock end
set_interface_property clk enabled true

add_interface_port clk clk clk Input 1
# | 
# +-----------------------------------

# +-----------------------------------
# | connection point reset
# | 
add_interface reset reset end
set_interface_property reset associatedClock clk
set_interface_property reset enabled true
set_interface_property reset synchronousEdges DEASSERT

add_interface_port reset reset reset Input 1
# | 
# +-----------------------------------

# +-----------------------------------
# | connection point avalon_decoder_source
# | 
add_interface avalon_decoder_source avalon_streaming start
set_interface_property avalon_decoder_source associatedClock clk
set_interface_property avalon_decoder_source associatedReset reset
set_interface_property avalon_decoder_source errorDescriptor ""
set_interface_property avalon_decoder_source maxChannel 0
set_interface_property avalon_decoder_source readyLatency 0

add_interface_port avalon_decoder_source stream_out_ready ready Input 1
add_interface_port avalon_decoder_source stream_out_startofpacket startofpacket Output 1
add_interface_port avalon_decoder_source stream_out_endofpacket endofpacket Output 1
add_interface_port avalon_decoder_source stream_out_valid valid Output 1
# | 
# +-----------------------------------

# +-----------------------------------
# | Validation function
# | 
proc validate {} {
	set video_source [ get_parameter_value "video_source" ]

	if { $video_source == "On-board Video In (NTSC or PAL)" } {
		send_message info "Video In Stream: Format: 720 x 244 (Odd Frames) or 720 x 243 (Even Frames) with Colour: 8 (bits) x 2 (planes) (YCrCb 4:2:2)"
	} elseif { $video_source == "1.3MP Daughtercard (TRDB_DC2)" } {
		send_message info "Video In Stream: Format: 1280 x 1024 (default) with Colour: 8 (bits) x 1 (planes) (RGB Bayer Pattern)"
	} else {
		send_message info "Video In Stream: Format: 2592 x 1944 (default) with Colour: 8 (bits) x 1 (planes) (RGB Bayer Pattern)"
	}
}
# | 
# +-----------------------------------

# +-----------------------------------
# | Elaboration function
# | 
proc elaborate {} {
	set video_source [ get_parameter_value "video_source" ]
	
	if { $video_source == "On-board Video In (NTSC or PAL)" } {
		# +-----------------------------------
		# | connection point avalon_decoder_source
		# | 
		set_interface_property avalon_decoder_source dataBitsPerSymbol 8
		set_interface_property avalon_decoder_source symbolsPerBeat 2

		add_interface_port avalon_decoder_source stream_out_data data Output 16
#		add_interface_port avalon_decoder_source stream_out_empty empty Output 1
		# | 
		# +-----------------------------------
		
		# +-----------------------------------
		# | connection point external_interface
		# | 
		add_interface external_interface conduit end 

		add_interface_port external_interface TD_CLK27 export Input 1
		add_interface_port external_interface TD_DATA export Input 8
		add_interface_port external_interface TD_HS export Input 1
		add_interface_port external_interface TD_VS export Input 1
		add_interface_port external_interface clk27_reset export Input 1
		add_interface_port external_interface TD_RESET export Output 1
		add_interface_port external_interface overflow_flag export Output 1
		# | 
		# +-----------------------------------
	} else {
		# +-----------------------------------
		# | connection point avalon_decoder_source
		# | 
		set_interface_property avalon_decoder_source dataBitsPerSymbol 8
		set_interface_property avalon_decoder_source symbolsPerBeat 1

		add_interface_port avalon_decoder_source stream_out_data data Output 8
#		add_interface_port avalon_decoder_source stream_out_empty empty Output 1
		# | 
		# +-----------------------------------
		
		# +-----------------------------------
		# | connection point external_interface
		# | 
		add_interface external_interface conduit end 

		add_interface_port external_interface PIXEL_CLK export Input 1
		add_interface_port external_interface LINE_VALID export Input 1
		add_interface_port external_interface FRAME_VALID export Input 1
		add_interface_port external_interface pixel_clk_reset export Input 1
		if { $video_source == "1.3MP Daughtercard (TRDB_DC2)" } {
			add_interface_port external_interface PIXEL_DATA export Input 10
		} else {
			add_interface_port external_interface PIXEL_DATA export Input 12
		} 
		#add_interface_port external_interface overflow_flag export Output 1
		# | 
		# +-----------------------------------
	}
}
# | 
# +-----------------------------------

# +-----------------------------------
# | Generation function
# | 
proc generate {} {
	send_message info "Starting Generation of Video In Decoder"

	# get parameter values
	set video_source [ get_parameter_value "video_source" ]

	if { $video_source == "On-board Video In (NTSC or PAL)" } {
		set input_width		"IW:7"
		set output_width	"OW:15"
		set ew				"EW:0"
		set fifo_width		"FW:17"
	} elseif { $video_source == "1.3MP Daughtercard (TRDB_DC2)" } {
		set input_width		"IW:9"
		set output_width	"OW:7"
		set ew				"EW:0"
		set fifo_width		"FW:9"
	} else {
		set input_width		"IW:11"
		set output_width	"OW:7"
		set ew				"EW:0"
		set fifo_width		"FW:9"
	}


	# set section values
	set use_onboard_video "USE_ONBOARD_VIDEO:0"
#	set use_bayern_pattern "USE_BAYER_PATTERN:1"
#	set decoder_file "Altera_UP_Camera_Decoder_Bayer.v"
	if { $video_source == "On-board Video In (NTSC or PAL)" } {
		set use_onboard_video "USE_ONBOARD_VIDEO:1"
	}
	set use_1_3mp_camera		"USE_1_3MP_CAMERA:0"
	set use_5mp_camera			"USE_5MP_CAMERA:1"
	if { $video_source == "1.3MP Daughtercard (TRDB_DC2)" } {
		set use_1_3mp_camera	"USE_1_3MP_CAMERA:1"
		set use_5mp_camera		"USE_5MP_CAMERA:0"
	} 

	# set arguments
	set params "$input_width;$output_width;$ew;$fifo_width"
	set sections "$use_onboard_video;$use_1_3mp_camera;$use_5mp_camera"

	# get generation settings
#	set dest_language	[ get_generation_property HDL_LANGUAGE ]
	set dest_dir 		[ get_generation_property OUTPUT_DIRECTORY ]
	set dest_name		[ get_generation_property OUTPUT_NAME ]
	
	add_file "$dest_dir$dest_name.v" {SYNTHESIS SIMULATION}
	# add_file "$dest_dir/altera_up_video_itu_656_decoder.v" SYNTHESIS
	# add_file "$dest_dir/altera_up_video_decoder_add_endofpacket.v" SYNTHESIS
	# add_file "$dest_dir/altera_up_video_camera_decoder.v" SYNTHESIS
	# add_file "$dest_dir/altera_up_video_dual_clock_fifo.v" SYNTHESIS

	# Generate HDL
	alt_up_generate "$dest_dir$dest_name.v" "hdl/altera_up_avalon_video_decoder.v" "altera_up_avalon_video_decoder" $dest_name $params $sections
	# file copy -force "hdl/altera_up_video_itu_656_decoder.v" $dest_dir
	# file copy -force "hdl/altera_up_video_decoder_add_endofpacket.v" $dest_dir
	# file copy -force "hdl/altera_up_video_camera_decoder.v" $dest_dir
#	file copy -force "hdl/altera_up_video_camera_decoder_bayer.v" $dest_dir
#	file copy -force "hdl/altera_up_video_camera_decoder_RGB.v" $dest_dir
	# file copy -force "hdl/altera_up_video_dual_clock_fifo.v" $dest_dir

	# generate top level template
	#alt_up_create_instantiation_template "$dest_dir$dest_name.inst.v" $dest_name "external_interface"
}
# | 
# +-----------------------------------


## Add documentation links for user guide and/or release notes
add_documentation_link "User Guide" file:///ip/altera/university_program/audio_video/video/doc/Video.pdf
add_documentation_link "Release Notes" https://documentation.altera.com/#/link/hco1421698042087/hco1421698013408
