/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 1.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("do_not_transpose_output_data")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("reset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("start")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("wait_count")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("wait_count[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "wait_count";
}

SIGNAL("wait_count[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "wait_count";
}

SIGNAL("wait_count[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "wait_count";
}

SIGNAL("wait_count[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "wait_count";
}

SIGNAL("wait_count[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "wait_count";
}

SIGNAL("wait_count[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "wait_count";
}

SIGNAL("wait_count[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "wait_count";
}

SIGNAL("wait_count[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "wait_count";
}

SIGNAL("cnt_en")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("counter")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("counter[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter";
}

SIGNAL("counter[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter";
}

SIGNAL("counter[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter";
}

SIGNAL("counter[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter";
}

SIGNAL("counter[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter";
}

SIGNAL("counter[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter";
}

SIGNAL("counter[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter";
}

SIGNAL("counter[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "counter";
}

SIGNAL("finish")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("in_vector[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 9;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("in_vector[0][8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "in_vector[0]";
}

SIGNAL("in_vector[0][7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "in_vector[0]";
}

SIGNAL("in_vector[0][6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "in_vector[0]";
}

SIGNAL("in_vector[0][5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "in_vector[0]";
}

SIGNAL("in_vector[0][4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "in_vector[0]";
}

SIGNAL("in_vector[0][3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "in_vector[0]";
}

SIGNAL("in_vector[0][2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "in_vector[0]";
}

SIGNAL("in_vector[0][1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "in_vector[0]";
}

SIGNAL("in_vector[0][0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "in_vector[0]";
}

SIGNAL("in_vector[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 9;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("in_vector[1][8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "in_vector[1]";
}

SIGNAL("in_vector[1][7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "in_vector[1]";
}

SIGNAL("in_vector[1][6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "in_vector[1]";
}

SIGNAL("in_vector[1][5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "in_vector[1]";
}

SIGNAL("in_vector[1][4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "in_vector[1]";
}

SIGNAL("in_vector[1][3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "in_vector[1]";
}

SIGNAL("in_vector[1][2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "in_vector[1]";
}

SIGNAL("in_vector[1][1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "in_vector[1]";
}

SIGNAL("in_vector[1][0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "in_vector[1]";
}

SIGNAL("in_vector[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 9;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("in_vector[2][8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "in_vector[2]";
}

SIGNAL("in_vector[2][7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "in_vector[2]";
}

SIGNAL("in_vector[2][6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "in_vector[2]";
}

SIGNAL("in_vector[2][5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "in_vector[2]";
}

SIGNAL("in_vector[2][4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "in_vector[2]";
}

SIGNAL("in_vector[2][3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "in_vector[2]";
}

SIGNAL("in_vector[2][2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "in_vector[2]";
}

SIGNAL("in_vector[2][1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "in_vector[2]";
}

SIGNAL("in_vector[2][0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "in_vector[2]";
}

SIGNAL("in_vector_clock_enable")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("out_data[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 10;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("out_data[0][9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data[0]";
}

SIGNAL("out_data[0][8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data[0]";
}

SIGNAL("out_data[0][7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data[0]";
}

SIGNAL("out_data[0][6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data[0]";
}

SIGNAL("out_data[0][5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data[0]";
}

SIGNAL("out_data[0][4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data[0]";
}

SIGNAL("out_data[0][3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data[0]";
}

SIGNAL("out_data[0][2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data[0]";
}

SIGNAL("out_data[0][1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data[0]";
}

SIGNAL("out_data[0][0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data[0]";
}

SIGNAL("out_data[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 10;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("out_data[1][9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data[1]";
}

SIGNAL("out_data[1][8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data[1]";
}

SIGNAL("out_data[1][7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data[1]";
}

SIGNAL("out_data[1][6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data[1]";
}

SIGNAL("out_data[1][5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data[1]";
}

SIGNAL("out_data[1][4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data[1]";
}

SIGNAL("out_data[1][3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data[1]";
}

SIGNAL("out_data[1][2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data[1]";
}

SIGNAL("out_data[1][1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data[1]";
}

SIGNAL("out_data[1][0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data[1]";
}

SIGNAL("out_data[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 10;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("out_data[2][9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data[2]";
}

SIGNAL("out_data[2][8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data[2]";
}

SIGNAL("out_data[2][7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data[2]";
}

SIGNAL("out_data[2][6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data[2]";
}

SIGNAL("out_data[2][5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data[2]";
}

SIGNAL("out_data[2][4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data[2]";
}

SIGNAL("out_data[2][3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data[2]";
}

SIGNAL("out_data[2][2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data[2]";
}

SIGNAL("out_data[2][1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data[2]";
}

SIGNAL("out_data[2][0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "out_data[2]";
}

SIGNAL("out_data_clock_enable")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("reset_counter")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("state")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("state[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state";
}

SIGNAL("state[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state";
}

SIGNAL("state[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state";
}

SIGNAL("state[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state";
}

SIGNAL("state[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state";
}

SIGNAL("state[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state";
}

SIGNAL("state[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state";
}

SIGNAL("state[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state";
}

SIGNAL("state[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state";
}

SIGNAL("state[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state";
}

SIGNAL("state[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state";
}

SIGNAL("state[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state";
}

SIGNAL("state[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state";
}

SIGNAL("state[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state";
}

SIGNAL("state[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state";
}

SIGNAL("state[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state";
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1000;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
	}
}

TRANSITION_LIST("do_not_transpose_output_data")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("reset")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("start")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 19;
			LEVEL 0 FOR 49.0;
			LEVEL 1 FOR 1.0;
		}
		LEVEL 0 FOR 47.0;
	}
}

TRANSITION_LIST("wait_count[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("wait_count[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("wait_count[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("wait_count[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("wait_count[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("wait_count[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("wait_count[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("wait_count[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("cnt_en")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		NODE
		{
			REPEAT = 19;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 44.0;
		}
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 40.5;
	}
}

TRANSITION_LIST("counter[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("counter[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 7.5;
		NODE
		{
			REPEAT = 19;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 46.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 38.5;
	}
}

TRANSITION_LIST("counter[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.5;
		NODE
		{
			REPEAT = 19;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 44.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 38.5;
	}
}

TRANSITION_LIST("counter[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4.5;
		NODE
		{
			REPEAT = 18;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 1.0;
				LEVEL 0 FOR 1.0;
			}
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 45.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 45.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 40.5;
	}
}

TRANSITION_LIST("finish")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.5;
		NODE
		{
			REPEAT = 19;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 49.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 38.5;
	}
}

TRANSITION_LIST("in_vector[0][8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("in_vector[0][7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("in_vector[0][6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("in_vector[0][5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("in_vector[0][4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("in_vector[0][3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("in_vector[0][2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 53.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 150.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
		}
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 96.5;
	}
}

TRANSITION_LIST("in_vector[0][1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 53.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 150.0;
			LEVEL 0 FOR 100.0;
		}
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 146.5;
	}
}

TRANSITION_LIST("in_vector[0][0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 50.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 150.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 46.5;
	}
}

TRANSITION_LIST("in_vector[1][8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("in_vector[1][7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("in_vector[1][6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 53.5;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 46.5;
	}
}

TRANSITION_LIST("in_vector[1][5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 53.5;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 46.5;
	}
}

TRANSITION_LIST("in_vector[1][4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 53.5;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 196.5;
	}
}

TRANSITION_LIST("in_vector[1][3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 153.5;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
		}
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 346.5;
	}
}

TRANSITION_LIST("in_vector[1][2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 53.5;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 250.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 46.5;
	}
}

TRANSITION_LIST("in_vector[1][1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 103.5;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 96.5;
	}
}

TRANSITION_LIST("in_vector[1][0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 350.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 46.5;
	}
}

TRANSITION_LIST("in_vector[2][8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 103.5;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 46.5;
	}
}

TRANSITION_LIST("in_vector[2][7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 203.5;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 46.5;
	}
}

TRANSITION_LIST("in_vector[2][6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 53.5;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 50.0;
		}
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 46.5;
	}
}

TRANSITION_LIST("in_vector[2][5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 153.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
		}
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 146.5;
	}
}

TRANSITION_LIST("in_vector[2][4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 103.5;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 46.5;
	}
}

TRANSITION_LIST("in_vector[2][3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 103.5;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 246.5;
	}
}

TRANSITION_LIST("in_vector[2][2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 53.5;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 46.5;
	}
}

TRANSITION_LIST("in_vector[2][1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 53.5;
		LEVEL 1 FOR 50.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 150.0;
			LEVEL 1 FOR 100.0;
		}
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 46.5;
	}
}

TRANSITION_LIST("in_vector[2][0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 46.5;
	}
}

TRANSITION_LIST("in_vector_clock_enable")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2.5;
		NODE
		{
			REPEAT = 19;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 49.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 46.5;
	}
}

TRANSITION_LIST("out_data[0][9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 150.0;
			LEVEL 0 FOR 100.0;
		}
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 89.5;
	}
}

TRANSITION_LIST("out_data[0][8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 150.0;
			LEVEL 0 FOR 100.0;
		}
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 39.5;
	}
}

TRANSITION_LIST("out_data[0][7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 150.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
		}
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 39.5;
	}
}

TRANSITION_LIST("out_data[0][6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.5;
		LEVEL 1 FOR 50.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 150.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 39.5;
	}
}

TRANSITION_LIST("out_data[0][5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 60.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 150.0;
			LEVEL 0 FOR 100.0;
		}
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 139.5;
	}
}

TRANSITION_LIST("out_data[0][4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 60.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 150.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
		}
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 89.5;
	}
}

TRANSITION_LIST("out_data[0][3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.5;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 150.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 39.5;
	}
}

TRANSITION_LIST("out_data[0][2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 150.0;
			LEVEL 0 FOR 100.0;
		}
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 89.5;
	}
}

TRANSITION_LIST("out_data[0][1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 150.0;
			LEVEL 0 FOR 100.0;
		}
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 39.5;
	}
}

TRANSITION_LIST("out_data[0][0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 150.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
		}
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 39.5;
	}
}

TRANSITION_LIST("out_data[1][9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.5;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 39.5;
	}
}

TRANSITION_LIST("out_data[1][8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 60.5;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 139.5;
	}
}

TRANSITION_LIST("out_data[1][7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.5;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 250.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 39.5;
	}
}

TRANSITION_LIST("out_data[1][6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.5;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
		}
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 350.0;
		LEVEL 0 FOR 39.5;
	}
}

TRANSITION_LIST("out_data[1][5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.5;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 239.5;
	}
}

TRANSITION_LIST("out_data[1][4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.5;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 89.5;
	}
}

TRANSITION_LIST("out_data[1][3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.5;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 39.5;
	}
}

TRANSITION_LIST("out_data[1][2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.5;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 39.5;
	}
}

TRANSITION_LIST("out_data[1][1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.5;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 39.5;
	}
}

TRANSITION_LIST("out_data[1][0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 50.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 100.0;
		}
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 89.5;
	}
}

TRANSITION_LIST("out_data[2][9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 60.5;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 39.5;
	}
}

TRANSITION_LIST("out_data[2][8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.5;
		LEVEL 1 FOR 50.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 150.0;
			LEVEL 1 FOR 100.0;
		}
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 39.5;
	}
}

TRANSITION_LIST("out_data[2][7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.5;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 89.5;
	}
}

TRANSITION_LIST("out_data[2][6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 60.5;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 39.5;
	}
}

TRANSITION_LIST("out_data[2][5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 60.5;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 89.5;
	}
}

TRANSITION_LIST("out_data[2][4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
		}
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 189.5;
	}
}

TRANSITION_LIST("out_data[2][3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.5;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 50.0;
		}
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 39.5;
	}
}

TRANSITION_LIST("out_data[2][2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 160.5;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 89.5;
	}
}

TRANSITION_LIST("out_data[2][1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 60.5;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 89.5;
	}
}

TRANSITION_LIST("out_data[2][0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 210.5;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
		}
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 39.5;
	}
}

TRANSITION_LIST("out_data_clock_enable")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 9.5;
		NODE
		{
			REPEAT = 19;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 49.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 39.5;
	}
}

TRANSITION_LIST("reset_counter")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.5;
		NODE
		{
			REPEAT = 19;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 49.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 38.5;
	}
}

TRANSITION_LIST("state[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("state[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("state[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("state[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("state[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("state[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("state[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("state[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.5;
		NODE
		{
			REPEAT = 19;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 49.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 38.5;
	}
}

TRANSITION_LIST("state[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		NODE
		{
			REPEAT = 19;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 44.0;
		}
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 40.5;
	}
}

TRANSITION_LIST("state[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.5;
		NODE
		{
			REPEAT = 19;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 49.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 38.5;
	}
}

TRANSITION_LIST("state[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 9.5;
		NODE
		{
			REPEAT = 19;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 49.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 39.5;
	}
}

TRANSITION_LIST("state[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2.5;
		NODE
		{
			REPEAT = 19;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 49.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 46.5;
	}
}

TRANSITION_LIST("state[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("state[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.5;
		NODE
		{
			REPEAT = 19;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 49.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 38.5;
	}
}

TRANSITION_LIST("state[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.5;
		NODE
		{
			REPEAT = 19;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 43.0;
		}
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 39.5;
	}
}

TRANSITION_LIST("state[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2.5;
		NODE
		{
			REPEAT = 19;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 42.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 39.5;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "do_not_transpose_output_data";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "reset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "start";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "wait_count";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
	CHILDREN = 5, 6, 7, 8, 9, 10, 11, 12;
}

DISPLAY_LINE
{
	CHANNEL = "wait_count[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "wait_count[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "wait_count[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "wait_count[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "wait_count[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "wait_count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "wait_count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "wait_count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "cnt_en";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "counter";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
	CHILDREN = 15, 16, 17, 18, 19, 20, 21, 22;
}

DISPLAY_LINE
{
	CHANNEL = "counter[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "counter[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "counter[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "counter[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "counter[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "counter[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "counter[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "counter[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "finish";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "in_vector[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 0;
	CHILDREN = 25, 26, 27, 28, 29, 30, 31, 32, 33;
}

DISPLAY_LINE
{
	CHANNEL = "in_vector[0][8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "in_vector[0][7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "in_vector[0][6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "in_vector[0][5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "in_vector[0][4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "in_vector[0][3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "in_vector[0][2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "in_vector[0][1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "in_vector[0][0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "in_vector[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 34;
	TREE_LEVEL = 0;
	CHILDREN = 35, 36, 37, 38, 39, 40, 41, 42, 43;
}

DISPLAY_LINE
{
	CHANNEL = "in_vector[1][8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 34;
}

DISPLAY_LINE
{
	CHANNEL = "in_vector[1][7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 34;
}

DISPLAY_LINE
{
	CHANNEL = "in_vector[1][6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 34;
}

DISPLAY_LINE
{
	CHANNEL = "in_vector[1][5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 34;
}

DISPLAY_LINE
{
	CHANNEL = "in_vector[1][4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 34;
}

DISPLAY_LINE
{
	CHANNEL = "in_vector[1][3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 34;
}

DISPLAY_LINE
{
	CHANNEL = "in_vector[1][2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 34;
}

DISPLAY_LINE
{
	CHANNEL = "in_vector[1][1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 34;
}

DISPLAY_LINE
{
	CHANNEL = "in_vector[1][0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 34;
}

DISPLAY_LINE
{
	CHANNEL = "in_vector[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 44;
	TREE_LEVEL = 0;
	CHILDREN = 45, 46, 47, 48, 49, 50, 51, 52, 53;
}

DISPLAY_LINE
{
	CHANNEL = "in_vector[2][8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 44;
}

DISPLAY_LINE
{
	CHANNEL = "in_vector[2][7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 44;
}

DISPLAY_LINE
{
	CHANNEL = "in_vector[2][6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 44;
}

DISPLAY_LINE
{
	CHANNEL = "in_vector[2][5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 44;
}

DISPLAY_LINE
{
	CHANNEL = "in_vector[2][4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 44;
}

DISPLAY_LINE
{
	CHANNEL = "in_vector[2][3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 44;
}

DISPLAY_LINE
{
	CHANNEL = "in_vector[2][2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 44;
}

DISPLAY_LINE
{
	CHANNEL = "in_vector[2][1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 44;
}

DISPLAY_LINE
{
	CHANNEL = "in_vector[2][0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 44;
}

DISPLAY_LINE
{
	CHANNEL = "in_vector_clock_enable";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 54;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 55;
	TREE_LEVEL = 0;
	CHILDREN = 56, 57, 58, 59, 60, 61, 62, 63, 64, 65;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[0][9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[0][8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[0][7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[0][6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[0][5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[0][4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[0][3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[0][2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[0][1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[0][0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 66;
	TREE_LEVEL = 0;
	CHILDREN = 67, 68, 69, 70, 71, 72, 73, 74, 75, 76;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[1][9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 66;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[1][8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 66;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[1][7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 66;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[1][6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 66;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[1][5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 66;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[1][4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 66;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[1][3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 66;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[1][2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 66;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[1][1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 66;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[1][0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 66;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 77;
	TREE_LEVEL = 0;
	CHILDREN = 78, 79, 80, 81, 82, 83, 84, 85, 86, 87;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[2][9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[2][8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[2][7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[2][6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[2][5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[2][4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[2][3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[2][2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 85;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[2][1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 86;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "out_data[2][0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "out_data_clock_enable";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 88;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "reset_counter";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 89;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "state";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 90;
	TREE_LEVEL = 0;
	CHILDREN = 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106;
}

DISPLAY_LINE
{
	CHANNEL = "state[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 91;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "state[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 92;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "state[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 93;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "state[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 94;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "state[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 95;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "state[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 96;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "state[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 97;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "state[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 98;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "state[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 99;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "state[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 100;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "state[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 101;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "state[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 102;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "state[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 103;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "state[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 104;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "state[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 105;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "state[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 106;
	TREE_LEVEL = 1;
	PARENT = 90;
}

TIME_BAR
{
	TIME = 28175;
	MASTER = TRUE;
}
;
