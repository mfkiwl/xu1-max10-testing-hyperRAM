# (C) 2001-2017 Intel Corporation. All rights reserved.
# Your use of Intel Corporation's design tools, logic functions and other 
# software and tools, and its AMPP partner logic functions, and any output 
# files any of the foregoing (including device programming or simulation 
# files), and any associated documentation or information are expressly subject 
# to the terms and conditions of the Intel Program License Subscription 
# Agreement, Intel MegaCore Function License Agreement, or other applicable 
# license agreement, including, without limitation, that your use is for the 
# sole purpose of programming logic devices manufactured by Intel and sold by 
# Intel or its authorized distributors.  Please refer to the applicable 
# agreement for further details.


# +----------------------------------------------------------------------------+
# |                                                                            |
# | Any megafunction design, and related net list (encrypted or decrypted),    |
# |  support information, device programming or simulation file, and any other |
# |  associated documentation or information provided by Altera or a partner   |
# |  under Altera's Megafunction Partnership Program may be used only to       |
# |  program PLD devices (but not masked PLD devices) from Altera.  Any other  |
# |  use of such megafunction design, net list, support information, device    |
# |  programming or simulation file, or any other related documentation or     |
# |  information is prohibited for any other purpose, including, but not       |
# |  limited to modification, reverse engineering, de-compiling, or use with   |
# |  any other silicon devices, unless such use is explicitly licensed under   |
# |  a separate agreement with Altera or a megafunction partner.  Title to     |
# |  the intellectual property, including patents, copyrights, trademarks,     |
# |  trade secrets, or maskworks, embodied in any such megafunction design,    |
# |  net list, support information, device programming or simulation file, or  |
# |  any other related documentation or information provided by Altera or a    |
# |  megafunction partner, remains with Altera, the megafunction partner, or   |
# |  their respective licensors.  No other licenses, including any licenses    |
# |  needed under any third party's intellectual property, are provided herein.|
# |  Copying or modifying any file, or portion thereof, to which this notice   |
# |  is attached violates this copyright.                                      |
# |                                                                            |
# | THIS FILE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR    |
# | IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,   |
# | FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL    |
# | THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER |
# | LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING    |
# | FROM, OUT OF OR IN CONNECTION WITH THIS FILE OR THE USE OR OTHER DEALINGS  |
# | IN THIS FILE.                                                              |
# |                                                                            |
# | This agreement shall be governed in all respects by the laws of the State  |
# |  of California and by the laws of the United States of America.            |
# |                                                                            |
# +----------------------------------------------------------------------------+

# TCL File Generated by Altera University Program
# DO NOT MODIFY

set aup_version 16.1

source "../../../lib/aup_ip_generator.tcl"

# +-----------------------------------
# | module altera_up_avalon_video_scaler
# | 
set_module_property DESCRIPTION "ASCII Characters to Image Stream Converter"
set_module_property NAME altera_up_avalon_video_ascii_to_image
set_module_property VERSION $aup_version
set_module_property GROUP "University Program/Audio & Video/Video"
set_module_property AUTHOR "Altera University Program"
set_module_property DISPLAY_NAME "ASCII to Image Stream"
set_module_property DATASHEET_URL "[pwd]/../doc/Video.pdf"
#set_module_property TOP_LEVEL_HDL_FILE altera_up_avalon_video_ascii_to_image.v
#set_module_property TOP_LEVEL_HDL_MODULE altera_up_avalon_video_ascii_to_image
set_module_property INSTANTIATE_IN_SYSTEM_MODULE true
set_module_property HIDE_FROM_QUARTUS true
set_module_property EDITABLE false
set_module_property ANALYZE_HDL false
set_module_property ELABORATION_CALLBACK elaborate
set_module_property GENERATION_CALLBACK generate
# | 
# +-----------------------------------

# +-----------------------------------
# | files
# | 
#add_file altera_up_avalon_video_ascii_to_image.v {SYNTHESIS SIMULATION}
add_file "hdl/altera_up_video_ascii_rom_128.v" {SYNTHESIS SIMULATION}
add_file "hdl/altera_up_video_ascii_rom_128.txt" {SYNTHESIS SIMULATION}
# | 
# +-----------------------------------

# +-----------------------------------
# | parameters
# | 
add_parameter colour_format string "1-bit Black/White"
set_parameter_property colour_format DISPLAY_NAME "Character Color Format"
#set_parameter_property colour_format GROUP "General Settings"
set_parameter_property colour_format UNITS None
set_parameter_property colour_format AFFECTS_ELABORATION true
set_parameter_property colour_format AFFECTS_GENERATION true
set_parameter_property colour_format ALLOWED_RANGES {"1-bit Black/White" "9-bit RGB"}
set_parameter_property colour_format VISIBLE true
set_parameter_property colour_format ENABLED true
# | 
# +-----------------------------------

# +-----------------------------------
# | connection point clk
# | 
add_interface clk clock end
set_interface_property clk enabled true

add_interface_port clk clk clk Input 1
# | 
# +-----------------------------------

# +-----------------------------------
# | connection point reset
# | 
add_interface reset reset end
set_interface_property reset associatedClock clk
set_interface_property reset enabled true
set_interface_property reset synchronousEdges DEASSERT

add_interface_port reset reset reset Input 1
# | 
# +-----------------------------------

# +-----------------------------------
# | connection point avalon_ascii_sink
# | 
add_interface avalon_ascii_sink avalon_streaming end 
set_interface_property avalon_ascii_sink associatedClock clk
set_interface_property avalon_ascii_sink associatedReset reset
set_interface_property avalon_ascii_sink errorDescriptor ""
set_interface_property avalon_ascii_sink maxChannel 0
set_interface_property avalon_ascii_sink readyLatency 0

add_interface_port avalon_ascii_sink ascii_in_channel channel Input 6
add_interface_port avalon_ascii_sink ascii_in_startofpacket startofpacket Input 1
add_interface_port avalon_ascii_sink ascii_in_endofpacket endofpacket Input 1
add_interface_port avalon_ascii_sink ascii_in_valid valid Input 1
add_interface_port avalon_ascii_sink ascii_in_ready ready Output 1
# | 
# +-----------------------------------

# +-----------------------------------
# | connection point avalon_image_source
# | 
add_interface avalon_image_source avalon_streaming start 
set_interface_property avalon_image_source associatedClock clk
set_interface_property avalon_image_source associatedReset reset
set_interface_property avalon_image_source errorDescriptor ""
set_interface_property avalon_image_source maxChannel 0
set_interface_property avalon_image_source readyLatency 0

add_interface_port avalon_image_source image_out_ready ready Input 1
add_interface_port avalon_image_source image_out_startofpacket startofpacket Output 1
add_interface_port avalon_image_source image_out_endofpacket endofpacket Output 1
add_interface_port avalon_image_source image_out_valid valid Output 1
# | 
# +-----------------------------------


# +-----------------------------------
# | Elaboration function
# | 
proc elaborate {} {
	set colour_format	[ get_parameter_value "colour_format" ]

	set dw_in			8

	set color_bits		1
	set color_planes	1
	if { ($colour_format == "9-bit RGB") } {
		set dw_in			16

		set color_bits		3
		set color_planes	4
	}

	set dw_out	[ expr $color_bits * $color_planes ]

	# +-----------------------------------
	# | connection point avalon_ascii_sink
	# | 
	set_interface_property avalon_ascii_sink dataBitsPerSymbol $dw_in
	set_interface_property avalon_ascii_sink symbolsPerBeat 1
	
	add_interface_port avalon_ascii_sink ascii_in_data data Input $dw_in
	# | 
	# +-----------------------------------

	# +-----------------------------------
	# | connection point avalon_image_source
	# | 
	set_interface_property avalon_image_source dataBitsPerSymbol $color_bits
	set_interface_property avalon_image_source symbolsPerBeat $color_planes

	add_interface_port avalon_image_source image_out_data data Output $dw_out
	# | 
	# +-----------------------------------
}
# | 
# +-----------------------------------


# +-----------------------------------
# | Generation function
# | 
proc generate {} {
	send_message info "Starting Generation of ASCII to Image Stream Converter"

	# get parameter values
	set colour_format	[ get_parameter_value "colour_format" ]

	set input_dw		"IDW:7"
	set output_dw		"ODW:0"
	if { ($colour_format == "9-bit RGB") } {
		set input_dw		"IDW:15"
		set output_dw		"ODW:11"
	}

	# set section values
	set use_colour		"USE_COLOUR:0"
	if { ($colour_format == "9-bit RGB") } {
		set use_colour	"USE_COLOUR:1"
	}

	# set arguments
	set params "$input_dw;$output_dw"
	set sections "$use_colour"

	# get generation settings
#	set dest_language	[ get_generation_property HDL_LANGUAGE ]
	set dest_dir 		[ get_generation_property OUTPUT_DIRECTORY ]
	set dest_name		[ get_generation_property OUTPUT_NAME ]
	
	add_file "$dest_dir$dest_name.v" {SYNTHESIS SIMULATION}

	# Generate HDL
	alt_up_generate "$dest_dir$dest_name.v" "hdl/altera_up_avalon_video_ascii_to_image.v" "altera_up_avalon_video_ascii_to_image" $dest_name $params $sections
}
# | 
# +-----------------------------------

