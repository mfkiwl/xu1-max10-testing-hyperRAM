# (C) 2001-2017 Intel Corporation. All rights reserved.
# Your use of Intel Corporation's design tools, logic functions and other 
# software and tools, and its AMPP partner logic functions, and any output 
# files any of the foregoing (including device programming or simulation 
# files), and any associated documentation or information are expressly subject 
# to the terms and conditions of the Intel Program License Subscription 
# Agreement, Intel MegaCore Function License Agreement, or other applicable 
# license agreement, including, without limitation, that your use is for the 
# sole purpose of programming logic devices manufactured by Intel and sold by 
# Intel or its authorized distributors.  Please refer to the applicable 
# agreement for further details.


# THIS FILE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THIS FILE OR THE USE OR OTHER DEALINGS
# IN THIS FILE.

# TCL File Generated by Altera University Program
# DO NOT MODIFY
package require -exact qsys 13.1
set aup_version 16.1

source "../../lib/aup_ip_generator.tcl"

# +-----------------------------------
# | module altera_up_avalon_ssram
# | 
set_module_property DESCRIPTION "SSRAM Controller for DE-series Boards"
set_module_property NAME altera_up_avalon_ssram
set_module_property VERSION $aup_version
set_module_property GROUP "University Program/Memory"
set_module_property AUTHOR "Altera University Program"
set_module_property DISPLAY_NAME "SSRAM Controller"
set_module_property DATASHEET_URL "[pwd]/doc/SSRAM_Controller.pdf"
set_module_property INSTANTIATE_IN_SYSTEM_MODULE true
set_module_property EDITABLE false
set_module_property ANALYZE_HDL false
set_module_property COMPOSITION_CALLBACK compose
# | 
# +-----------------------------------

# +-----------------------------------
# | parameters
# | 
add_parameter board string "DE2i-150"
set_parameter_property board DISPLAY_NAME "DE-Series Board"
set_parameter_property board GROUP "Configurations"
set_parameter_property board UNITS None
set_parameter_property board AFFECTS_ELABORATION true
set_parameter_property board AFFECTS_GENERATION true
set_parameter_property board ALLOWED_RANGES {"DE2i-150"}
set_parameter_property board VISIBLE true
set_parameter_property board ENABLED true

add_parameter pixel_buffer boolean false
set_parameter_property pixel_buffer DISPLAY_NAME "Use as a pixel buffer for video out"
set_parameter_property pixel_buffer GROUP "Configurations"
set_parameter_property pixel_buffer UNITS None
set_parameter_property pixel_buffer AFFECTS_ELABORATION true
set_parameter_property pixel_buffer AFFECTS_GENERATION true
set_parameter_property pixel_buffer VISIBLE true
set_parameter_property pixel_buffer ENABLED true
# | 
# +-----------------------------------

# +-----------------------------------
# | Composition function
# | 
proc compose { } {
    # get parameter values
    set board [ get_parameter_value "board" ]
	set pixel_buffer [ get_parameter_value "pixel_buffer" ]

    if {  [ string match -nocase "DE2i-150*" $board ]} {
        add_instance clk_0 clock_source 16.0
        set_instance_parameter_value clk_0 {clockFrequency} {50000000.0}
        set_instance_parameter_value clk_0 {clockFrequencyKnown} {0}
        set_instance_parameter_value clk_0 {resetSynchronousEdges} {NONE}
        set_instance_property clk_0 SUPPRESS_ALL_INFO_MESSAGES true
		set_instance_property clk_0 SUPPRESS_ALL_WARNINGS true
    
        add_instance ssram_tri_state_bridge altera_tristate_conduit_bridge
        set_instance_property ssram_tri_state_bridge SUPPRESS_ALL_INFO_MESSAGES true
		set_instance_property ssram_tri_state_bridge SUPPRESS_ALL_WARNINGS true

        add_instance ssram_tri_state_controller altera_generic_tristate_controller
        set_instance_property ssram_tri_state_controller SUPPRESS_ALL_INFO_MESSAGES true
		set_instance_property ssram_tri_state_controller SUPPRESS_ALL_WARNINGS true
        set_instance_parameter_value ssram_tri_state_controller {TCM_ADDRESS_W} {20}
        set_instance_parameter_value ssram_tri_state_controller {TCM_DATA_W} {32}
        set_instance_parameter_value ssram_tri_state_controller {TCM_BYTEENABLE_W} {4}
        set_instance_parameter_value ssram_tri_state_controller {TCM_READ_WAIT} {3}
        set_instance_parameter_value ssram_tri_state_controller {TCM_WRITE_WAIT} {3}
        set_instance_parameter_value ssram_tri_state_controller {TCM_SETUP_WAIT} {3}
        set_instance_parameter_value ssram_tri_state_controller {TCM_DATA_HOLD} {3}
        set_instance_parameter_value ssram_tri_state_controller {TCM_MAX_PENDING_READ_TRANSACTIONS} {5}
        set_instance_parameter_value ssram_tri_state_controller {TCM_TURNAROUND_TIME} {2}
        set_instance_parameter_value ssram_tri_state_controller {TCM_TIMING_UNITS} {1}
        set_instance_parameter_value ssram_tri_state_controller {TCM_READLATENCY} {3}
        set_instance_parameter_value ssram_tri_state_controller {TCM_SYMBOLS_PER_WORD} {4}
        set_instance_parameter_value ssram_tri_state_controller {USE_READDATA} {1}
        set_instance_parameter_value ssram_tri_state_controller {USE_WRITEDATA} {1}
        set_instance_parameter_value ssram_tri_state_controller {USE_READ} {0}
        set_instance_parameter_value ssram_tri_state_controller {USE_WRITE} {1}
        set_instance_parameter_value ssram_tri_state_controller {USE_BEGINTRANSFER} {1}
        set_instance_parameter_value ssram_tri_state_controller {USE_BYTEENABLE} {1}
        set_instance_parameter_value ssram_tri_state_controller {USE_CHIPSELECT} {1}
        set_instance_parameter_value ssram_tri_state_controller {USE_LOCK} {0}
        set_instance_parameter_value ssram_tri_state_controller {USE_ADDRESS} {1}
        set_instance_parameter_value ssram_tri_state_controller {USE_WAITREQUEST} {0}
        set_instance_parameter_value ssram_tri_state_controller {USE_WRITEBYTEENABLE} {0}
        set_instance_parameter_value ssram_tri_state_controller {USE_OUTPUTENABLE} {1}
        set_instance_parameter_value ssram_tri_state_controller {USE_RESETREQUEST} {0}
        set_instance_parameter_value ssram_tri_state_controller {USE_IRQ} {0}
        set_instance_parameter_value ssram_tri_state_controller {USE_RESET_OUTPUT} {0}
        set_instance_parameter_value ssram_tri_state_controller {ACTIVE_LOW_READ} {0}
        set_instance_parameter_value ssram_tri_state_controller {ACTIVE_LOW_LOCK} {0}
        set_instance_parameter_value ssram_tri_state_controller {ACTIVE_LOW_WRITE} {1}
        set_instance_parameter_value ssram_tri_state_controller {ACTIVE_LOW_CHIPSELECT} {1}
        set_instance_parameter_value ssram_tri_state_controller {ACTIVE_LOW_BYTEENABLE} {1}
        set_instance_parameter_value ssram_tri_state_controller {ACTIVE_LOW_OUTPUTENABLE} {1}
        set_instance_parameter_value ssram_tri_state_controller {ACTIVE_LOW_WRITEBYTEENABLE} {0}
        set_instance_parameter_value ssram_tri_state_controller {ACTIVE_LOW_WAITREQUEST} {0}
        set_instance_parameter_value ssram_tri_state_controller {ACTIVE_LOW_BEGINTRANSFER} {1}
        set_instance_parameter_value ssram_tri_state_controller {ACTIVE_LOW_RESETREQUEST} {0}
        set_instance_parameter_value ssram_tri_state_controller {ACTIVE_LOW_IRQ} {0}
        set_instance_parameter_value ssram_tri_state_controller {ACTIVE_LOW_RESET_OUTPUT} {1}
        set_instance_parameter_value ssram_tri_state_controller {CHIPSELECT_THROUGH_READLATENCY} {1}
        set_instance_parameter_value ssram_tri_state_controller {IS_MEMORY_DEVICE} {1}
        set_instance_parameter_value ssram_tri_state_controller {MODULE_ASSIGNMENT_KEYS} {embeddedsw.CMacro.SRAM_MEMORY_SIZE embeddedsw.CMacro.SRAM_MEMORY_UNITS embeddedsw.CMacro.SSRAM_DATA_WIDTH embeddedsw.CMacro.SSRAM_READ_LATENCY embeddedsw.memoryInfo.MEM_INIT_DATA_WIDTH embeddedsw.memoryInfo.HAS_BYTE_LANE embeddedsw.memoryInfo.GENERATE_DAT_SYM embeddedsw.memoryInfo.DAT_SYM_INSTALL_DIR}
        set_instance_parameter_value ssram_tri_state_controller {MODULE_ASSIGNMENT_VALUES} {2 4194304 32 2 32 1 1 SIM_DIR}
        if { $pixel_buffer } {
            set_instance_parameter_value ssram_tri_state_controller INTERFACE_ASSIGNMENT_KEYS "embeddedsw.configuration.isMemoryDevice"
            set_instance_parameter_value ssram_tri_state_controller INTERFACE_ASSIGNMENT_VALUES "0"
        } else {
            set_instance_parameter_value ssram_tri_state_controller INTERFACE_ASSIGNMENT_KEYS "embeddedsw.configuration.isMemoryDevice"
            set_instance_parameter_value ssram_tri_state_controller INTERFACE_ASSIGNMENT_VALUES "1"
        }
        
        
        add_instance tri_state_bridge_ssram_pinSharer altera_tristate_conduit_pin_sharer
        set_instance_property tri_state_bridge_ssram_pinSharer SUPPRESS_ALL_INFO_MESSAGES true
		set_instance_property tri_state_bridge_ssram_pinSharer SUPPRESS_ALL_WARNINGS true
        set_instance_parameter_value tri_state_bridge_ssram_pinSharer {NUM_INTERFACES} {1}
        set_instance_parameter_value tri_state_bridge_ssram_pinSharer {MODULE_ORIGIN_LIST} {ssram_tri_state_controller.tcm ssram_tri_state_controller.tcm ssram_tri_state_controller.tcm ssram_tri_state_controller.tcm ssram_tri_state_controller.tcm ssram_tri_state_controller.tcm ssram_tri_state_controller.tcm}
        set_instance_parameter_value tri_state_bridge_ssram_pinSharer {SIGNAL_ORIGIN_LIST} {address byteenable_n outputenable_n begintransfer_n write_n data chipselect_n}
        set_instance_parameter_value tri_state_bridge_ssram_pinSharer {SHARED_SIGNAL_LIST} {fs_addr ssram_be_n ssram_oe_n ssram_adsc_n ssram_we_n fs_dq ssram_cs_n}

        # connections and connection parameters
        add_connection clk_0.clk ssram_tri_state_bridge.clk clock

        add_connection clk_0.clk tri_state_bridge_ssram_pinSharer.clk clock

        add_connection clk_0.clk ssram_tri_state_controller.clk clock

        add_connection clk_0.clk_reset ssram_tri_state_bridge.reset reset

        add_connection clk_0.clk_reset tri_state_bridge_ssram_pinSharer.reset reset

        add_connection clk_0.clk_reset ssram_tri_state_controller.reset reset

        add_connection tri_state_bridge_ssram_pinSharer.tcm ssram_tri_state_bridge.tcs tristate_conduit

        add_connection ssram_tri_state_controller.tcm tri_state_bridge_ssram_pinSharer.tcs0 tristate_conduit

        # exported interfaces
        add_interface clk clock end
        set_interface_property clk EXPORT_OF "clk_0.clk_in"
        add_interface reset reset end
        set_interface_property reset EXPORT_OF "clk_0.clk_in_reset"
        add_interface avalon_ssram_slave avalon slave
        set_interface_property avalon_ssram_slave EXPORT_OF "ssram_tri_state_controller.uas"
        add_interface external_interface conduit end
        set_interface_property external_interface EXPORT_OF "ssram_tri_state_bridge.out"
        
        # interconnect requirements
        #set_interconnect_requirement {$system} {qsys_mm.clockCrossingAdapter} {HANDSHAKE}
        #set_interconnect_requirement {$system} {qsys_mm.maxAdditionalLatency} {1}
        #set_interconnect_requirement {$system} {qsys_mm.enableEccProtection} {FALSE}
        #set_interconnect_requirement {$system} {qsys_mm.insertDefaultSlave} {FALSE}
    }
}
