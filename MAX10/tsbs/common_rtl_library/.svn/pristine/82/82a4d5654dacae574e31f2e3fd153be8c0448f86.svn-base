/*
 * This source file contains a Verilog description of an IP core
 * automatically generated by the SPIRAL HDL Generator.
 *
 * This product includes a hardware design developed by Carnegie Mellon University.
 *
 * Copyright (c) 2005-2011 by Peter A. Milder for the SPIRAL Project,
 * Carnegie Mellon University
 *
 * For more information, see the SPIRAL project website at:
 *   http://www.spiral.net
 *
 * This design is provided for internal, non-commercial research use only
 * and is not for redistribution, with or without modifications.
 * 
 * You may not use the name "Carnegie Mellon University" or derivations
 * thereof to endorse or promote products derived from this software.
 *
 * THE SOFTWARE IS PROVIDED "AS-IS" WITHOUT ANY WARRANTY OF ANY KIND, EITHER
 * EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO ANY WARRANTY
 * THAT THE SOFTWARE WILL CONFORM TO SPECIFICATIONS OR BE ERROR-FREE AND ANY
 * IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE,
 * TITLE, OR NON-INFRINGEMENT.  IN NO EVENT SHALL CARNEGIE MELLON UNIVERSITY
 * BE LIABLE FOR ANY DAMAGES, INCLUDING BUT NOT LIMITED TO DIRECT, INDIRECT,
 * SPECIAL OR CONSEQUENTIAL DAMAGES, ARISING OUT OF, RESULTING FROM, OR IN
 * ANY WAY CONNECTED WITH THIS SOFTWARE (WHETHER OR NOT BASED UPON WARRANTY,
 * CONTRACT, TORT OR OTHERWISE).
 *
 */

/*


DFT Size = 1024
direction = forward
data type = 16 bit fixed point, scaled 
architecture = fully streaming
radix = 4
streaming width = 4
data ordering = natural input / natural output
BRAM budget = -1


*/
 
 
 
//   Input/output stream: 4 complex words per cycle
//   Throughput: one transform every 256 cycles
//   Latency: 1781 cycles

//   Resources required:
//     48 multipliers (16 x 16 bit)
//     104 adders (16 x 16 bit)
//     24 RAMs (512 words, 32 bits per word)
//     8 RAMs (128 words, 32 bits per word)
//     8 RAMs (8 words, 32 bits per word)
//     8 RAMs (32 words, 32 bits per word)
//     6 ROMs (64 words, 16 bits per word)
//     6 ROMs (256 words, 16 bits per word)
//     8 ROMs (64 words, 6 bits per word)
//     24 ROMs (256 words, 8 bits per word)
//     6 ROMs (16 words, 16 bits per word)

// Generated on Fri Aug 30 01:10:20 EDT 2019

// Latency: 1781 clock cycles
// Throughput: 1 transform every 256 cycles


// We use an interleaved complex data format.  X0 represents the
// real portion of the first input, and X1 represents the imaginary
// portion.  The X variables are system inputs and the Y variables
// are system outputs.

// The design uses a system of flag signals to indicate the
// beginning of the input and output data streams.  The 'next'
// input (asserted high), is used to instruct the system that the
// input stream will begin on the following cycle.

// This system has a 'gap' of 256 cycles.  This means that
// 256 cycles must elapse between the beginning of the input
// vectors.

// The output signal 'next_out' (also asserted high) indicates
// that the output vector will begin streaming out of the system
 // on the following cycle.

// The system has a latency of 1781 cycles.  This means that
// the 'next_out' will be asserted 1781 cycles after the user
// asserts 'next'.

// The simple testbench below will demonstrate the timing for loading
// and unloading data vectors.
// The system reset signal is asserted high.

// Please note: when simulating floating point code, you must include
// Xilinx's DSP slice simulation module.

// Latency: 1781
// Gap: 256
// module_name_is:dft_top
module dft_top(clk, reset, next, next_out,
   X0, Y0,
   X1, Y1,
   X2, Y2,
   X3, Y3,
   X4, Y4,
   X5, Y5,
   X6, Y6,
   X7, Y7);

   output next_out;
   input clk, reset, next;

   input [15:0] X0,
      X1,
      X2,
      X3,
      X4,
      X5,
      X6,
      X7;

   output [15:0] Y0,
      Y1,
      Y2,
      Y3,
      Y4,
      Y5,
      Y6,
      Y7;

   wire [15:0] t0_0;
   wire [15:0] t0_1;
   wire [15:0] t0_2;
   wire [15:0] t0_3;
   wire [15:0] t0_4;
   wire [15:0] t0_5;
   wire [15:0] t0_6;
   wire [15:0] t0_7;
   wire next_0;
   wire [15:0] t1_0;
   wire [15:0] t1_1;
   wire [15:0] t1_2;
   wire [15:0] t1_3;
   wire [15:0] t1_4;
   wire [15:0] t1_5;
   wire [15:0] t1_6;
   wire [15:0] t1_7;
   wire next_1;
   wire [15:0] t2_0;
   wire [15:0] t2_1;
   wire [15:0] t2_2;
   wire [15:0] t2_3;
   wire [15:0] t2_4;
   wire [15:0] t2_5;
   wire [15:0] t2_6;
   wire [15:0] t2_7;
   wire next_2;
   wire [15:0] t3_0;
   wire [15:0] t3_1;
   wire [15:0] t3_2;
   wire [15:0] t3_3;
   wire [15:0] t3_4;
   wire [15:0] t3_5;
   wire [15:0] t3_6;
   wire [15:0] t3_7;
   wire next_3;
   wire [15:0] t4_0;
   wire [15:0] t4_1;
   wire [15:0] t4_2;
   wire [15:0] t4_3;
   wire [15:0] t4_4;
   wire [15:0] t4_5;
   wire [15:0] t4_6;
   wire [15:0] t4_7;
   wire next_4;
   wire [15:0] t5_0;
   wire [15:0] t5_1;
   wire [15:0] t5_2;
   wire [15:0] t5_3;
   wire [15:0] t5_4;
   wire [15:0] t5_5;
   wire [15:0] t5_6;
   wire [15:0] t5_7;
   wire next_5;
   wire [15:0] t6_0;
   wire [15:0] t6_1;
   wire [15:0] t6_2;
   wire [15:0] t6_3;
   wire [15:0] t6_4;
   wire [15:0] t6_5;
   wire [15:0] t6_6;
   wire [15:0] t6_7;
   wire next_6;
   wire [15:0] t7_0;
   wire [15:0] t7_1;
   wire [15:0] t7_2;
   wire [15:0] t7_3;
   wire [15:0] t7_4;
   wire [15:0] t7_5;
   wire [15:0] t7_6;
   wire [15:0] t7_7;
   wire next_7;
   wire [15:0] t8_0;
   wire [15:0] t8_1;
   wire [15:0] t8_2;
   wire [15:0] t8_3;
   wire [15:0] t8_4;
   wire [15:0] t8_5;
   wire [15:0] t8_6;
   wire [15:0] t8_7;
   wire next_8;
   wire [15:0] t9_0;
   wire [15:0] t9_1;
   wire [15:0] t9_2;
   wire [15:0] t9_3;
   wire [15:0] t9_4;
   wire [15:0] t9_5;
   wire [15:0] t9_6;
   wire [15:0] t9_7;
   wire next_9;
   wire [15:0] t10_0;
   wire [15:0] t10_1;
   wire [15:0] t10_2;
   wire [15:0] t10_3;
   wire [15:0] t10_4;
   wire [15:0] t10_5;
   wire [15:0] t10_6;
   wire [15:0] t10_7;
   wire next_10;
   wire [15:0] t11_0;
   wire [15:0] t11_1;
   wire [15:0] t11_2;
   wire [15:0] t11_3;
   wire [15:0] t11_4;
   wire [15:0] t11_5;
   wire [15:0] t11_6;
   wire [15:0] t11_7;
   wire next_11;
   wire [15:0] t12_0;
   wire [15:0] t12_1;
   wire [15:0] t12_2;
   wire [15:0] t12_3;
   wire [15:0] t12_4;
   wire [15:0] t12_5;
   wire [15:0] t12_6;
   wire [15:0] t12_7;
   wire next_12;
   wire [15:0] t13_0;
   wire [15:0] t13_1;
   wire [15:0] t13_2;
   wire [15:0] t13_3;
   wire [15:0] t13_4;
   wire [15:0] t13_5;
   wire [15:0] t13_6;
   wire [15:0] t13_7;
   wire next_13;
   wire [15:0] t14_0;
   wire [15:0] t14_1;
   wire [15:0] t14_2;
   wire [15:0] t14_3;
   wire [15:0] t14_4;
   wire [15:0] t14_5;
   wire [15:0] t14_6;
   wire [15:0] t14_7;
   wire next_14;
   wire [15:0] t15_0;
   wire [15:0] t15_1;
   wire [15:0] t15_2;
   wire [15:0] t15_3;
   wire [15:0] t15_4;
   wire [15:0] t15_5;
   wire [15:0] t15_6;
   wire [15:0] t15_7;
   wire next_15;
   assign t0_0 = X0;
   assign Y0 = t15_0;
   assign t0_1 = X1;
   assign Y1 = t15_1;
   assign t0_2 = X2;
   assign Y2 = t15_2;
   assign t0_3 = X3;
   assign Y3 = t15_3;
   assign t0_4 = X4;
   assign Y4 = t15_4;
   assign t0_5 = X5;
   assign Y5 = t15_5;
   assign t0_6 = X6;
   assign Y6 = t15_6;
   assign t0_7 = X7;
   assign Y7 = t15_7;
   assign next_0 = next;
   assign next_out = next_15;

// latency=517, gap=256
   rc20411 stage0(.clk(clk), .reset(reset), .next(next_0), .next_out(next_1),
    .X0(t0_0), .Y0(t1_0),
    .X1(t0_1), .Y1(t1_1),
    .X2(t0_2), .Y2(t1_2),
    .X3(t0_3), .Y3(t1_3),
    .X4(t0_4), .Y4(t1_4),
    .X5(t0_5), .Y5(t1_5),
    .X6(t0_6), .Y6(t1_6),
    .X7(t0_7), .Y7(t1_7));


// latency=3, gap=256
   codeBlock20413 stage1(.clk(clk), .reset(reset), .next_in(next_1), .next_out(next_2),
       .X0_in(t1_0), .Y0(t2_0),
       .X1_in(t1_1), .Y1(t2_1),
       .X2_in(t1_2), .Y2(t2_2),
       .X3_in(t1_3), .Y3(t2_3),
       .X4_in(t1_4), .Y4(t2_4),
       .X5_in(t1_5), .Y5(t2_5),
       .X6_in(t1_6), .Y6(t2_6),
       .X7_in(t1_7), .Y7(t2_7));


// latency=13, gap=256
   rc20627 stage2(.clk(clk), .reset(reset), .next(next_2), .next_out(next_3),
    .X0(t2_0), .Y0(t3_0),
    .X1(t2_1), .Y1(t3_1),
    .X2(t2_2), .Y2(t3_2),
    .X3(t2_3), .Y3(t3_3),
    .X4(t2_4), .Y4(t3_4),
    .X5(t2_5), .Y5(t3_5),
    .X6(t2_6), .Y6(t3_6),
    .X7(t2_7), .Y7(t3_7));


// latency=8, gap=256
   DirSum_21000 stage3(.next(next_3), .clk(clk), .reset(reset), .next_out(next_4),
       .X0(t3_0), .Y0(t4_0),
       .X1(t3_1), .Y1(t4_1),
       .X2(t3_2), .Y2(t4_2),
       .X3(t3_3), .Y3(t4_3),
       .X4(t3_4), .Y4(t4_4),
       .X5(t3_5), .Y5(t4_5),
       .X6(t3_6), .Y6(t4_6),
       .X7(t3_7), .Y7(t4_7));


// latency=3, gap=256
   codeBlock21003 stage4(.clk(clk), .reset(reset), .next_in(next_4), .next_out(next_5),
       .X0_in(t4_0), .Y0(t5_0),
       .X1_in(t4_1), .Y1(t5_1),
       .X2_in(t4_2), .Y2(t5_2),
       .X3_in(t4_3), .Y3(t5_3),
       .X4_in(t4_4), .Y4(t5_4),
       .X5_in(t4_5), .Y5(t5_5),
       .X6_in(t4_6), .Y6(t5_6),
       .X7_in(t4_7), .Y7(t5_7));


// latency=37, gap=256
   rc21217 stage5(.clk(clk), .reset(reset), .next(next_5), .next_out(next_6),
    .X0(t5_0), .Y0(t6_0),
    .X1(t5_1), .Y1(t6_1),
    .X2(t5_2), .Y2(t6_2),
    .X3(t5_3), .Y3(t6_3),
    .X4(t5_4), .Y4(t6_4),
    .X5(t5_5), .Y5(t6_5),
    .X6(t5_6), .Y6(t6_6),
    .X7(t5_7), .Y7(t6_7));


// latency=8, gap=256
   DirSum_21686 stage6(.next(next_6), .clk(clk), .reset(reset), .next_out(next_7),
       .X0(t6_0), .Y0(t7_0),
       .X1(t6_1), .Y1(t7_1),
       .X2(t6_2), .Y2(t7_2),
       .X3(t6_3), .Y3(t7_3),
       .X4(t6_4), .Y4(t7_4),
       .X5(t6_5), .Y5(t7_5),
       .X6(t6_6), .Y6(t7_6),
       .X7(t6_7), .Y7(t7_7));


// latency=3, gap=256
   codeBlock21689 stage7(.clk(clk), .reset(reset), .next_in(next_7), .next_out(next_8),
       .X0_in(t7_0), .Y0(t8_0),
       .X1_in(t7_1), .Y1(t8_1),
       .X2_in(t7_2), .Y2(t8_2),
       .X3_in(t7_3), .Y3(t8_3),
       .X4_in(t7_4), .Y4(t8_4),
       .X5_in(t7_5), .Y5(t8_5),
       .X6_in(t7_6), .Y6(t8_6),
       .X7_in(t7_7), .Y7(t8_7));


// latency=133, gap=256
   rc21903 stage8(.clk(clk), .reset(reset), .next(next_8), .next_out(next_9),
    .X0(t8_0), .Y0(t9_0),
    .X1(t8_1), .Y1(t9_1),
    .X2(t8_2), .Y2(t9_2),
    .X3(t8_3), .Y3(t9_3),
    .X4(t8_4), .Y4(t9_4),
    .X5(t8_5), .Y5(t9_5),
    .X6(t8_6), .Y6(t9_6),
    .X7(t8_7), .Y7(t9_7));


// latency=8, gap=256
   DirSum_22756 stage9(.next(next_9), .clk(clk), .reset(reset), .next_out(next_10),
       .X0(t9_0), .Y0(t10_0),
       .X1(t9_1), .Y1(t10_1),
       .X2(t9_2), .Y2(t10_2),
       .X3(t9_3), .Y3(t10_3),
       .X4(t9_4), .Y4(t10_4),
       .X5(t9_5), .Y5(t10_5),
       .X6(t9_6), .Y6(t10_6),
       .X7(t9_7), .Y7(t10_7));


// latency=3, gap=256
   codeBlock22759 stage10(.clk(clk), .reset(reset), .next_in(next_10), .next_out(next_11),
       .X0_in(t10_0), .Y0(t11_0),
       .X1_in(t10_1), .Y1(t11_1),
       .X2_in(t10_2), .Y2(t11_2),
       .X3_in(t10_3), .Y3(t11_3),
       .X4_in(t10_4), .Y4(t11_4),
       .X5_in(t10_5), .Y5(t11_5),
       .X6_in(t10_6), .Y6(t11_6),
       .X7_in(t10_7), .Y7(t11_7));


// latency=517, gap=256
   rc22973 stage11(.clk(clk), .reset(reset), .next(next_11), .next_out(next_12),
    .X0(t11_0), .Y0(t12_0),
    .X1(t11_1), .Y1(t12_1),
    .X2(t11_2), .Y2(t12_2),
    .X3(t11_3), .Y3(t12_3),
    .X4(t11_4), .Y4(t12_4),
    .X5(t11_5), .Y5(t12_5),
    .X6(t11_6), .Y6(t12_6),
    .X7(t11_7), .Y7(t12_7));


// latency=8, gap=256
   DirSum_25361 stage12(.next(next_12), .clk(clk), .reset(reset), .next_out(next_13),
       .X0(t12_0), .Y0(t13_0),
       .X1(t12_1), .Y1(t13_1),
       .X2(t12_2), .Y2(t13_2),
       .X3(t12_3), .Y3(t13_3),
       .X4(t12_4), .Y4(t13_4),
       .X5(t12_5), .Y5(t13_5),
       .X6(t12_6), .Y6(t13_6),
       .X7(t12_7), .Y7(t13_7));


// latency=3, gap=256
   codeBlock25364 stage13(.clk(clk), .reset(reset), .next_in(next_13), .next_out(next_14),
       .X0_in(t13_0), .Y0(t14_0),
       .X1_in(t13_1), .Y1(t14_1),
       .X2_in(t13_2), .Y2(t14_2),
       .X3_in(t13_3), .Y3(t14_3),
       .X4_in(t13_4), .Y4(t14_4),
       .X5_in(t13_5), .Y5(t14_5),
       .X6_in(t13_6), .Y6(t14_6),
       .X7_in(t13_7), .Y7(t14_7));


// latency=517, gap=256
   rc25578 stage14(.clk(clk), .reset(reset), .next(next_14), .next_out(next_15),
    .X0(t14_0), .Y0(t15_0),
    .X1(t14_1), .Y1(t15_1),
    .X2(t14_2), .Y2(t15_2),
    .X3(t14_3), .Y3(t15_3),
    .X4(t14_4), .Y4(t15_4),
    .X5(t14_5), .Y5(t15_5),
    .X6(t14_6), .Y6(t15_6),
    .X7(t14_7), .Y7(t15_7));


endmodule

// Latency: 517
// Gap: 256
module rc20411(clk, reset, next, next_out,
   X0, Y0,
   X1, Y1,
   X2, Y2,
   X3, Y3,
   X4, Y4,
   X5, Y5,
   X6, Y6,
   X7, Y7);

   output next_out;
   input clk, reset, next;

   input [15:0] X0,
      X1,
      X2,
      X3,
      X4,
      X5,
      X6,
      X7;

   output [15:0] Y0,
      Y1,
      Y2,
      Y3,
      Y4,
      Y5,
      Y6,
      Y7;

   wire [31:0] t0;
   wire [31:0] s0;
   assign t0 = {X0, X1};
   wire [31:0] t1;
   wire [31:0] s1;
   assign t1 = {X2, X3};
   wire [31:0] t2;
   wire [31:0] s2;
   assign t2 = {X4, X5};
   wire [31:0] t3;
   wire [31:0] s3;
   assign t3 = {X6, X7};
   assign Y0 = s0[31:16];
   assign Y1 = s0[15:0];
   assign Y2 = s1[31:16];
   assign Y3 = s1[15:0];
   assign Y4 = s2[31:16];
   assign Y5 = s2[15:0];
   assign Y6 = s3[31:16];
   assign Y7 = s3[15:0];

   perm20409 instPerm27269(.x0(t0), .y0(s0),
    .x1(t1), .y1(s1),
    .x2(t2), .y2(s2),
    .x3(t3), .y3(s3),
   .clk(clk), .next(next), .next_out(next_out), .reset(reset)
);



endmodule

module swNet20409(itr, clk, ct
,       x0, y0
,       x1, y1
,       x2, y2
,       x3, y3
);

    parameter width = 32;

    input [7:0] ct;
    input clk;
    input [0:0] itr;
    input [width-1:0] x0;
    output reg [width-1:0] y0;
    input [width-1:0] x1;
    output reg [width-1:0] y1;
    input [width-1:0] x2;
    output reg [width-1:0] y2;
    input [width-1:0] x3;
    output reg [width-1:0] y3;
    wire [width-1:0] t0_0, t0_1, t0_2, t0_3;
    wire [width-1:0] t1_0, t1_1, t1_2, t1_3;
    wire [width-1:0] t2_0, t2_1, t2_2, t2_3;
    reg [width-1:0] t3_0, t3_1, t3_2, t3_3;
    wire [width-1:0] t4_0, t4_1, t4_2, t4_3;
    reg [width-1:0] t5_0, t5_1, t5_2, t5_3;

    reg [3:0] control;

    always @(posedge clk) begin
      case(ct)
        8'd0: control <= 4'b1111;
        8'd1: control <= 4'b1111;
        8'd2: control <= 4'b1111;
        8'd3: control <= 4'b1111;
        8'd4: control <= 4'b1111;
        8'd5: control <= 4'b1111;
        8'd6: control <= 4'b1111;
        8'd7: control <= 4'b1111;
        8'd8: control <= 4'b1111;
        8'd9: control <= 4'b1111;
        8'd10: control <= 4'b1111;
        8'd11: control <= 4'b1111;
        8'd12: control <= 4'b1111;
        8'd13: control <= 4'b1111;
        8'd14: control <= 4'b1111;
        8'd15: control <= 4'b1111;
        8'd16: control <= 4'b1111;
        8'd17: control <= 4'b1111;
        8'd18: control <= 4'b1111;
        8'd19: control <= 4'b1111;
        8'd20: control <= 4'b1111;
        8'd21: control <= 4'b1111;
        8'd22: control <= 4'b1111;
        8'd23: control <= 4'b1111;
        8'd24: control <= 4'b1111;
        8'd25: control <= 4'b1111;
        8'd26: control <= 4'b1111;
        8'd27: control <= 4'b1111;
        8'd28: control <= 4'b1111;
        8'd29: control <= 4'b1111;
        8'd30: control <= 4'b1111;
        8'd31: control <= 4'b1111;
        8'd32: control <= 4'b1111;
        8'd33: control <= 4'b1111;
        8'd34: control <= 4'b1111;
        8'd35: control <= 4'b1111;
        8'd36: control <= 4'b1111;
        8'd37: control <= 4'b1111;
        8'd38: control <= 4'b1111;
        8'd39: control <= 4'b1111;
        8'd40: control <= 4'b1111;
        8'd41: control <= 4'b1111;
        8'd42: control <= 4'b1111;
        8'd43: control <= 4'b1111;
        8'd44: control <= 4'b1111;
        8'd45: control <= 4'b1111;
        8'd46: control <= 4'b1111;
        8'd47: control <= 4'b1111;
        8'd48: control <= 4'b1111;
        8'd49: control <= 4'b1111;
        8'd50: control <= 4'b1111;
        8'd51: control <= 4'b1111;
        8'd52: control <= 4'b1111;
        8'd53: control <= 4'b1111;
        8'd54: control <= 4'b1111;
        8'd55: control <= 4'b1111;
        8'd56: control <= 4'b1111;
        8'd57: control <= 4'b1111;
        8'd58: control <= 4'b1111;
        8'd59: control <= 4'b1111;
        8'd60: control <= 4'b1111;
        8'd61: control <= 4'b1111;
        8'd62: control <= 4'b1111;
        8'd63: control <= 4'b1111;
        8'd64: control <= 4'b0011;
        8'd65: control <= 4'b0011;
        8'd66: control <= 4'b0011;
        8'd67: control <= 4'b0011;
        8'd68: control <= 4'b0011;
        8'd69: control <= 4'b0011;
        8'd70: control <= 4'b0011;
        8'd71: control <= 4'b0011;
        8'd72: control <= 4'b0011;
        8'd73: control <= 4'b0011;
        8'd74: control <= 4'b0011;
        8'd75: control <= 4'b0011;
        8'd76: control <= 4'b0011;
        8'd77: control <= 4'b0011;
        8'd78: control <= 4'b0011;
        8'd79: control <= 4'b0011;
        8'd80: control <= 4'b0011;
        8'd81: control <= 4'b0011;
        8'd82: control <= 4'b0011;
        8'd83: control <= 4'b0011;
        8'd84: control <= 4'b0011;
        8'd85: control <= 4'b0011;
        8'd86: control <= 4'b0011;
        8'd87: control <= 4'b0011;
        8'd88: control <= 4'b0011;
        8'd89: control <= 4'b0011;
        8'd90: control <= 4'b0011;
        8'd91: control <= 4'b0011;
        8'd92: control <= 4'b0011;
        8'd93: control <= 4'b0011;
        8'd94: control <= 4'b0011;
        8'd95: control <= 4'b0011;
        8'd96: control <= 4'b0011;
        8'd97: control <= 4'b0011;
        8'd98: control <= 4'b0011;
        8'd99: control <= 4'b0011;
        8'd100: control <= 4'b0011;
        8'd101: control <= 4'b0011;
        8'd102: control <= 4'b0011;
        8'd103: control <= 4'b0011;
        8'd104: control <= 4'b0011;
        8'd105: control <= 4'b0011;
        8'd106: control <= 4'b0011;
        8'd107: control <= 4'b0011;
        8'd108: control <= 4'b0011;
        8'd109: control <= 4'b0011;
        8'd110: control <= 4'b0011;
        8'd111: control <= 4'b0011;
        8'd112: control <= 4'b0011;
        8'd113: control <= 4'b0011;
        8'd114: control <= 4'b0011;
        8'd115: control <= 4'b0011;
        8'd116: control <= 4'b0011;
        8'd117: control <= 4'b0011;
        8'd118: control <= 4'b0011;
        8'd119: control <= 4'b0011;
        8'd120: control <= 4'b0011;
        8'd121: control <= 4'b0011;
        8'd122: control <= 4'b0011;
        8'd123: control <= 4'b0011;
        8'd124: control <= 4'b0011;
        8'd125: control <= 4'b0011;
        8'd126: control <= 4'b0011;
        8'd127: control <= 4'b0011;
        8'd128: control <= 4'b1100;
        8'd129: control <= 4'b1100;
        8'd130: control <= 4'b1100;
        8'd131: control <= 4'b1100;
        8'd132: control <= 4'b1100;
        8'd133: control <= 4'b1100;
        8'd134: control <= 4'b1100;
        8'd135: control <= 4'b1100;
        8'd136: control <= 4'b1100;
        8'd137: control <= 4'b1100;
        8'd138: control <= 4'b1100;
        8'd139: control <= 4'b1100;
        8'd140: control <= 4'b1100;
        8'd141: control <= 4'b1100;
        8'd142: control <= 4'b1100;
        8'd143: control <= 4'b1100;
        8'd144: control <= 4'b1100;
        8'd145: control <= 4'b1100;
        8'd146: control <= 4'b1100;
        8'd147: control <= 4'b1100;
        8'd148: control <= 4'b1100;
        8'd149: control <= 4'b1100;
        8'd150: control <= 4'b1100;
        8'd151: control <= 4'b1100;
        8'd152: control <= 4'b1100;
        8'd153: control <= 4'b1100;
        8'd154: control <= 4'b1100;
        8'd155: control <= 4'b1100;
        8'd156: control <= 4'b1100;
        8'd157: control <= 4'b1100;
        8'd158: control <= 4'b1100;
        8'd159: control <= 4'b1100;
        8'd160: control <= 4'b1100;
        8'd161: control <= 4'b1100;
        8'd162: control <= 4'b1100;
        8'd163: control <= 4'b1100;
        8'd164: control <= 4'b1100;
        8'd165: control <= 4'b1100;
        8'd166: control <= 4'b1100;
        8'd167: control <= 4'b1100;
        8'd168: control <= 4'b1100;
        8'd169: control <= 4'b1100;
        8'd170: control <= 4'b1100;
        8'd171: control <= 4'b1100;
        8'd172: control <= 4'b1100;
        8'd173: control <= 4'b1100;
        8'd174: control <= 4'b1100;
        8'd175: control <= 4'b1100;
        8'd176: control <= 4'b1100;
        8'd177: control <= 4'b1100;
        8'd178: control <= 4'b1100;
        8'd179: control <= 4'b1100;
        8'd180: control <= 4'b1100;
        8'd181: control <= 4'b1100;
        8'd182: control <= 4'b1100;
        8'd183: control <= 4'b1100;
        8'd184: control <= 4'b1100;
        8'd185: control <= 4'b1100;
        8'd186: control <= 4'b1100;
        8'd187: control <= 4'b1100;
        8'd188: control <= 4'b1100;
        8'd189: control <= 4'b1100;
        8'd190: control <= 4'b1100;
        8'd191: control <= 4'b1100;
        8'd192: control <= 4'b0000;
        8'd193: control <= 4'b0000;
        8'd194: control <= 4'b0000;
        8'd195: control <= 4'b0000;
        8'd196: control <= 4'b0000;
        8'd197: control <= 4'b0000;
        8'd198: control <= 4'b0000;
        8'd199: control <= 4'b0000;
        8'd200: control <= 4'b0000;
        8'd201: control <= 4'b0000;
        8'd202: control <= 4'b0000;
        8'd203: control <= 4'b0000;
        8'd204: control <= 4'b0000;
        8'd205: control <= 4'b0000;
        8'd206: control <= 4'b0000;
        8'd207: control <= 4'b0000;
        8'd208: control <= 4'b0000;
        8'd209: control <= 4'b0000;
        8'd210: control <= 4'b0000;
        8'd211: control <= 4'b0000;
        8'd212: control <= 4'b0000;
        8'd213: control <= 4'b0000;
        8'd214: control <= 4'b0000;
        8'd215: control <= 4'b0000;
        8'd216: control <= 4'b0000;
        8'd217: control <= 4'b0000;
        8'd218: control <= 4'b0000;
        8'd219: control <= 4'b0000;
        8'd220: control <= 4'b0000;
        8'd221: control <= 4'b0000;
        8'd222: control <= 4'b0000;
        8'd223: control <= 4'b0000;
        8'd224: control <= 4'b0000;
        8'd225: control <= 4'b0000;
        8'd226: control <= 4'b0000;
        8'd227: control <= 4'b0000;
        8'd228: control <= 4'b0000;
        8'd229: control <= 4'b0000;
        8'd230: control <= 4'b0000;
        8'd231: control <= 4'b0000;
        8'd232: control <= 4'b0000;
        8'd233: control <= 4'b0000;
        8'd234: control <= 4'b0000;
        8'd235: control <= 4'b0000;
        8'd236: control <= 4'b0000;
        8'd237: control <= 4'b0000;
        8'd238: control <= 4'b0000;
        8'd239: control <= 4'b0000;
        8'd240: control <= 4'b0000;
        8'd241: control <= 4'b0000;
        8'd242: control <= 4'b0000;
        8'd243: control <= 4'b0000;
        8'd244: control <= 4'b0000;
        8'd245: control <= 4'b0000;
        8'd246: control <= 4'b0000;
        8'd247: control <= 4'b0000;
        8'd248: control <= 4'b0000;
        8'd249: control <= 4'b0000;
        8'd250: control <= 4'b0000;
        8'd251: control <= 4'b0000;
        8'd252: control <= 4'b0000;
        8'd253: control <= 4'b0000;
        8'd254: control <= 4'b0000;
        8'd255: control <= 4'b0000;
      endcase
   end

// synthesis attribute rom_style of control is "block"
   reg [3:0] control0;
   reg [3:0] control1;
    always @(posedge clk) begin
       control0 <= control;
        control1 <= control0;
    end
    assign t0_0 = x0;
    assign t0_1 = x2;
    assign t0_2 = x1;
    assign t0_3 = x3;
     assign t1_0 = t0_0;
     assign t1_1 = t0_1;
     assign t1_2 = t0_2;
     assign t1_3 = t0_3;
    assign t2_0 = t1_0;
    assign t2_1 = t1_2;
    assign t2_2 = t1_1;
    assign t2_3 = t1_3;
   always @(posedge clk) begin
         t3_0 <= (control0[3] == 0) ? t2_0 : t2_1;
         t3_1 <= (control0[3] == 0) ? t2_1 : t2_0;
         t3_2 <= (control0[2] == 0) ? t2_2 : t2_3;
         t3_3 <= (control0[2] == 0) ? t2_3 : t2_2;
   end
    assign t4_0 = t3_0;
    assign t4_1 = t3_2;
    assign t4_2 = t3_1;
    assign t4_3 = t3_3;
   always @(posedge clk) begin
         t5_0 <= (control1[1] == 0) ? t4_0 : t4_1;
         t5_1 <= (control1[1] == 0) ? t4_1 : t4_0;
         t5_2 <= (control1[0] == 0) ? t4_2 : t4_3;
         t5_3 <= (control1[0] == 0) ? t4_3 : t4_2;
   end
    always @(posedge clk) begin
        y0 <= t5_0;
        y1 <= t5_2;
        y2 <= t5_1;
        y3 <= t5_3;
    end
endmodule

// Latency: 517
// Gap: 256
module perm20409(clk, next, reset, next_out,
   x0, y0,
   x1, y1,
   x2, y2,
   x3, y3);
   parameter width = 32;

   parameter depth = 256;

   parameter addrbits = 8;

   parameter muxbits = 2;

   input [width-1:0]  x0;
   output [width-1:0]  y0;
   wire [width-1:0]  t0;
   wire [width-1:0]  s0;
   input [width-1:0]  x1;
   output [width-1:0]  y1;
   wire [width-1:0]  t1;
   wire [width-1:0]  s1;
   input [width-1:0]  x2;
   output [width-1:0]  y2;
   wire [width-1:0]  t2;
   wire [width-1:0]  s2;
   input [width-1:0]  x3;
   output [width-1:0]  y3;
   wire [width-1:0]  t3;
   wire [width-1:0]  s3;
   input next, reset, clk;
   output next_out;
   reg [addrbits-1:0] s1rdloc, s2rdloc;

    reg [addrbits-1:0] s1wr0;
   reg [addrbits-1:0] s1rd0, s2wr0, s2rd0;
   reg [addrbits-1:0] s1rd1, s2wr1, s2rd1;
   reg [addrbits-1:0] s1rd2, s2wr2, s2rd2;
   reg [addrbits-1:0] s1rd3, s2wr3, s2rd3;
   reg s1wr_en, state1, state2, state3;
   wire 	      next2, next3, next4;
   reg 		      inFlip0, outFlip0_z, outFlip1;
   wire 	      inFlip1, outFlip0;

   wire [0:0] tm0;
   assign tm0 = 0;

shiftRegFIFO #(4, 1) shiftFIFO_27274(.X(outFlip0), .Y(inFlip1), .clk(clk));
shiftRegFIFO #(1, 1) shiftFIFO_27275(.X(outFlip0_z), .Y(outFlip0), .clk(clk));
//   shiftRegFIFO #(2, 1) inFlip1Reg(outFlip0, inFlip1, clk);
//   shiftRegFIFO #(1, 1) outFlip0Reg(outFlip0_z, outFlip0, clk);
   
   memMod #(depth*2, width, addrbits+1) s1mem0(x0, t0, {inFlip0, s1wr0}, {outFlip0, s1rd0}, s1wr_en, clk);
   memMod #(depth*2, width, addrbits+1) s1mem1(x1, t1, {inFlip0, s1wr0}, {outFlip0, s1rd1}, s1wr_en, clk);
   memMod #(depth*2, width, addrbits+1) s1mem2(x2, t2, {inFlip0, s1wr0}, {outFlip0, s1rd2}, s1wr_en, clk);
   memMod #(depth*2, width, addrbits+1) s1mem3(x3, t3, {inFlip0, s1wr0}, {outFlip0, s1rd3}, s1wr_en, clk);

nextReg #(255, 8) nextReg_27286(.X(next), .Y(next2), .reset(reset), .clk(clk));
shiftRegFIFO #(5, 1) shiftFIFO_27287(.X(next2), .Y(next3), .clk(clk));
nextReg #(256, 8) nextReg_27290(.X(next3), .Y(next4), .reset(reset), .clk(clk));
shiftRegFIFO #(1, 1) shiftFIFO_27291(.X(next4), .Y(next_out), .clk(clk));
shiftRegFIFO #(255, 1) shiftFIFO_27294(.X(tm0), .Y(tm0_d), .clk(clk));
shiftRegFIFO #(4, 1) shiftFIFO_27297(.X(tm0_d), .Y(tm0_dd), .clk(clk));
   
   wire [addrbits-1:0] 	      muxCycle, writeCycle;
assign muxCycle = s1rdloc;
shiftRegFIFO #(4, 8) shiftFIFO_27302(.X(muxCycle), .Y(writeCycle), .clk(clk));
        
   wire 		      readInt, s2wr_en;   
   assign 		      readInt = (state2 == 1);

   shiftRegFIFO #(5, 1) writeIntReg(readInt, s2wr_en, clk);

   memMod #(depth*2, width, addrbits+1) s2mem0(s0, y0, {inFlip1, s2wr0}, {outFlip1, s2rdloc}, s2wr_en, clk);
   memMod #(depth*2, width, addrbits+1) s2mem1(s1, y1, {inFlip1, s2wr1}, {outFlip1, s2rdloc}, s2wr_en, clk);
   memMod #(depth*2, width, addrbits+1) s2mem2(s2, y2, {inFlip1, s2wr2}, {outFlip1, s2rdloc}, s2wr_en, clk);
   memMod #(depth*2, width, addrbits+1) s2mem3(s3, y3, {inFlip1, s2wr3}, {outFlip1, s2rdloc}, s2wr_en, clk);
   always @(posedge clk) begin
      if (reset == 1) begin
	 state1 <= 0;
	 inFlip0 <= 0;	 
	 s1wr0 <= 0;
      end
      else if (next == 1) begin
	 s1wr0 <= 0;
	 state1 <= 1;
	 s1wr_en <= 1;
	 inFlip0 <= (s1wr0 == depth-1) ? ~inFlip0 : inFlip0;
      end
      else begin
	 case(state1)
	   0: begin
	      s1wr0 <= 0;
	      state1 <= 0;
	      s1wr_en <= 0;
	      inFlip0 <= inFlip0;	      
	   end
	   1: begin
	      s1wr0 <= (s1wr0 == depth-1) ? 0 : s1wr0 + 1;
	      state1 <= 1;
         s1wr_en <= 1;
	      inFlip0 <= (s1wr0 == depth-1) ? ~inFlip0 : inFlip0;
	   end
	 endcase
      end      
   end
   
   always @(posedge clk) begin
      if (reset == 1) begin
	       state2 <= 0;
	       outFlip0_z <= 0;	 
      end
      else if (next2 == 1) begin
	       s1rdloc <= 0;
	       state2 <= 1;
	       outFlip0_z <= (s1rdloc == depth-1) ? ~outFlip0_z : outFlip0_z;
      end
      else begin
	 case(state2)
	   0: begin
	      s1rdloc <= 0;
	      state2 <= 0;
	      outFlip0_z <= outFlip0_z;	 
	   end
	   1: begin
	      s1rdloc <= (s1rdloc == depth-1) ? 0 : s1rdloc + 1;
         state2 <= 1;
	      outFlip0_z <= (s1rdloc == depth-1) ? ~outFlip0_z : outFlip0_z;
	   end	     
	 endcase
      end
   end
   
   always @(posedge clk) begin
      if (reset == 1) begin
	 state3 <= 0;
	 outFlip1 <= 0;	 
      end
      else if (next4 == 1) begin
	 s2rdloc <= 0;
	 state3 <= 1;
	 outFlip1 <= (s2rdloc == depth-1) ? ~outFlip1 : outFlip1;	      
      end
      else begin
	 case(state3)
	   0: begin
	      s2rdloc <= 0;
	      state3 <= 0;
	      outFlip1 <= outFlip1;
	   end
	   1: begin
	      s2rdloc <= (s2rdloc == depth-1) ? 0 : s2rdloc + 1;
         state3 <= 1;
	      outFlip1 <= (s2rdloc == depth-1) ? ~outFlip1 : outFlip1;
	   end	     
	 endcase
      end
   end
   always @(posedge clk) begin
      case({tm0_d, s1rdloc})
	     {1'd0,  8'd0}: s1rd0 <= 192;
	     {1'd0,  8'd1}: s1rd0 <= 208;
	     {1'd0,  8'd2}: s1rd0 <= 224;
	     {1'd0,  8'd3}: s1rd0 <= 240;
	     {1'd0,  8'd4}: s1rd0 <= 196;
	     {1'd0,  8'd5}: s1rd0 <= 212;
	     {1'd0,  8'd6}: s1rd0 <= 228;
	     {1'd0,  8'd7}: s1rd0 <= 244;
	     {1'd0,  8'd8}: s1rd0 <= 200;
	     {1'd0,  8'd9}: s1rd0 <= 216;
	     {1'd0,  8'd10}: s1rd0 <= 232;
	     {1'd0,  8'd11}: s1rd0 <= 248;
	     {1'd0,  8'd12}: s1rd0 <= 204;
	     {1'd0,  8'd13}: s1rd0 <= 220;
	     {1'd0,  8'd14}: s1rd0 <= 236;
	     {1'd0,  8'd15}: s1rd0 <= 252;
	     {1'd0,  8'd16}: s1rd0 <= 193;
	     {1'd0,  8'd17}: s1rd0 <= 209;
	     {1'd0,  8'd18}: s1rd0 <= 225;
	     {1'd0,  8'd19}: s1rd0 <= 241;
	     {1'd0,  8'd20}: s1rd0 <= 197;
	     {1'd0,  8'd21}: s1rd0 <= 213;
	     {1'd0,  8'd22}: s1rd0 <= 229;
	     {1'd0,  8'd23}: s1rd0 <= 245;
	     {1'd0,  8'd24}: s1rd0 <= 201;
	     {1'd0,  8'd25}: s1rd0 <= 217;
	     {1'd0,  8'd26}: s1rd0 <= 233;
	     {1'd0,  8'd27}: s1rd0 <= 249;
	     {1'd0,  8'd28}: s1rd0 <= 205;
	     {1'd0,  8'd29}: s1rd0 <= 221;
	     {1'd0,  8'd30}: s1rd0 <= 237;
	     {1'd0,  8'd31}: s1rd0 <= 253;
	     {1'd0,  8'd32}: s1rd0 <= 194;
	     {1'd0,  8'd33}: s1rd0 <= 210;
	     {1'd0,  8'd34}: s1rd0 <= 226;
	     {1'd0,  8'd35}: s1rd0 <= 242;
	     {1'd0,  8'd36}: s1rd0 <= 198;
	     {1'd0,  8'd37}: s1rd0 <= 214;
	     {1'd0,  8'd38}: s1rd0 <= 230;
	     {1'd0,  8'd39}: s1rd0 <= 246;
	     {1'd0,  8'd40}: s1rd0 <= 202;
	     {1'd0,  8'd41}: s1rd0 <= 218;
	     {1'd0,  8'd42}: s1rd0 <= 234;
	     {1'd0,  8'd43}: s1rd0 <= 250;
	     {1'd0,  8'd44}: s1rd0 <= 206;
	     {1'd0,  8'd45}: s1rd0 <= 222;
	     {1'd0,  8'd46}: s1rd0 <= 238;
	     {1'd0,  8'd47}: s1rd0 <= 254;
	     {1'd0,  8'd48}: s1rd0 <= 195;
	     {1'd0,  8'd49}: s1rd0 <= 211;
	     {1'd0,  8'd50}: s1rd0 <= 227;
	     {1'd0,  8'd51}: s1rd0 <= 243;
	     {1'd0,  8'd52}: s1rd0 <= 199;
	     {1'd0,  8'd53}: s1rd0 <= 215;
	     {1'd0,  8'd54}: s1rd0 <= 231;
	     {1'd0,  8'd55}: s1rd0 <= 247;
	     {1'd0,  8'd56}: s1rd0 <= 203;
	     {1'd0,  8'd57}: s1rd0 <= 219;
	     {1'd0,  8'd58}: s1rd0 <= 235;
	     {1'd0,  8'd59}: s1rd0 <= 251;
	     {1'd0,  8'd60}: s1rd0 <= 207;
	     {1'd0,  8'd61}: s1rd0 <= 223;
	     {1'd0,  8'd62}: s1rd0 <= 239;
	     {1'd0,  8'd63}: s1rd0 <= 255;
	     {1'd0,  8'd64}: s1rd0 <= 128;
	     {1'd0,  8'd65}: s1rd0 <= 144;
	     {1'd0,  8'd66}: s1rd0 <= 160;
	     {1'd0,  8'd67}: s1rd0 <= 176;
	     {1'd0,  8'd68}: s1rd0 <= 132;
	     {1'd0,  8'd69}: s1rd0 <= 148;
	     {1'd0,  8'd70}: s1rd0 <= 164;
	     {1'd0,  8'd71}: s1rd0 <= 180;
	     {1'd0,  8'd72}: s1rd0 <= 136;
	     {1'd0,  8'd73}: s1rd0 <= 152;
	     {1'd0,  8'd74}: s1rd0 <= 168;
	     {1'd0,  8'd75}: s1rd0 <= 184;
	     {1'd0,  8'd76}: s1rd0 <= 140;
	     {1'd0,  8'd77}: s1rd0 <= 156;
	     {1'd0,  8'd78}: s1rd0 <= 172;
	     {1'd0,  8'd79}: s1rd0 <= 188;
	     {1'd0,  8'd80}: s1rd0 <= 129;
	     {1'd0,  8'd81}: s1rd0 <= 145;
	     {1'd0,  8'd82}: s1rd0 <= 161;
	     {1'd0,  8'd83}: s1rd0 <= 177;
	     {1'd0,  8'd84}: s1rd0 <= 133;
	     {1'd0,  8'd85}: s1rd0 <= 149;
	     {1'd0,  8'd86}: s1rd0 <= 165;
	     {1'd0,  8'd87}: s1rd0 <= 181;
	     {1'd0,  8'd88}: s1rd0 <= 137;
	     {1'd0,  8'd89}: s1rd0 <= 153;
	     {1'd0,  8'd90}: s1rd0 <= 169;
	     {1'd0,  8'd91}: s1rd0 <= 185;
	     {1'd0,  8'd92}: s1rd0 <= 141;
	     {1'd0,  8'd93}: s1rd0 <= 157;
	     {1'd0,  8'd94}: s1rd0 <= 173;
	     {1'd0,  8'd95}: s1rd0 <= 189;
	     {1'd0,  8'd96}: s1rd0 <= 130;
	     {1'd0,  8'd97}: s1rd0 <= 146;
	     {1'd0,  8'd98}: s1rd0 <= 162;
	     {1'd0,  8'd99}: s1rd0 <= 178;
	     {1'd0,  8'd100}: s1rd0 <= 134;
	     {1'd0,  8'd101}: s1rd0 <= 150;
	     {1'd0,  8'd102}: s1rd0 <= 166;
	     {1'd0,  8'd103}: s1rd0 <= 182;
	     {1'd0,  8'd104}: s1rd0 <= 138;
	     {1'd0,  8'd105}: s1rd0 <= 154;
	     {1'd0,  8'd106}: s1rd0 <= 170;
	     {1'd0,  8'd107}: s1rd0 <= 186;
	     {1'd0,  8'd108}: s1rd0 <= 142;
	     {1'd0,  8'd109}: s1rd0 <= 158;
	     {1'd0,  8'd110}: s1rd0 <= 174;
	     {1'd0,  8'd111}: s1rd0 <= 190;
	     {1'd0,  8'd112}: s1rd0 <= 131;
	     {1'd0,  8'd113}: s1rd0 <= 147;
	     {1'd0,  8'd114}: s1rd0 <= 163;
	     {1'd0,  8'd115}: s1rd0 <= 179;
	     {1'd0,  8'd116}: s1rd0 <= 135;
	     {1'd0,  8'd117}: s1rd0 <= 151;
	     {1'd0,  8'd118}: s1rd0 <= 167;
	     {1'd0,  8'd119}: s1rd0 <= 183;
	     {1'd0,  8'd120}: s1rd0 <= 139;
	     {1'd0,  8'd121}: s1rd0 <= 155;
	     {1'd0,  8'd122}: s1rd0 <= 171;
	     {1'd0,  8'd123}: s1rd0 <= 187;
	     {1'd0,  8'd124}: s1rd0 <= 143;
	     {1'd0,  8'd125}: s1rd0 <= 159;
	     {1'd0,  8'd126}: s1rd0 <= 175;
	     {1'd0,  8'd127}: s1rd0 <= 191;
	     {1'd0,  8'd128}: s1rd0 <= 64;
	     {1'd0,  8'd129}: s1rd0 <= 80;
	     {1'd0,  8'd130}: s1rd0 <= 96;
	     {1'd0,  8'd131}: s1rd0 <= 112;
	     {1'd0,  8'd132}: s1rd0 <= 68;
	     {1'd0,  8'd133}: s1rd0 <= 84;
	     {1'd0,  8'd134}: s1rd0 <= 100;
	     {1'd0,  8'd135}: s1rd0 <= 116;
	     {1'd0,  8'd136}: s1rd0 <= 72;
	     {1'd0,  8'd137}: s1rd0 <= 88;
	     {1'd0,  8'd138}: s1rd0 <= 104;
	     {1'd0,  8'd139}: s1rd0 <= 120;
	     {1'd0,  8'd140}: s1rd0 <= 76;
	     {1'd0,  8'd141}: s1rd0 <= 92;
	     {1'd0,  8'd142}: s1rd0 <= 108;
	     {1'd0,  8'd143}: s1rd0 <= 124;
	     {1'd0,  8'd144}: s1rd0 <= 65;
	     {1'd0,  8'd145}: s1rd0 <= 81;
	     {1'd0,  8'd146}: s1rd0 <= 97;
	     {1'd0,  8'd147}: s1rd0 <= 113;
	     {1'd0,  8'd148}: s1rd0 <= 69;
	     {1'd0,  8'd149}: s1rd0 <= 85;
	     {1'd0,  8'd150}: s1rd0 <= 101;
	     {1'd0,  8'd151}: s1rd0 <= 117;
	     {1'd0,  8'd152}: s1rd0 <= 73;
	     {1'd0,  8'd153}: s1rd0 <= 89;
	     {1'd0,  8'd154}: s1rd0 <= 105;
	     {1'd0,  8'd155}: s1rd0 <= 121;
	     {1'd0,  8'd156}: s1rd0 <= 77;
	     {1'd0,  8'd157}: s1rd0 <= 93;
	     {1'd0,  8'd158}: s1rd0 <= 109;
	     {1'd0,  8'd159}: s1rd0 <= 125;
	     {1'd0,  8'd160}: s1rd0 <= 66;
	     {1'd0,  8'd161}: s1rd0 <= 82;
	     {1'd0,  8'd162}: s1rd0 <= 98;
	     {1'd0,  8'd163}: s1rd0 <= 114;
	     {1'd0,  8'd164}: s1rd0 <= 70;
	     {1'd0,  8'd165}: s1rd0 <= 86;
	     {1'd0,  8'd166}: s1rd0 <= 102;
	     {1'd0,  8'd167}: s1rd0 <= 118;
	     {1'd0,  8'd168}: s1rd0 <= 74;
	     {1'd0,  8'd169}: s1rd0 <= 90;
	     {1'd0,  8'd170}: s1rd0 <= 106;
	     {1'd0,  8'd171}: s1rd0 <= 122;
	     {1'd0,  8'd172}: s1rd0 <= 78;
	     {1'd0,  8'd173}: s1rd0 <= 94;
	     {1'd0,  8'd174}: s1rd0 <= 110;
	     {1'd0,  8'd175}: s1rd0 <= 126;
	     {1'd0,  8'd176}: s1rd0 <= 67;
	     {1'd0,  8'd177}: s1rd0 <= 83;
	     {1'd0,  8'd178}: s1rd0 <= 99;
	     {1'd0,  8'd179}: s1rd0 <= 115;
	     {1'd0,  8'd180}: s1rd0 <= 71;
	     {1'd0,  8'd181}: s1rd0 <= 87;
	     {1'd0,  8'd182}: s1rd0 <= 103;
	     {1'd0,  8'd183}: s1rd0 <= 119;
	     {1'd0,  8'd184}: s1rd0 <= 75;
	     {1'd0,  8'd185}: s1rd0 <= 91;
	     {1'd0,  8'd186}: s1rd0 <= 107;
	     {1'd0,  8'd187}: s1rd0 <= 123;
	     {1'd0,  8'd188}: s1rd0 <= 79;
	     {1'd0,  8'd189}: s1rd0 <= 95;
	     {1'd0,  8'd190}: s1rd0 <= 111;
	     {1'd0,  8'd191}: s1rd0 <= 127;
	     {1'd0,  8'd192}: s1rd0 <= 0;
	     {1'd0,  8'd193}: s1rd0 <= 16;
	     {1'd0,  8'd194}: s1rd0 <= 32;
	     {1'd0,  8'd195}: s1rd0 <= 48;
	     {1'd0,  8'd196}: s1rd0 <= 4;
	     {1'd0,  8'd197}: s1rd0 <= 20;
	     {1'd0,  8'd198}: s1rd0 <= 36;
	     {1'd0,  8'd199}: s1rd0 <= 52;
	     {1'd0,  8'd200}: s1rd0 <= 8;
	     {1'd0,  8'd201}: s1rd0 <= 24;
	     {1'd0,  8'd202}: s1rd0 <= 40;
	     {1'd0,  8'd203}: s1rd0 <= 56;
	     {1'd0,  8'd204}: s1rd0 <= 12;
	     {1'd0,  8'd205}: s1rd0 <= 28;
	     {1'd0,  8'd206}: s1rd0 <= 44;
	     {1'd0,  8'd207}: s1rd0 <= 60;
	     {1'd0,  8'd208}: s1rd0 <= 1;
	     {1'd0,  8'd209}: s1rd0 <= 17;
	     {1'd0,  8'd210}: s1rd0 <= 33;
	     {1'd0,  8'd211}: s1rd0 <= 49;
	     {1'd0,  8'd212}: s1rd0 <= 5;
	     {1'd0,  8'd213}: s1rd0 <= 21;
	     {1'd0,  8'd214}: s1rd0 <= 37;
	     {1'd0,  8'd215}: s1rd0 <= 53;
	     {1'd0,  8'd216}: s1rd0 <= 9;
	     {1'd0,  8'd217}: s1rd0 <= 25;
	     {1'd0,  8'd218}: s1rd0 <= 41;
	     {1'd0,  8'd219}: s1rd0 <= 57;
	     {1'd0,  8'd220}: s1rd0 <= 13;
	     {1'd0,  8'd221}: s1rd0 <= 29;
	     {1'd0,  8'd222}: s1rd0 <= 45;
	     {1'd0,  8'd223}: s1rd0 <= 61;
	     {1'd0,  8'd224}: s1rd0 <= 2;
	     {1'd0,  8'd225}: s1rd0 <= 18;
	     {1'd0,  8'd226}: s1rd0 <= 34;
	     {1'd0,  8'd227}: s1rd0 <= 50;
	     {1'd0,  8'd228}: s1rd0 <= 6;
	     {1'd0,  8'd229}: s1rd0 <= 22;
	     {1'd0,  8'd230}: s1rd0 <= 38;
	     {1'd0,  8'd231}: s1rd0 <= 54;
	     {1'd0,  8'd232}: s1rd0 <= 10;
	     {1'd0,  8'd233}: s1rd0 <= 26;
	     {1'd0,  8'd234}: s1rd0 <= 42;
	     {1'd0,  8'd235}: s1rd0 <= 58;
	     {1'd0,  8'd236}: s1rd0 <= 14;
	     {1'd0,  8'd237}: s1rd0 <= 30;
	     {1'd0,  8'd238}: s1rd0 <= 46;
	     {1'd0,  8'd239}: s1rd0 <= 62;
	     {1'd0,  8'd240}: s1rd0 <= 3;
	     {1'd0,  8'd241}: s1rd0 <= 19;
	     {1'd0,  8'd242}: s1rd0 <= 35;
	     {1'd0,  8'd243}: s1rd0 <= 51;
	     {1'd0,  8'd244}: s1rd0 <= 7;
	     {1'd0,  8'd245}: s1rd0 <= 23;
	     {1'd0,  8'd246}: s1rd0 <= 39;
	     {1'd0,  8'd247}: s1rd0 <= 55;
	     {1'd0,  8'd248}: s1rd0 <= 11;
	     {1'd0,  8'd249}: s1rd0 <= 27;
	     {1'd0,  8'd250}: s1rd0 <= 43;
	     {1'd0,  8'd251}: s1rd0 <= 59;
	     {1'd0,  8'd252}: s1rd0 <= 15;
	     {1'd0,  8'd253}: s1rd0 <= 31;
	     {1'd0,  8'd254}: s1rd0 <= 47;
	     {1'd0,  8'd255}: s1rd0 <= 63;
      endcase      
   end

// synthesis attribute rom_style of s1rd0 is "distributed"
   always @(posedge clk) begin
      case({tm0_d, s1rdloc})
	     {1'd0,  8'd0}: s1rd1 <= 128;
	     {1'd0,  8'd1}: s1rd1 <= 144;
	     {1'd0,  8'd2}: s1rd1 <= 160;
	     {1'd0,  8'd3}: s1rd1 <= 176;
	     {1'd0,  8'd4}: s1rd1 <= 132;
	     {1'd0,  8'd5}: s1rd1 <= 148;
	     {1'd0,  8'd6}: s1rd1 <= 164;
	     {1'd0,  8'd7}: s1rd1 <= 180;
	     {1'd0,  8'd8}: s1rd1 <= 136;
	     {1'd0,  8'd9}: s1rd1 <= 152;
	     {1'd0,  8'd10}: s1rd1 <= 168;
	     {1'd0,  8'd11}: s1rd1 <= 184;
	     {1'd0,  8'd12}: s1rd1 <= 140;
	     {1'd0,  8'd13}: s1rd1 <= 156;
	     {1'd0,  8'd14}: s1rd1 <= 172;
	     {1'd0,  8'd15}: s1rd1 <= 188;
	     {1'd0,  8'd16}: s1rd1 <= 129;
	     {1'd0,  8'd17}: s1rd1 <= 145;
	     {1'd0,  8'd18}: s1rd1 <= 161;
	     {1'd0,  8'd19}: s1rd1 <= 177;
	     {1'd0,  8'd20}: s1rd1 <= 133;
	     {1'd0,  8'd21}: s1rd1 <= 149;
	     {1'd0,  8'd22}: s1rd1 <= 165;
	     {1'd0,  8'd23}: s1rd1 <= 181;
	     {1'd0,  8'd24}: s1rd1 <= 137;
	     {1'd0,  8'd25}: s1rd1 <= 153;
	     {1'd0,  8'd26}: s1rd1 <= 169;
	     {1'd0,  8'd27}: s1rd1 <= 185;
	     {1'd0,  8'd28}: s1rd1 <= 141;
	     {1'd0,  8'd29}: s1rd1 <= 157;
	     {1'd0,  8'd30}: s1rd1 <= 173;
	     {1'd0,  8'd31}: s1rd1 <= 189;
	     {1'd0,  8'd32}: s1rd1 <= 130;
	     {1'd0,  8'd33}: s1rd1 <= 146;
	     {1'd0,  8'd34}: s1rd1 <= 162;
	     {1'd0,  8'd35}: s1rd1 <= 178;
	     {1'd0,  8'd36}: s1rd1 <= 134;
	     {1'd0,  8'd37}: s1rd1 <= 150;
	     {1'd0,  8'd38}: s1rd1 <= 166;
	     {1'd0,  8'd39}: s1rd1 <= 182;
	     {1'd0,  8'd40}: s1rd1 <= 138;
	     {1'd0,  8'd41}: s1rd1 <= 154;
	     {1'd0,  8'd42}: s1rd1 <= 170;
	     {1'd0,  8'd43}: s1rd1 <= 186;
	     {1'd0,  8'd44}: s1rd1 <= 142;
	     {1'd0,  8'd45}: s1rd1 <= 158;
	     {1'd0,  8'd46}: s1rd1 <= 174;
	     {1'd0,  8'd47}: s1rd1 <= 190;
	     {1'd0,  8'd48}: s1rd1 <= 131;
	     {1'd0,  8'd49}: s1rd1 <= 147;
	     {1'd0,  8'd50}: s1rd1 <= 163;
	     {1'd0,  8'd51}: s1rd1 <= 179;
	     {1'd0,  8'd52}: s1rd1 <= 135;
	     {1'd0,  8'd53}: s1rd1 <= 151;
	     {1'd0,  8'd54}: s1rd1 <= 167;
	     {1'd0,  8'd55}: s1rd1 <= 183;
	     {1'd0,  8'd56}: s1rd1 <= 139;
	     {1'd0,  8'd57}: s1rd1 <= 155;
	     {1'd0,  8'd58}: s1rd1 <= 171;
	     {1'd0,  8'd59}: s1rd1 <= 187;
	     {1'd0,  8'd60}: s1rd1 <= 143;
	     {1'd0,  8'd61}: s1rd1 <= 159;
	     {1'd0,  8'd62}: s1rd1 <= 175;
	     {1'd0,  8'd63}: s1rd1 <= 191;
	     {1'd0,  8'd64}: s1rd1 <= 192;
	     {1'd0,  8'd65}: s1rd1 <= 208;
	     {1'd0,  8'd66}: s1rd1 <= 224;
	     {1'd0,  8'd67}: s1rd1 <= 240;
	     {1'd0,  8'd68}: s1rd1 <= 196;
	     {1'd0,  8'd69}: s1rd1 <= 212;
	     {1'd0,  8'd70}: s1rd1 <= 228;
	     {1'd0,  8'd71}: s1rd1 <= 244;
	     {1'd0,  8'd72}: s1rd1 <= 200;
	     {1'd0,  8'd73}: s1rd1 <= 216;
	     {1'd0,  8'd74}: s1rd1 <= 232;
	     {1'd0,  8'd75}: s1rd1 <= 248;
	     {1'd0,  8'd76}: s1rd1 <= 204;
	     {1'd0,  8'd77}: s1rd1 <= 220;
	     {1'd0,  8'd78}: s1rd1 <= 236;
	     {1'd0,  8'd79}: s1rd1 <= 252;
	     {1'd0,  8'd80}: s1rd1 <= 193;
	     {1'd0,  8'd81}: s1rd1 <= 209;
	     {1'd0,  8'd82}: s1rd1 <= 225;
	     {1'd0,  8'd83}: s1rd1 <= 241;
	     {1'd0,  8'd84}: s1rd1 <= 197;
	     {1'd0,  8'd85}: s1rd1 <= 213;
	     {1'd0,  8'd86}: s1rd1 <= 229;
	     {1'd0,  8'd87}: s1rd1 <= 245;
	     {1'd0,  8'd88}: s1rd1 <= 201;
	     {1'd0,  8'd89}: s1rd1 <= 217;
	     {1'd0,  8'd90}: s1rd1 <= 233;
	     {1'd0,  8'd91}: s1rd1 <= 249;
	     {1'd0,  8'd92}: s1rd1 <= 205;
	     {1'd0,  8'd93}: s1rd1 <= 221;
	     {1'd0,  8'd94}: s1rd1 <= 237;
	     {1'd0,  8'd95}: s1rd1 <= 253;
	     {1'd0,  8'd96}: s1rd1 <= 194;
	     {1'd0,  8'd97}: s1rd1 <= 210;
	     {1'd0,  8'd98}: s1rd1 <= 226;
	     {1'd0,  8'd99}: s1rd1 <= 242;
	     {1'd0,  8'd100}: s1rd1 <= 198;
	     {1'd0,  8'd101}: s1rd1 <= 214;
	     {1'd0,  8'd102}: s1rd1 <= 230;
	     {1'd0,  8'd103}: s1rd1 <= 246;
	     {1'd0,  8'd104}: s1rd1 <= 202;
	     {1'd0,  8'd105}: s1rd1 <= 218;
	     {1'd0,  8'd106}: s1rd1 <= 234;
	     {1'd0,  8'd107}: s1rd1 <= 250;
	     {1'd0,  8'd108}: s1rd1 <= 206;
	     {1'd0,  8'd109}: s1rd1 <= 222;
	     {1'd0,  8'd110}: s1rd1 <= 238;
	     {1'd0,  8'd111}: s1rd1 <= 254;
	     {1'd0,  8'd112}: s1rd1 <= 195;
	     {1'd0,  8'd113}: s1rd1 <= 211;
	     {1'd0,  8'd114}: s1rd1 <= 227;
	     {1'd0,  8'd115}: s1rd1 <= 243;
	     {1'd0,  8'd116}: s1rd1 <= 199;
	     {1'd0,  8'd117}: s1rd1 <= 215;
	     {1'd0,  8'd118}: s1rd1 <= 231;
	     {1'd0,  8'd119}: s1rd1 <= 247;
	     {1'd0,  8'd120}: s1rd1 <= 203;
	     {1'd0,  8'd121}: s1rd1 <= 219;
	     {1'd0,  8'd122}: s1rd1 <= 235;
	     {1'd0,  8'd123}: s1rd1 <= 251;
	     {1'd0,  8'd124}: s1rd1 <= 207;
	     {1'd0,  8'd125}: s1rd1 <= 223;
	     {1'd0,  8'd126}: s1rd1 <= 239;
	     {1'd0,  8'd127}: s1rd1 <= 255;
	     {1'd0,  8'd128}: s1rd1 <= 0;
	     {1'd0,  8'd129}: s1rd1 <= 16;
	     {1'd0,  8'd130}: s1rd1 <= 32;
	     {1'd0,  8'd131}: s1rd1 <= 48;
	     {1'd0,  8'd132}: s1rd1 <= 4;
	     {1'd0,  8'd133}: s1rd1 <= 20;
	     {1'd0,  8'd134}: s1rd1 <= 36;
	     {1'd0,  8'd135}: s1rd1 <= 52;
	     {1'd0,  8'd136}: s1rd1 <= 8;
	     {1'd0,  8'd137}: s1rd1 <= 24;
	     {1'd0,  8'd138}: s1rd1 <= 40;
	     {1'd0,  8'd139}: s1rd1 <= 56;
	     {1'd0,  8'd140}: s1rd1 <= 12;
	     {1'd0,  8'd141}: s1rd1 <= 28;
	     {1'd0,  8'd142}: s1rd1 <= 44;
	     {1'd0,  8'd143}: s1rd1 <= 60;
	     {1'd0,  8'd144}: s1rd1 <= 1;
	     {1'd0,  8'd145}: s1rd1 <= 17;
	     {1'd0,  8'd146}: s1rd1 <= 33;
	     {1'd0,  8'd147}: s1rd1 <= 49;
	     {1'd0,  8'd148}: s1rd1 <= 5;
	     {1'd0,  8'd149}: s1rd1 <= 21;
	     {1'd0,  8'd150}: s1rd1 <= 37;
	     {1'd0,  8'd151}: s1rd1 <= 53;
	     {1'd0,  8'd152}: s1rd1 <= 9;
	     {1'd0,  8'd153}: s1rd1 <= 25;
	     {1'd0,  8'd154}: s1rd1 <= 41;
	     {1'd0,  8'd155}: s1rd1 <= 57;
	     {1'd0,  8'd156}: s1rd1 <= 13;
	     {1'd0,  8'd157}: s1rd1 <= 29;
	     {1'd0,  8'd158}: s1rd1 <= 45;
	     {1'd0,  8'd159}: s1rd1 <= 61;
	     {1'd0,  8'd160}: s1rd1 <= 2;
	     {1'd0,  8'd161}: s1rd1 <= 18;
	     {1'd0,  8'd162}: s1rd1 <= 34;
	     {1'd0,  8'd163}: s1rd1 <= 50;
	     {1'd0,  8'd164}: s1rd1 <= 6;
	     {1'd0,  8'd165}: s1rd1 <= 22;
	     {1'd0,  8'd166}: s1rd1 <= 38;
	     {1'd0,  8'd167}: s1rd1 <= 54;
	     {1'd0,  8'd168}: s1rd1 <= 10;
	     {1'd0,  8'd169}: s1rd1 <= 26;
	     {1'd0,  8'd170}: s1rd1 <= 42;
	     {1'd0,  8'd171}: s1rd1 <= 58;
	     {1'd0,  8'd172}: s1rd1 <= 14;
	     {1'd0,  8'd173}: s1rd1 <= 30;
	     {1'd0,  8'd174}: s1rd1 <= 46;
	     {1'd0,  8'd175}: s1rd1 <= 62;
	     {1'd0,  8'd176}: s1rd1 <= 3;
	     {1'd0,  8'd177}: s1rd1 <= 19;
	     {1'd0,  8'd178}: s1rd1 <= 35;
	     {1'd0,  8'd179}: s1rd1 <= 51;
	     {1'd0,  8'd180}: s1rd1 <= 7;
	     {1'd0,  8'd181}: s1rd1 <= 23;
	     {1'd0,  8'd182}: s1rd1 <= 39;
	     {1'd0,  8'd183}: s1rd1 <= 55;
	     {1'd0,  8'd184}: s1rd1 <= 11;
	     {1'd0,  8'd185}: s1rd1 <= 27;
	     {1'd0,  8'd186}: s1rd1 <= 43;
	     {1'd0,  8'd187}: s1rd1 <= 59;
	     {1'd0,  8'd188}: s1rd1 <= 15;
	     {1'd0,  8'd189}: s1rd1 <= 31;
	     {1'd0,  8'd190}: s1rd1 <= 47;
	     {1'd0,  8'd191}: s1rd1 <= 63;
	     {1'd0,  8'd192}: s1rd1 <= 64;
	     {1'd0,  8'd193}: s1rd1 <= 80;
	     {1'd0,  8'd194}: s1rd1 <= 96;
	     {1'd0,  8'd195}: s1rd1 <= 112;
	     {1'd0,  8'd196}: s1rd1 <= 68;
	     {1'd0,  8'd197}: s1rd1 <= 84;
	     {1'd0,  8'd198}: s1rd1 <= 100;
	     {1'd0,  8'd199}: s1rd1 <= 116;
	     {1'd0,  8'd200}: s1rd1 <= 72;
	     {1'd0,  8'd201}: s1rd1 <= 88;
	     {1'd0,  8'd202}: s1rd1 <= 104;
	     {1'd0,  8'd203}: s1rd1 <= 120;
	     {1'd0,  8'd204}: s1rd1 <= 76;
	     {1'd0,  8'd205}: s1rd1 <= 92;
	     {1'd0,  8'd206}: s1rd1 <= 108;
	     {1'd0,  8'd207}: s1rd1 <= 124;
	     {1'd0,  8'd208}: s1rd1 <= 65;
	     {1'd0,  8'd209}: s1rd1 <= 81;
	     {1'd0,  8'd210}: s1rd1 <= 97;
	     {1'd0,  8'd211}: s1rd1 <= 113;
	     {1'd0,  8'd212}: s1rd1 <= 69;
	     {1'd0,  8'd213}: s1rd1 <= 85;
	     {1'd0,  8'd214}: s1rd1 <= 101;
	     {1'd0,  8'd215}: s1rd1 <= 117;
	     {1'd0,  8'd216}: s1rd1 <= 73;
	     {1'd0,  8'd217}: s1rd1 <= 89;
	     {1'd0,  8'd218}: s1rd1 <= 105;
	     {1'd0,  8'd219}: s1rd1 <= 121;
	     {1'd0,  8'd220}: s1rd1 <= 77;
	     {1'd0,  8'd221}: s1rd1 <= 93;
	     {1'd0,  8'd222}: s1rd1 <= 109;
	     {1'd0,  8'd223}: s1rd1 <= 125;
	     {1'd0,  8'd224}: s1rd1 <= 66;
	     {1'd0,  8'd225}: s1rd1 <= 82;
	     {1'd0,  8'd226}: s1rd1 <= 98;
	     {1'd0,  8'd227}: s1rd1 <= 114;
	     {1'd0,  8'd228}: s1rd1 <= 70;
	     {1'd0,  8'd229}: s1rd1 <= 86;
	     {1'd0,  8'd230}: s1rd1 <= 102;
	     {1'd0,  8'd231}: s1rd1 <= 118;
	     {1'd0,  8'd232}: s1rd1 <= 74;
	     {1'd0,  8'd233}: s1rd1 <= 90;
	     {1'd0,  8'd234}: s1rd1 <= 106;
	     {1'd0,  8'd235}: s1rd1 <= 122;
	     {1'd0,  8'd236}: s1rd1 <= 78;
	     {1'd0,  8'd237}: s1rd1 <= 94;
	     {1'd0,  8'd238}: s1rd1 <= 110;
	     {1'd0,  8'd239}: s1rd1 <= 126;
	     {1'd0,  8'd240}: s1rd1 <= 67;
	     {1'd0,  8'd241}: s1rd1 <= 83;
	     {1'd0,  8'd242}: s1rd1 <= 99;
	     {1'd0,  8'd243}: s1rd1 <= 115;
	     {1'd0,  8'd244}: s1rd1 <= 71;
	     {1'd0,  8'd245}: s1rd1 <= 87;
	     {1'd0,  8'd246}: s1rd1 <= 103;
	     {1'd0,  8'd247}: s1rd1 <= 119;
	     {1'd0,  8'd248}: s1rd1 <= 75;
	     {1'd0,  8'd249}: s1rd1 <= 91;
	     {1'd0,  8'd250}: s1rd1 <= 107;
	     {1'd0,  8'd251}: s1rd1 <= 123;
	     {1'd0,  8'd252}: s1rd1 <= 79;
	     {1'd0,  8'd253}: s1rd1 <= 95;
	     {1'd0,  8'd254}: s1rd1 <= 111;
	     {1'd0,  8'd255}: s1rd1 <= 127;
      endcase      
   end

// synthesis attribute rom_style of s1rd1 is "distributed"
   always @(posedge clk) begin
      case({tm0_d, s1rdloc})
	     {1'd0,  8'd0}: s1rd2 <= 64;
	     {1'd0,  8'd1}: s1rd2 <= 80;
	     {1'd0,  8'd2}: s1rd2 <= 96;
	     {1'd0,  8'd3}: s1rd2 <= 112;
	     {1'd0,  8'd4}: s1rd2 <= 68;
	     {1'd0,  8'd5}: s1rd2 <= 84;
	     {1'd0,  8'd6}: s1rd2 <= 100;
	     {1'd0,  8'd7}: s1rd2 <= 116;
	     {1'd0,  8'd8}: s1rd2 <= 72;
	     {1'd0,  8'd9}: s1rd2 <= 88;
	     {1'd0,  8'd10}: s1rd2 <= 104;
	     {1'd0,  8'd11}: s1rd2 <= 120;
	     {1'd0,  8'd12}: s1rd2 <= 76;
	     {1'd0,  8'd13}: s1rd2 <= 92;
	     {1'd0,  8'd14}: s1rd2 <= 108;
	     {1'd0,  8'd15}: s1rd2 <= 124;
	     {1'd0,  8'd16}: s1rd2 <= 65;
	     {1'd0,  8'd17}: s1rd2 <= 81;
	     {1'd0,  8'd18}: s1rd2 <= 97;
	     {1'd0,  8'd19}: s1rd2 <= 113;
	     {1'd0,  8'd20}: s1rd2 <= 69;
	     {1'd0,  8'd21}: s1rd2 <= 85;
	     {1'd0,  8'd22}: s1rd2 <= 101;
	     {1'd0,  8'd23}: s1rd2 <= 117;
	     {1'd0,  8'd24}: s1rd2 <= 73;
	     {1'd0,  8'd25}: s1rd2 <= 89;
	     {1'd0,  8'd26}: s1rd2 <= 105;
	     {1'd0,  8'd27}: s1rd2 <= 121;
	     {1'd0,  8'd28}: s1rd2 <= 77;
	     {1'd0,  8'd29}: s1rd2 <= 93;
	     {1'd0,  8'd30}: s1rd2 <= 109;
	     {1'd0,  8'd31}: s1rd2 <= 125;
	     {1'd0,  8'd32}: s1rd2 <= 66;
	     {1'd0,  8'd33}: s1rd2 <= 82;
	     {1'd0,  8'd34}: s1rd2 <= 98;
	     {1'd0,  8'd35}: s1rd2 <= 114;
	     {1'd0,  8'd36}: s1rd2 <= 70;
	     {1'd0,  8'd37}: s1rd2 <= 86;
	     {1'd0,  8'd38}: s1rd2 <= 102;
	     {1'd0,  8'd39}: s1rd2 <= 118;
	     {1'd0,  8'd40}: s1rd2 <= 74;
	     {1'd0,  8'd41}: s1rd2 <= 90;
	     {1'd0,  8'd42}: s1rd2 <= 106;
	     {1'd0,  8'd43}: s1rd2 <= 122;
	     {1'd0,  8'd44}: s1rd2 <= 78;
	     {1'd0,  8'd45}: s1rd2 <= 94;
	     {1'd0,  8'd46}: s1rd2 <= 110;
	     {1'd0,  8'd47}: s1rd2 <= 126;
	     {1'd0,  8'd48}: s1rd2 <= 67;
	     {1'd0,  8'd49}: s1rd2 <= 83;
	     {1'd0,  8'd50}: s1rd2 <= 99;
	     {1'd0,  8'd51}: s1rd2 <= 115;
	     {1'd0,  8'd52}: s1rd2 <= 71;
	     {1'd0,  8'd53}: s1rd2 <= 87;
	     {1'd0,  8'd54}: s1rd2 <= 103;
	     {1'd0,  8'd55}: s1rd2 <= 119;
	     {1'd0,  8'd56}: s1rd2 <= 75;
	     {1'd0,  8'd57}: s1rd2 <= 91;
	     {1'd0,  8'd58}: s1rd2 <= 107;
	     {1'd0,  8'd59}: s1rd2 <= 123;
	     {1'd0,  8'd60}: s1rd2 <= 79;
	     {1'd0,  8'd61}: s1rd2 <= 95;
	     {1'd0,  8'd62}: s1rd2 <= 111;
	     {1'd0,  8'd63}: s1rd2 <= 127;
	     {1'd0,  8'd64}: s1rd2 <= 0;
	     {1'd0,  8'd65}: s1rd2 <= 16;
	     {1'd0,  8'd66}: s1rd2 <= 32;
	     {1'd0,  8'd67}: s1rd2 <= 48;
	     {1'd0,  8'd68}: s1rd2 <= 4;
	     {1'd0,  8'd69}: s1rd2 <= 20;
	     {1'd0,  8'd70}: s1rd2 <= 36;
	     {1'd0,  8'd71}: s1rd2 <= 52;
	     {1'd0,  8'd72}: s1rd2 <= 8;
	     {1'd0,  8'd73}: s1rd2 <= 24;
	     {1'd0,  8'd74}: s1rd2 <= 40;
	     {1'd0,  8'd75}: s1rd2 <= 56;
	     {1'd0,  8'd76}: s1rd2 <= 12;
	     {1'd0,  8'd77}: s1rd2 <= 28;
	     {1'd0,  8'd78}: s1rd2 <= 44;
	     {1'd0,  8'd79}: s1rd2 <= 60;
	     {1'd0,  8'd80}: s1rd2 <= 1;
	     {1'd0,  8'd81}: s1rd2 <= 17;
	     {1'd0,  8'd82}: s1rd2 <= 33;
	     {1'd0,  8'd83}: s1rd2 <= 49;
	     {1'd0,  8'd84}: s1rd2 <= 5;
	     {1'd0,  8'd85}: s1rd2 <= 21;
	     {1'd0,  8'd86}: s1rd2 <= 37;
	     {1'd0,  8'd87}: s1rd2 <= 53;
	     {1'd0,  8'd88}: s1rd2 <= 9;
	     {1'd0,  8'd89}: s1rd2 <= 25;
	     {1'd0,  8'd90}: s1rd2 <= 41;
	     {1'd0,  8'd91}: s1rd2 <= 57;
	     {1'd0,  8'd92}: s1rd2 <= 13;
	     {1'd0,  8'd93}: s1rd2 <= 29;
	     {1'd0,  8'd94}: s1rd2 <= 45;
	     {1'd0,  8'd95}: s1rd2 <= 61;
	     {1'd0,  8'd96}: s1rd2 <= 2;
	     {1'd0,  8'd97}: s1rd2 <= 18;
	     {1'd0,  8'd98}: s1rd2 <= 34;
	     {1'd0,  8'd99}: s1rd2 <= 50;
	     {1'd0,  8'd100}: s1rd2 <= 6;
	     {1'd0,  8'd101}: s1rd2 <= 22;
	     {1'd0,  8'd102}: s1rd2 <= 38;
	     {1'd0,  8'd103}: s1rd2 <= 54;
	     {1'd0,  8'd104}: s1rd2 <= 10;
	     {1'd0,  8'd105}: s1rd2 <= 26;
	     {1'd0,  8'd106}: s1rd2 <= 42;
	     {1'd0,  8'd107}: s1rd2 <= 58;
	     {1'd0,  8'd108}: s1rd2 <= 14;
	     {1'd0,  8'd109}: s1rd2 <= 30;
	     {1'd0,  8'd110}: s1rd2 <= 46;
	     {1'd0,  8'd111}: s1rd2 <= 62;
	     {1'd0,  8'd112}: s1rd2 <= 3;
	     {1'd0,  8'd113}: s1rd2 <= 19;
	     {1'd0,  8'd114}: s1rd2 <= 35;
	     {1'd0,  8'd115}: s1rd2 <= 51;
	     {1'd0,  8'd116}: s1rd2 <= 7;
	     {1'd0,  8'd117}: s1rd2 <= 23;
	     {1'd0,  8'd118}: s1rd2 <= 39;
	     {1'd0,  8'd119}: s1rd2 <= 55;
	     {1'd0,  8'd120}: s1rd2 <= 11;
	     {1'd0,  8'd121}: s1rd2 <= 27;
	     {1'd0,  8'd122}: s1rd2 <= 43;
	     {1'd0,  8'd123}: s1rd2 <= 59;
	     {1'd0,  8'd124}: s1rd2 <= 15;
	     {1'd0,  8'd125}: s1rd2 <= 31;
	     {1'd0,  8'd126}: s1rd2 <= 47;
	     {1'd0,  8'd127}: s1rd2 <= 63;
	     {1'd0,  8'd128}: s1rd2 <= 192;
	     {1'd0,  8'd129}: s1rd2 <= 208;
	     {1'd0,  8'd130}: s1rd2 <= 224;
	     {1'd0,  8'd131}: s1rd2 <= 240;
	     {1'd0,  8'd132}: s1rd2 <= 196;
	     {1'd0,  8'd133}: s1rd2 <= 212;
	     {1'd0,  8'd134}: s1rd2 <= 228;
	     {1'd0,  8'd135}: s1rd2 <= 244;
	     {1'd0,  8'd136}: s1rd2 <= 200;
	     {1'd0,  8'd137}: s1rd2 <= 216;
	     {1'd0,  8'd138}: s1rd2 <= 232;
	     {1'd0,  8'd139}: s1rd2 <= 248;
	     {1'd0,  8'd140}: s1rd2 <= 204;
	     {1'd0,  8'd141}: s1rd2 <= 220;
	     {1'd0,  8'd142}: s1rd2 <= 236;
	     {1'd0,  8'd143}: s1rd2 <= 252;
	     {1'd0,  8'd144}: s1rd2 <= 193;
	     {1'd0,  8'd145}: s1rd2 <= 209;
	     {1'd0,  8'd146}: s1rd2 <= 225;
	     {1'd0,  8'd147}: s1rd2 <= 241;
	     {1'd0,  8'd148}: s1rd2 <= 197;
	     {1'd0,  8'd149}: s1rd2 <= 213;
	     {1'd0,  8'd150}: s1rd2 <= 229;
	     {1'd0,  8'd151}: s1rd2 <= 245;
	     {1'd0,  8'd152}: s1rd2 <= 201;
	     {1'd0,  8'd153}: s1rd2 <= 217;
	     {1'd0,  8'd154}: s1rd2 <= 233;
	     {1'd0,  8'd155}: s1rd2 <= 249;
	     {1'd0,  8'd156}: s1rd2 <= 205;
	     {1'd0,  8'd157}: s1rd2 <= 221;
	     {1'd0,  8'd158}: s1rd2 <= 237;
	     {1'd0,  8'd159}: s1rd2 <= 253;
	     {1'd0,  8'd160}: s1rd2 <= 194;
	     {1'd0,  8'd161}: s1rd2 <= 210;
	     {1'd0,  8'd162}: s1rd2 <= 226;
	     {1'd0,  8'd163}: s1rd2 <= 242;
	     {1'd0,  8'd164}: s1rd2 <= 198;
	     {1'd0,  8'd165}: s1rd2 <= 214;
	     {1'd0,  8'd166}: s1rd2 <= 230;
	     {1'd0,  8'd167}: s1rd2 <= 246;
	     {1'd0,  8'd168}: s1rd2 <= 202;
	     {1'd0,  8'd169}: s1rd2 <= 218;
	     {1'd0,  8'd170}: s1rd2 <= 234;
	     {1'd0,  8'd171}: s1rd2 <= 250;
	     {1'd0,  8'd172}: s1rd2 <= 206;
	     {1'd0,  8'd173}: s1rd2 <= 222;
	     {1'd0,  8'd174}: s1rd2 <= 238;
	     {1'd0,  8'd175}: s1rd2 <= 254;
	     {1'd0,  8'd176}: s1rd2 <= 195;
	     {1'd0,  8'd177}: s1rd2 <= 211;
	     {1'd0,  8'd178}: s1rd2 <= 227;
	     {1'd0,  8'd179}: s1rd2 <= 243;
	     {1'd0,  8'd180}: s1rd2 <= 199;
	     {1'd0,  8'd181}: s1rd2 <= 215;
	     {1'd0,  8'd182}: s1rd2 <= 231;
	     {1'd0,  8'd183}: s1rd2 <= 247;
	     {1'd0,  8'd184}: s1rd2 <= 203;
	     {1'd0,  8'd185}: s1rd2 <= 219;
	     {1'd0,  8'd186}: s1rd2 <= 235;
	     {1'd0,  8'd187}: s1rd2 <= 251;
	     {1'd0,  8'd188}: s1rd2 <= 207;
	     {1'd0,  8'd189}: s1rd2 <= 223;
	     {1'd0,  8'd190}: s1rd2 <= 239;
	     {1'd0,  8'd191}: s1rd2 <= 255;
	     {1'd0,  8'd192}: s1rd2 <= 128;
	     {1'd0,  8'd193}: s1rd2 <= 144;
	     {1'd0,  8'd194}: s1rd2 <= 160;
	     {1'd0,  8'd195}: s1rd2 <= 176;
	     {1'd0,  8'd196}: s1rd2 <= 132;
	     {1'd0,  8'd197}: s1rd2 <= 148;
	     {1'd0,  8'd198}: s1rd2 <= 164;
	     {1'd0,  8'd199}: s1rd2 <= 180;
	     {1'd0,  8'd200}: s1rd2 <= 136;
	     {1'd0,  8'd201}: s1rd2 <= 152;
	     {1'd0,  8'd202}: s1rd2 <= 168;
	     {1'd0,  8'd203}: s1rd2 <= 184;
	     {1'd0,  8'd204}: s1rd2 <= 140;
	     {1'd0,  8'd205}: s1rd2 <= 156;
	     {1'd0,  8'd206}: s1rd2 <= 172;
	     {1'd0,  8'd207}: s1rd2 <= 188;
	     {1'd0,  8'd208}: s1rd2 <= 129;
	     {1'd0,  8'd209}: s1rd2 <= 145;
	     {1'd0,  8'd210}: s1rd2 <= 161;
	     {1'd0,  8'd211}: s1rd2 <= 177;
	     {1'd0,  8'd212}: s1rd2 <= 133;
	     {1'd0,  8'd213}: s1rd2 <= 149;
	     {1'd0,  8'd214}: s1rd2 <= 165;
	     {1'd0,  8'd215}: s1rd2 <= 181;
	     {1'd0,  8'd216}: s1rd2 <= 137;
	     {1'd0,  8'd217}: s1rd2 <= 153;
	     {1'd0,  8'd218}: s1rd2 <= 169;
	     {1'd0,  8'd219}: s1rd2 <= 185;
	     {1'd0,  8'd220}: s1rd2 <= 141;
	     {1'd0,  8'd221}: s1rd2 <= 157;
	     {1'd0,  8'd222}: s1rd2 <= 173;
	     {1'd0,  8'd223}: s1rd2 <= 189;
	     {1'd0,  8'd224}: s1rd2 <= 130;
	     {1'd0,  8'd225}: s1rd2 <= 146;
	     {1'd0,  8'd226}: s1rd2 <= 162;
	     {1'd0,  8'd227}: s1rd2 <= 178;
	     {1'd0,  8'd228}: s1rd2 <= 134;
	     {1'd0,  8'd229}: s1rd2 <= 150;
	     {1'd0,  8'd230}: s1rd2 <= 166;
	     {1'd0,  8'd231}: s1rd2 <= 182;
	     {1'd0,  8'd232}: s1rd2 <= 138;
	     {1'd0,  8'd233}: s1rd2 <= 154;
	     {1'd0,  8'd234}: s1rd2 <= 170;
	     {1'd0,  8'd235}: s1rd2 <= 186;
	     {1'd0,  8'd236}: s1rd2 <= 142;
	     {1'd0,  8'd237}: s1rd2 <= 158;
	     {1'd0,  8'd238}: s1rd2 <= 174;
	     {1'd0,  8'd239}: s1rd2 <= 190;
	     {1'd0,  8'd240}: s1rd2 <= 131;
	     {1'd0,  8'd241}: s1rd2 <= 147;
	     {1'd0,  8'd242}: s1rd2 <= 163;
	     {1'd0,  8'd243}: s1rd2 <= 179;
	     {1'd0,  8'd244}: s1rd2 <= 135;
	     {1'd0,  8'd245}: s1rd2 <= 151;
	     {1'd0,  8'd246}: s1rd2 <= 167;
	     {1'd0,  8'd247}: s1rd2 <= 183;
	     {1'd0,  8'd248}: s1rd2 <= 139;
	     {1'd0,  8'd249}: s1rd2 <= 155;
	     {1'd0,  8'd250}: s1rd2 <= 171;
	     {1'd0,  8'd251}: s1rd2 <= 187;
	     {1'd0,  8'd252}: s1rd2 <= 143;
	     {1'd0,  8'd253}: s1rd2 <= 159;
	     {1'd0,  8'd254}: s1rd2 <= 175;
	     {1'd0,  8'd255}: s1rd2 <= 191;
      endcase      
   end

// synthesis attribute rom_style of s1rd2 is "distributed"
   always @(posedge clk) begin
      case({tm0_d, s1rdloc})
	     {1'd0,  8'd0}: s1rd3 <= 0;
	     {1'd0,  8'd1}: s1rd3 <= 16;
	     {1'd0,  8'd2}: s1rd3 <= 32;
	     {1'd0,  8'd3}: s1rd3 <= 48;
	     {1'd0,  8'd4}: s1rd3 <= 4;
	     {1'd0,  8'd5}: s1rd3 <= 20;
	     {1'd0,  8'd6}: s1rd3 <= 36;
	     {1'd0,  8'd7}: s1rd3 <= 52;
	     {1'd0,  8'd8}: s1rd3 <= 8;
	     {1'd0,  8'd9}: s1rd3 <= 24;
	     {1'd0,  8'd10}: s1rd3 <= 40;
	     {1'd0,  8'd11}: s1rd3 <= 56;
	     {1'd0,  8'd12}: s1rd3 <= 12;
	     {1'd0,  8'd13}: s1rd3 <= 28;
	     {1'd0,  8'd14}: s1rd3 <= 44;
	     {1'd0,  8'd15}: s1rd3 <= 60;
	     {1'd0,  8'd16}: s1rd3 <= 1;
	     {1'd0,  8'd17}: s1rd3 <= 17;
	     {1'd0,  8'd18}: s1rd3 <= 33;
	     {1'd0,  8'd19}: s1rd3 <= 49;
	     {1'd0,  8'd20}: s1rd3 <= 5;
	     {1'd0,  8'd21}: s1rd3 <= 21;
	     {1'd0,  8'd22}: s1rd3 <= 37;
	     {1'd0,  8'd23}: s1rd3 <= 53;
	     {1'd0,  8'd24}: s1rd3 <= 9;
	     {1'd0,  8'd25}: s1rd3 <= 25;
	     {1'd0,  8'd26}: s1rd3 <= 41;
	     {1'd0,  8'd27}: s1rd3 <= 57;
	     {1'd0,  8'd28}: s1rd3 <= 13;
	     {1'd0,  8'd29}: s1rd3 <= 29;
	     {1'd0,  8'd30}: s1rd3 <= 45;
	     {1'd0,  8'd31}: s1rd3 <= 61;
	     {1'd0,  8'd32}: s1rd3 <= 2;
	     {1'd0,  8'd33}: s1rd3 <= 18;
	     {1'd0,  8'd34}: s1rd3 <= 34;
	     {1'd0,  8'd35}: s1rd3 <= 50;
	     {1'd0,  8'd36}: s1rd3 <= 6;
	     {1'd0,  8'd37}: s1rd3 <= 22;
	     {1'd0,  8'd38}: s1rd3 <= 38;
	     {1'd0,  8'd39}: s1rd3 <= 54;
	     {1'd0,  8'd40}: s1rd3 <= 10;
	     {1'd0,  8'd41}: s1rd3 <= 26;
	     {1'd0,  8'd42}: s1rd3 <= 42;
	     {1'd0,  8'd43}: s1rd3 <= 58;
	     {1'd0,  8'd44}: s1rd3 <= 14;
	     {1'd0,  8'd45}: s1rd3 <= 30;
	     {1'd0,  8'd46}: s1rd3 <= 46;
	     {1'd0,  8'd47}: s1rd3 <= 62;
	     {1'd0,  8'd48}: s1rd3 <= 3;
	     {1'd0,  8'd49}: s1rd3 <= 19;
	     {1'd0,  8'd50}: s1rd3 <= 35;
	     {1'd0,  8'd51}: s1rd3 <= 51;
	     {1'd0,  8'd52}: s1rd3 <= 7;
	     {1'd0,  8'd53}: s1rd3 <= 23;
	     {1'd0,  8'd54}: s1rd3 <= 39;
	     {1'd0,  8'd55}: s1rd3 <= 55;
	     {1'd0,  8'd56}: s1rd3 <= 11;
	     {1'd0,  8'd57}: s1rd3 <= 27;
	     {1'd0,  8'd58}: s1rd3 <= 43;
	     {1'd0,  8'd59}: s1rd3 <= 59;
	     {1'd0,  8'd60}: s1rd3 <= 15;
	     {1'd0,  8'd61}: s1rd3 <= 31;
	     {1'd0,  8'd62}: s1rd3 <= 47;
	     {1'd0,  8'd63}: s1rd3 <= 63;
	     {1'd0,  8'd64}: s1rd3 <= 64;
	     {1'd0,  8'd65}: s1rd3 <= 80;
	     {1'd0,  8'd66}: s1rd3 <= 96;
	     {1'd0,  8'd67}: s1rd3 <= 112;
	     {1'd0,  8'd68}: s1rd3 <= 68;
	     {1'd0,  8'd69}: s1rd3 <= 84;
	     {1'd0,  8'd70}: s1rd3 <= 100;
	     {1'd0,  8'd71}: s1rd3 <= 116;
	     {1'd0,  8'd72}: s1rd3 <= 72;
	     {1'd0,  8'd73}: s1rd3 <= 88;
	     {1'd0,  8'd74}: s1rd3 <= 104;
	     {1'd0,  8'd75}: s1rd3 <= 120;
	     {1'd0,  8'd76}: s1rd3 <= 76;
	     {1'd0,  8'd77}: s1rd3 <= 92;
	     {1'd0,  8'd78}: s1rd3 <= 108;
	     {1'd0,  8'd79}: s1rd3 <= 124;
	     {1'd0,  8'd80}: s1rd3 <= 65;
	     {1'd0,  8'd81}: s1rd3 <= 81;
	     {1'd0,  8'd82}: s1rd3 <= 97;
	     {1'd0,  8'd83}: s1rd3 <= 113;
	     {1'd0,  8'd84}: s1rd3 <= 69;
	     {1'd0,  8'd85}: s1rd3 <= 85;
	     {1'd0,  8'd86}: s1rd3 <= 101;
	     {1'd0,  8'd87}: s1rd3 <= 117;
	     {1'd0,  8'd88}: s1rd3 <= 73;
	     {1'd0,  8'd89}: s1rd3 <= 89;
	     {1'd0,  8'd90}: s1rd3 <= 105;
	     {1'd0,  8'd91}: s1rd3 <= 121;
	     {1'd0,  8'd92}: s1rd3 <= 77;
	     {1'd0,  8'd93}: s1rd3 <= 93;
	     {1'd0,  8'd94}: s1rd3 <= 109;
	     {1'd0,  8'd95}: s1rd3 <= 125;
	     {1'd0,  8'd96}: s1rd3 <= 66;
	     {1'd0,  8'd97}: s1rd3 <= 82;
	     {1'd0,  8'd98}: s1rd3 <= 98;
	     {1'd0,  8'd99}: s1rd3 <= 114;
	     {1'd0,  8'd100}: s1rd3 <= 70;
	     {1'd0,  8'd101}: s1rd3 <= 86;
	     {1'd0,  8'd102}: s1rd3 <= 102;
	     {1'd0,  8'd103}: s1rd3 <= 118;
	     {1'd0,  8'd104}: s1rd3 <= 74;
	     {1'd0,  8'd105}: s1rd3 <= 90;
	     {1'd0,  8'd106}: s1rd3 <= 106;
	     {1'd0,  8'd107}: s1rd3 <= 122;
	     {1'd0,  8'd108}: s1rd3 <= 78;
	     {1'd0,  8'd109}: s1rd3 <= 94;
	     {1'd0,  8'd110}: s1rd3 <= 110;
	     {1'd0,  8'd111}: s1rd3 <= 126;
	     {1'd0,  8'd112}: s1rd3 <= 67;
	     {1'd0,  8'd113}: s1rd3 <= 83;
	     {1'd0,  8'd114}: s1rd3 <= 99;
	     {1'd0,  8'd115}: s1rd3 <= 115;
	     {1'd0,  8'd116}: s1rd3 <= 71;
	     {1'd0,  8'd117}: s1rd3 <= 87;
	     {1'd0,  8'd118}: s1rd3 <= 103;
	     {1'd0,  8'd119}: s1rd3 <= 119;
	     {1'd0,  8'd120}: s1rd3 <= 75;
	     {1'd0,  8'd121}: s1rd3 <= 91;
	     {1'd0,  8'd122}: s1rd3 <= 107;
	     {1'd0,  8'd123}: s1rd3 <= 123;
	     {1'd0,  8'd124}: s1rd3 <= 79;
	     {1'd0,  8'd125}: s1rd3 <= 95;
	     {1'd0,  8'd126}: s1rd3 <= 111;
	     {1'd0,  8'd127}: s1rd3 <= 127;
	     {1'd0,  8'd128}: s1rd3 <= 128;
	     {1'd0,  8'd129}: s1rd3 <= 144;
	     {1'd0,  8'd130}: s1rd3 <= 160;
	     {1'd0,  8'd131}: s1rd3 <= 176;
	     {1'd0,  8'd132}: s1rd3 <= 132;
	     {1'd0,  8'd133}: s1rd3 <= 148;
	     {1'd0,  8'd134}: s1rd3 <= 164;
	     {1'd0,  8'd135}: s1rd3 <= 180;
	     {1'd0,  8'd136}: s1rd3 <= 136;
	     {1'd0,  8'd137}: s1rd3 <= 152;
	     {1'd0,  8'd138}: s1rd3 <= 168;
	     {1'd0,  8'd139}: s1rd3 <= 184;
	     {1'd0,  8'd140}: s1rd3 <= 140;
	     {1'd0,  8'd141}: s1rd3 <= 156;
	     {1'd0,  8'd142}: s1rd3 <= 172;
	     {1'd0,  8'd143}: s1rd3 <= 188;
	     {1'd0,  8'd144}: s1rd3 <= 129;
	     {1'd0,  8'd145}: s1rd3 <= 145;
	     {1'd0,  8'd146}: s1rd3 <= 161;
	     {1'd0,  8'd147}: s1rd3 <= 177;
	     {1'd0,  8'd148}: s1rd3 <= 133;
	     {1'd0,  8'd149}: s1rd3 <= 149;
	     {1'd0,  8'd150}: s1rd3 <= 165;
	     {1'd0,  8'd151}: s1rd3 <= 181;
	     {1'd0,  8'd152}: s1rd3 <= 137;
	     {1'd0,  8'd153}: s1rd3 <= 153;
	     {1'd0,  8'd154}: s1rd3 <= 169;
	     {1'd0,  8'd155}: s1rd3 <= 185;
	     {1'd0,  8'd156}: s1rd3 <= 141;
	     {1'd0,  8'd157}: s1rd3 <= 157;
	     {1'd0,  8'd158}: s1rd3 <= 173;
	     {1'd0,  8'd159}: s1rd3 <= 189;
	     {1'd0,  8'd160}: s1rd3 <= 130;
	     {1'd0,  8'd161}: s1rd3 <= 146;
	     {1'd0,  8'd162}: s1rd3 <= 162;
	     {1'd0,  8'd163}: s1rd3 <= 178;
	     {1'd0,  8'd164}: s1rd3 <= 134;
	     {1'd0,  8'd165}: s1rd3 <= 150;
	     {1'd0,  8'd166}: s1rd3 <= 166;
	     {1'd0,  8'd167}: s1rd3 <= 182;
	     {1'd0,  8'd168}: s1rd3 <= 138;
	     {1'd0,  8'd169}: s1rd3 <= 154;
	     {1'd0,  8'd170}: s1rd3 <= 170;
	     {1'd0,  8'd171}: s1rd3 <= 186;
	     {1'd0,  8'd172}: s1rd3 <= 142;
	     {1'd0,  8'd173}: s1rd3 <= 158;
	     {1'd0,  8'd174}: s1rd3 <= 174;
	     {1'd0,  8'd175}: s1rd3 <= 190;
	     {1'd0,  8'd176}: s1rd3 <= 131;
	     {1'd0,  8'd177}: s1rd3 <= 147;
	     {1'd0,  8'd178}: s1rd3 <= 163;
	     {1'd0,  8'd179}: s1rd3 <= 179;
	     {1'd0,  8'd180}: s1rd3 <= 135;
	     {1'd0,  8'd181}: s1rd3 <= 151;
	     {1'd0,  8'd182}: s1rd3 <= 167;
	     {1'd0,  8'd183}: s1rd3 <= 183;
	     {1'd0,  8'd184}: s1rd3 <= 139;
	     {1'd0,  8'd185}: s1rd3 <= 155;
	     {1'd0,  8'd186}: s1rd3 <= 171;
	     {1'd0,  8'd187}: s1rd3 <= 187;
	     {1'd0,  8'd188}: s1rd3 <= 143;
	     {1'd0,  8'd189}: s1rd3 <= 159;
	     {1'd0,  8'd190}: s1rd3 <= 175;
	     {1'd0,  8'd191}: s1rd3 <= 191;
	     {1'd0,  8'd192}: s1rd3 <= 192;
	     {1'd0,  8'd193}: s1rd3 <= 208;
	     {1'd0,  8'd194}: s1rd3 <= 224;
	     {1'd0,  8'd195}: s1rd3 <= 240;
	     {1'd0,  8'd196}: s1rd3 <= 196;
	     {1'd0,  8'd197}: s1rd3 <= 212;
	     {1'd0,  8'd198}: s1rd3 <= 228;
	     {1'd0,  8'd199}: s1rd3 <= 244;
	     {1'd0,  8'd200}: s1rd3 <= 200;
	     {1'd0,  8'd201}: s1rd3 <= 216;
	     {1'd0,  8'd202}: s1rd3 <= 232;
	     {1'd0,  8'd203}: s1rd3 <= 248;
	     {1'd0,  8'd204}: s1rd3 <= 204;
	     {1'd0,  8'd205}: s1rd3 <= 220;
	     {1'd0,  8'd206}: s1rd3 <= 236;
	     {1'd0,  8'd207}: s1rd3 <= 252;
	     {1'd0,  8'd208}: s1rd3 <= 193;
	     {1'd0,  8'd209}: s1rd3 <= 209;
	     {1'd0,  8'd210}: s1rd3 <= 225;
	     {1'd0,  8'd211}: s1rd3 <= 241;
	     {1'd0,  8'd212}: s1rd3 <= 197;
	     {1'd0,  8'd213}: s1rd3 <= 213;
	     {1'd0,  8'd214}: s1rd3 <= 229;
	     {1'd0,  8'd215}: s1rd3 <= 245;
	     {1'd0,  8'd216}: s1rd3 <= 201;
	     {1'd0,  8'd217}: s1rd3 <= 217;
	     {1'd0,  8'd218}: s1rd3 <= 233;
	     {1'd0,  8'd219}: s1rd3 <= 249;
	     {1'd0,  8'd220}: s1rd3 <= 205;
	     {1'd0,  8'd221}: s1rd3 <= 221;
	     {1'd0,  8'd222}: s1rd3 <= 237;
	     {1'd0,  8'd223}: s1rd3 <= 253;
	     {1'd0,  8'd224}: s1rd3 <= 194;
	     {1'd0,  8'd225}: s1rd3 <= 210;
	     {1'd0,  8'd226}: s1rd3 <= 226;
	     {1'd0,  8'd227}: s1rd3 <= 242;
	     {1'd0,  8'd228}: s1rd3 <= 198;
	     {1'd0,  8'd229}: s1rd3 <= 214;
	     {1'd0,  8'd230}: s1rd3 <= 230;
	     {1'd0,  8'd231}: s1rd3 <= 246;
	     {1'd0,  8'd232}: s1rd3 <= 202;
	     {1'd0,  8'd233}: s1rd3 <= 218;
	     {1'd0,  8'd234}: s1rd3 <= 234;
	     {1'd0,  8'd235}: s1rd3 <= 250;
	     {1'd0,  8'd236}: s1rd3 <= 206;
	     {1'd0,  8'd237}: s1rd3 <= 222;
	     {1'd0,  8'd238}: s1rd3 <= 238;
	     {1'd0,  8'd239}: s1rd3 <= 254;
	     {1'd0,  8'd240}: s1rd3 <= 195;
	     {1'd0,  8'd241}: s1rd3 <= 211;
	     {1'd0,  8'd242}: s1rd3 <= 227;
	     {1'd0,  8'd243}: s1rd3 <= 243;
	     {1'd0,  8'd244}: s1rd3 <= 199;
	     {1'd0,  8'd245}: s1rd3 <= 215;
	     {1'd0,  8'd246}: s1rd3 <= 231;
	     {1'd0,  8'd247}: s1rd3 <= 247;
	     {1'd0,  8'd248}: s1rd3 <= 203;
	     {1'd0,  8'd249}: s1rd3 <= 219;
	     {1'd0,  8'd250}: s1rd3 <= 235;
	     {1'd0,  8'd251}: s1rd3 <= 251;
	     {1'd0,  8'd252}: s1rd3 <= 207;
	     {1'd0,  8'd253}: s1rd3 <= 223;
	     {1'd0,  8'd254}: s1rd3 <= 239;
	     {1'd0,  8'd255}: s1rd3 <= 255;
      endcase      
   end

// synthesis attribute rom_style of s1rd3 is "distributed"
    swNet20409 sw(tm0_d, clk, muxCycle, t0, s0, t1, s1, t2, s2, t3, s3);

   always @(posedge clk) begin
      case({tm0_dd, writeCycle})
	      {1'd0, 8'd0}: s2wr0 <= 192;
	      {1'd0, 8'd1}: s2wr0 <= 193;
	      {1'd0, 8'd2}: s2wr0 <= 194;
	      {1'd0, 8'd3}: s2wr0 <= 195;
	      {1'd0, 8'd4}: s2wr0 <= 196;
	      {1'd0, 8'd5}: s2wr0 <= 197;
	      {1'd0, 8'd6}: s2wr0 <= 198;
	      {1'd0, 8'd7}: s2wr0 <= 199;
	      {1'd0, 8'd8}: s2wr0 <= 200;
	      {1'd0, 8'd9}: s2wr0 <= 201;
	      {1'd0, 8'd10}: s2wr0 <= 202;
	      {1'd0, 8'd11}: s2wr0 <= 203;
	      {1'd0, 8'd12}: s2wr0 <= 204;
	      {1'd0, 8'd13}: s2wr0 <= 205;
	      {1'd0, 8'd14}: s2wr0 <= 206;
	      {1'd0, 8'd15}: s2wr0 <= 207;
	      {1'd0, 8'd16}: s2wr0 <= 208;
	      {1'd0, 8'd17}: s2wr0 <= 209;
	      {1'd0, 8'd18}: s2wr0 <= 210;
	      {1'd0, 8'd19}: s2wr0 <= 211;
	      {1'd0, 8'd20}: s2wr0 <= 212;
	      {1'd0, 8'd21}: s2wr0 <= 213;
	      {1'd0, 8'd22}: s2wr0 <= 214;
	      {1'd0, 8'd23}: s2wr0 <= 215;
	      {1'd0, 8'd24}: s2wr0 <= 216;
	      {1'd0, 8'd25}: s2wr0 <= 217;
	      {1'd0, 8'd26}: s2wr0 <= 218;
	      {1'd0, 8'd27}: s2wr0 <= 219;
	      {1'd0, 8'd28}: s2wr0 <= 220;
	      {1'd0, 8'd29}: s2wr0 <= 221;
	      {1'd0, 8'd30}: s2wr0 <= 222;
	      {1'd0, 8'd31}: s2wr0 <= 223;
	      {1'd0, 8'd32}: s2wr0 <= 224;
	      {1'd0, 8'd33}: s2wr0 <= 225;
	      {1'd0, 8'd34}: s2wr0 <= 226;
	      {1'd0, 8'd35}: s2wr0 <= 227;
	      {1'd0, 8'd36}: s2wr0 <= 228;
	      {1'd0, 8'd37}: s2wr0 <= 229;
	      {1'd0, 8'd38}: s2wr0 <= 230;
	      {1'd0, 8'd39}: s2wr0 <= 231;
	      {1'd0, 8'd40}: s2wr0 <= 232;
	      {1'd0, 8'd41}: s2wr0 <= 233;
	      {1'd0, 8'd42}: s2wr0 <= 234;
	      {1'd0, 8'd43}: s2wr0 <= 235;
	      {1'd0, 8'd44}: s2wr0 <= 236;
	      {1'd0, 8'd45}: s2wr0 <= 237;
	      {1'd0, 8'd46}: s2wr0 <= 238;
	      {1'd0, 8'd47}: s2wr0 <= 239;
	      {1'd0, 8'd48}: s2wr0 <= 240;
	      {1'd0, 8'd49}: s2wr0 <= 241;
	      {1'd0, 8'd50}: s2wr0 <= 242;
	      {1'd0, 8'd51}: s2wr0 <= 243;
	      {1'd0, 8'd52}: s2wr0 <= 244;
	      {1'd0, 8'd53}: s2wr0 <= 245;
	      {1'd0, 8'd54}: s2wr0 <= 246;
	      {1'd0, 8'd55}: s2wr0 <= 247;
	      {1'd0, 8'd56}: s2wr0 <= 248;
	      {1'd0, 8'd57}: s2wr0 <= 249;
	      {1'd0, 8'd58}: s2wr0 <= 250;
	      {1'd0, 8'd59}: s2wr0 <= 251;
	      {1'd0, 8'd60}: s2wr0 <= 252;
	      {1'd0, 8'd61}: s2wr0 <= 253;
	      {1'd0, 8'd62}: s2wr0 <= 254;
	      {1'd0, 8'd63}: s2wr0 <= 255;
	      {1'd0, 8'd64}: s2wr0 <= 128;
	      {1'd0, 8'd65}: s2wr0 <= 129;
	      {1'd0, 8'd66}: s2wr0 <= 130;
	      {1'd0, 8'd67}: s2wr0 <= 131;
	      {1'd0, 8'd68}: s2wr0 <= 132;
	      {1'd0, 8'd69}: s2wr0 <= 133;
	      {1'd0, 8'd70}: s2wr0 <= 134;
	      {1'd0, 8'd71}: s2wr0 <= 135;
	      {1'd0, 8'd72}: s2wr0 <= 136;
	      {1'd0, 8'd73}: s2wr0 <= 137;
	      {1'd0, 8'd74}: s2wr0 <= 138;
	      {1'd0, 8'd75}: s2wr0 <= 139;
	      {1'd0, 8'd76}: s2wr0 <= 140;
	      {1'd0, 8'd77}: s2wr0 <= 141;
	      {1'd0, 8'd78}: s2wr0 <= 142;
	      {1'd0, 8'd79}: s2wr0 <= 143;
	      {1'd0, 8'd80}: s2wr0 <= 144;
	      {1'd0, 8'd81}: s2wr0 <= 145;
	      {1'd0, 8'd82}: s2wr0 <= 146;
	      {1'd0, 8'd83}: s2wr0 <= 147;
	      {1'd0, 8'd84}: s2wr0 <= 148;
	      {1'd0, 8'd85}: s2wr0 <= 149;
	      {1'd0, 8'd86}: s2wr0 <= 150;
	      {1'd0, 8'd87}: s2wr0 <= 151;
	      {1'd0, 8'd88}: s2wr0 <= 152;
	      {1'd0, 8'd89}: s2wr0 <= 153;
	      {1'd0, 8'd90}: s2wr0 <= 154;
	      {1'd0, 8'd91}: s2wr0 <= 155;
	      {1'd0, 8'd92}: s2wr0 <= 156;
	      {1'd0, 8'd93}: s2wr0 <= 157;
	      {1'd0, 8'd94}: s2wr0 <= 158;
	      {1'd0, 8'd95}: s2wr0 <= 159;
	      {1'd0, 8'd96}: s2wr0 <= 160;
	      {1'd0, 8'd97}: s2wr0 <= 161;
	      {1'd0, 8'd98}: s2wr0 <= 162;
	      {1'd0, 8'd99}: s2wr0 <= 163;
	      {1'd0, 8'd100}: s2wr0 <= 164;
	      {1'd0, 8'd101}: s2wr0 <= 165;
	      {1'd0, 8'd102}: s2wr0 <= 166;
	      {1'd0, 8'd103}: s2wr0 <= 167;
	      {1'd0, 8'd104}: s2wr0 <= 168;
	      {1'd0, 8'd105}: s2wr0 <= 169;
	      {1'd0, 8'd106}: s2wr0 <= 170;
	      {1'd0, 8'd107}: s2wr0 <= 171;
	      {1'd0, 8'd108}: s2wr0 <= 172;
	      {1'd0, 8'd109}: s2wr0 <= 173;
	      {1'd0, 8'd110}: s2wr0 <= 174;
	      {1'd0, 8'd111}: s2wr0 <= 175;
	      {1'd0, 8'd112}: s2wr0 <= 176;
	      {1'd0, 8'd113}: s2wr0 <= 177;
	      {1'd0, 8'd114}: s2wr0 <= 178;
	      {1'd0, 8'd115}: s2wr0 <= 179;
	      {1'd0, 8'd116}: s2wr0 <= 180;
	      {1'd0, 8'd117}: s2wr0 <= 181;
	      {1'd0, 8'd118}: s2wr0 <= 182;
	      {1'd0, 8'd119}: s2wr0 <= 183;
	      {1'd0, 8'd120}: s2wr0 <= 184;
	      {1'd0, 8'd121}: s2wr0 <= 185;
	      {1'd0, 8'd122}: s2wr0 <= 186;
	      {1'd0, 8'd123}: s2wr0 <= 187;
	      {1'd0, 8'd124}: s2wr0 <= 188;
	      {1'd0, 8'd125}: s2wr0 <= 189;
	      {1'd0, 8'd126}: s2wr0 <= 190;
	      {1'd0, 8'd127}: s2wr0 <= 191;
	      {1'd0, 8'd128}: s2wr0 <= 64;
	      {1'd0, 8'd129}: s2wr0 <= 65;
	      {1'd0, 8'd130}: s2wr0 <= 66;
	      {1'd0, 8'd131}: s2wr0 <= 67;
	      {1'd0, 8'd132}: s2wr0 <= 68;
	      {1'd0, 8'd133}: s2wr0 <= 69;
	      {1'd0, 8'd134}: s2wr0 <= 70;
	      {1'd0, 8'd135}: s2wr0 <= 71;
	      {1'd0, 8'd136}: s2wr0 <= 72;
	      {1'd0, 8'd137}: s2wr0 <= 73;
	      {1'd0, 8'd138}: s2wr0 <= 74;
	      {1'd0, 8'd139}: s2wr0 <= 75;
	      {1'd0, 8'd140}: s2wr0 <= 76;
	      {1'd0, 8'd141}: s2wr0 <= 77;
	      {1'd0, 8'd142}: s2wr0 <= 78;
	      {1'd0, 8'd143}: s2wr0 <= 79;
	      {1'd0, 8'd144}: s2wr0 <= 80;
	      {1'd0, 8'd145}: s2wr0 <= 81;
	      {1'd0, 8'd146}: s2wr0 <= 82;
	      {1'd0, 8'd147}: s2wr0 <= 83;
	      {1'd0, 8'd148}: s2wr0 <= 84;
	      {1'd0, 8'd149}: s2wr0 <= 85;
	      {1'd0, 8'd150}: s2wr0 <= 86;
	      {1'd0, 8'd151}: s2wr0 <= 87;
	      {1'd0, 8'd152}: s2wr0 <= 88;
	      {1'd0, 8'd153}: s2wr0 <= 89;
	      {1'd0, 8'd154}: s2wr0 <= 90;
	      {1'd0, 8'd155}: s2wr0 <= 91;
	      {1'd0, 8'd156}: s2wr0 <= 92;
	      {1'd0, 8'd157}: s2wr0 <= 93;
	      {1'd0, 8'd158}: s2wr0 <= 94;
	      {1'd0, 8'd159}: s2wr0 <= 95;
	      {1'd0, 8'd160}: s2wr0 <= 96;
	      {1'd0, 8'd161}: s2wr0 <= 97;
	      {1'd0, 8'd162}: s2wr0 <= 98;
	      {1'd0, 8'd163}: s2wr0 <= 99;
	      {1'd0, 8'd164}: s2wr0 <= 100;
	      {1'd0, 8'd165}: s2wr0 <= 101;
	      {1'd0, 8'd166}: s2wr0 <= 102;
	      {1'd0, 8'd167}: s2wr0 <= 103;
	      {1'd0, 8'd168}: s2wr0 <= 104;
	      {1'd0, 8'd169}: s2wr0 <= 105;
	      {1'd0, 8'd170}: s2wr0 <= 106;
	      {1'd0, 8'd171}: s2wr0 <= 107;
	      {1'd0, 8'd172}: s2wr0 <= 108;
	      {1'd0, 8'd173}: s2wr0 <= 109;
	      {1'd0, 8'd174}: s2wr0 <= 110;
	      {1'd0, 8'd175}: s2wr0 <= 111;
	      {1'd0, 8'd176}: s2wr0 <= 112;
	      {1'd0, 8'd177}: s2wr0 <= 113;
	      {1'd0, 8'd178}: s2wr0 <= 114;
	      {1'd0, 8'd179}: s2wr0 <= 115;
	      {1'd0, 8'd180}: s2wr0 <= 116;
	      {1'd0, 8'd181}: s2wr0 <= 117;
	      {1'd0, 8'd182}: s2wr0 <= 118;
	      {1'd0, 8'd183}: s2wr0 <= 119;
	      {1'd0, 8'd184}: s2wr0 <= 120;
	      {1'd0, 8'd185}: s2wr0 <= 121;
	      {1'd0, 8'd186}: s2wr0 <= 122;
	      {1'd0, 8'd187}: s2wr0 <= 123;
	      {1'd0, 8'd188}: s2wr0 <= 124;
	      {1'd0, 8'd189}: s2wr0 <= 125;
	      {1'd0, 8'd190}: s2wr0 <= 126;
	      {1'd0, 8'd191}: s2wr0 <= 127;
	      {1'd0, 8'd192}: s2wr0 <= 0;
	      {1'd0, 8'd193}: s2wr0 <= 1;
	      {1'd0, 8'd194}: s2wr0 <= 2;
	      {1'd0, 8'd195}: s2wr0 <= 3;
	      {1'd0, 8'd196}: s2wr0 <= 4;
	      {1'd0, 8'd197}: s2wr0 <= 5;
	      {1'd0, 8'd198}: s2wr0 <= 6;
	      {1'd0, 8'd199}: s2wr0 <= 7;
	      {1'd0, 8'd200}: s2wr0 <= 8;
	      {1'd0, 8'd201}: s2wr0 <= 9;
	      {1'd0, 8'd202}: s2wr0 <= 10;
	      {1'd0, 8'd203}: s2wr0 <= 11;
	      {1'd0, 8'd204}: s2wr0 <= 12;
	      {1'd0, 8'd205}: s2wr0 <= 13;
	      {1'd0, 8'd206}: s2wr0 <= 14;
	      {1'd0, 8'd207}: s2wr0 <= 15;
	      {1'd0, 8'd208}: s2wr0 <= 16;
	      {1'd0, 8'd209}: s2wr0 <= 17;
	      {1'd0, 8'd210}: s2wr0 <= 18;
	      {1'd0, 8'd211}: s2wr0 <= 19;
	      {1'd0, 8'd212}: s2wr0 <= 20;
	      {1'd0, 8'd213}: s2wr0 <= 21;
	      {1'd0, 8'd214}: s2wr0 <= 22;
	      {1'd0, 8'd215}: s2wr0 <= 23;
	      {1'd0, 8'd216}: s2wr0 <= 24;
	      {1'd0, 8'd217}: s2wr0 <= 25;
	      {1'd0, 8'd218}: s2wr0 <= 26;
	      {1'd0, 8'd219}: s2wr0 <= 27;
	      {1'd0, 8'd220}: s2wr0 <= 28;
	      {1'd0, 8'd221}: s2wr0 <= 29;
	      {1'd0, 8'd222}: s2wr0 <= 30;
	      {1'd0, 8'd223}: s2wr0 <= 31;
	      {1'd0, 8'd224}: s2wr0 <= 32;
	      {1'd0, 8'd225}: s2wr0 <= 33;
	      {1'd0, 8'd226}: s2wr0 <= 34;
	      {1'd0, 8'd227}: s2wr0 <= 35;
	      {1'd0, 8'd228}: s2wr0 <= 36;
	      {1'd0, 8'd229}: s2wr0 <= 37;
	      {1'd0, 8'd230}: s2wr0 <= 38;
	      {1'd0, 8'd231}: s2wr0 <= 39;
	      {1'd0, 8'd232}: s2wr0 <= 40;
	      {1'd0, 8'd233}: s2wr0 <= 41;
	      {1'd0, 8'd234}: s2wr0 <= 42;
	      {1'd0, 8'd235}: s2wr0 <= 43;
	      {1'd0, 8'd236}: s2wr0 <= 44;
	      {1'd0, 8'd237}: s2wr0 <= 45;
	      {1'd0, 8'd238}: s2wr0 <= 46;
	      {1'd0, 8'd239}: s2wr0 <= 47;
	      {1'd0, 8'd240}: s2wr0 <= 48;
	      {1'd0, 8'd241}: s2wr0 <= 49;
	      {1'd0, 8'd242}: s2wr0 <= 50;
	      {1'd0, 8'd243}: s2wr0 <= 51;
	      {1'd0, 8'd244}: s2wr0 <= 52;
	      {1'd0, 8'd245}: s2wr0 <= 53;
	      {1'd0, 8'd246}: s2wr0 <= 54;
	      {1'd0, 8'd247}: s2wr0 <= 55;
	      {1'd0, 8'd248}: s2wr0 <= 56;
	      {1'd0, 8'd249}: s2wr0 <= 57;
	      {1'd0, 8'd250}: s2wr0 <= 58;
	      {1'd0, 8'd251}: s2wr0 <= 59;
	      {1'd0, 8'd252}: s2wr0 <= 60;
	      {1'd0, 8'd253}: s2wr0 <= 61;
	      {1'd0, 8'd254}: s2wr0 <= 62;
	      {1'd0, 8'd255}: s2wr0 <= 63;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr0 is "distributed"
   always @(posedge clk) begin
      case({tm0_dd, writeCycle})
	      {1'd0, 8'd0}: s2wr1 <= 128;
	      {1'd0, 8'd1}: s2wr1 <= 129;
	      {1'd0, 8'd2}: s2wr1 <= 130;
	      {1'd0, 8'd3}: s2wr1 <= 131;
	      {1'd0, 8'd4}: s2wr1 <= 132;
	      {1'd0, 8'd5}: s2wr1 <= 133;
	      {1'd0, 8'd6}: s2wr1 <= 134;
	      {1'd0, 8'd7}: s2wr1 <= 135;
	      {1'd0, 8'd8}: s2wr1 <= 136;
	      {1'd0, 8'd9}: s2wr1 <= 137;
	      {1'd0, 8'd10}: s2wr1 <= 138;
	      {1'd0, 8'd11}: s2wr1 <= 139;
	      {1'd0, 8'd12}: s2wr1 <= 140;
	      {1'd0, 8'd13}: s2wr1 <= 141;
	      {1'd0, 8'd14}: s2wr1 <= 142;
	      {1'd0, 8'd15}: s2wr1 <= 143;
	      {1'd0, 8'd16}: s2wr1 <= 144;
	      {1'd0, 8'd17}: s2wr1 <= 145;
	      {1'd0, 8'd18}: s2wr1 <= 146;
	      {1'd0, 8'd19}: s2wr1 <= 147;
	      {1'd0, 8'd20}: s2wr1 <= 148;
	      {1'd0, 8'd21}: s2wr1 <= 149;
	      {1'd0, 8'd22}: s2wr1 <= 150;
	      {1'd0, 8'd23}: s2wr1 <= 151;
	      {1'd0, 8'd24}: s2wr1 <= 152;
	      {1'd0, 8'd25}: s2wr1 <= 153;
	      {1'd0, 8'd26}: s2wr1 <= 154;
	      {1'd0, 8'd27}: s2wr1 <= 155;
	      {1'd0, 8'd28}: s2wr1 <= 156;
	      {1'd0, 8'd29}: s2wr1 <= 157;
	      {1'd0, 8'd30}: s2wr1 <= 158;
	      {1'd0, 8'd31}: s2wr1 <= 159;
	      {1'd0, 8'd32}: s2wr1 <= 160;
	      {1'd0, 8'd33}: s2wr1 <= 161;
	      {1'd0, 8'd34}: s2wr1 <= 162;
	      {1'd0, 8'd35}: s2wr1 <= 163;
	      {1'd0, 8'd36}: s2wr1 <= 164;
	      {1'd0, 8'd37}: s2wr1 <= 165;
	      {1'd0, 8'd38}: s2wr1 <= 166;
	      {1'd0, 8'd39}: s2wr1 <= 167;
	      {1'd0, 8'd40}: s2wr1 <= 168;
	      {1'd0, 8'd41}: s2wr1 <= 169;
	      {1'd0, 8'd42}: s2wr1 <= 170;
	      {1'd0, 8'd43}: s2wr1 <= 171;
	      {1'd0, 8'd44}: s2wr1 <= 172;
	      {1'd0, 8'd45}: s2wr1 <= 173;
	      {1'd0, 8'd46}: s2wr1 <= 174;
	      {1'd0, 8'd47}: s2wr1 <= 175;
	      {1'd0, 8'd48}: s2wr1 <= 176;
	      {1'd0, 8'd49}: s2wr1 <= 177;
	      {1'd0, 8'd50}: s2wr1 <= 178;
	      {1'd0, 8'd51}: s2wr1 <= 179;
	      {1'd0, 8'd52}: s2wr1 <= 180;
	      {1'd0, 8'd53}: s2wr1 <= 181;
	      {1'd0, 8'd54}: s2wr1 <= 182;
	      {1'd0, 8'd55}: s2wr1 <= 183;
	      {1'd0, 8'd56}: s2wr1 <= 184;
	      {1'd0, 8'd57}: s2wr1 <= 185;
	      {1'd0, 8'd58}: s2wr1 <= 186;
	      {1'd0, 8'd59}: s2wr1 <= 187;
	      {1'd0, 8'd60}: s2wr1 <= 188;
	      {1'd0, 8'd61}: s2wr1 <= 189;
	      {1'd0, 8'd62}: s2wr1 <= 190;
	      {1'd0, 8'd63}: s2wr1 <= 191;
	      {1'd0, 8'd64}: s2wr1 <= 192;
	      {1'd0, 8'd65}: s2wr1 <= 193;
	      {1'd0, 8'd66}: s2wr1 <= 194;
	      {1'd0, 8'd67}: s2wr1 <= 195;
	      {1'd0, 8'd68}: s2wr1 <= 196;
	      {1'd0, 8'd69}: s2wr1 <= 197;
	      {1'd0, 8'd70}: s2wr1 <= 198;
	      {1'd0, 8'd71}: s2wr1 <= 199;
	      {1'd0, 8'd72}: s2wr1 <= 200;
	      {1'd0, 8'd73}: s2wr1 <= 201;
	      {1'd0, 8'd74}: s2wr1 <= 202;
	      {1'd0, 8'd75}: s2wr1 <= 203;
	      {1'd0, 8'd76}: s2wr1 <= 204;
	      {1'd0, 8'd77}: s2wr1 <= 205;
	      {1'd0, 8'd78}: s2wr1 <= 206;
	      {1'd0, 8'd79}: s2wr1 <= 207;
	      {1'd0, 8'd80}: s2wr1 <= 208;
	      {1'd0, 8'd81}: s2wr1 <= 209;
	      {1'd0, 8'd82}: s2wr1 <= 210;
	      {1'd0, 8'd83}: s2wr1 <= 211;
	      {1'd0, 8'd84}: s2wr1 <= 212;
	      {1'd0, 8'd85}: s2wr1 <= 213;
	      {1'd0, 8'd86}: s2wr1 <= 214;
	      {1'd0, 8'd87}: s2wr1 <= 215;
	      {1'd0, 8'd88}: s2wr1 <= 216;
	      {1'd0, 8'd89}: s2wr1 <= 217;
	      {1'd0, 8'd90}: s2wr1 <= 218;
	      {1'd0, 8'd91}: s2wr1 <= 219;
	      {1'd0, 8'd92}: s2wr1 <= 220;
	      {1'd0, 8'd93}: s2wr1 <= 221;
	      {1'd0, 8'd94}: s2wr1 <= 222;
	      {1'd0, 8'd95}: s2wr1 <= 223;
	      {1'd0, 8'd96}: s2wr1 <= 224;
	      {1'd0, 8'd97}: s2wr1 <= 225;
	      {1'd0, 8'd98}: s2wr1 <= 226;
	      {1'd0, 8'd99}: s2wr1 <= 227;
	      {1'd0, 8'd100}: s2wr1 <= 228;
	      {1'd0, 8'd101}: s2wr1 <= 229;
	      {1'd0, 8'd102}: s2wr1 <= 230;
	      {1'd0, 8'd103}: s2wr1 <= 231;
	      {1'd0, 8'd104}: s2wr1 <= 232;
	      {1'd0, 8'd105}: s2wr1 <= 233;
	      {1'd0, 8'd106}: s2wr1 <= 234;
	      {1'd0, 8'd107}: s2wr1 <= 235;
	      {1'd0, 8'd108}: s2wr1 <= 236;
	      {1'd0, 8'd109}: s2wr1 <= 237;
	      {1'd0, 8'd110}: s2wr1 <= 238;
	      {1'd0, 8'd111}: s2wr1 <= 239;
	      {1'd0, 8'd112}: s2wr1 <= 240;
	      {1'd0, 8'd113}: s2wr1 <= 241;
	      {1'd0, 8'd114}: s2wr1 <= 242;
	      {1'd0, 8'd115}: s2wr1 <= 243;
	      {1'd0, 8'd116}: s2wr1 <= 244;
	      {1'd0, 8'd117}: s2wr1 <= 245;
	      {1'd0, 8'd118}: s2wr1 <= 246;
	      {1'd0, 8'd119}: s2wr1 <= 247;
	      {1'd0, 8'd120}: s2wr1 <= 248;
	      {1'd0, 8'd121}: s2wr1 <= 249;
	      {1'd0, 8'd122}: s2wr1 <= 250;
	      {1'd0, 8'd123}: s2wr1 <= 251;
	      {1'd0, 8'd124}: s2wr1 <= 252;
	      {1'd0, 8'd125}: s2wr1 <= 253;
	      {1'd0, 8'd126}: s2wr1 <= 254;
	      {1'd0, 8'd127}: s2wr1 <= 255;
	      {1'd0, 8'd128}: s2wr1 <= 0;
	      {1'd0, 8'd129}: s2wr1 <= 1;
	      {1'd0, 8'd130}: s2wr1 <= 2;
	      {1'd0, 8'd131}: s2wr1 <= 3;
	      {1'd0, 8'd132}: s2wr1 <= 4;
	      {1'd0, 8'd133}: s2wr1 <= 5;
	      {1'd0, 8'd134}: s2wr1 <= 6;
	      {1'd0, 8'd135}: s2wr1 <= 7;
	      {1'd0, 8'd136}: s2wr1 <= 8;
	      {1'd0, 8'd137}: s2wr1 <= 9;
	      {1'd0, 8'd138}: s2wr1 <= 10;
	      {1'd0, 8'd139}: s2wr1 <= 11;
	      {1'd0, 8'd140}: s2wr1 <= 12;
	      {1'd0, 8'd141}: s2wr1 <= 13;
	      {1'd0, 8'd142}: s2wr1 <= 14;
	      {1'd0, 8'd143}: s2wr1 <= 15;
	      {1'd0, 8'd144}: s2wr1 <= 16;
	      {1'd0, 8'd145}: s2wr1 <= 17;
	      {1'd0, 8'd146}: s2wr1 <= 18;
	      {1'd0, 8'd147}: s2wr1 <= 19;
	      {1'd0, 8'd148}: s2wr1 <= 20;
	      {1'd0, 8'd149}: s2wr1 <= 21;
	      {1'd0, 8'd150}: s2wr1 <= 22;
	      {1'd0, 8'd151}: s2wr1 <= 23;
	      {1'd0, 8'd152}: s2wr1 <= 24;
	      {1'd0, 8'd153}: s2wr1 <= 25;
	      {1'd0, 8'd154}: s2wr1 <= 26;
	      {1'd0, 8'd155}: s2wr1 <= 27;
	      {1'd0, 8'd156}: s2wr1 <= 28;
	      {1'd0, 8'd157}: s2wr1 <= 29;
	      {1'd0, 8'd158}: s2wr1 <= 30;
	      {1'd0, 8'd159}: s2wr1 <= 31;
	      {1'd0, 8'd160}: s2wr1 <= 32;
	      {1'd0, 8'd161}: s2wr1 <= 33;
	      {1'd0, 8'd162}: s2wr1 <= 34;
	      {1'd0, 8'd163}: s2wr1 <= 35;
	      {1'd0, 8'd164}: s2wr1 <= 36;
	      {1'd0, 8'd165}: s2wr1 <= 37;
	      {1'd0, 8'd166}: s2wr1 <= 38;
	      {1'd0, 8'd167}: s2wr1 <= 39;
	      {1'd0, 8'd168}: s2wr1 <= 40;
	      {1'd0, 8'd169}: s2wr1 <= 41;
	      {1'd0, 8'd170}: s2wr1 <= 42;
	      {1'd0, 8'd171}: s2wr1 <= 43;
	      {1'd0, 8'd172}: s2wr1 <= 44;
	      {1'd0, 8'd173}: s2wr1 <= 45;
	      {1'd0, 8'd174}: s2wr1 <= 46;
	      {1'd0, 8'd175}: s2wr1 <= 47;
	      {1'd0, 8'd176}: s2wr1 <= 48;
	      {1'd0, 8'd177}: s2wr1 <= 49;
	      {1'd0, 8'd178}: s2wr1 <= 50;
	      {1'd0, 8'd179}: s2wr1 <= 51;
	      {1'd0, 8'd180}: s2wr1 <= 52;
	      {1'd0, 8'd181}: s2wr1 <= 53;
	      {1'd0, 8'd182}: s2wr1 <= 54;
	      {1'd0, 8'd183}: s2wr1 <= 55;
	      {1'd0, 8'd184}: s2wr1 <= 56;
	      {1'd0, 8'd185}: s2wr1 <= 57;
	      {1'd0, 8'd186}: s2wr1 <= 58;
	      {1'd0, 8'd187}: s2wr1 <= 59;
	      {1'd0, 8'd188}: s2wr1 <= 60;
	      {1'd0, 8'd189}: s2wr1 <= 61;
	      {1'd0, 8'd190}: s2wr1 <= 62;
	      {1'd0, 8'd191}: s2wr1 <= 63;
	      {1'd0, 8'd192}: s2wr1 <= 64;
	      {1'd0, 8'd193}: s2wr1 <= 65;
	      {1'd0, 8'd194}: s2wr1 <= 66;
	      {1'd0, 8'd195}: s2wr1 <= 67;
	      {1'd0, 8'd196}: s2wr1 <= 68;
	      {1'd0, 8'd197}: s2wr1 <= 69;
	      {1'd0, 8'd198}: s2wr1 <= 70;
	      {1'd0, 8'd199}: s2wr1 <= 71;
	      {1'd0, 8'd200}: s2wr1 <= 72;
	      {1'd0, 8'd201}: s2wr1 <= 73;
	      {1'd0, 8'd202}: s2wr1 <= 74;
	      {1'd0, 8'd203}: s2wr1 <= 75;
	      {1'd0, 8'd204}: s2wr1 <= 76;
	      {1'd0, 8'd205}: s2wr1 <= 77;
	      {1'd0, 8'd206}: s2wr1 <= 78;
	      {1'd0, 8'd207}: s2wr1 <= 79;
	      {1'd0, 8'd208}: s2wr1 <= 80;
	      {1'd0, 8'd209}: s2wr1 <= 81;
	      {1'd0, 8'd210}: s2wr1 <= 82;
	      {1'd0, 8'd211}: s2wr1 <= 83;
	      {1'd0, 8'd212}: s2wr1 <= 84;
	      {1'd0, 8'd213}: s2wr1 <= 85;
	      {1'd0, 8'd214}: s2wr1 <= 86;
	      {1'd0, 8'd215}: s2wr1 <= 87;
	      {1'd0, 8'd216}: s2wr1 <= 88;
	      {1'd0, 8'd217}: s2wr1 <= 89;
	      {1'd0, 8'd218}: s2wr1 <= 90;
	      {1'd0, 8'd219}: s2wr1 <= 91;
	      {1'd0, 8'd220}: s2wr1 <= 92;
	      {1'd0, 8'd221}: s2wr1 <= 93;
	      {1'd0, 8'd222}: s2wr1 <= 94;
	      {1'd0, 8'd223}: s2wr1 <= 95;
	      {1'd0, 8'd224}: s2wr1 <= 96;
	      {1'd0, 8'd225}: s2wr1 <= 97;
	      {1'd0, 8'd226}: s2wr1 <= 98;
	      {1'd0, 8'd227}: s2wr1 <= 99;
	      {1'd0, 8'd228}: s2wr1 <= 100;
	      {1'd0, 8'd229}: s2wr1 <= 101;
	      {1'd0, 8'd230}: s2wr1 <= 102;
	      {1'd0, 8'd231}: s2wr1 <= 103;
	      {1'd0, 8'd232}: s2wr1 <= 104;
	      {1'd0, 8'd233}: s2wr1 <= 105;
	      {1'd0, 8'd234}: s2wr1 <= 106;
	      {1'd0, 8'd235}: s2wr1 <= 107;
	      {1'd0, 8'd236}: s2wr1 <= 108;
	      {1'd0, 8'd237}: s2wr1 <= 109;
	      {1'd0, 8'd238}: s2wr1 <= 110;
	      {1'd0, 8'd239}: s2wr1 <= 111;
	      {1'd0, 8'd240}: s2wr1 <= 112;
	      {1'd0, 8'd241}: s2wr1 <= 113;
	      {1'd0, 8'd242}: s2wr1 <= 114;
	      {1'd0, 8'd243}: s2wr1 <= 115;
	      {1'd0, 8'd244}: s2wr1 <= 116;
	      {1'd0, 8'd245}: s2wr1 <= 117;
	      {1'd0, 8'd246}: s2wr1 <= 118;
	      {1'd0, 8'd247}: s2wr1 <= 119;
	      {1'd0, 8'd248}: s2wr1 <= 120;
	      {1'd0, 8'd249}: s2wr1 <= 121;
	      {1'd0, 8'd250}: s2wr1 <= 122;
	      {1'd0, 8'd251}: s2wr1 <= 123;
	      {1'd0, 8'd252}: s2wr1 <= 124;
	      {1'd0, 8'd253}: s2wr1 <= 125;
	      {1'd0, 8'd254}: s2wr1 <= 126;
	      {1'd0, 8'd255}: s2wr1 <= 127;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr1 is "distributed"
   always @(posedge clk) begin
      case({tm0_dd, writeCycle})
	      {1'd0, 8'd0}: s2wr2 <= 64;
	      {1'd0, 8'd1}: s2wr2 <= 65;
	      {1'd0, 8'd2}: s2wr2 <= 66;
	      {1'd0, 8'd3}: s2wr2 <= 67;
	      {1'd0, 8'd4}: s2wr2 <= 68;
	      {1'd0, 8'd5}: s2wr2 <= 69;
	      {1'd0, 8'd6}: s2wr2 <= 70;
	      {1'd0, 8'd7}: s2wr2 <= 71;
	      {1'd0, 8'd8}: s2wr2 <= 72;
	      {1'd0, 8'd9}: s2wr2 <= 73;
	      {1'd0, 8'd10}: s2wr2 <= 74;
	      {1'd0, 8'd11}: s2wr2 <= 75;
	      {1'd0, 8'd12}: s2wr2 <= 76;
	      {1'd0, 8'd13}: s2wr2 <= 77;
	      {1'd0, 8'd14}: s2wr2 <= 78;
	      {1'd0, 8'd15}: s2wr2 <= 79;
	      {1'd0, 8'd16}: s2wr2 <= 80;
	      {1'd0, 8'd17}: s2wr2 <= 81;
	      {1'd0, 8'd18}: s2wr2 <= 82;
	      {1'd0, 8'd19}: s2wr2 <= 83;
	      {1'd0, 8'd20}: s2wr2 <= 84;
	      {1'd0, 8'd21}: s2wr2 <= 85;
	      {1'd0, 8'd22}: s2wr2 <= 86;
	      {1'd0, 8'd23}: s2wr2 <= 87;
	      {1'd0, 8'd24}: s2wr2 <= 88;
	      {1'd0, 8'd25}: s2wr2 <= 89;
	      {1'd0, 8'd26}: s2wr2 <= 90;
	      {1'd0, 8'd27}: s2wr2 <= 91;
	      {1'd0, 8'd28}: s2wr2 <= 92;
	      {1'd0, 8'd29}: s2wr2 <= 93;
	      {1'd0, 8'd30}: s2wr2 <= 94;
	      {1'd0, 8'd31}: s2wr2 <= 95;
	      {1'd0, 8'd32}: s2wr2 <= 96;
	      {1'd0, 8'd33}: s2wr2 <= 97;
	      {1'd0, 8'd34}: s2wr2 <= 98;
	      {1'd0, 8'd35}: s2wr2 <= 99;
	      {1'd0, 8'd36}: s2wr2 <= 100;
	      {1'd0, 8'd37}: s2wr2 <= 101;
	      {1'd0, 8'd38}: s2wr2 <= 102;
	      {1'd0, 8'd39}: s2wr2 <= 103;
	      {1'd0, 8'd40}: s2wr2 <= 104;
	      {1'd0, 8'd41}: s2wr2 <= 105;
	      {1'd0, 8'd42}: s2wr2 <= 106;
	      {1'd0, 8'd43}: s2wr2 <= 107;
	      {1'd0, 8'd44}: s2wr2 <= 108;
	      {1'd0, 8'd45}: s2wr2 <= 109;
	      {1'd0, 8'd46}: s2wr2 <= 110;
	      {1'd0, 8'd47}: s2wr2 <= 111;
	      {1'd0, 8'd48}: s2wr2 <= 112;
	      {1'd0, 8'd49}: s2wr2 <= 113;
	      {1'd0, 8'd50}: s2wr2 <= 114;
	      {1'd0, 8'd51}: s2wr2 <= 115;
	      {1'd0, 8'd52}: s2wr2 <= 116;
	      {1'd0, 8'd53}: s2wr2 <= 117;
	      {1'd0, 8'd54}: s2wr2 <= 118;
	      {1'd0, 8'd55}: s2wr2 <= 119;
	      {1'd0, 8'd56}: s2wr2 <= 120;
	      {1'd0, 8'd57}: s2wr2 <= 121;
	      {1'd0, 8'd58}: s2wr2 <= 122;
	      {1'd0, 8'd59}: s2wr2 <= 123;
	      {1'd0, 8'd60}: s2wr2 <= 124;
	      {1'd0, 8'd61}: s2wr2 <= 125;
	      {1'd0, 8'd62}: s2wr2 <= 126;
	      {1'd0, 8'd63}: s2wr2 <= 127;
	      {1'd0, 8'd64}: s2wr2 <= 0;
	      {1'd0, 8'd65}: s2wr2 <= 1;
	      {1'd0, 8'd66}: s2wr2 <= 2;
	      {1'd0, 8'd67}: s2wr2 <= 3;
	      {1'd0, 8'd68}: s2wr2 <= 4;
	      {1'd0, 8'd69}: s2wr2 <= 5;
	      {1'd0, 8'd70}: s2wr2 <= 6;
	      {1'd0, 8'd71}: s2wr2 <= 7;
	      {1'd0, 8'd72}: s2wr2 <= 8;
	      {1'd0, 8'd73}: s2wr2 <= 9;
	      {1'd0, 8'd74}: s2wr2 <= 10;
	      {1'd0, 8'd75}: s2wr2 <= 11;
	      {1'd0, 8'd76}: s2wr2 <= 12;
	      {1'd0, 8'd77}: s2wr2 <= 13;
	      {1'd0, 8'd78}: s2wr2 <= 14;
	      {1'd0, 8'd79}: s2wr2 <= 15;
	      {1'd0, 8'd80}: s2wr2 <= 16;
	      {1'd0, 8'd81}: s2wr2 <= 17;
	      {1'd0, 8'd82}: s2wr2 <= 18;
	      {1'd0, 8'd83}: s2wr2 <= 19;
	      {1'd0, 8'd84}: s2wr2 <= 20;
	      {1'd0, 8'd85}: s2wr2 <= 21;
	      {1'd0, 8'd86}: s2wr2 <= 22;
	      {1'd0, 8'd87}: s2wr2 <= 23;
	      {1'd0, 8'd88}: s2wr2 <= 24;
	      {1'd0, 8'd89}: s2wr2 <= 25;
	      {1'd0, 8'd90}: s2wr2 <= 26;
	      {1'd0, 8'd91}: s2wr2 <= 27;
	      {1'd0, 8'd92}: s2wr2 <= 28;
	      {1'd0, 8'd93}: s2wr2 <= 29;
	      {1'd0, 8'd94}: s2wr2 <= 30;
	      {1'd0, 8'd95}: s2wr2 <= 31;
	      {1'd0, 8'd96}: s2wr2 <= 32;
	      {1'd0, 8'd97}: s2wr2 <= 33;
	      {1'd0, 8'd98}: s2wr2 <= 34;
	      {1'd0, 8'd99}: s2wr2 <= 35;
	      {1'd0, 8'd100}: s2wr2 <= 36;
	      {1'd0, 8'd101}: s2wr2 <= 37;
	      {1'd0, 8'd102}: s2wr2 <= 38;
	      {1'd0, 8'd103}: s2wr2 <= 39;
	      {1'd0, 8'd104}: s2wr2 <= 40;
	      {1'd0, 8'd105}: s2wr2 <= 41;
	      {1'd0, 8'd106}: s2wr2 <= 42;
	      {1'd0, 8'd107}: s2wr2 <= 43;
	      {1'd0, 8'd108}: s2wr2 <= 44;
	      {1'd0, 8'd109}: s2wr2 <= 45;
	      {1'd0, 8'd110}: s2wr2 <= 46;
	      {1'd0, 8'd111}: s2wr2 <= 47;
	      {1'd0, 8'd112}: s2wr2 <= 48;
	      {1'd0, 8'd113}: s2wr2 <= 49;
	      {1'd0, 8'd114}: s2wr2 <= 50;
	      {1'd0, 8'd115}: s2wr2 <= 51;
	      {1'd0, 8'd116}: s2wr2 <= 52;
	      {1'd0, 8'd117}: s2wr2 <= 53;
	      {1'd0, 8'd118}: s2wr2 <= 54;
	      {1'd0, 8'd119}: s2wr2 <= 55;
	      {1'd0, 8'd120}: s2wr2 <= 56;
	      {1'd0, 8'd121}: s2wr2 <= 57;
	      {1'd0, 8'd122}: s2wr2 <= 58;
	      {1'd0, 8'd123}: s2wr2 <= 59;
	      {1'd0, 8'd124}: s2wr2 <= 60;
	      {1'd0, 8'd125}: s2wr2 <= 61;
	      {1'd0, 8'd126}: s2wr2 <= 62;
	      {1'd0, 8'd127}: s2wr2 <= 63;
	      {1'd0, 8'd128}: s2wr2 <= 192;
	      {1'd0, 8'd129}: s2wr2 <= 193;
	      {1'd0, 8'd130}: s2wr2 <= 194;
	      {1'd0, 8'd131}: s2wr2 <= 195;
	      {1'd0, 8'd132}: s2wr2 <= 196;
	      {1'd0, 8'd133}: s2wr2 <= 197;
	      {1'd0, 8'd134}: s2wr2 <= 198;
	      {1'd0, 8'd135}: s2wr2 <= 199;
	      {1'd0, 8'd136}: s2wr2 <= 200;
	      {1'd0, 8'd137}: s2wr2 <= 201;
	      {1'd0, 8'd138}: s2wr2 <= 202;
	      {1'd0, 8'd139}: s2wr2 <= 203;
	      {1'd0, 8'd140}: s2wr2 <= 204;
	      {1'd0, 8'd141}: s2wr2 <= 205;
	      {1'd0, 8'd142}: s2wr2 <= 206;
	      {1'd0, 8'd143}: s2wr2 <= 207;
	      {1'd0, 8'd144}: s2wr2 <= 208;
	      {1'd0, 8'd145}: s2wr2 <= 209;
	      {1'd0, 8'd146}: s2wr2 <= 210;
	      {1'd0, 8'd147}: s2wr2 <= 211;
	      {1'd0, 8'd148}: s2wr2 <= 212;
	      {1'd0, 8'd149}: s2wr2 <= 213;
	      {1'd0, 8'd150}: s2wr2 <= 214;
	      {1'd0, 8'd151}: s2wr2 <= 215;
	      {1'd0, 8'd152}: s2wr2 <= 216;
	      {1'd0, 8'd153}: s2wr2 <= 217;
	      {1'd0, 8'd154}: s2wr2 <= 218;
	      {1'd0, 8'd155}: s2wr2 <= 219;
	      {1'd0, 8'd156}: s2wr2 <= 220;
	      {1'd0, 8'd157}: s2wr2 <= 221;
	      {1'd0, 8'd158}: s2wr2 <= 222;
	      {1'd0, 8'd159}: s2wr2 <= 223;
	      {1'd0, 8'd160}: s2wr2 <= 224;
	      {1'd0, 8'd161}: s2wr2 <= 225;
	      {1'd0, 8'd162}: s2wr2 <= 226;
	      {1'd0, 8'd163}: s2wr2 <= 227;
	      {1'd0, 8'd164}: s2wr2 <= 228;
	      {1'd0, 8'd165}: s2wr2 <= 229;
	      {1'd0, 8'd166}: s2wr2 <= 230;
	      {1'd0, 8'd167}: s2wr2 <= 231;
	      {1'd0, 8'd168}: s2wr2 <= 232;
	      {1'd0, 8'd169}: s2wr2 <= 233;
	      {1'd0, 8'd170}: s2wr2 <= 234;
	      {1'd0, 8'd171}: s2wr2 <= 235;
	      {1'd0, 8'd172}: s2wr2 <= 236;
	      {1'd0, 8'd173}: s2wr2 <= 237;
	      {1'd0, 8'd174}: s2wr2 <= 238;
	      {1'd0, 8'd175}: s2wr2 <= 239;
	      {1'd0, 8'd176}: s2wr2 <= 240;
	      {1'd0, 8'd177}: s2wr2 <= 241;
	      {1'd0, 8'd178}: s2wr2 <= 242;
	      {1'd0, 8'd179}: s2wr2 <= 243;
	      {1'd0, 8'd180}: s2wr2 <= 244;
	      {1'd0, 8'd181}: s2wr2 <= 245;
	      {1'd0, 8'd182}: s2wr2 <= 246;
	      {1'd0, 8'd183}: s2wr2 <= 247;
	      {1'd0, 8'd184}: s2wr2 <= 248;
	      {1'd0, 8'd185}: s2wr2 <= 249;
	      {1'd0, 8'd186}: s2wr2 <= 250;
	      {1'd0, 8'd187}: s2wr2 <= 251;
	      {1'd0, 8'd188}: s2wr2 <= 252;
	      {1'd0, 8'd189}: s2wr2 <= 253;
	      {1'd0, 8'd190}: s2wr2 <= 254;
	      {1'd0, 8'd191}: s2wr2 <= 255;
	      {1'd0, 8'd192}: s2wr2 <= 128;
	      {1'd0, 8'd193}: s2wr2 <= 129;
	      {1'd0, 8'd194}: s2wr2 <= 130;
	      {1'd0, 8'd195}: s2wr2 <= 131;
	      {1'd0, 8'd196}: s2wr2 <= 132;
	      {1'd0, 8'd197}: s2wr2 <= 133;
	      {1'd0, 8'd198}: s2wr2 <= 134;
	      {1'd0, 8'd199}: s2wr2 <= 135;
	      {1'd0, 8'd200}: s2wr2 <= 136;
	      {1'd0, 8'd201}: s2wr2 <= 137;
	      {1'd0, 8'd202}: s2wr2 <= 138;
	      {1'd0, 8'd203}: s2wr2 <= 139;
	      {1'd0, 8'd204}: s2wr2 <= 140;
	      {1'd0, 8'd205}: s2wr2 <= 141;
	      {1'd0, 8'd206}: s2wr2 <= 142;
	      {1'd0, 8'd207}: s2wr2 <= 143;
	      {1'd0, 8'd208}: s2wr2 <= 144;
	      {1'd0, 8'd209}: s2wr2 <= 145;
	      {1'd0, 8'd210}: s2wr2 <= 146;
	      {1'd0, 8'd211}: s2wr2 <= 147;
	      {1'd0, 8'd212}: s2wr2 <= 148;
	      {1'd0, 8'd213}: s2wr2 <= 149;
	      {1'd0, 8'd214}: s2wr2 <= 150;
	      {1'd0, 8'd215}: s2wr2 <= 151;
	      {1'd0, 8'd216}: s2wr2 <= 152;
	      {1'd0, 8'd217}: s2wr2 <= 153;
	      {1'd0, 8'd218}: s2wr2 <= 154;
	      {1'd0, 8'd219}: s2wr2 <= 155;
	      {1'd0, 8'd220}: s2wr2 <= 156;
	      {1'd0, 8'd221}: s2wr2 <= 157;
	      {1'd0, 8'd222}: s2wr2 <= 158;
	      {1'd0, 8'd223}: s2wr2 <= 159;
	      {1'd0, 8'd224}: s2wr2 <= 160;
	      {1'd0, 8'd225}: s2wr2 <= 161;
	      {1'd0, 8'd226}: s2wr2 <= 162;
	      {1'd0, 8'd227}: s2wr2 <= 163;
	      {1'd0, 8'd228}: s2wr2 <= 164;
	      {1'd0, 8'd229}: s2wr2 <= 165;
	      {1'd0, 8'd230}: s2wr2 <= 166;
	      {1'd0, 8'd231}: s2wr2 <= 167;
	      {1'd0, 8'd232}: s2wr2 <= 168;
	      {1'd0, 8'd233}: s2wr2 <= 169;
	      {1'd0, 8'd234}: s2wr2 <= 170;
	      {1'd0, 8'd235}: s2wr2 <= 171;
	      {1'd0, 8'd236}: s2wr2 <= 172;
	      {1'd0, 8'd237}: s2wr2 <= 173;
	      {1'd0, 8'd238}: s2wr2 <= 174;
	      {1'd0, 8'd239}: s2wr2 <= 175;
	      {1'd0, 8'd240}: s2wr2 <= 176;
	      {1'd0, 8'd241}: s2wr2 <= 177;
	      {1'd0, 8'd242}: s2wr2 <= 178;
	      {1'd0, 8'd243}: s2wr2 <= 179;
	      {1'd0, 8'd244}: s2wr2 <= 180;
	      {1'd0, 8'd245}: s2wr2 <= 181;
	      {1'd0, 8'd246}: s2wr2 <= 182;
	      {1'd0, 8'd247}: s2wr2 <= 183;
	      {1'd0, 8'd248}: s2wr2 <= 184;
	      {1'd0, 8'd249}: s2wr2 <= 185;
	      {1'd0, 8'd250}: s2wr2 <= 186;
	      {1'd0, 8'd251}: s2wr2 <= 187;
	      {1'd0, 8'd252}: s2wr2 <= 188;
	      {1'd0, 8'd253}: s2wr2 <= 189;
	      {1'd0, 8'd254}: s2wr2 <= 190;
	      {1'd0, 8'd255}: s2wr2 <= 191;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr2 is "distributed"
   always @(posedge clk) begin
      case({tm0_dd, writeCycle})
	      {1'd0, 8'd0}: s2wr3 <= 0;
	      {1'd0, 8'd1}: s2wr3 <= 1;
	      {1'd0, 8'd2}: s2wr3 <= 2;
	      {1'd0, 8'd3}: s2wr3 <= 3;
	      {1'd0, 8'd4}: s2wr3 <= 4;
	      {1'd0, 8'd5}: s2wr3 <= 5;
	      {1'd0, 8'd6}: s2wr3 <= 6;
	      {1'd0, 8'd7}: s2wr3 <= 7;
	      {1'd0, 8'd8}: s2wr3 <= 8;
	      {1'd0, 8'd9}: s2wr3 <= 9;
	      {1'd0, 8'd10}: s2wr3 <= 10;
	      {1'd0, 8'd11}: s2wr3 <= 11;
	      {1'd0, 8'd12}: s2wr3 <= 12;
	      {1'd0, 8'd13}: s2wr3 <= 13;
	      {1'd0, 8'd14}: s2wr3 <= 14;
	      {1'd0, 8'd15}: s2wr3 <= 15;
	      {1'd0, 8'd16}: s2wr3 <= 16;
	      {1'd0, 8'd17}: s2wr3 <= 17;
	      {1'd0, 8'd18}: s2wr3 <= 18;
	      {1'd0, 8'd19}: s2wr3 <= 19;
	      {1'd0, 8'd20}: s2wr3 <= 20;
	      {1'd0, 8'd21}: s2wr3 <= 21;
	      {1'd0, 8'd22}: s2wr3 <= 22;
	      {1'd0, 8'd23}: s2wr3 <= 23;
	      {1'd0, 8'd24}: s2wr3 <= 24;
	      {1'd0, 8'd25}: s2wr3 <= 25;
	      {1'd0, 8'd26}: s2wr3 <= 26;
	      {1'd0, 8'd27}: s2wr3 <= 27;
	      {1'd0, 8'd28}: s2wr3 <= 28;
	      {1'd0, 8'd29}: s2wr3 <= 29;
	      {1'd0, 8'd30}: s2wr3 <= 30;
	      {1'd0, 8'd31}: s2wr3 <= 31;
	      {1'd0, 8'd32}: s2wr3 <= 32;
	      {1'd0, 8'd33}: s2wr3 <= 33;
	      {1'd0, 8'd34}: s2wr3 <= 34;
	      {1'd0, 8'd35}: s2wr3 <= 35;
	      {1'd0, 8'd36}: s2wr3 <= 36;
	      {1'd0, 8'd37}: s2wr3 <= 37;
	      {1'd0, 8'd38}: s2wr3 <= 38;
	      {1'd0, 8'd39}: s2wr3 <= 39;
	      {1'd0, 8'd40}: s2wr3 <= 40;
	      {1'd0, 8'd41}: s2wr3 <= 41;
	      {1'd0, 8'd42}: s2wr3 <= 42;
	      {1'd0, 8'd43}: s2wr3 <= 43;
	      {1'd0, 8'd44}: s2wr3 <= 44;
	      {1'd0, 8'd45}: s2wr3 <= 45;
	      {1'd0, 8'd46}: s2wr3 <= 46;
	      {1'd0, 8'd47}: s2wr3 <= 47;
	      {1'd0, 8'd48}: s2wr3 <= 48;
	      {1'd0, 8'd49}: s2wr3 <= 49;
	      {1'd0, 8'd50}: s2wr3 <= 50;
	      {1'd0, 8'd51}: s2wr3 <= 51;
	      {1'd0, 8'd52}: s2wr3 <= 52;
	      {1'd0, 8'd53}: s2wr3 <= 53;
	      {1'd0, 8'd54}: s2wr3 <= 54;
	      {1'd0, 8'd55}: s2wr3 <= 55;
	      {1'd0, 8'd56}: s2wr3 <= 56;
	      {1'd0, 8'd57}: s2wr3 <= 57;
	      {1'd0, 8'd58}: s2wr3 <= 58;
	      {1'd0, 8'd59}: s2wr3 <= 59;
	      {1'd0, 8'd60}: s2wr3 <= 60;
	      {1'd0, 8'd61}: s2wr3 <= 61;
	      {1'd0, 8'd62}: s2wr3 <= 62;
	      {1'd0, 8'd63}: s2wr3 <= 63;
	      {1'd0, 8'd64}: s2wr3 <= 64;
	      {1'd0, 8'd65}: s2wr3 <= 65;
	      {1'd0, 8'd66}: s2wr3 <= 66;
	      {1'd0, 8'd67}: s2wr3 <= 67;
	      {1'd0, 8'd68}: s2wr3 <= 68;
	      {1'd0, 8'd69}: s2wr3 <= 69;
	      {1'd0, 8'd70}: s2wr3 <= 70;
	      {1'd0, 8'd71}: s2wr3 <= 71;
	      {1'd0, 8'd72}: s2wr3 <= 72;
	      {1'd0, 8'd73}: s2wr3 <= 73;
	      {1'd0, 8'd74}: s2wr3 <= 74;
	      {1'd0, 8'd75}: s2wr3 <= 75;
	      {1'd0, 8'd76}: s2wr3 <= 76;
	      {1'd0, 8'd77}: s2wr3 <= 77;
	      {1'd0, 8'd78}: s2wr3 <= 78;
	      {1'd0, 8'd79}: s2wr3 <= 79;
	      {1'd0, 8'd80}: s2wr3 <= 80;
	      {1'd0, 8'd81}: s2wr3 <= 81;
	      {1'd0, 8'd82}: s2wr3 <= 82;
	      {1'd0, 8'd83}: s2wr3 <= 83;
	      {1'd0, 8'd84}: s2wr3 <= 84;
	      {1'd0, 8'd85}: s2wr3 <= 85;
	      {1'd0, 8'd86}: s2wr3 <= 86;
	      {1'd0, 8'd87}: s2wr3 <= 87;
	      {1'd0, 8'd88}: s2wr3 <= 88;
	      {1'd0, 8'd89}: s2wr3 <= 89;
	      {1'd0, 8'd90}: s2wr3 <= 90;
	      {1'd0, 8'd91}: s2wr3 <= 91;
	      {1'd0, 8'd92}: s2wr3 <= 92;
	      {1'd0, 8'd93}: s2wr3 <= 93;
	      {1'd0, 8'd94}: s2wr3 <= 94;
	      {1'd0, 8'd95}: s2wr3 <= 95;
	      {1'd0, 8'd96}: s2wr3 <= 96;
	      {1'd0, 8'd97}: s2wr3 <= 97;
	      {1'd0, 8'd98}: s2wr3 <= 98;
	      {1'd0, 8'd99}: s2wr3 <= 99;
	      {1'd0, 8'd100}: s2wr3 <= 100;
	      {1'd0, 8'd101}: s2wr3 <= 101;
	      {1'd0, 8'd102}: s2wr3 <= 102;
	      {1'd0, 8'd103}: s2wr3 <= 103;
	      {1'd0, 8'd104}: s2wr3 <= 104;
	      {1'd0, 8'd105}: s2wr3 <= 105;
	      {1'd0, 8'd106}: s2wr3 <= 106;
	      {1'd0, 8'd107}: s2wr3 <= 107;
	      {1'd0, 8'd108}: s2wr3 <= 108;
	      {1'd0, 8'd109}: s2wr3 <= 109;
	      {1'd0, 8'd110}: s2wr3 <= 110;
	      {1'd0, 8'd111}: s2wr3 <= 111;
	      {1'd0, 8'd112}: s2wr3 <= 112;
	      {1'd0, 8'd113}: s2wr3 <= 113;
	      {1'd0, 8'd114}: s2wr3 <= 114;
	      {1'd0, 8'd115}: s2wr3 <= 115;
	      {1'd0, 8'd116}: s2wr3 <= 116;
	      {1'd0, 8'd117}: s2wr3 <= 117;
	      {1'd0, 8'd118}: s2wr3 <= 118;
	      {1'd0, 8'd119}: s2wr3 <= 119;
	      {1'd0, 8'd120}: s2wr3 <= 120;
	      {1'd0, 8'd121}: s2wr3 <= 121;
	      {1'd0, 8'd122}: s2wr3 <= 122;
	      {1'd0, 8'd123}: s2wr3 <= 123;
	      {1'd0, 8'd124}: s2wr3 <= 124;
	      {1'd0, 8'd125}: s2wr3 <= 125;
	      {1'd0, 8'd126}: s2wr3 <= 126;
	      {1'd0, 8'd127}: s2wr3 <= 127;
	      {1'd0, 8'd128}: s2wr3 <= 128;
	      {1'd0, 8'd129}: s2wr3 <= 129;
	      {1'd0, 8'd130}: s2wr3 <= 130;
	      {1'd0, 8'd131}: s2wr3 <= 131;
	      {1'd0, 8'd132}: s2wr3 <= 132;
	      {1'd0, 8'd133}: s2wr3 <= 133;
	      {1'd0, 8'd134}: s2wr3 <= 134;
	      {1'd0, 8'd135}: s2wr3 <= 135;
	      {1'd0, 8'd136}: s2wr3 <= 136;
	      {1'd0, 8'd137}: s2wr3 <= 137;
	      {1'd0, 8'd138}: s2wr3 <= 138;
	      {1'd0, 8'd139}: s2wr3 <= 139;
	      {1'd0, 8'd140}: s2wr3 <= 140;
	      {1'd0, 8'd141}: s2wr3 <= 141;
	      {1'd0, 8'd142}: s2wr3 <= 142;
	      {1'd0, 8'd143}: s2wr3 <= 143;
	      {1'd0, 8'd144}: s2wr3 <= 144;
	      {1'd0, 8'd145}: s2wr3 <= 145;
	      {1'd0, 8'd146}: s2wr3 <= 146;
	      {1'd0, 8'd147}: s2wr3 <= 147;
	      {1'd0, 8'd148}: s2wr3 <= 148;
	      {1'd0, 8'd149}: s2wr3 <= 149;
	      {1'd0, 8'd150}: s2wr3 <= 150;
	      {1'd0, 8'd151}: s2wr3 <= 151;
	      {1'd0, 8'd152}: s2wr3 <= 152;
	      {1'd0, 8'd153}: s2wr3 <= 153;
	      {1'd0, 8'd154}: s2wr3 <= 154;
	      {1'd0, 8'd155}: s2wr3 <= 155;
	      {1'd0, 8'd156}: s2wr3 <= 156;
	      {1'd0, 8'd157}: s2wr3 <= 157;
	      {1'd0, 8'd158}: s2wr3 <= 158;
	      {1'd0, 8'd159}: s2wr3 <= 159;
	      {1'd0, 8'd160}: s2wr3 <= 160;
	      {1'd0, 8'd161}: s2wr3 <= 161;
	      {1'd0, 8'd162}: s2wr3 <= 162;
	      {1'd0, 8'd163}: s2wr3 <= 163;
	      {1'd0, 8'd164}: s2wr3 <= 164;
	      {1'd0, 8'd165}: s2wr3 <= 165;
	      {1'd0, 8'd166}: s2wr3 <= 166;
	      {1'd0, 8'd167}: s2wr3 <= 167;
	      {1'd0, 8'd168}: s2wr3 <= 168;
	      {1'd0, 8'd169}: s2wr3 <= 169;
	      {1'd0, 8'd170}: s2wr3 <= 170;
	      {1'd0, 8'd171}: s2wr3 <= 171;
	      {1'd0, 8'd172}: s2wr3 <= 172;
	      {1'd0, 8'd173}: s2wr3 <= 173;
	      {1'd0, 8'd174}: s2wr3 <= 174;
	      {1'd0, 8'd175}: s2wr3 <= 175;
	      {1'd0, 8'd176}: s2wr3 <= 176;
	      {1'd0, 8'd177}: s2wr3 <= 177;
	      {1'd0, 8'd178}: s2wr3 <= 178;
	      {1'd0, 8'd179}: s2wr3 <= 179;
	      {1'd0, 8'd180}: s2wr3 <= 180;
	      {1'd0, 8'd181}: s2wr3 <= 181;
	      {1'd0, 8'd182}: s2wr3 <= 182;
	      {1'd0, 8'd183}: s2wr3 <= 183;
	      {1'd0, 8'd184}: s2wr3 <= 184;
	      {1'd0, 8'd185}: s2wr3 <= 185;
	      {1'd0, 8'd186}: s2wr3 <= 186;
	      {1'd0, 8'd187}: s2wr3 <= 187;
	      {1'd0, 8'd188}: s2wr3 <= 188;
	      {1'd0, 8'd189}: s2wr3 <= 189;
	      {1'd0, 8'd190}: s2wr3 <= 190;
	      {1'd0, 8'd191}: s2wr3 <= 191;
	      {1'd0, 8'd192}: s2wr3 <= 192;
	      {1'd0, 8'd193}: s2wr3 <= 193;
	      {1'd0, 8'd194}: s2wr3 <= 194;
	      {1'd0, 8'd195}: s2wr3 <= 195;
	      {1'd0, 8'd196}: s2wr3 <= 196;
	      {1'd0, 8'd197}: s2wr3 <= 197;
	      {1'd0, 8'd198}: s2wr3 <= 198;
	      {1'd0, 8'd199}: s2wr3 <= 199;
	      {1'd0, 8'd200}: s2wr3 <= 200;
	      {1'd0, 8'd201}: s2wr3 <= 201;
	      {1'd0, 8'd202}: s2wr3 <= 202;
	      {1'd0, 8'd203}: s2wr3 <= 203;
	      {1'd0, 8'd204}: s2wr3 <= 204;
	      {1'd0, 8'd205}: s2wr3 <= 205;
	      {1'd0, 8'd206}: s2wr3 <= 206;
	      {1'd0, 8'd207}: s2wr3 <= 207;
	      {1'd0, 8'd208}: s2wr3 <= 208;
	      {1'd0, 8'd209}: s2wr3 <= 209;
	      {1'd0, 8'd210}: s2wr3 <= 210;
	      {1'd0, 8'd211}: s2wr3 <= 211;
	      {1'd0, 8'd212}: s2wr3 <= 212;
	      {1'd0, 8'd213}: s2wr3 <= 213;
	      {1'd0, 8'd214}: s2wr3 <= 214;
	      {1'd0, 8'd215}: s2wr3 <= 215;
	      {1'd0, 8'd216}: s2wr3 <= 216;
	      {1'd0, 8'd217}: s2wr3 <= 217;
	      {1'd0, 8'd218}: s2wr3 <= 218;
	      {1'd0, 8'd219}: s2wr3 <= 219;
	      {1'd0, 8'd220}: s2wr3 <= 220;
	      {1'd0, 8'd221}: s2wr3 <= 221;
	      {1'd0, 8'd222}: s2wr3 <= 222;
	      {1'd0, 8'd223}: s2wr3 <= 223;
	      {1'd0, 8'd224}: s2wr3 <= 224;
	      {1'd0, 8'd225}: s2wr3 <= 225;
	      {1'd0, 8'd226}: s2wr3 <= 226;
	      {1'd0, 8'd227}: s2wr3 <= 227;
	      {1'd0, 8'd228}: s2wr3 <= 228;
	      {1'd0, 8'd229}: s2wr3 <= 229;
	      {1'd0, 8'd230}: s2wr3 <= 230;
	      {1'd0, 8'd231}: s2wr3 <= 231;
	      {1'd0, 8'd232}: s2wr3 <= 232;
	      {1'd0, 8'd233}: s2wr3 <= 233;
	      {1'd0, 8'd234}: s2wr3 <= 234;
	      {1'd0, 8'd235}: s2wr3 <= 235;
	      {1'd0, 8'd236}: s2wr3 <= 236;
	      {1'd0, 8'd237}: s2wr3 <= 237;
	      {1'd0, 8'd238}: s2wr3 <= 238;
	      {1'd0, 8'd239}: s2wr3 <= 239;
	      {1'd0, 8'd240}: s2wr3 <= 240;
	      {1'd0, 8'd241}: s2wr3 <= 241;
	      {1'd0, 8'd242}: s2wr3 <= 242;
	      {1'd0, 8'd243}: s2wr3 <= 243;
	      {1'd0, 8'd244}: s2wr3 <= 244;
	      {1'd0, 8'd245}: s2wr3 <= 245;
	      {1'd0, 8'd246}: s2wr3 <= 246;
	      {1'd0, 8'd247}: s2wr3 <= 247;
	      {1'd0, 8'd248}: s2wr3 <= 248;
	      {1'd0, 8'd249}: s2wr3 <= 249;
	      {1'd0, 8'd250}: s2wr3 <= 250;
	      {1'd0, 8'd251}: s2wr3 <= 251;
	      {1'd0, 8'd252}: s2wr3 <= 252;
	      {1'd0, 8'd253}: s2wr3 <= 253;
	      {1'd0, 8'd254}: s2wr3 <= 254;
	      {1'd0, 8'd255}: s2wr3 <= 255;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr3 is "distributed"
endmodule




module memMod(in, out, inAddr, outAddr, writeSel, clk);
   
   parameter depth=1024, width=16, logDepth=10;
   
   input [width-1:0]    in;
   input [logDepth-1:0] inAddr, outAddr;
   input 	        writeSel, clk;
   output [width-1:0] 	out;
   reg [width-1:0] 	out;
   
   // synthesis attribute ram_style of mem is block

   reg [width-1:0] 	mem[depth-1:0]; 
   
   always @(posedge clk) begin
      out <= mem[outAddr];
      
      if (writeSel)
        mem[inAddr] <= in;
   end
endmodule 



module memMod_dist(in, out, inAddr, outAddr, writeSel, clk);
   
   parameter depth=1024, width=16, logDepth=10;
   
   input [width-1:0]    in;
   input [logDepth-1:0] inAddr, outAddr;
   input 	        writeSel, clk;
   output [width-1:0] 	out;
   reg [width-1:0] 	out;
   
   // synthesis attribute ram_style of mem is distributed

   reg [width-1:0] 	mem[depth-1:0]; 
   
   always @(posedge clk) begin
      out <= mem[outAddr];
      
      if (writeSel)
        mem[inAddr] <= in;
   end
endmodule 

module shiftRegFIFO(X, Y, clk);
   parameter depth=1, width=1;

   output [width-1:0] Y;
   input  [width-1:0] X;
   input              clk;

   reg [width-1:0]    mem [depth-1:0];
   integer            index;

   assign Y = mem[depth-1];

   always @ (posedge clk) begin
      for(index=1;index<depth;index=index+1) begin
         mem[index] <= mem[index-1];
      end
      mem[0]<=X;
   end
endmodule

module nextReg(X, Y, reset, clk);
   parameter depth=2, logDepth=1;

   output Y;
   input X;
   input              clk, reset;
   reg [logDepth:0] count;
   reg                active;

   assign Y = (count == depth) ? 1 : 0;

   always @ (posedge clk) begin
      if (reset == 1) begin
         count <= 0;
         active <= 0;
      end
      else if (X == 1) begin
         active <= 1;
         count <= 1;
      end
      else if (count == depth) begin
         count <= 0;
         active <= 0;
      end
      else if (active)
         count <= count+1;
   end
endmodule

// Latency: 3
// Gap: 1
module codeBlock20413(clk, reset, next_in, next_out,
   X0_in, Y0,
   X1_in, Y1,
   X2_in, Y2,
   X3_in, Y3,
   X4_in, Y4,
   X5_in, Y5,
   X6_in, Y6,
   X7_in, Y7);

   output next_out;
   input clk, reset, next_in;

   reg next;

   input [15:0] X0_in,
      X1_in,
      X2_in,
      X3_in,
      X4_in,
      X5_in,
      X6_in,
      X7_in;

   reg   [15:0] X0,
      X1,
      X2,
      X3,
      X4,
      X5,
      X6,
      X7;

   output [15:0] Y0,
      Y1,
      Y2,
      Y3,
      Y4,
      Y5,
      Y6,
      Y7;

   shiftRegFIFO #(2, 1) shiftFIFO_27309(.X(next), .Y(next_out), .clk(clk));


   wire signed [15:0] a498;
   wire signed [15:0] a499;
   wire signed [15:0] a500;
   wire signed [15:0] a501;
   wire signed [15:0] a506;
   wire signed [15:0] a507;
   wire signed [15:0] a508;
   wire signed [15:0] a509;
   wire signed [16:0] tm158;
   wire signed [16:0] tm159;
   wire signed [16:0] tm160;
   wire signed [16:0] tm161;
   wire signed [16:0] tm162;
   wire signed [16:0] tm163;
   wire signed [16:0] tm164;
   wire signed [16:0] tm165;
   wire signed [15:0] t626;
   wire signed [15:0] t627;
   wire signed [15:0] t628;
   wire signed [15:0] t629;
   wire signed [15:0] t630;
   wire signed [15:0] t631;
   wire signed [15:0] t632;
   wire signed [15:0] t633;
   wire signed [16:0] tm166;
   wire signed [16:0] tm167;
   wire signed [16:0] tm168;
   wire signed [16:0] tm169;
   wire signed [15:0] Y0;
   wire signed [15:0] Y1;
   wire signed [15:0] Y4;
   wire signed [15:0] Y5;
   wire signed [16:0] tm170;
   wire signed [16:0] tm171;
   wire signed [16:0] tm172;
   wire signed [16:0] tm173;
   wire signed [15:0] Y2;
   wire signed [15:0] Y3;
   wire signed [15:0] Y6;
   wire signed [15:0] Y7;
   wire signed [15:0] t634;
   wire signed [15:0] t635;
   wire signed [15:0] t636;
   wire signed [15:0] t637;
   wire signed [15:0] t638;
   wire signed [15:0] t639;
   wire signed [15:0] t640;
   wire signed [15:0] t641;


   assign a498 = X0;
   assign a499 = X4;
   assign a500 = X1;
   assign a501 = X5;
   assign a506 = X2;
   assign a507 = X6;
   assign a508 = X3;
   assign a509 = X7;
   assign t626 = tm158[16:1];
   assign t627 = tm159[16:1];
   assign t628 = tm160[16:1];
   assign t629 = tm161[16:1];
   assign t630 = tm162[16:1];
   assign t631 = tm163[16:1];
   assign t632 = tm164[16:1];
   assign t633 = tm165[16:1];
   assign Y0 = t634;
   assign Y1 = t635;
   assign Y4 = t636;
   assign Y5 = t637;
   assign Y2 = t638;
   assign Y3 = t639;
   assign Y6 = t640;
   assign Y7 = t641;
   assign t634 = tm166[16:1];
   assign t635 = tm167[16:1];
   assign t636 = tm168[16:1];
   assign t637 = tm169[16:1];
   assign t638 = tm170[16:1];
   assign t639 = tm171[16:1];
   assign t640 = tm172[16:1];
   assign t641 = tm173[16:1];

    addfxp #(17, 1) add20425(.a({{1{a498[15]}}, a498}), .b({{1{a499[15]}}, a499}), .clk(clk), .q(tm158));    // 0
    addfxp #(17, 1) add20440(.a({{1{a500[15]}}, a500}), .b({{1{a501[15]}}, a501}), .clk(clk), .q(tm159));    // 0
    subfxp #(17, 1) sub20455(.a({{1{a498[15]}}, a498}), .b({{1{a499[15]}}, a499}), .clk(clk), .q(tm160));    // 0
    subfxp #(17, 1) sub20470(.a({{1{a500[15]}}, a500}), .b({{1{a501[15]}}, a501}), .clk(clk), .q(tm161));    // 0
    addfxp #(17, 1) add20485(.a({{1{a506[15]}}, a506}), .b({{1{a507[15]}}, a507}), .clk(clk), .q(tm162));    // 0
    addfxp #(17, 1) add20500(.a({{1{a508[15]}}, a508}), .b({{1{a509[15]}}, a509}), .clk(clk), .q(tm163));    // 0
    subfxp #(17, 1) sub20515(.a({{1{a506[15]}}, a506}), .b({{1{a507[15]}}, a507}), .clk(clk), .q(tm164));    // 0
    subfxp #(17, 1) sub20530(.a({{1{a508[15]}}, a508}), .b({{1{a509[15]}}, a509}), .clk(clk), .q(tm165));    // 0
    addfxp #(17, 1) add20537(.a({{1{t626[15]}}, t626}), .b({{1{t630[15]}}, t630}), .clk(clk), .q(tm166));    // 1
    addfxp #(17, 1) add20544(.a({{1{t627[15]}}, t627}), .b({{1{t631[15]}}, t631}), .clk(clk), .q(tm167));    // 1
    subfxp #(17, 1) sub20551(.a({{1{t626[15]}}, t626}), .b({{1{t630[15]}}, t630}), .clk(clk), .q(tm168));    // 1
    subfxp #(17, 1) sub20558(.a({{1{t627[15]}}, t627}), .b({{1{t631[15]}}, t631}), .clk(clk), .q(tm169));    // 1
    addfxp #(17, 1) add20581(.a({{1{t628[15]}}, t628}), .b({{1{t633[15]}}, t633}), .clk(clk), .q(tm170));    // 1
    subfxp #(17, 1) sub20588(.a({{1{t629[15]}}, t629}), .b({{1{t632[15]}}, t632}), .clk(clk), .q(tm171));    // 1
    subfxp #(17, 1) sub20595(.a({{1{t628[15]}}, t628}), .b({{1{t633[15]}}, t633}), .clk(clk), .q(tm172));    // 1
    addfxp #(17, 1) add20602(.a({{1{t629[15]}}, t629}), .b({{1{t632[15]}}, t632}), .clk(clk), .q(tm173));    // 1


   always @(posedge clk) begin
      if (reset == 1) begin
      end
      else begin
         X0 <= X0_in;
         X1 <= X1_in;
         X2 <= X2_in;
         X3 <= X3_in;
         X4 <= X4_in;
         X5 <= X5_in;
         X6 <= X6_in;
         X7 <= X7_in;
         next <= next_in;
      end
   end
endmodule

// Latency: 13
// Gap: 4
module rc20627(clk, reset, next, next_out,
   X0, Y0,
   X1, Y1,
   X2, Y2,
   X3, Y3,
   X4, Y4,
   X5, Y5,
   X6, Y6,
   X7, Y7);

   output next_out;
   input clk, reset, next;

   input [15:0] X0,
      X1,
      X2,
      X3,
      X4,
      X5,
      X6,
      X7;

   output [15:0] Y0,
      Y1,
      Y2,
      Y3,
      Y4,
      Y5,
      Y6,
      Y7;

   wire [31:0] t0;
   wire [31:0] s0;
   assign t0 = {X0, X1};
   wire [31:0] t1;
   wire [31:0] s1;
   assign t1 = {X2, X3};
   wire [31:0] t2;
   wire [31:0] s2;
   assign t2 = {X4, X5};
   wire [31:0] t3;
   wire [31:0] s3;
   assign t3 = {X6, X7};
   assign Y0 = s0[31:16];
   assign Y1 = s0[15:0];
   assign Y2 = s1[31:16];
   assign Y3 = s1[15:0];
   assign Y4 = s2[31:16];
   assign Y5 = s2[15:0];
   assign Y6 = s3[31:16];
   assign Y7 = s3[15:0];

   perm20625 instPerm27310(.x0(t0), .y0(s0),
    .x1(t1), .y1(s1),
    .x2(t2), .y2(s2),
    .x3(t3), .y3(s3),
   .clk(clk), .next(next), .next_out(next_out), .reset(reset)
);



endmodule

module swNet20625(itr, clk, ct
,       x0, y0
,       x1, y1
,       x2, y2
,       x3, y3
);

    parameter width = 32;

    input [1:0] ct;
    input clk;
    input [0:0] itr;
    input [width-1:0] x0;
    output reg [width-1:0] y0;
    input [width-1:0] x1;
    output reg [width-1:0] y1;
    input [width-1:0] x2;
    output reg [width-1:0] y2;
    input [width-1:0] x3;
    output reg [width-1:0] y3;
    wire [width-1:0] t0_0, t0_1, t0_2, t0_3;
    wire [width-1:0] t1_0, t1_1, t1_2, t1_3;
    wire [width-1:0] t2_0, t2_1, t2_2, t2_3;
    reg [width-1:0] t3_0, t3_1, t3_2, t3_3;
    wire [width-1:0] t4_0, t4_1, t4_2, t4_3;
    reg [width-1:0] t5_0, t5_1, t5_2, t5_3;

    reg [3:0] control;

    always @(posedge clk) begin
      case(ct)
        2'd0: control <= 4'b1111;
        2'd1: control <= 4'b0011;
        2'd2: control <= 4'b1100;
        2'd3: control <= 4'b0000;
      endcase
   end

// synthesis attribute rom_style of control is "distributed"
   reg [3:0] control0;
   reg [3:0] control1;
    always @(posedge clk) begin
       control0 <= control;
        control1 <= control0;
    end
    assign t0_0 = x0;
    assign t0_1 = x2;
    assign t0_2 = x1;
    assign t0_3 = x3;
     assign t1_0 = t0_0;
     assign t1_1 = t0_1;
     assign t1_2 = t0_2;
     assign t1_3 = t0_3;
    assign t2_0 = t1_0;
    assign t2_1 = t1_2;
    assign t2_2 = t1_1;
    assign t2_3 = t1_3;
   always @(posedge clk) begin
         t3_0 <= (control0[3] == 0) ? t2_0 : t2_1;
         t3_1 <= (control0[3] == 0) ? t2_1 : t2_0;
         t3_2 <= (control0[2] == 0) ? t2_2 : t2_3;
         t3_3 <= (control0[2] == 0) ? t2_3 : t2_2;
   end
    assign t4_0 = t3_0;
    assign t4_1 = t3_2;
    assign t4_2 = t3_1;
    assign t4_3 = t3_3;
   always @(posedge clk) begin
         t5_0 <= (control1[1] == 0) ? t4_0 : t4_1;
         t5_1 <= (control1[1] == 0) ? t4_1 : t4_0;
         t5_2 <= (control1[0] == 0) ? t4_2 : t4_3;
         t5_3 <= (control1[0] == 0) ? t4_3 : t4_2;
   end
    always @(posedge clk) begin
        y0 <= t5_0;
        y1 <= t5_2;
        y2 <= t5_1;
        y3 <= t5_3;
    end
endmodule

// Latency: 13
// Gap: 4
module perm20625(clk, next, reset, next_out,
   x0, y0,
   x1, y1,
   x2, y2,
   x3, y3);
   parameter width = 32;

   parameter depth = 4;

   parameter addrbits = 2;

   parameter muxbits = 2;

   input [width-1:0]  x0;
   output [width-1:0]  y0;
   wire [width-1:0]  t0;
   wire [width-1:0]  s0;
   input [width-1:0]  x1;
   output [width-1:0]  y1;
   wire [width-1:0]  t1;
   wire [width-1:0]  s1;
   input [width-1:0]  x2;
   output [width-1:0]  y2;
   wire [width-1:0]  t2;
   wire [width-1:0]  s2;
   input [width-1:0]  x3;
   output [width-1:0]  y3;
   wire [width-1:0]  t3;
   wire [width-1:0]  s3;
   input next, reset, clk;
   output next_out;
   reg [addrbits-1:0] s1rdloc, s2rdloc;

    reg [addrbits-1:0] s1wr0;
   reg [addrbits-1:0] s1rd0, s2wr0, s2rd0;
   reg [addrbits-1:0] s1rd1, s2wr1, s2rd1;
   reg [addrbits-1:0] s1rd2, s2wr2, s2rd2;
   reg [addrbits-1:0] s1rd3, s2wr3, s2rd3;
   reg s1wr_en, state1, state2, state3;
   wire 	      next2, next3, next4;
   reg 		      inFlip0, outFlip0_z, outFlip1;
   wire 	      inFlip1, outFlip0;

   wire [0:0] tm1;
   assign tm1 = 0;

shiftRegFIFO #(4, 1) shiftFIFO_27315(.X(outFlip0), .Y(inFlip1), .clk(clk));
shiftRegFIFO #(1, 1) shiftFIFO_27316(.X(outFlip0_z), .Y(outFlip0), .clk(clk));
//   shiftRegFIFO #(2, 1) inFlip1Reg(outFlip0, inFlip1, clk);
//   shiftRegFIFO #(1, 1) outFlip0Reg(outFlip0_z, outFlip0, clk);
   
   memMod_dist #(depth*2, width, addrbits+1) s1mem0(x0, t0, {inFlip0, s1wr0}, {outFlip0, s1rd0}, s1wr_en, clk);
   memMod_dist #(depth*2, width, addrbits+1) s1mem1(x1, t1, {inFlip0, s1wr0}, {outFlip0, s1rd1}, s1wr_en, clk);
   memMod_dist #(depth*2, width, addrbits+1) s1mem2(x2, t2, {inFlip0, s1wr0}, {outFlip0, s1rd2}, s1wr_en, clk);
   memMod_dist #(depth*2, width, addrbits+1) s1mem3(x3, t3, {inFlip0, s1wr0}, {outFlip0, s1rd3}, s1wr_en, clk);

shiftRegFIFO #(3, 1) shiftFIFO_27325(.X(next), .Y(next2), .clk(clk));
shiftRegFIFO #(5, 1) shiftFIFO_27326(.X(next2), .Y(next3), .clk(clk));
shiftRegFIFO #(4, 1) shiftFIFO_27327(.X(next3), .Y(next4), .clk(clk));
shiftRegFIFO #(1, 1) shiftFIFO_27328(.X(next4), .Y(next_out), .clk(clk));
shiftRegFIFO #(3, 1) shiftFIFO_27331(.X(tm1), .Y(tm1_d), .clk(clk));
shiftRegFIFO #(4, 1) shiftFIFO_27334(.X(tm1_d), .Y(tm1_dd), .clk(clk));
   
   wire [addrbits-1:0] 	      muxCycle, writeCycle;
assign muxCycle = s1rdloc;
shiftRegFIFO #(4, 2) shiftFIFO_27339(.X(muxCycle), .Y(writeCycle), .clk(clk));
        
   wire 		      readInt, s2wr_en;   
   assign 		      readInt = (state2 == 1);

   shiftRegFIFO #(5, 1) writeIntReg(readInt, s2wr_en, clk);

   memMod_dist #(depth*2, width, addrbits+1) s2mem0(s0, y0, {inFlip1, s2wr0}, {outFlip1, s2rdloc}, s2wr_en, clk);
   memMod_dist #(depth*2, width, addrbits+1) s2mem1(s1, y1, {inFlip1, s2wr1}, {outFlip1, s2rdloc}, s2wr_en, clk);
   memMod_dist #(depth*2, width, addrbits+1) s2mem2(s2, y2, {inFlip1, s2wr2}, {outFlip1, s2rdloc}, s2wr_en, clk);
   memMod_dist #(depth*2, width, addrbits+1) s2mem3(s3, y3, {inFlip1, s2wr3}, {outFlip1, s2rdloc}, s2wr_en, clk);
   always @(posedge clk) begin
      if (reset == 1) begin
	 state1 <= 0;
	 inFlip0 <= 0;	 
	 s1wr0 <= 0;
      end
      else if (next == 1) begin
	 s1wr0 <= 0;
	 state1 <= 1;
	 s1wr_en <= 1;
	 inFlip0 <= (s1wr0 == depth-1) ? ~inFlip0 : inFlip0;
      end
      else begin
	 case(state1)
	   0: begin
	      s1wr0 <= 0;
	      state1 <= 0;
	      s1wr_en <= 0;
	      inFlip0 <= inFlip0;	      
	   end
	   1: begin
	      s1wr0 <= (s1wr0 == depth-1) ? 0 : s1wr0 + 1;
	      state1 <= 1;
         s1wr_en <= 1;
	      inFlip0 <= (s1wr0 == depth-1) ? ~inFlip0 : inFlip0;
	   end
	 endcase
      end      
   end
   
   always @(posedge clk) begin
      if (reset == 1) begin
	       state2 <= 0;
	       outFlip0_z <= 0;	 
      end
      else if (next2 == 1) begin
	       s1rdloc <= 0;
	       state2 <= 1;
	       outFlip0_z <= (s1rdloc == depth-1) ? ~outFlip0_z : outFlip0_z;
      end
      else begin
	 case(state2)
	   0: begin
	      s1rdloc <= 0;
	      state2 <= 0;
	      outFlip0_z <= outFlip0_z;	 
	   end
	   1: begin
	      s1rdloc <= (s1rdloc == depth-1) ? 0 : s1rdloc + 1;
         state2 <= 1;
	      outFlip0_z <= (s1rdloc == depth-1) ? ~outFlip0_z : outFlip0_z;
	   end	     
	 endcase
      end
   end
   
   always @(posedge clk) begin
      if (reset == 1) begin
	 state3 <= 0;
	 outFlip1 <= 0;	 
      end
      else if (next4 == 1) begin
	 s2rdloc <= 0;
	 state3 <= 1;
	 outFlip1 <= (s2rdloc == depth-1) ? ~outFlip1 : outFlip1;	      
      end
      else begin
	 case(state3)
	   0: begin
	      s2rdloc <= 0;
	      state3 <= 0;
	      outFlip1 <= outFlip1;
	   end
	   1: begin
	      s2rdloc <= (s2rdloc == depth-1) ? 0 : s2rdloc + 1;
         state3 <= 1;
	      outFlip1 <= (s2rdloc == depth-1) ? ~outFlip1 : outFlip1;
	   end	     
	 endcase
      end
   end
   always @(posedge clk) begin
      case({tm1_d, s1rdloc})
	     {1'd0,  2'd0}: s1rd0 <= 3;
	     {1'd0,  2'd1}: s1rd0 <= 2;
	     {1'd0,  2'd2}: s1rd0 <= 1;
	     {1'd0,  2'd3}: s1rd0 <= 0;
      endcase      
   end

// synthesis attribute rom_style of s1rd0 is "distributed"
   always @(posedge clk) begin
      case({tm1_d, s1rdloc})
	     {1'd0,  2'd0}: s1rd1 <= 2;
	     {1'd0,  2'd1}: s1rd1 <= 3;
	     {1'd0,  2'd2}: s1rd1 <= 0;
	     {1'd0,  2'd3}: s1rd1 <= 1;
      endcase      
   end

// synthesis attribute rom_style of s1rd1 is "distributed"
   always @(posedge clk) begin
      case({tm1_d, s1rdloc})
	     {1'd0,  2'd0}: s1rd2 <= 1;
	     {1'd0,  2'd1}: s1rd2 <= 0;
	     {1'd0,  2'd2}: s1rd2 <= 3;
	     {1'd0,  2'd3}: s1rd2 <= 2;
      endcase      
   end

// synthesis attribute rom_style of s1rd2 is "distributed"
   always @(posedge clk) begin
      case({tm1_d, s1rdloc})
	     {1'd0,  2'd0}: s1rd3 <= 0;
	     {1'd0,  2'd1}: s1rd3 <= 1;
	     {1'd0,  2'd2}: s1rd3 <= 2;
	     {1'd0,  2'd3}: s1rd3 <= 3;
      endcase      
   end

// synthesis attribute rom_style of s1rd3 is "distributed"
    swNet20625 sw(tm1_d, clk, muxCycle, t0, s0, t1, s1, t2, s2, t3, s3);

   always @(posedge clk) begin
      case({tm1_dd, writeCycle})
	      {1'd0, 2'd0}: s2wr0 <= 3;
	      {1'd0, 2'd1}: s2wr0 <= 2;
	      {1'd0, 2'd2}: s2wr0 <= 1;
	      {1'd0, 2'd3}: s2wr0 <= 0;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr0 is "distributed"
   always @(posedge clk) begin
      case({tm1_dd, writeCycle})
	      {1'd0, 2'd0}: s2wr1 <= 2;
	      {1'd0, 2'd1}: s2wr1 <= 3;
	      {1'd0, 2'd2}: s2wr1 <= 0;
	      {1'd0, 2'd3}: s2wr1 <= 1;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr1 is "distributed"
   always @(posedge clk) begin
      case({tm1_dd, writeCycle})
	      {1'd0, 2'd0}: s2wr2 <= 1;
	      {1'd0, 2'd1}: s2wr2 <= 0;
	      {1'd0, 2'd2}: s2wr2 <= 3;
	      {1'd0, 2'd3}: s2wr2 <= 2;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr2 is "distributed"
   always @(posedge clk) begin
      case({tm1_dd, writeCycle})
	      {1'd0, 2'd0}: s2wr3 <= 0;
	      {1'd0, 2'd1}: s2wr3 <= 1;
	      {1'd0, 2'd2}: s2wr3 <= 2;
	      {1'd0, 2'd3}: s2wr3 <= 3;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr3 is "distributed"
endmodule


// Latency: 8
// Gap: 4
module DirSum_21000(clk, reset, next, next_out,
      X0, Y0,
      X1, Y1,
      X2, Y2,
      X3, Y3,
      X4, Y4,
      X5, Y5,
      X6, Y6,
      X7, Y7);

   output next_out;
   input clk, reset, next;

   reg [1:0] i4;

   input [15:0] X0,
      X1,
      X2,
      X3,
      X4,
      X5,
      X6,
      X7;

   output [15:0] Y0,
      Y1,
      Y2,
      Y3,
      Y4,
      Y5,
      Y6,
      Y7;

   always @(posedge clk) begin
      if (reset == 1) begin
         i4 <= 0;
      end
      else begin
         if (next == 1)
            i4 <= 0;
         else if (i4 == 3)
            i4 <= 0;
         else
            i4 <= i4 + 1;
      end
   end

   codeBlock20630 codeBlockIsnt27340(.clk(clk), .reset(reset), .next_in(next), .next_out(next_out),
.i4_in(i4),
       .X0_in(X0), .Y0(Y0),
       .X1_in(X1), .Y1(Y1),
       .X2_in(X2), .Y2(Y2),
       .X3_in(X3), .Y3(Y3),
       .X4_in(X4), .Y4(Y4),
       .X5_in(X5), .Y5(Y5),
       .X6_in(X6), .Y6(Y6),
       .X7_in(X7), .Y7(Y7));

endmodule

module D40_20956(addr, out, clk);
   input clk;
   output [15:0] out;
   reg [15:0] out, out2, out3;
   input [1:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 16'h0;
      1: out3 <= 16'hc4df;
      2: out3 <= 16'hd2bf;
      3: out3 <= 16'h187e;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



module D39_20962(addr, out, clk);
   input clk;
   output [15:0] out;
   reg [15:0] out, out2, out3;
   input [1:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 16'h0;
      1: out3 <= 16'hd2bf;
      2: out3 <= 16'hc000;
      3: out3 <= 16'hd2bf;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



module D38_20968(addr, out, clk);
   input clk;
   output [15:0] out;
   reg [15:0] out, out2, out3;
   input [1:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 16'h0;
      1: out3 <= 16'he782;
      2: out3 <= 16'hd2bf;
      3: out3 <= 16'hc4df;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



module D36_20980(addr, out, clk);
   input clk;
   output [15:0] out;
   reg [15:0] out, out2, out3;
   input [1:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 16'h4000;
      1: out3 <= 16'h187e;
      2: out3 <= 16'hd2bf;
      3: out3 <= 16'hc4df;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



module D35_20986(addr, out, clk);
   input clk;
   output [15:0] out;
   reg [15:0] out, out2, out3;
   input [1:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 16'h4000;
      1: out3 <= 16'h2d41;
      2: out3 <= 16'h0;
      3: out3 <= 16'hd2bf;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



module D34_20992(addr, out, clk);
   input clk;
   output [15:0] out;
   reg [15:0] out, out2, out3;
   input [1:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 16'h4000;
      1: out3 <= 16'h3b21;
      2: out3 <= 16'h2d41;
      3: out3 <= 16'h187e;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



// Latency: 8
// Gap: 1
module codeBlock20630(clk, reset, next_in, next_out,
   i4_in,
   X0_in, Y0,
   X1_in, Y1,
   X2_in, Y2,
   X3_in, Y3,
   X4_in, Y4,
   X5_in, Y5,
   X6_in, Y6,
   X7_in, Y7);

   output next_out;
   input clk, reset, next_in;

   reg next;
   input [1:0] i4_in;
   reg [1:0] i4;

   input [15:0] X0_in,
      X1_in,
      X2_in,
      X3_in,
      X4_in,
      X5_in,
      X6_in,
      X7_in;

   reg   [15:0] X0,
      X1,
      X2,
      X3,
      X4,
      X5,
      X6,
      X7;

   output [15:0] Y0,
      Y1,
      Y2,
      Y3,
      Y4,
      Y5,
      Y6,
      Y7;

   shiftRegFIFO #(7, 1) shiftFIFO_27343(.X(next), .Y(next_out), .clk(clk));


   wire signed [15:0] a466;
   wire signed [15:0] a443;
   wire signed [15:0] a469;
   wire signed [15:0] a447;
   wire signed [15:0] a470;
   wire signed [15:0] a471;
   wire signed [15:0] a474;
   wire signed [15:0] a475;
   wire signed [15:0] a478;
   wire signed [15:0] a479;
   reg signed [15:0] tm238;
   reg signed [15:0] tm242;
   reg signed [15:0] tm254;
   reg signed [15:0] tm258;
   reg signed [15:0] tm270;
   reg signed [15:0] tm274;
   reg signed [15:0] tm286;
   reg signed [15:0] tm293;
   reg signed [15:0] tm239;
   reg signed [15:0] tm243;
   reg signed [15:0] tm255;
   reg signed [15:0] tm259;
   reg signed [15:0] tm271;
   reg signed [15:0] tm275;
   reg signed [15:0] tm287;
   reg signed [15:0] tm294;
   wire signed [15:0] tm4;
   wire signed [15:0] a448;
   wire signed [15:0] tm5;
   wire signed [15:0] a450;
   wire signed [15:0] tm6;
   wire signed [15:0] a454;
   wire signed [15:0] tm7;
   wire signed [15:0] a456;
   wire signed [15:0] tm8;
   wire signed [15:0] a460;
   wire signed [15:0] tm9;
   wire signed [15:0] a462;
   reg signed [15:0] tm240;
   reg signed [15:0] tm244;
   reg signed [15:0] tm256;
   reg signed [15:0] tm260;
   reg signed [15:0] tm272;
   reg signed [15:0] tm276;
   reg signed [15:0] tm288;
   reg signed [15:0] tm295;
   reg signed [15:0] tm42;
   reg signed [15:0] tm43;
   reg signed [15:0] tm46;
   reg signed [15:0] tm47;
   reg signed [15:0] tm50;
   reg signed [15:0] tm51;
   reg signed [15:0] tm241;
   reg signed [15:0] tm245;
   reg signed [15:0] tm257;
   reg signed [15:0] tm261;
   reg signed [15:0] tm273;
   reg signed [15:0] tm277;
   reg signed [15:0] tm289;
   reg signed [15:0] tm296;
   reg signed [15:0] tm290;
   reg signed [15:0] tm297;
   wire signed [15:0] a449;
   wire signed [15:0] a451;
   wire signed [15:0] a452;
   wire signed [15:0] a453;
   wire signed [15:0] a455;
   wire signed [15:0] a457;
   wire signed [15:0] a458;
   wire signed [15:0] a459;
   wire signed [15:0] a461;
   wire signed [15:0] a463;
   wire signed [15:0] a464;
   wire signed [15:0] a465;
   reg signed [15:0] tm291;
   reg signed [15:0] tm298;
   wire signed [15:0] Y0;
   wire signed [15:0] Y1;
   wire signed [15:0] Y2;
   wire signed [15:0] Y3;
   wire signed [15:0] Y4;
   wire signed [15:0] Y5;
   wire signed [15:0] Y6;
   wire signed [15:0] Y7;
   reg signed [15:0] tm292;
   reg signed [15:0] tm299;


   assign a466 = X0;
   assign a443 = a466;
   assign a469 = X1;
   assign a447 = a469;
   assign a470 = X2;
   assign a471 = X3;
   assign a474 = X4;
   assign a475 = X5;
   assign a478 = X6;
   assign a479 = X7;
   assign a448 = tm4;
   assign a450 = tm5;
   assign a454 = tm6;
   assign a456 = tm7;
   assign a460 = tm8;
   assign a462 = tm9;
   assign Y0 = tm292;
   assign Y1 = tm299;

   D40_20956 instD40inst0_20956(.addr(i4[1:0]), .out(tm9), .clk(clk));

   D39_20962 instD39inst0_20962(.addr(i4[1:0]), .out(tm7), .clk(clk));

   D38_20968 instD38inst0_20968(.addr(i4[1:0]), .out(tm5), .clk(clk));

   D36_20980 instD36inst0_20980(.addr(i4[1:0]), .out(tm8), .clk(clk));

   D35_20986 instD35inst0_20986(.addr(i4[1:0]), .out(tm6), .clk(clk));

   D34_20992 instD34inst0_20992(.addr(i4[1:0]), .out(tm4), .clk(clk));

    multfix #(16, 2) m20729(.a(tm42), .b(tm241), .clk(clk), .q_sc(a449), .q_unsc(), .rst(reset));
    multfix #(16, 2) m20751(.a(tm43), .b(tm245), .clk(clk), .q_sc(a451), .q_unsc(), .rst(reset));
    multfix #(16, 2) m20769(.a(tm43), .b(tm241), .clk(clk), .q_sc(a452), .q_unsc(), .rst(reset));
    multfix #(16, 2) m20780(.a(tm42), .b(tm245), .clk(clk), .q_sc(a453), .q_unsc(), .rst(reset));
    multfix #(16, 2) m20809(.a(tm46), .b(tm257), .clk(clk), .q_sc(a455), .q_unsc(), .rst(reset));
    multfix #(16, 2) m20831(.a(tm47), .b(tm261), .clk(clk), .q_sc(a457), .q_unsc(), .rst(reset));
    multfix #(16, 2) m20849(.a(tm47), .b(tm257), .clk(clk), .q_sc(a458), .q_unsc(), .rst(reset));
    multfix #(16, 2) m20860(.a(tm46), .b(tm261), .clk(clk), .q_sc(a459), .q_unsc(), .rst(reset));
    multfix #(16, 2) m20889(.a(tm50), .b(tm273), .clk(clk), .q_sc(a461), .q_unsc(), .rst(reset));
    multfix #(16, 2) m20911(.a(tm51), .b(tm277), .clk(clk), .q_sc(a463), .q_unsc(), .rst(reset));
    multfix #(16, 2) m20929(.a(tm51), .b(tm273), .clk(clk), .q_sc(a464), .q_unsc(), .rst(reset));
    multfix #(16, 2) m20940(.a(tm50), .b(tm277), .clk(clk), .q_sc(a465), .q_unsc(), .rst(reset));
    subfxp #(16, 1) sub20758(.a(a449), .b(a451), .clk(clk), .q(Y2));    // 6
    addfxp #(16, 1) add20787(.a(a452), .b(a453), .clk(clk), .q(Y3));    // 6
    subfxp #(16, 1) sub20838(.a(a455), .b(a457), .clk(clk), .q(Y4));    // 6
    addfxp #(16, 1) add20867(.a(a458), .b(a459), .clk(clk), .q(Y5));    // 6
    subfxp #(16, 1) sub20918(.a(a461), .b(a463), .clk(clk), .q(Y6));    // 6
    addfxp #(16, 1) add20947(.a(a464), .b(a465), .clk(clk), .q(Y7));    // 6


   always @(posedge clk) begin
      if (reset == 1) begin
         tm42 <= 0;
         tm241 <= 0;
         tm43 <= 0;
         tm245 <= 0;
         tm43 <= 0;
         tm241 <= 0;
         tm42 <= 0;
         tm245 <= 0;
         tm46 <= 0;
         tm257 <= 0;
         tm47 <= 0;
         tm261 <= 0;
         tm47 <= 0;
         tm257 <= 0;
         tm46 <= 0;
         tm261 <= 0;
         tm50 <= 0;
         tm273 <= 0;
         tm51 <= 0;
         tm277 <= 0;
         tm51 <= 0;
         tm273 <= 0;
         tm50 <= 0;
         tm277 <= 0;
      end
      else begin
         i4 <= i4_in;
         X0 <= X0_in;
         X1 <= X1_in;
         X2 <= X2_in;
         X3 <= X3_in;
         X4 <= X4_in;
         X5 <= X5_in;
         X6 <= X6_in;
         X7 <= X7_in;
         next <= next_in;
         tm238 <= a470;
         tm242 <= a471;
         tm254 <= a474;
         tm258 <= a475;
         tm270 <= a478;
         tm274 <= a479;
         tm286 <= a443;
         tm293 <= a447;
         tm239 <= tm238;
         tm243 <= tm242;
         tm255 <= tm254;
         tm259 <= tm258;
         tm271 <= tm270;
         tm275 <= tm274;
         tm287 <= tm286;
         tm294 <= tm293;
         tm240 <= tm239;
         tm244 <= tm243;
         tm256 <= tm255;
         tm260 <= tm259;
         tm272 <= tm271;
         tm276 <= tm275;
         tm288 <= tm287;
         tm295 <= tm294;
         tm42 <= a448;
         tm43 <= a450;
         tm46 <= a454;
         tm47 <= a456;
         tm50 <= a460;
         tm51 <= a462;
         tm241 <= tm240;
         tm245 <= tm244;
         tm257 <= tm256;
         tm261 <= tm260;
         tm273 <= tm272;
         tm277 <= tm276;
         tm289 <= tm288;
         tm296 <= tm295;
         tm290 <= tm289;
         tm297 <= tm296;
         tm291 <= tm290;
         tm298 <= tm297;
         tm292 <= tm291;
         tm299 <= tm298;
      end
   end
endmodule

// Latency: 3
// Gap: 1
module codeBlock21003(clk, reset, next_in, next_out,
   X0_in, Y0,
   X1_in, Y1,
   X2_in, Y2,
   X3_in, Y3,
   X4_in, Y4,
   X5_in, Y5,
   X6_in, Y6,
   X7_in, Y7);

   output next_out;
   input clk, reset, next_in;

   reg next;

   input [15:0] X0_in,
      X1_in,
      X2_in,
      X3_in,
      X4_in,
      X5_in,
      X6_in,
      X7_in;

   reg   [15:0] X0,
      X1,
      X2,
      X3,
      X4,
      X5,
      X6,
      X7;

   output [15:0] Y0,
      Y1,
      Y2,
      Y3,
      Y4,
      Y5,
      Y6,
      Y7;

   shiftRegFIFO #(2, 1) shiftFIFO_27346(.X(next), .Y(next_out), .clk(clk));


   wire signed [15:0] a377;
   wire signed [15:0] a378;
   wire signed [15:0] a379;
   wire signed [15:0] a380;
   wire signed [15:0] a385;
   wire signed [15:0] a387;
   wire signed [15:0] a388;
   wire signed [15:0] a389;
   wire signed [16:0] tm174;
   wire signed [16:0] tm175;
   wire signed [16:0] tm176;
   wire signed [16:0] tm177;
   wire signed [16:0] tm178;
   wire signed [16:0] tm179;
   wire signed [16:0] tm180;
   wire signed [16:0] tm181;
   wire signed [15:0] t498;
   wire signed [15:0] t499;
   wire signed [15:0] t500;
   wire signed [15:0] t501;
   wire signed [15:0] t502;
   wire signed [15:0] t503;
   wire signed [15:0] t504;
   wire signed [15:0] t505;
   wire signed [16:0] tm182;
   wire signed [16:0] tm183;
   wire signed [16:0] tm184;
   wire signed [16:0] tm185;
   wire signed [15:0] Y0;
   wire signed [15:0] Y1;
   wire signed [15:0] Y4;
   wire signed [15:0] Y5;
   wire signed [16:0] tm186;
   wire signed [16:0] tm187;
   wire signed [16:0] tm188;
   wire signed [16:0] tm189;
   wire signed [15:0] Y2;
   wire signed [15:0] Y3;
   wire signed [15:0] Y6;
   wire signed [15:0] Y7;
   wire signed [15:0] t506;
   wire signed [15:0] t507;
   wire signed [15:0] t508;
   wire signed [15:0] t509;
   wire signed [15:0] t510;
   wire signed [15:0] t511;
   wire signed [15:0] t512;
   wire signed [15:0] t513;


   assign a377 = X0;
   assign a378 = X4;
   assign a379 = X1;
   assign a380 = X5;
   assign a385 = X2;
   assign a387 = X6;
   assign a388 = X3;
   assign a389 = X7;
   assign t498 = tm174[16:1];
   assign t499 = tm175[16:1];
   assign t500 = tm176[16:1];
   assign t501 = tm177[16:1];
   assign t502 = tm178[16:1];
   assign t503 = tm179[16:1];
   assign t504 = tm180[16:1];
   assign t505 = tm181[16:1];
   assign Y0 = t506;
   assign Y1 = t507;
   assign Y4 = t508;
   assign Y5 = t509;
   assign Y2 = t510;
   assign Y3 = t511;
   assign Y6 = t512;
   assign Y7 = t513;
   assign t506 = tm182[16:1];
   assign t507 = tm183[16:1];
   assign t508 = tm184[16:1];
   assign t509 = tm185[16:1];
   assign t510 = tm186[16:1];
   assign t511 = tm187[16:1];
   assign t512 = tm188[16:1];
   assign t513 = tm189[16:1];

    addfxp #(17, 1) add21015(.a({{1{a377[15]}}, a377}), .b({{1{a378[15]}}, a378}), .clk(clk), .q(tm174));    // 0
    addfxp #(17, 1) add21030(.a({{1{a379[15]}}, a379}), .b({{1{a380[15]}}, a380}), .clk(clk), .q(tm175));    // 0
    subfxp #(17, 1) sub21045(.a({{1{a377[15]}}, a377}), .b({{1{a378[15]}}, a378}), .clk(clk), .q(tm176));    // 0
    subfxp #(17, 1) sub21060(.a({{1{a379[15]}}, a379}), .b({{1{a380[15]}}, a380}), .clk(clk), .q(tm177));    // 0
    addfxp #(17, 1) add21075(.a({{1{a385[15]}}, a385}), .b({{1{a387[15]}}, a387}), .clk(clk), .q(tm178));    // 0
    addfxp #(17, 1) add21090(.a({{1{a388[15]}}, a388}), .b({{1{a389[15]}}, a389}), .clk(clk), .q(tm179));    // 0
    subfxp #(17, 1) sub21105(.a({{1{a385[15]}}, a385}), .b({{1{a387[15]}}, a387}), .clk(clk), .q(tm180));    // 0
    subfxp #(17, 1) sub21120(.a({{1{a388[15]}}, a388}), .b({{1{a389[15]}}, a389}), .clk(clk), .q(tm181));    // 0
    addfxp #(17, 1) add21127(.a({{1{t498[15]}}, t498}), .b({{1{t502[15]}}, t502}), .clk(clk), .q(tm182));    // 1
    addfxp #(17, 1) add21134(.a({{1{t499[15]}}, t499}), .b({{1{t503[15]}}, t503}), .clk(clk), .q(tm183));    // 1
    subfxp #(17, 1) sub21141(.a({{1{t498[15]}}, t498}), .b({{1{t502[15]}}, t502}), .clk(clk), .q(tm184));    // 1
    subfxp #(17, 1) sub21148(.a({{1{t499[15]}}, t499}), .b({{1{t503[15]}}, t503}), .clk(clk), .q(tm185));    // 1
    addfxp #(17, 1) add21171(.a({{1{t500[15]}}, t500}), .b({{1{t505[15]}}, t505}), .clk(clk), .q(tm186));    // 1
    subfxp #(17, 1) sub21178(.a({{1{t501[15]}}, t501}), .b({{1{t504[15]}}, t504}), .clk(clk), .q(tm187));    // 1
    subfxp #(17, 1) sub21185(.a({{1{t500[15]}}, t500}), .b({{1{t505[15]}}, t505}), .clk(clk), .q(tm188));    // 1
    addfxp #(17, 1) add21192(.a({{1{t501[15]}}, t501}), .b({{1{t504[15]}}, t504}), .clk(clk), .q(tm189));    // 1


   always @(posedge clk) begin
      if (reset == 1) begin
      end
      else begin
         X0 <= X0_in;
         X1 <= X1_in;
         X2 <= X2_in;
         X3 <= X3_in;
         X4 <= X4_in;
         X5 <= X5_in;
         X6 <= X6_in;
         X7 <= X7_in;
         next <= next_in;
      end
   end
endmodule

// Latency: 37
// Gap: 16
module rc21217(clk, reset, next, next_out,
   X0, Y0,
   X1, Y1,
   X2, Y2,
   X3, Y3,
   X4, Y4,
   X5, Y5,
   X6, Y6,
   X7, Y7);

   output next_out;
   input clk, reset, next;

   input [15:0] X0,
      X1,
      X2,
      X3,
      X4,
      X5,
      X6,
      X7;

   output [15:0] Y0,
      Y1,
      Y2,
      Y3,
      Y4,
      Y5,
      Y6,
      Y7;

   wire [31:0] t0;
   wire [31:0] s0;
   assign t0 = {X0, X1};
   wire [31:0] t1;
   wire [31:0] s1;
   assign t1 = {X2, X3};
   wire [31:0] t2;
   wire [31:0] s2;
   assign t2 = {X4, X5};
   wire [31:0] t3;
   wire [31:0] s3;
   assign t3 = {X6, X7};
   assign Y0 = s0[31:16];
   assign Y1 = s0[15:0];
   assign Y2 = s1[31:16];
   assign Y3 = s1[15:0];
   assign Y4 = s2[31:16];
   assign Y5 = s2[15:0];
   assign Y6 = s3[31:16];
   assign Y7 = s3[15:0];

   perm21215 instPerm27347(.x0(t0), .y0(s0),
    .x1(t1), .y1(s1),
    .x2(t2), .y2(s2),
    .x3(t3), .y3(s3),
   .clk(clk), .next(next), .next_out(next_out), .reset(reset)
);



endmodule

module swNet21215(itr, clk, ct
,       x0, y0
,       x1, y1
,       x2, y2
,       x3, y3
);

    parameter width = 32;

    input [3:0] ct;
    input clk;
    input [0:0] itr;
    input [width-1:0] x0;
    output reg [width-1:0] y0;
    input [width-1:0] x1;
    output reg [width-1:0] y1;
    input [width-1:0] x2;
    output reg [width-1:0] y2;
    input [width-1:0] x3;
    output reg [width-1:0] y3;
    wire [width-1:0] t0_0, t0_1, t0_2, t0_3;
    wire [width-1:0] t1_0, t1_1, t1_2, t1_3;
    wire [width-1:0] t2_0, t2_1, t2_2, t2_3;
    reg [width-1:0] t3_0, t3_1, t3_2, t3_3;
    wire [width-1:0] t4_0, t4_1, t4_2, t4_3;
    reg [width-1:0] t5_0, t5_1, t5_2, t5_3;

    reg [3:0] control;

    always @(posedge clk) begin
      case(ct)
        4'd0: control <= 4'b1111;
        4'd1: control <= 4'b1111;
        4'd2: control <= 4'b1111;
        4'd3: control <= 4'b1111;
        4'd4: control <= 4'b0011;
        4'd5: control <= 4'b0011;
        4'd6: control <= 4'b0011;
        4'd7: control <= 4'b0011;
        4'd8: control <= 4'b1100;
        4'd9: control <= 4'b1100;
        4'd10: control <= 4'b1100;
        4'd11: control <= 4'b1100;
        4'd12: control <= 4'b0000;
        4'd13: control <= 4'b0000;
        4'd14: control <= 4'b0000;
        4'd15: control <= 4'b0000;
      endcase
   end

// synthesis attribute rom_style of control is "distributed"
   reg [3:0] control0;
   reg [3:0] control1;
    always @(posedge clk) begin
       control0 <= control;
        control1 <= control0;
    end
    assign t0_0 = x0;
    assign t0_1 = x2;
    assign t0_2 = x1;
    assign t0_3 = x3;
     assign t1_0 = t0_0;
     assign t1_1 = t0_1;
     assign t1_2 = t0_2;
     assign t1_3 = t0_3;
    assign t2_0 = t1_0;
    assign t2_1 = t1_2;
    assign t2_2 = t1_1;
    assign t2_3 = t1_3;
   always @(posedge clk) begin
         t3_0 <= (control0[3] == 0) ? t2_0 : t2_1;
         t3_1 <= (control0[3] == 0) ? t2_1 : t2_0;
         t3_2 <= (control0[2] == 0) ? t2_2 : t2_3;
         t3_3 <= (control0[2] == 0) ? t2_3 : t2_2;
   end
    assign t4_0 = t3_0;
    assign t4_1 = t3_2;
    assign t4_2 = t3_1;
    assign t4_3 = t3_3;
   always @(posedge clk) begin
         t5_0 <= (control1[1] == 0) ? t4_0 : t4_1;
         t5_1 <= (control1[1] == 0) ? t4_1 : t4_0;
         t5_2 <= (control1[0] == 0) ? t4_2 : t4_3;
         t5_3 <= (control1[0] == 0) ? t4_3 : t4_2;
   end
    always @(posedge clk) begin
        y0 <= t5_0;
        y1 <= t5_2;
        y2 <= t5_1;
        y3 <= t5_3;
    end
endmodule

// Latency: 37
// Gap: 16
module perm21215(clk, next, reset, next_out,
   x0, y0,
   x1, y1,
   x2, y2,
   x3, y3);
   parameter width = 32;

   parameter depth = 16;

   parameter addrbits = 4;

   parameter muxbits = 2;

   input [width-1:0]  x0;
   output [width-1:0]  y0;
   wire [width-1:0]  t0;
   wire [width-1:0]  s0;
   input [width-1:0]  x1;
   output [width-1:0]  y1;
   wire [width-1:0]  t1;
   wire [width-1:0]  s1;
   input [width-1:0]  x2;
   output [width-1:0]  y2;
   wire [width-1:0]  t2;
   wire [width-1:0]  s2;
   input [width-1:0]  x3;
   output [width-1:0]  y3;
   wire [width-1:0]  t3;
   wire [width-1:0]  s3;
   input next, reset, clk;
   output next_out;
   reg [addrbits-1:0] s1rdloc, s2rdloc;

    reg [addrbits-1:0] s1wr0;
   reg [addrbits-1:0] s1rd0, s2wr0, s2rd0;
   reg [addrbits-1:0] s1rd1, s2wr1, s2rd1;
   reg [addrbits-1:0] s1rd2, s2wr2, s2rd2;
   reg [addrbits-1:0] s1rd3, s2wr3, s2rd3;
   reg s1wr_en, state1, state2, state3;
   wire 	      next2, next3, next4;
   reg 		      inFlip0, outFlip0_z, outFlip1;
   wire 	      inFlip1, outFlip0;

   wire [0:0] tm10;
   assign tm10 = 0;

shiftRegFIFO #(4, 1) shiftFIFO_27352(.X(outFlip0), .Y(inFlip1), .clk(clk));
shiftRegFIFO #(1, 1) shiftFIFO_27353(.X(outFlip0_z), .Y(outFlip0), .clk(clk));
//   shiftRegFIFO #(2, 1) inFlip1Reg(outFlip0, inFlip1, clk);
//   shiftRegFIFO #(1, 1) outFlip0Reg(outFlip0_z, outFlip0, clk);
   
   memMod_dist #(depth*2, width, addrbits+1) s1mem0(x0, t0, {inFlip0, s1wr0}, {outFlip0, s1rd0}, s1wr_en, clk);
   memMod_dist #(depth*2, width, addrbits+1) s1mem1(x1, t1, {inFlip0, s1wr0}, {outFlip0, s1rd1}, s1wr_en, clk);
   memMod_dist #(depth*2, width, addrbits+1) s1mem2(x2, t2, {inFlip0, s1wr0}, {outFlip0, s1rd2}, s1wr_en, clk);
   memMod_dist #(depth*2, width, addrbits+1) s1mem3(x3, t3, {inFlip0, s1wr0}, {outFlip0, s1rd3}, s1wr_en, clk);

nextReg #(15, 4) nextReg_27364(.X(next), .Y(next2), .reset(reset), .clk(clk));
shiftRegFIFO #(5, 1) shiftFIFO_27365(.X(next2), .Y(next3), .clk(clk));
nextReg #(16, 4) nextReg_27368(.X(next3), .Y(next4), .reset(reset), .clk(clk));
shiftRegFIFO #(1, 1) shiftFIFO_27369(.X(next4), .Y(next_out), .clk(clk));
shiftRegFIFO #(15, 1) shiftFIFO_27372(.X(tm10), .Y(tm10_d), .clk(clk));
shiftRegFIFO #(4, 1) shiftFIFO_27375(.X(tm10_d), .Y(tm10_dd), .clk(clk));
   
   wire [addrbits-1:0] 	      muxCycle, writeCycle;
assign muxCycle = s1rdloc;
shiftRegFIFO #(4, 4) shiftFIFO_27380(.X(muxCycle), .Y(writeCycle), .clk(clk));
        
   wire 		      readInt, s2wr_en;   
   assign 		      readInt = (state2 == 1);

   shiftRegFIFO #(5, 1) writeIntReg(readInt, s2wr_en, clk);

   memMod_dist #(depth*2, width, addrbits+1) s2mem0(s0, y0, {inFlip1, s2wr0}, {outFlip1, s2rdloc}, s2wr_en, clk);
   memMod_dist #(depth*2, width, addrbits+1) s2mem1(s1, y1, {inFlip1, s2wr1}, {outFlip1, s2rdloc}, s2wr_en, clk);
   memMod_dist #(depth*2, width, addrbits+1) s2mem2(s2, y2, {inFlip1, s2wr2}, {outFlip1, s2rdloc}, s2wr_en, clk);
   memMod_dist #(depth*2, width, addrbits+1) s2mem3(s3, y3, {inFlip1, s2wr3}, {outFlip1, s2rdloc}, s2wr_en, clk);
   always @(posedge clk) begin
      if (reset == 1) begin
	 state1 <= 0;
	 inFlip0 <= 0;	 
	 s1wr0 <= 0;
      end
      else if (next == 1) begin
	 s1wr0 <= 0;
	 state1 <= 1;
	 s1wr_en <= 1;
	 inFlip0 <= (s1wr0 == depth-1) ? ~inFlip0 : inFlip0;
      end
      else begin
	 case(state1)
	   0: begin
	      s1wr0 <= 0;
	      state1 <= 0;
	      s1wr_en <= 0;
	      inFlip0 <= inFlip0;	      
	   end
	   1: begin
	      s1wr0 <= (s1wr0 == depth-1) ? 0 : s1wr0 + 1;
	      state1 <= 1;
         s1wr_en <= 1;
	      inFlip0 <= (s1wr0 == depth-1) ? ~inFlip0 : inFlip0;
	   end
	 endcase
      end      
   end
   
   always @(posedge clk) begin
      if (reset == 1) begin
	       state2 <= 0;
	       outFlip0_z <= 0;	 
      end
      else if (next2 == 1) begin
	       s1rdloc <= 0;
	       state2 <= 1;
	       outFlip0_z <= (s1rdloc == depth-1) ? ~outFlip0_z : outFlip0_z;
      end
      else begin
	 case(state2)
	   0: begin
	      s1rdloc <= 0;
	      state2 <= 0;
	      outFlip0_z <= outFlip0_z;	 
	   end
	   1: begin
	      s1rdloc <= (s1rdloc == depth-1) ? 0 : s1rdloc + 1;
         state2 <= 1;
	      outFlip0_z <= (s1rdloc == depth-1) ? ~outFlip0_z : outFlip0_z;
	   end	     
	 endcase
      end
   end
   
   always @(posedge clk) begin
      if (reset == 1) begin
	 state3 <= 0;
	 outFlip1 <= 0;	 
      end
      else if (next4 == 1) begin
	 s2rdloc <= 0;
	 state3 <= 1;
	 outFlip1 <= (s2rdloc == depth-1) ? ~outFlip1 : outFlip1;	      
      end
      else begin
	 case(state3)
	   0: begin
	      s2rdloc <= 0;
	      state3 <= 0;
	      outFlip1 <= outFlip1;
	   end
	   1: begin
	      s2rdloc <= (s2rdloc == depth-1) ? 0 : s2rdloc + 1;
         state3 <= 1;
	      outFlip1 <= (s2rdloc == depth-1) ? ~outFlip1 : outFlip1;
	   end	     
	 endcase
      end
   end
   always @(posedge clk) begin
      case({tm10_d, s1rdloc})
	     {1'd0,  4'd0}: s1rd0 <= 12;
	     {1'd0,  4'd1}: s1rd0 <= 13;
	     {1'd0,  4'd2}: s1rd0 <= 14;
	     {1'd0,  4'd3}: s1rd0 <= 15;
	     {1'd0,  4'd4}: s1rd0 <= 8;
	     {1'd0,  4'd5}: s1rd0 <= 9;
	     {1'd0,  4'd6}: s1rd0 <= 10;
	     {1'd0,  4'd7}: s1rd0 <= 11;
	     {1'd0,  4'd8}: s1rd0 <= 4;
	     {1'd0,  4'd9}: s1rd0 <= 5;
	     {1'd0,  4'd10}: s1rd0 <= 6;
	     {1'd0,  4'd11}: s1rd0 <= 7;
	     {1'd0,  4'd12}: s1rd0 <= 0;
	     {1'd0,  4'd13}: s1rd0 <= 1;
	     {1'd0,  4'd14}: s1rd0 <= 2;
	     {1'd0,  4'd15}: s1rd0 <= 3;
      endcase      
   end

// synthesis attribute rom_style of s1rd0 is "distributed"
   always @(posedge clk) begin
      case({tm10_d, s1rdloc})
	     {1'd0,  4'd0}: s1rd1 <= 8;
	     {1'd0,  4'd1}: s1rd1 <= 9;
	     {1'd0,  4'd2}: s1rd1 <= 10;
	     {1'd0,  4'd3}: s1rd1 <= 11;
	     {1'd0,  4'd4}: s1rd1 <= 12;
	     {1'd0,  4'd5}: s1rd1 <= 13;
	     {1'd0,  4'd6}: s1rd1 <= 14;
	     {1'd0,  4'd7}: s1rd1 <= 15;
	     {1'd0,  4'd8}: s1rd1 <= 0;
	     {1'd0,  4'd9}: s1rd1 <= 1;
	     {1'd0,  4'd10}: s1rd1 <= 2;
	     {1'd0,  4'd11}: s1rd1 <= 3;
	     {1'd0,  4'd12}: s1rd1 <= 4;
	     {1'd0,  4'd13}: s1rd1 <= 5;
	     {1'd0,  4'd14}: s1rd1 <= 6;
	     {1'd0,  4'd15}: s1rd1 <= 7;
      endcase      
   end

// synthesis attribute rom_style of s1rd1 is "distributed"
   always @(posedge clk) begin
      case({tm10_d, s1rdloc})
	     {1'd0,  4'd0}: s1rd2 <= 4;
	     {1'd0,  4'd1}: s1rd2 <= 5;
	     {1'd0,  4'd2}: s1rd2 <= 6;
	     {1'd0,  4'd3}: s1rd2 <= 7;
	     {1'd0,  4'd4}: s1rd2 <= 0;
	     {1'd0,  4'd5}: s1rd2 <= 1;
	     {1'd0,  4'd6}: s1rd2 <= 2;
	     {1'd0,  4'd7}: s1rd2 <= 3;
	     {1'd0,  4'd8}: s1rd2 <= 12;
	     {1'd0,  4'd9}: s1rd2 <= 13;
	     {1'd0,  4'd10}: s1rd2 <= 14;
	     {1'd0,  4'd11}: s1rd2 <= 15;
	     {1'd0,  4'd12}: s1rd2 <= 8;
	     {1'd0,  4'd13}: s1rd2 <= 9;
	     {1'd0,  4'd14}: s1rd2 <= 10;
	     {1'd0,  4'd15}: s1rd2 <= 11;
      endcase      
   end

// synthesis attribute rom_style of s1rd2 is "distributed"
   always @(posedge clk) begin
      case({tm10_d, s1rdloc})
	     {1'd0,  4'd0}: s1rd3 <= 0;
	     {1'd0,  4'd1}: s1rd3 <= 1;
	     {1'd0,  4'd2}: s1rd3 <= 2;
	     {1'd0,  4'd3}: s1rd3 <= 3;
	     {1'd0,  4'd4}: s1rd3 <= 4;
	     {1'd0,  4'd5}: s1rd3 <= 5;
	     {1'd0,  4'd6}: s1rd3 <= 6;
	     {1'd0,  4'd7}: s1rd3 <= 7;
	     {1'd0,  4'd8}: s1rd3 <= 8;
	     {1'd0,  4'd9}: s1rd3 <= 9;
	     {1'd0,  4'd10}: s1rd3 <= 10;
	     {1'd0,  4'd11}: s1rd3 <= 11;
	     {1'd0,  4'd12}: s1rd3 <= 12;
	     {1'd0,  4'd13}: s1rd3 <= 13;
	     {1'd0,  4'd14}: s1rd3 <= 14;
	     {1'd0,  4'd15}: s1rd3 <= 15;
      endcase      
   end

// synthesis attribute rom_style of s1rd3 is "distributed"
    swNet21215 sw(tm10_d, clk, muxCycle, t0, s0, t1, s1, t2, s2, t3, s3);

   always @(posedge clk) begin
      case({tm10_dd, writeCycle})
	      {1'd0, 4'd0}: s2wr0 <= 12;
	      {1'd0, 4'd1}: s2wr0 <= 13;
	      {1'd0, 4'd2}: s2wr0 <= 14;
	      {1'd0, 4'd3}: s2wr0 <= 15;
	      {1'd0, 4'd4}: s2wr0 <= 8;
	      {1'd0, 4'd5}: s2wr0 <= 9;
	      {1'd0, 4'd6}: s2wr0 <= 10;
	      {1'd0, 4'd7}: s2wr0 <= 11;
	      {1'd0, 4'd8}: s2wr0 <= 4;
	      {1'd0, 4'd9}: s2wr0 <= 5;
	      {1'd0, 4'd10}: s2wr0 <= 6;
	      {1'd0, 4'd11}: s2wr0 <= 7;
	      {1'd0, 4'd12}: s2wr0 <= 0;
	      {1'd0, 4'd13}: s2wr0 <= 1;
	      {1'd0, 4'd14}: s2wr0 <= 2;
	      {1'd0, 4'd15}: s2wr0 <= 3;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr0 is "distributed"
   always @(posedge clk) begin
      case({tm10_dd, writeCycle})
	      {1'd0, 4'd0}: s2wr1 <= 8;
	      {1'd0, 4'd1}: s2wr1 <= 9;
	      {1'd0, 4'd2}: s2wr1 <= 10;
	      {1'd0, 4'd3}: s2wr1 <= 11;
	      {1'd0, 4'd4}: s2wr1 <= 12;
	      {1'd0, 4'd5}: s2wr1 <= 13;
	      {1'd0, 4'd6}: s2wr1 <= 14;
	      {1'd0, 4'd7}: s2wr1 <= 15;
	      {1'd0, 4'd8}: s2wr1 <= 0;
	      {1'd0, 4'd9}: s2wr1 <= 1;
	      {1'd0, 4'd10}: s2wr1 <= 2;
	      {1'd0, 4'd11}: s2wr1 <= 3;
	      {1'd0, 4'd12}: s2wr1 <= 4;
	      {1'd0, 4'd13}: s2wr1 <= 5;
	      {1'd0, 4'd14}: s2wr1 <= 6;
	      {1'd0, 4'd15}: s2wr1 <= 7;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr1 is "distributed"
   always @(posedge clk) begin
      case({tm10_dd, writeCycle})
	      {1'd0, 4'd0}: s2wr2 <= 4;
	      {1'd0, 4'd1}: s2wr2 <= 5;
	      {1'd0, 4'd2}: s2wr2 <= 6;
	      {1'd0, 4'd3}: s2wr2 <= 7;
	      {1'd0, 4'd4}: s2wr2 <= 0;
	      {1'd0, 4'd5}: s2wr2 <= 1;
	      {1'd0, 4'd6}: s2wr2 <= 2;
	      {1'd0, 4'd7}: s2wr2 <= 3;
	      {1'd0, 4'd8}: s2wr2 <= 12;
	      {1'd0, 4'd9}: s2wr2 <= 13;
	      {1'd0, 4'd10}: s2wr2 <= 14;
	      {1'd0, 4'd11}: s2wr2 <= 15;
	      {1'd0, 4'd12}: s2wr2 <= 8;
	      {1'd0, 4'd13}: s2wr2 <= 9;
	      {1'd0, 4'd14}: s2wr2 <= 10;
	      {1'd0, 4'd15}: s2wr2 <= 11;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr2 is "distributed"
   always @(posedge clk) begin
      case({tm10_dd, writeCycle})
	      {1'd0, 4'd0}: s2wr3 <= 0;
	      {1'd0, 4'd1}: s2wr3 <= 1;
	      {1'd0, 4'd2}: s2wr3 <= 2;
	      {1'd0, 4'd3}: s2wr3 <= 3;
	      {1'd0, 4'd4}: s2wr3 <= 4;
	      {1'd0, 4'd5}: s2wr3 <= 5;
	      {1'd0, 4'd6}: s2wr3 <= 6;
	      {1'd0, 4'd7}: s2wr3 <= 7;
	      {1'd0, 4'd8}: s2wr3 <= 8;
	      {1'd0, 4'd9}: s2wr3 <= 9;
	      {1'd0, 4'd10}: s2wr3 <= 10;
	      {1'd0, 4'd11}: s2wr3 <= 11;
	      {1'd0, 4'd12}: s2wr3 <= 12;
	      {1'd0, 4'd13}: s2wr3 <= 13;
	      {1'd0, 4'd14}: s2wr3 <= 14;
	      {1'd0, 4'd15}: s2wr3 <= 15;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr3 is "distributed"
endmodule


// Latency: 8
// Gap: 16
module DirSum_21686(clk, reset, next, next_out,
      X0, Y0,
      X1, Y1,
      X2, Y2,
      X3, Y3,
      X4, Y4,
      X5, Y5,
      X6, Y6,
      X7, Y7);

   output next_out;
   input clk, reset, next;

   reg [3:0] i3;

   input [15:0] X0,
      X1,
      X2,
      X3,
      X4,
      X5,
      X6,
      X7;

   output [15:0] Y0,
      Y1,
      Y2,
      Y3,
      Y4,
      Y5,
      Y6,
      Y7;

   always @(posedge clk) begin
      if (reset == 1) begin
         i3 <= 0;
      end
      else begin
         if (next == 1)
            i3 <= 0;
         else if (i3 == 15)
            i3 <= 0;
         else
            i3 <= i3 + 1;
      end
   end

   codeBlock21220 codeBlockIsnt27385(.clk(clk), .reset(reset), .next_in(next), .next_out(next_out),
.i3_in(i3),
       .X0_in(X0), .Y0(Y0),
       .X1_in(X1), .Y1(Y1),
       .X2_in(X2), .Y2(Y2),
       .X3_in(X3), .Y3(Y3),
       .X4_in(X4), .Y4(Y4),
       .X5_in(X5), .Y5(Y5),
       .X6_in(X6), .Y6(Y6),
       .X7_in(X7), .Y7(Y7));

endmodule

module D30_21558(addr, out, clk);
   input clk;
   output [15:0] out;
   reg [15:0] out, out2, out3;
   input [3:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 16'h0;
      1: out3 <= 16'hed6c;
      2: out3 <= 16'hdc72;
      3: out3 <= 16'hce87;
      4: out3 <= 16'hc4df;
      5: out3 <= 16'hc04f;
      6: out3 <= 16'hc13b;
      7: out3 <= 16'hc78f;
      8: out3 <= 16'hd2bf;
      9: out3 <= 16'he1d5;
      10: out3 <= 16'hf384;
      11: out3 <= 16'h646;
      12: out3 <= 16'h187e;
      13: out3 <= 16'h289a;
      14: out3 <= 16'h3537;
      15: out3 <= 16'h3d3f;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



module D29_21576(addr, out, clk);
   input clk;
   output [15:0] out;
   reg [15:0] out, out2, out3;
   input [3:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 16'h0;
      1: out3 <= 16'hf384;
      2: out3 <= 16'he782;
      3: out3 <= 16'hdc72;
      4: out3 <= 16'hd2bf;
      5: out3 <= 16'hcac9;
      6: out3 <= 16'hc4df;
      7: out3 <= 16'hc13b;
      8: out3 <= 16'hc000;
      9: out3 <= 16'hc13b;
      10: out3 <= 16'hc4df;
      11: out3 <= 16'hcac9;
      12: out3 <= 16'hd2bf;
      13: out3 <= 16'hdc72;
      14: out3 <= 16'he782;
      15: out3 <= 16'hf384;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



module D28_21594(addr, out, clk);
   input clk;
   output [15:0] out;
   reg [15:0] out, out2, out3;
   input [3:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 16'h0;
      1: out3 <= 16'hf9ba;
      2: out3 <= 16'hf384;
      3: out3 <= 16'hed6c;
      4: out3 <= 16'he782;
      5: out3 <= 16'he1d5;
      6: out3 <= 16'hdc72;
      7: out3 <= 16'hd766;
      8: out3 <= 16'hd2bf;
      9: out3 <= 16'hce87;
      10: out3 <= 16'hcac9;
      11: out3 <= 16'hc78f;
      12: out3 <= 16'hc4df;
      13: out3 <= 16'hc2c1;
      14: out3 <= 16'hc13b;
      15: out3 <= 16'hc04f;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



module D26_21630(addr, out, clk);
   input clk;
   output [15:0] out;
   reg [15:0] out, out2, out3;
   input [3:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 16'h4000;
      1: out3 <= 16'h3d3f;
      2: out3 <= 16'h3537;
      3: out3 <= 16'h289a;
      4: out3 <= 16'h187e;
      5: out3 <= 16'h646;
      6: out3 <= 16'hf384;
      7: out3 <= 16'he1d5;
      8: out3 <= 16'hd2bf;
      9: out3 <= 16'hc78f;
      10: out3 <= 16'hc13b;
      11: out3 <= 16'hc04f;
      12: out3 <= 16'hc4df;
      13: out3 <= 16'hce87;
      14: out3 <= 16'hdc72;
      15: out3 <= 16'hed6c;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



module D25_21648(addr, out, clk);
   input clk;
   output [15:0] out;
   reg [15:0] out, out2, out3;
   input [3:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 16'h4000;
      1: out3 <= 16'h3ec5;
      2: out3 <= 16'h3b21;
      3: out3 <= 16'h3537;
      4: out3 <= 16'h2d41;
      5: out3 <= 16'h238e;
      6: out3 <= 16'h187e;
      7: out3 <= 16'hc7c;
      8: out3 <= 16'h0;
      9: out3 <= 16'hf384;
      10: out3 <= 16'he782;
      11: out3 <= 16'hdc72;
      12: out3 <= 16'hd2bf;
      13: out3 <= 16'hcac9;
      14: out3 <= 16'hc4df;
      15: out3 <= 16'hc13b;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



module D24_21666(addr, out, clk);
   input clk;
   output [15:0] out;
   reg [15:0] out, out2, out3;
   input [3:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 16'h4000;
      1: out3 <= 16'h3fb1;
      2: out3 <= 16'h3ec5;
      3: out3 <= 16'h3d3f;
      4: out3 <= 16'h3b21;
      5: out3 <= 16'h3871;
      6: out3 <= 16'h3537;
      7: out3 <= 16'h3179;
      8: out3 <= 16'h2d41;
      9: out3 <= 16'h289a;
      10: out3 <= 16'h238e;
      11: out3 <= 16'h1e2b;
      12: out3 <= 16'h187e;
      13: out3 <= 16'h1294;
      14: out3 <= 16'hc7c;
      15: out3 <= 16'h646;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



// Latency: 8
// Gap: 1
module codeBlock21220(clk, reset, next_in, next_out,
   i3_in,
   X0_in, Y0,
   X1_in, Y1,
   X2_in, Y2,
   X3_in, Y3,
   X4_in, Y4,
   X5_in, Y5,
   X6_in, Y6,
   X7_in, Y7);

   output next_out;
   input clk, reset, next_in;

   reg next;
   input [3:0] i3_in;
   reg [3:0] i3;

   input [15:0] X0_in,
      X1_in,
      X2_in,
      X3_in,
      X4_in,
      X5_in,
      X6_in,
      X7_in;

   reg   [15:0] X0,
      X1,
      X2,
      X3,
      X4,
      X5,
      X6,
      X7;

   output [15:0] Y0,
      Y1,
      Y2,
      Y3,
      Y4,
      Y5,
      Y6,
      Y7;

   shiftRegFIFO #(7, 1) shiftFIFO_27388(.X(next), .Y(next_out), .clk(clk));


   wire signed [15:0] a345;
   wire signed [15:0] a322;
   wire signed [15:0] a348;
   wire signed [15:0] a326;
   wire signed [15:0] a349;
   wire signed [15:0] a350;
   wire signed [15:0] a353;
   wire signed [15:0] a354;
   wire signed [15:0] a357;
   wire signed [15:0] a358;
   reg signed [15:0] tm300;
   reg signed [15:0] tm304;
   reg signed [15:0] tm316;
   reg signed [15:0] tm320;
   reg signed [15:0] tm332;
   reg signed [15:0] tm336;
   reg signed [15:0] tm348;
   reg signed [15:0] tm355;
   reg signed [15:0] tm301;
   reg signed [15:0] tm305;
   reg signed [15:0] tm317;
   reg signed [15:0] tm321;
   reg signed [15:0] tm333;
   reg signed [15:0] tm337;
   reg signed [15:0] tm349;
   reg signed [15:0] tm356;
   wire signed [15:0] tm13;
   wire signed [15:0] a327;
   wire signed [15:0] tm14;
   wire signed [15:0] a329;
   wire signed [15:0] tm15;
   wire signed [15:0] a333;
   wire signed [15:0] tm16;
   wire signed [15:0] a335;
   wire signed [15:0] tm17;
   wire signed [15:0] a339;
   wire signed [15:0] tm18;
   wire signed [15:0] a341;
   reg signed [15:0] tm302;
   reg signed [15:0] tm306;
   reg signed [15:0] tm318;
   reg signed [15:0] tm322;
   reg signed [15:0] tm334;
   reg signed [15:0] tm338;
   reg signed [15:0] tm350;
   reg signed [15:0] tm357;
   reg signed [15:0] tm58;
   reg signed [15:0] tm59;
   reg signed [15:0] tm62;
   reg signed [15:0] tm63;
   reg signed [15:0] tm66;
   reg signed [15:0] tm67;
   reg signed [15:0] tm303;
   reg signed [15:0] tm307;
   reg signed [15:0] tm319;
   reg signed [15:0] tm323;
   reg signed [15:0] tm335;
   reg signed [15:0] tm339;
   reg signed [15:0] tm351;
   reg signed [15:0] tm358;
   reg signed [15:0] tm352;
   reg signed [15:0] tm359;
   wire signed [15:0] a328;
   wire signed [15:0] a330;
   wire signed [15:0] a331;
   wire signed [15:0] a332;
   wire signed [15:0] a334;
   wire signed [15:0] a336;
   wire signed [15:0] a337;
   wire signed [15:0] a338;
   wire signed [15:0] a340;
   wire signed [15:0] a342;
   wire signed [15:0] a343;
   wire signed [15:0] a344;
   reg signed [15:0] tm353;
   reg signed [15:0] tm360;
   wire signed [15:0] Y0;
   wire signed [15:0] Y1;
   wire signed [15:0] Y2;
   wire signed [15:0] Y3;
   wire signed [15:0] Y4;
   wire signed [15:0] Y5;
   wire signed [15:0] Y6;
   wire signed [15:0] Y7;
   reg signed [15:0] tm354;
   reg signed [15:0] tm361;


   assign a345 = X0;
   assign a322 = a345;
   assign a348 = X1;
   assign a326 = a348;
   assign a349 = X2;
   assign a350 = X3;
   assign a353 = X4;
   assign a354 = X5;
   assign a357 = X6;
   assign a358 = X7;
   assign a327 = tm13;
   assign a329 = tm14;
   assign a333 = tm15;
   assign a335 = tm16;
   assign a339 = tm17;
   assign a341 = tm18;
   assign Y0 = tm354;
   assign Y1 = tm361;

   D30_21558 instD30inst0_21558(.addr(i3[3:0]), .out(tm18), .clk(clk));

   D29_21576 instD29inst0_21576(.addr(i3[3:0]), .out(tm16), .clk(clk));

   D28_21594 instD28inst0_21594(.addr(i3[3:0]), .out(tm14), .clk(clk));

   D26_21630 instD26inst0_21630(.addr(i3[3:0]), .out(tm17), .clk(clk));

   D25_21648 instD25inst0_21648(.addr(i3[3:0]), .out(tm15), .clk(clk));

   D24_21666 instD24inst0_21666(.addr(i3[3:0]), .out(tm13), .clk(clk));

    multfix #(16, 2) m21319(.a(tm58), .b(tm303), .clk(clk), .q_sc(a328), .q_unsc(), .rst(reset));
    multfix #(16, 2) m21341(.a(tm59), .b(tm307), .clk(clk), .q_sc(a330), .q_unsc(), .rst(reset));
    multfix #(16, 2) m21359(.a(tm59), .b(tm303), .clk(clk), .q_sc(a331), .q_unsc(), .rst(reset));
    multfix #(16, 2) m21370(.a(tm58), .b(tm307), .clk(clk), .q_sc(a332), .q_unsc(), .rst(reset));
    multfix #(16, 2) m21399(.a(tm62), .b(tm319), .clk(clk), .q_sc(a334), .q_unsc(), .rst(reset));
    multfix #(16, 2) m21421(.a(tm63), .b(tm323), .clk(clk), .q_sc(a336), .q_unsc(), .rst(reset));
    multfix #(16, 2) m21439(.a(tm63), .b(tm319), .clk(clk), .q_sc(a337), .q_unsc(), .rst(reset));
    multfix #(16, 2) m21450(.a(tm62), .b(tm323), .clk(clk), .q_sc(a338), .q_unsc(), .rst(reset));
    multfix #(16, 2) m21479(.a(tm66), .b(tm335), .clk(clk), .q_sc(a340), .q_unsc(), .rst(reset));
    multfix #(16, 2) m21501(.a(tm67), .b(tm339), .clk(clk), .q_sc(a342), .q_unsc(), .rst(reset));
    multfix #(16, 2) m21519(.a(tm67), .b(tm335), .clk(clk), .q_sc(a343), .q_unsc(), .rst(reset));
    multfix #(16, 2) m21530(.a(tm66), .b(tm339), .clk(clk), .q_sc(a344), .q_unsc(), .rst(reset));
    subfxp #(16, 1) sub21348(.a(a328), .b(a330), .clk(clk), .q(Y2));    // 6
    addfxp #(16, 1) add21377(.a(a331), .b(a332), .clk(clk), .q(Y3));    // 6
    subfxp #(16, 1) sub21428(.a(a334), .b(a336), .clk(clk), .q(Y4));    // 6
    addfxp #(16, 1) add21457(.a(a337), .b(a338), .clk(clk), .q(Y5));    // 6
    subfxp #(16, 1) sub21508(.a(a340), .b(a342), .clk(clk), .q(Y6));    // 6
    addfxp #(16, 1) add21537(.a(a343), .b(a344), .clk(clk), .q(Y7));    // 6


   always @(posedge clk) begin
      if (reset == 1) begin
         tm58 <= 0;
         tm303 <= 0;
         tm59 <= 0;
         tm307 <= 0;
         tm59 <= 0;
         tm303 <= 0;
         tm58 <= 0;
         tm307 <= 0;
         tm62 <= 0;
         tm319 <= 0;
         tm63 <= 0;
         tm323 <= 0;
         tm63 <= 0;
         tm319 <= 0;
         tm62 <= 0;
         tm323 <= 0;
         tm66 <= 0;
         tm335 <= 0;
         tm67 <= 0;
         tm339 <= 0;
         tm67 <= 0;
         tm335 <= 0;
         tm66 <= 0;
         tm339 <= 0;
      end
      else begin
         i3 <= i3_in;
         X0 <= X0_in;
         X1 <= X1_in;
         X2 <= X2_in;
         X3 <= X3_in;
         X4 <= X4_in;
         X5 <= X5_in;
         X6 <= X6_in;
         X7 <= X7_in;
         next <= next_in;
         tm300 <= a349;
         tm304 <= a350;
         tm316 <= a353;
         tm320 <= a354;
         tm332 <= a357;
         tm336 <= a358;
         tm348 <= a322;
         tm355 <= a326;
         tm301 <= tm300;
         tm305 <= tm304;
         tm317 <= tm316;
         tm321 <= tm320;
         tm333 <= tm332;
         tm337 <= tm336;
         tm349 <= tm348;
         tm356 <= tm355;
         tm302 <= tm301;
         tm306 <= tm305;
         tm318 <= tm317;
         tm322 <= tm321;
         tm334 <= tm333;
         tm338 <= tm337;
         tm350 <= tm349;
         tm357 <= tm356;
         tm58 <= a327;
         tm59 <= a329;
         tm62 <= a333;
         tm63 <= a335;
         tm66 <= a339;
         tm67 <= a341;
         tm303 <= tm302;
         tm307 <= tm306;
         tm319 <= tm318;
         tm323 <= tm322;
         tm335 <= tm334;
         tm339 <= tm338;
         tm351 <= tm350;
         tm358 <= tm357;
         tm352 <= tm351;
         tm359 <= tm358;
         tm353 <= tm352;
         tm360 <= tm359;
         tm354 <= tm353;
         tm361 <= tm360;
      end
   end
endmodule

// Latency: 3
// Gap: 1
module codeBlock21689(clk, reset, next_in, next_out,
   X0_in, Y0,
   X1_in, Y1,
   X2_in, Y2,
   X3_in, Y3,
   X4_in, Y4,
   X5_in, Y5,
   X6_in, Y6,
   X7_in, Y7);

   output next_out;
   input clk, reset, next_in;

   reg next;

   input [15:0] X0_in,
      X1_in,
      X2_in,
      X3_in,
      X4_in,
      X5_in,
      X6_in,
      X7_in;

   reg   [15:0] X0,
      X1,
      X2,
      X3,
      X4,
      X5,
      X6,
      X7;

   output [15:0] Y0,
      Y1,
      Y2,
      Y3,
      Y4,
      Y5,
      Y6,
      Y7;

   shiftRegFIFO #(2, 1) shiftFIFO_27391(.X(next), .Y(next_out), .clk(clk));


   wire signed [15:0] a257;
   wire signed [15:0] a258;
   wire signed [15:0] a259;
   wire signed [15:0] a260;
   wire signed [15:0] a265;
   wire signed [15:0] a266;
   wire signed [15:0] a267;
   wire signed [15:0] a268;
   wire signed [16:0] tm190;
   wire signed [16:0] tm191;
   wire signed [16:0] tm192;
   wire signed [16:0] tm193;
   wire signed [16:0] tm194;
   wire signed [16:0] tm195;
   wire signed [16:0] tm196;
   wire signed [16:0] tm197;
   wire signed [15:0] t369;
   wire signed [15:0] t370;
   wire signed [15:0] t371;
   wire signed [15:0] t372;
   wire signed [15:0] t373;
   wire signed [15:0] t374;
   wire signed [15:0] t375;
   wire signed [15:0] t376;
   wire signed [16:0] tm198;
   wire signed [16:0] tm199;
   wire signed [16:0] tm200;
   wire signed [16:0] tm201;
   wire signed [15:0] Y0;
   wire signed [15:0] Y1;
   wire signed [15:0] Y4;
   wire signed [15:0] Y5;
   wire signed [16:0] tm202;
   wire signed [16:0] tm203;
   wire signed [16:0] tm204;
   wire signed [16:0] tm205;
   wire signed [15:0] Y2;
   wire signed [15:0] Y3;
   wire signed [15:0] Y6;
   wire signed [15:0] Y7;
   wire signed [15:0] t377;
   wire signed [15:0] t378;
   wire signed [15:0] t379;
   wire signed [15:0] t380;
   wire signed [15:0] t381;
   wire signed [15:0] t382;
   wire signed [15:0] t383;
   wire signed [15:0] t384;


   assign a257 = X0;
   assign a258 = X4;
   assign a259 = X1;
   assign a260 = X5;
   assign a265 = X2;
   assign a266 = X6;
   assign a267 = X3;
   assign a268 = X7;
   assign t369 = tm190[16:1];
   assign t370 = tm191[16:1];
   assign t371 = tm192[16:1];
   assign t372 = tm193[16:1];
   assign t373 = tm194[16:1];
   assign t374 = tm195[16:1];
   assign t375 = tm196[16:1];
   assign t376 = tm197[16:1];
   assign Y0 = t377;
   assign Y1 = t378;
   assign Y4 = t379;
   assign Y5 = t380;
   assign Y2 = t381;
   assign Y3 = t382;
   assign Y6 = t383;
   assign Y7 = t384;
   assign t377 = tm198[16:1];
   assign t378 = tm199[16:1];
   assign t379 = tm200[16:1];
   assign t380 = tm201[16:1];
   assign t381 = tm202[16:1];
   assign t382 = tm203[16:1];
   assign t383 = tm204[16:1];
   assign t384 = tm205[16:1];

    addfxp #(17, 1) add21701(.a({{1{a257[15]}}, a257}), .b({{1{a258[15]}}, a258}), .clk(clk), .q(tm190));    // 0
    addfxp #(17, 1) add21716(.a({{1{a259[15]}}, a259}), .b({{1{a260[15]}}, a260}), .clk(clk), .q(tm191));    // 0
    subfxp #(17, 1) sub21731(.a({{1{a257[15]}}, a257}), .b({{1{a258[15]}}, a258}), .clk(clk), .q(tm192));    // 0
    subfxp #(17, 1) sub21746(.a({{1{a259[15]}}, a259}), .b({{1{a260[15]}}, a260}), .clk(clk), .q(tm193));    // 0
    addfxp #(17, 1) add21761(.a({{1{a265[15]}}, a265}), .b({{1{a266[15]}}, a266}), .clk(clk), .q(tm194));    // 0
    addfxp #(17, 1) add21776(.a({{1{a267[15]}}, a267}), .b({{1{a268[15]}}, a268}), .clk(clk), .q(tm195));    // 0
    subfxp #(17, 1) sub21791(.a({{1{a265[15]}}, a265}), .b({{1{a266[15]}}, a266}), .clk(clk), .q(tm196));    // 0
    subfxp #(17, 1) sub21806(.a({{1{a267[15]}}, a267}), .b({{1{a268[15]}}, a268}), .clk(clk), .q(tm197));    // 0
    addfxp #(17, 1) add21813(.a({{1{t369[15]}}, t369}), .b({{1{t373[15]}}, t373}), .clk(clk), .q(tm198));    // 1
    addfxp #(17, 1) add21820(.a({{1{t370[15]}}, t370}), .b({{1{t374[15]}}, t374}), .clk(clk), .q(tm199));    // 1
    subfxp #(17, 1) sub21827(.a({{1{t369[15]}}, t369}), .b({{1{t373[15]}}, t373}), .clk(clk), .q(tm200));    // 1
    subfxp #(17, 1) sub21834(.a({{1{t370[15]}}, t370}), .b({{1{t374[15]}}, t374}), .clk(clk), .q(tm201));    // 1
    addfxp #(17, 1) add21857(.a({{1{t371[15]}}, t371}), .b({{1{t376[15]}}, t376}), .clk(clk), .q(tm202));    // 1
    subfxp #(17, 1) sub21864(.a({{1{t372[15]}}, t372}), .b({{1{t375[15]}}, t375}), .clk(clk), .q(tm203));    // 1
    subfxp #(17, 1) sub21871(.a({{1{t371[15]}}, t371}), .b({{1{t376[15]}}, t376}), .clk(clk), .q(tm204));    // 1
    addfxp #(17, 1) add21878(.a({{1{t372[15]}}, t372}), .b({{1{t375[15]}}, t375}), .clk(clk), .q(tm205));    // 1


   always @(posedge clk) begin
      if (reset == 1) begin
      end
      else begin
         X0 <= X0_in;
         X1 <= X1_in;
         X2 <= X2_in;
         X3 <= X3_in;
         X4 <= X4_in;
         X5 <= X5_in;
         X6 <= X6_in;
         X7 <= X7_in;
         next <= next_in;
      end
   end
endmodule

// Latency: 133
// Gap: 64
module rc21903(clk, reset, next, next_out,
   X0, Y0,
   X1, Y1,
   X2, Y2,
   X3, Y3,
   X4, Y4,
   X5, Y5,
   X6, Y6,
   X7, Y7);

   output next_out;
   input clk, reset, next;

   input [15:0] X0,
      X1,
      X2,
      X3,
      X4,
      X5,
      X6,
      X7;

   output [15:0] Y0,
      Y1,
      Y2,
      Y3,
      Y4,
      Y5,
      Y6,
      Y7;

   wire [31:0] t0;
   wire [31:0] s0;
   assign t0 = {X0, X1};
   wire [31:0] t1;
   wire [31:0] s1;
   assign t1 = {X2, X3};
   wire [31:0] t2;
   wire [31:0] s2;
   assign t2 = {X4, X5};
   wire [31:0] t3;
   wire [31:0] s3;
   assign t3 = {X6, X7};
   assign Y0 = s0[31:16];
   assign Y1 = s0[15:0];
   assign Y2 = s1[31:16];
   assign Y3 = s1[15:0];
   assign Y4 = s2[31:16];
   assign Y5 = s2[15:0];
   assign Y6 = s3[31:16];
   assign Y7 = s3[15:0];

   perm21901 instPerm27392(.x0(t0), .y0(s0),
    .x1(t1), .y1(s1),
    .x2(t2), .y2(s2),
    .x3(t3), .y3(s3),
   .clk(clk), .next(next), .next_out(next_out), .reset(reset)
);



endmodule

module swNet21901(itr, clk, ct
,       x0, y0
,       x1, y1
,       x2, y2
,       x3, y3
);

    parameter width = 32;

    input [5:0] ct;
    input clk;
    input [0:0] itr;
    input [width-1:0] x0;
    output reg [width-1:0] y0;
    input [width-1:0] x1;
    output reg [width-1:0] y1;
    input [width-1:0] x2;
    output reg [width-1:0] y2;
    input [width-1:0] x3;
    output reg [width-1:0] y3;
    wire [width-1:0] t0_0, t0_1, t0_2, t0_3;
    wire [width-1:0] t1_0, t1_1, t1_2, t1_3;
    wire [width-1:0] t2_0, t2_1, t2_2, t2_3;
    reg [width-1:0] t3_0, t3_1, t3_2, t3_3;
    wire [width-1:0] t4_0, t4_1, t4_2, t4_3;
    reg [width-1:0] t5_0, t5_1, t5_2, t5_3;

    reg [3:0] control;

    always @(posedge clk) begin
      case(ct)
        6'd0: control <= 4'b1111;
        6'd1: control <= 4'b1111;
        6'd2: control <= 4'b1111;
        6'd3: control <= 4'b1111;
        6'd4: control <= 4'b1111;
        6'd5: control <= 4'b1111;
        6'd6: control <= 4'b1111;
        6'd7: control <= 4'b1111;
        6'd8: control <= 4'b1111;
        6'd9: control <= 4'b1111;
        6'd10: control <= 4'b1111;
        6'd11: control <= 4'b1111;
        6'd12: control <= 4'b1111;
        6'd13: control <= 4'b1111;
        6'd14: control <= 4'b1111;
        6'd15: control <= 4'b1111;
        6'd16: control <= 4'b0011;
        6'd17: control <= 4'b0011;
        6'd18: control <= 4'b0011;
        6'd19: control <= 4'b0011;
        6'd20: control <= 4'b0011;
        6'd21: control <= 4'b0011;
        6'd22: control <= 4'b0011;
        6'd23: control <= 4'b0011;
        6'd24: control <= 4'b0011;
        6'd25: control <= 4'b0011;
        6'd26: control <= 4'b0011;
        6'd27: control <= 4'b0011;
        6'd28: control <= 4'b0011;
        6'd29: control <= 4'b0011;
        6'd30: control <= 4'b0011;
        6'd31: control <= 4'b0011;
        6'd32: control <= 4'b1100;
        6'd33: control <= 4'b1100;
        6'd34: control <= 4'b1100;
        6'd35: control <= 4'b1100;
        6'd36: control <= 4'b1100;
        6'd37: control <= 4'b1100;
        6'd38: control <= 4'b1100;
        6'd39: control <= 4'b1100;
        6'd40: control <= 4'b1100;
        6'd41: control <= 4'b1100;
        6'd42: control <= 4'b1100;
        6'd43: control <= 4'b1100;
        6'd44: control <= 4'b1100;
        6'd45: control <= 4'b1100;
        6'd46: control <= 4'b1100;
        6'd47: control <= 4'b1100;
        6'd48: control <= 4'b0000;
        6'd49: control <= 4'b0000;
        6'd50: control <= 4'b0000;
        6'd51: control <= 4'b0000;
        6'd52: control <= 4'b0000;
        6'd53: control <= 4'b0000;
        6'd54: control <= 4'b0000;
        6'd55: control <= 4'b0000;
        6'd56: control <= 4'b0000;
        6'd57: control <= 4'b0000;
        6'd58: control <= 4'b0000;
        6'd59: control <= 4'b0000;
        6'd60: control <= 4'b0000;
        6'd61: control <= 4'b0000;
        6'd62: control <= 4'b0000;
        6'd63: control <= 4'b0000;
      endcase
   end

// synthesis attribute rom_style of control is "distributed"
   reg [3:0] control0;
   reg [3:0] control1;
    always @(posedge clk) begin
       control0 <= control;
        control1 <= control0;
    end
    assign t0_0 = x0;
    assign t0_1 = x2;
    assign t0_2 = x1;
    assign t0_3 = x3;
     assign t1_0 = t0_0;
     assign t1_1 = t0_1;
     assign t1_2 = t0_2;
     assign t1_3 = t0_3;
    assign t2_0 = t1_0;
    assign t2_1 = t1_2;
    assign t2_2 = t1_1;
    assign t2_3 = t1_3;
   always @(posedge clk) begin
         t3_0 <= (control0[3] == 0) ? t2_0 : t2_1;
         t3_1 <= (control0[3] == 0) ? t2_1 : t2_0;
         t3_2 <= (control0[2] == 0) ? t2_2 : t2_3;
         t3_3 <= (control0[2] == 0) ? t2_3 : t2_2;
   end
    assign t4_0 = t3_0;
    assign t4_1 = t3_2;
    assign t4_2 = t3_1;
    assign t4_3 = t3_3;
   always @(posedge clk) begin
         t5_0 <= (control1[1] == 0) ? t4_0 : t4_1;
         t5_1 <= (control1[1] == 0) ? t4_1 : t4_0;
         t5_2 <= (control1[0] == 0) ? t4_2 : t4_3;
         t5_3 <= (control1[0] == 0) ? t4_3 : t4_2;
   end
    always @(posedge clk) begin
        y0 <= t5_0;
        y1 <= t5_2;
        y2 <= t5_1;
        y3 <= t5_3;
    end
endmodule

// Latency: 133
// Gap: 64
module perm21901(clk, next, reset, next_out,
   x0, y0,
   x1, y1,
   x2, y2,
   x3, y3);
   parameter width = 32;

   parameter depth = 64;

   parameter addrbits = 6;

   parameter muxbits = 2;

   input [width-1:0]  x0;
   output [width-1:0]  y0;
   wire [width-1:0]  t0;
   wire [width-1:0]  s0;
   input [width-1:0]  x1;
   output [width-1:0]  y1;
   wire [width-1:0]  t1;
   wire [width-1:0]  s1;
   input [width-1:0]  x2;
   output [width-1:0]  y2;
   wire [width-1:0]  t2;
   wire [width-1:0]  s2;
   input [width-1:0]  x3;
   output [width-1:0]  y3;
   wire [width-1:0]  t3;
   wire [width-1:0]  s3;
   input next, reset, clk;
   output next_out;
   reg [addrbits-1:0] s1rdloc, s2rdloc;

    reg [addrbits-1:0] s1wr0;
   reg [addrbits-1:0] s1rd0, s2wr0, s2rd0;
   reg [addrbits-1:0] s1rd1, s2wr1, s2rd1;
   reg [addrbits-1:0] s1rd2, s2wr2, s2rd2;
   reg [addrbits-1:0] s1rd3, s2wr3, s2rd3;
   reg s1wr_en, state1, state2, state3;
   wire 	      next2, next3, next4;
   reg 		      inFlip0, outFlip0_z, outFlip1;
   wire 	      inFlip1, outFlip0;

   wire [0:0] tm19;
   assign tm19 = 0;

shiftRegFIFO #(4, 1) shiftFIFO_27397(.X(outFlip0), .Y(inFlip1), .clk(clk));
shiftRegFIFO #(1, 1) shiftFIFO_27398(.X(outFlip0_z), .Y(outFlip0), .clk(clk));
//   shiftRegFIFO #(2, 1) inFlip1Reg(outFlip0, inFlip1, clk);
//   shiftRegFIFO #(1, 1) outFlip0Reg(outFlip0_z, outFlip0, clk);
   
   memMod_dist #(depth*2, width, addrbits+1) s1mem0(x0, t0, {inFlip0, s1wr0}, {outFlip0, s1rd0}, s1wr_en, clk);
   memMod_dist #(depth*2, width, addrbits+1) s1mem1(x1, t1, {inFlip0, s1wr0}, {outFlip0, s1rd1}, s1wr_en, clk);
   memMod_dist #(depth*2, width, addrbits+1) s1mem2(x2, t2, {inFlip0, s1wr0}, {outFlip0, s1rd2}, s1wr_en, clk);
   memMod_dist #(depth*2, width, addrbits+1) s1mem3(x3, t3, {inFlip0, s1wr0}, {outFlip0, s1rd3}, s1wr_en, clk);

nextReg #(63, 6) nextReg_27409(.X(next), .Y(next2), .reset(reset), .clk(clk));
shiftRegFIFO #(5, 1) shiftFIFO_27410(.X(next2), .Y(next3), .clk(clk));
nextReg #(64, 6) nextReg_27413(.X(next3), .Y(next4), .reset(reset), .clk(clk));
shiftRegFIFO #(1, 1) shiftFIFO_27414(.X(next4), .Y(next_out), .clk(clk));
shiftRegFIFO #(63, 1) shiftFIFO_27417(.X(tm19), .Y(tm19_d), .clk(clk));
shiftRegFIFO #(4, 1) shiftFIFO_27420(.X(tm19_d), .Y(tm19_dd), .clk(clk));
   
   wire [addrbits-1:0] 	      muxCycle, writeCycle;
assign muxCycle = s1rdloc;
shiftRegFIFO #(4, 6) shiftFIFO_27425(.X(muxCycle), .Y(writeCycle), .clk(clk));
        
   wire 		      readInt, s2wr_en;   
   assign 		      readInt = (state2 == 1);

   shiftRegFIFO #(5, 1) writeIntReg(readInt, s2wr_en, clk);

   memMod_dist #(depth*2, width, addrbits+1) s2mem0(s0, y0, {inFlip1, s2wr0}, {outFlip1, s2rdloc}, s2wr_en, clk);
   memMod_dist #(depth*2, width, addrbits+1) s2mem1(s1, y1, {inFlip1, s2wr1}, {outFlip1, s2rdloc}, s2wr_en, clk);
   memMod_dist #(depth*2, width, addrbits+1) s2mem2(s2, y2, {inFlip1, s2wr2}, {outFlip1, s2rdloc}, s2wr_en, clk);
   memMod_dist #(depth*2, width, addrbits+1) s2mem3(s3, y3, {inFlip1, s2wr3}, {outFlip1, s2rdloc}, s2wr_en, clk);
   always @(posedge clk) begin
      if (reset == 1) begin
	 state1 <= 0;
	 inFlip0 <= 0;	 
	 s1wr0 <= 0;
      end
      else if (next == 1) begin
	 s1wr0 <= 0;
	 state1 <= 1;
	 s1wr_en <= 1;
	 inFlip0 <= (s1wr0 == depth-1) ? ~inFlip0 : inFlip0;
      end
      else begin
	 case(state1)
	   0: begin
	      s1wr0 <= 0;
	      state1 <= 0;
	      s1wr_en <= 0;
	      inFlip0 <= inFlip0;	      
	   end
	   1: begin
	      s1wr0 <= (s1wr0 == depth-1) ? 0 : s1wr0 + 1;
	      state1 <= 1;
         s1wr_en <= 1;
	      inFlip0 <= (s1wr0 == depth-1) ? ~inFlip0 : inFlip0;
	   end
	 endcase
      end      
   end
   
   always @(posedge clk) begin
      if (reset == 1) begin
	       state2 <= 0;
	       outFlip0_z <= 0;	 
      end
      else if (next2 == 1) begin
	       s1rdloc <= 0;
	       state2 <= 1;
	       outFlip0_z <= (s1rdloc == depth-1) ? ~outFlip0_z : outFlip0_z;
      end
      else begin
	 case(state2)
	   0: begin
	      s1rdloc <= 0;
	      state2 <= 0;
	      outFlip0_z <= outFlip0_z;	 
	   end
	   1: begin
	      s1rdloc <= (s1rdloc == depth-1) ? 0 : s1rdloc + 1;
         state2 <= 1;
	      outFlip0_z <= (s1rdloc == depth-1) ? ~outFlip0_z : outFlip0_z;
	   end	     
	 endcase
      end
   end
   
   always @(posedge clk) begin
      if (reset == 1) begin
	 state3 <= 0;
	 outFlip1 <= 0;	 
      end
      else if (next4 == 1) begin
	 s2rdloc <= 0;
	 state3 <= 1;
	 outFlip1 <= (s2rdloc == depth-1) ? ~outFlip1 : outFlip1;	      
      end
      else begin
	 case(state3)
	   0: begin
	      s2rdloc <= 0;
	      state3 <= 0;
	      outFlip1 <= outFlip1;
	   end
	   1: begin
	      s2rdloc <= (s2rdloc == depth-1) ? 0 : s2rdloc + 1;
         state3 <= 1;
	      outFlip1 <= (s2rdloc == depth-1) ? ~outFlip1 : outFlip1;
	   end	     
	 endcase
      end
   end
   always @(posedge clk) begin
      case({tm19_d, s1rdloc})
	     {1'd0,  6'd0}: s1rd0 <= 48;
	     {1'd0,  6'd1}: s1rd0 <= 49;
	     {1'd0,  6'd2}: s1rd0 <= 50;
	     {1'd0,  6'd3}: s1rd0 <= 51;
	     {1'd0,  6'd4}: s1rd0 <= 52;
	     {1'd0,  6'd5}: s1rd0 <= 53;
	     {1'd0,  6'd6}: s1rd0 <= 54;
	     {1'd0,  6'd7}: s1rd0 <= 55;
	     {1'd0,  6'd8}: s1rd0 <= 56;
	     {1'd0,  6'd9}: s1rd0 <= 57;
	     {1'd0,  6'd10}: s1rd0 <= 58;
	     {1'd0,  6'd11}: s1rd0 <= 59;
	     {1'd0,  6'd12}: s1rd0 <= 60;
	     {1'd0,  6'd13}: s1rd0 <= 61;
	     {1'd0,  6'd14}: s1rd0 <= 62;
	     {1'd0,  6'd15}: s1rd0 <= 63;
	     {1'd0,  6'd16}: s1rd0 <= 32;
	     {1'd0,  6'd17}: s1rd0 <= 33;
	     {1'd0,  6'd18}: s1rd0 <= 34;
	     {1'd0,  6'd19}: s1rd0 <= 35;
	     {1'd0,  6'd20}: s1rd0 <= 36;
	     {1'd0,  6'd21}: s1rd0 <= 37;
	     {1'd0,  6'd22}: s1rd0 <= 38;
	     {1'd0,  6'd23}: s1rd0 <= 39;
	     {1'd0,  6'd24}: s1rd0 <= 40;
	     {1'd0,  6'd25}: s1rd0 <= 41;
	     {1'd0,  6'd26}: s1rd0 <= 42;
	     {1'd0,  6'd27}: s1rd0 <= 43;
	     {1'd0,  6'd28}: s1rd0 <= 44;
	     {1'd0,  6'd29}: s1rd0 <= 45;
	     {1'd0,  6'd30}: s1rd0 <= 46;
	     {1'd0,  6'd31}: s1rd0 <= 47;
	     {1'd0,  6'd32}: s1rd0 <= 16;
	     {1'd0,  6'd33}: s1rd0 <= 17;
	     {1'd0,  6'd34}: s1rd0 <= 18;
	     {1'd0,  6'd35}: s1rd0 <= 19;
	     {1'd0,  6'd36}: s1rd0 <= 20;
	     {1'd0,  6'd37}: s1rd0 <= 21;
	     {1'd0,  6'd38}: s1rd0 <= 22;
	     {1'd0,  6'd39}: s1rd0 <= 23;
	     {1'd0,  6'd40}: s1rd0 <= 24;
	     {1'd0,  6'd41}: s1rd0 <= 25;
	     {1'd0,  6'd42}: s1rd0 <= 26;
	     {1'd0,  6'd43}: s1rd0 <= 27;
	     {1'd0,  6'd44}: s1rd0 <= 28;
	     {1'd0,  6'd45}: s1rd0 <= 29;
	     {1'd0,  6'd46}: s1rd0 <= 30;
	     {1'd0,  6'd47}: s1rd0 <= 31;
	     {1'd0,  6'd48}: s1rd0 <= 0;
	     {1'd0,  6'd49}: s1rd0 <= 1;
	     {1'd0,  6'd50}: s1rd0 <= 2;
	     {1'd0,  6'd51}: s1rd0 <= 3;
	     {1'd0,  6'd52}: s1rd0 <= 4;
	     {1'd0,  6'd53}: s1rd0 <= 5;
	     {1'd0,  6'd54}: s1rd0 <= 6;
	     {1'd0,  6'd55}: s1rd0 <= 7;
	     {1'd0,  6'd56}: s1rd0 <= 8;
	     {1'd0,  6'd57}: s1rd0 <= 9;
	     {1'd0,  6'd58}: s1rd0 <= 10;
	     {1'd0,  6'd59}: s1rd0 <= 11;
	     {1'd0,  6'd60}: s1rd0 <= 12;
	     {1'd0,  6'd61}: s1rd0 <= 13;
	     {1'd0,  6'd62}: s1rd0 <= 14;
	     {1'd0,  6'd63}: s1rd0 <= 15;
      endcase      
   end

// synthesis attribute rom_style of s1rd0 is "distributed"
   always @(posedge clk) begin
      case({tm19_d, s1rdloc})
	     {1'd0,  6'd0}: s1rd1 <= 32;
	     {1'd0,  6'd1}: s1rd1 <= 33;
	     {1'd0,  6'd2}: s1rd1 <= 34;
	     {1'd0,  6'd3}: s1rd1 <= 35;
	     {1'd0,  6'd4}: s1rd1 <= 36;
	     {1'd0,  6'd5}: s1rd1 <= 37;
	     {1'd0,  6'd6}: s1rd1 <= 38;
	     {1'd0,  6'd7}: s1rd1 <= 39;
	     {1'd0,  6'd8}: s1rd1 <= 40;
	     {1'd0,  6'd9}: s1rd1 <= 41;
	     {1'd0,  6'd10}: s1rd1 <= 42;
	     {1'd0,  6'd11}: s1rd1 <= 43;
	     {1'd0,  6'd12}: s1rd1 <= 44;
	     {1'd0,  6'd13}: s1rd1 <= 45;
	     {1'd0,  6'd14}: s1rd1 <= 46;
	     {1'd0,  6'd15}: s1rd1 <= 47;
	     {1'd0,  6'd16}: s1rd1 <= 48;
	     {1'd0,  6'd17}: s1rd1 <= 49;
	     {1'd0,  6'd18}: s1rd1 <= 50;
	     {1'd0,  6'd19}: s1rd1 <= 51;
	     {1'd0,  6'd20}: s1rd1 <= 52;
	     {1'd0,  6'd21}: s1rd1 <= 53;
	     {1'd0,  6'd22}: s1rd1 <= 54;
	     {1'd0,  6'd23}: s1rd1 <= 55;
	     {1'd0,  6'd24}: s1rd1 <= 56;
	     {1'd0,  6'd25}: s1rd1 <= 57;
	     {1'd0,  6'd26}: s1rd1 <= 58;
	     {1'd0,  6'd27}: s1rd1 <= 59;
	     {1'd0,  6'd28}: s1rd1 <= 60;
	     {1'd0,  6'd29}: s1rd1 <= 61;
	     {1'd0,  6'd30}: s1rd1 <= 62;
	     {1'd0,  6'd31}: s1rd1 <= 63;
	     {1'd0,  6'd32}: s1rd1 <= 0;
	     {1'd0,  6'd33}: s1rd1 <= 1;
	     {1'd0,  6'd34}: s1rd1 <= 2;
	     {1'd0,  6'd35}: s1rd1 <= 3;
	     {1'd0,  6'd36}: s1rd1 <= 4;
	     {1'd0,  6'd37}: s1rd1 <= 5;
	     {1'd0,  6'd38}: s1rd1 <= 6;
	     {1'd0,  6'd39}: s1rd1 <= 7;
	     {1'd0,  6'd40}: s1rd1 <= 8;
	     {1'd0,  6'd41}: s1rd1 <= 9;
	     {1'd0,  6'd42}: s1rd1 <= 10;
	     {1'd0,  6'd43}: s1rd1 <= 11;
	     {1'd0,  6'd44}: s1rd1 <= 12;
	     {1'd0,  6'd45}: s1rd1 <= 13;
	     {1'd0,  6'd46}: s1rd1 <= 14;
	     {1'd0,  6'd47}: s1rd1 <= 15;
	     {1'd0,  6'd48}: s1rd1 <= 16;
	     {1'd0,  6'd49}: s1rd1 <= 17;
	     {1'd0,  6'd50}: s1rd1 <= 18;
	     {1'd0,  6'd51}: s1rd1 <= 19;
	     {1'd0,  6'd52}: s1rd1 <= 20;
	     {1'd0,  6'd53}: s1rd1 <= 21;
	     {1'd0,  6'd54}: s1rd1 <= 22;
	     {1'd0,  6'd55}: s1rd1 <= 23;
	     {1'd0,  6'd56}: s1rd1 <= 24;
	     {1'd0,  6'd57}: s1rd1 <= 25;
	     {1'd0,  6'd58}: s1rd1 <= 26;
	     {1'd0,  6'd59}: s1rd1 <= 27;
	     {1'd0,  6'd60}: s1rd1 <= 28;
	     {1'd0,  6'd61}: s1rd1 <= 29;
	     {1'd0,  6'd62}: s1rd1 <= 30;
	     {1'd0,  6'd63}: s1rd1 <= 31;
      endcase      
   end

// synthesis attribute rom_style of s1rd1 is "distributed"
   always @(posedge clk) begin
      case({tm19_d, s1rdloc})
	     {1'd0,  6'd0}: s1rd2 <= 16;
	     {1'd0,  6'd1}: s1rd2 <= 17;
	     {1'd0,  6'd2}: s1rd2 <= 18;
	     {1'd0,  6'd3}: s1rd2 <= 19;
	     {1'd0,  6'd4}: s1rd2 <= 20;
	     {1'd0,  6'd5}: s1rd2 <= 21;
	     {1'd0,  6'd6}: s1rd2 <= 22;
	     {1'd0,  6'd7}: s1rd2 <= 23;
	     {1'd0,  6'd8}: s1rd2 <= 24;
	     {1'd0,  6'd9}: s1rd2 <= 25;
	     {1'd0,  6'd10}: s1rd2 <= 26;
	     {1'd0,  6'd11}: s1rd2 <= 27;
	     {1'd0,  6'd12}: s1rd2 <= 28;
	     {1'd0,  6'd13}: s1rd2 <= 29;
	     {1'd0,  6'd14}: s1rd2 <= 30;
	     {1'd0,  6'd15}: s1rd2 <= 31;
	     {1'd0,  6'd16}: s1rd2 <= 0;
	     {1'd0,  6'd17}: s1rd2 <= 1;
	     {1'd0,  6'd18}: s1rd2 <= 2;
	     {1'd0,  6'd19}: s1rd2 <= 3;
	     {1'd0,  6'd20}: s1rd2 <= 4;
	     {1'd0,  6'd21}: s1rd2 <= 5;
	     {1'd0,  6'd22}: s1rd2 <= 6;
	     {1'd0,  6'd23}: s1rd2 <= 7;
	     {1'd0,  6'd24}: s1rd2 <= 8;
	     {1'd0,  6'd25}: s1rd2 <= 9;
	     {1'd0,  6'd26}: s1rd2 <= 10;
	     {1'd0,  6'd27}: s1rd2 <= 11;
	     {1'd0,  6'd28}: s1rd2 <= 12;
	     {1'd0,  6'd29}: s1rd2 <= 13;
	     {1'd0,  6'd30}: s1rd2 <= 14;
	     {1'd0,  6'd31}: s1rd2 <= 15;
	     {1'd0,  6'd32}: s1rd2 <= 48;
	     {1'd0,  6'd33}: s1rd2 <= 49;
	     {1'd0,  6'd34}: s1rd2 <= 50;
	     {1'd0,  6'd35}: s1rd2 <= 51;
	     {1'd0,  6'd36}: s1rd2 <= 52;
	     {1'd0,  6'd37}: s1rd2 <= 53;
	     {1'd0,  6'd38}: s1rd2 <= 54;
	     {1'd0,  6'd39}: s1rd2 <= 55;
	     {1'd0,  6'd40}: s1rd2 <= 56;
	     {1'd0,  6'd41}: s1rd2 <= 57;
	     {1'd0,  6'd42}: s1rd2 <= 58;
	     {1'd0,  6'd43}: s1rd2 <= 59;
	     {1'd0,  6'd44}: s1rd2 <= 60;
	     {1'd0,  6'd45}: s1rd2 <= 61;
	     {1'd0,  6'd46}: s1rd2 <= 62;
	     {1'd0,  6'd47}: s1rd2 <= 63;
	     {1'd0,  6'd48}: s1rd2 <= 32;
	     {1'd0,  6'd49}: s1rd2 <= 33;
	     {1'd0,  6'd50}: s1rd2 <= 34;
	     {1'd0,  6'd51}: s1rd2 <= 35;
	     {1'd0,  6'd52}: s1rd2 <= 36;
	     {1'd0,  6'd53}: s1rd2 <= 37;
	     {1'd0,  6'd54}: s1rd2 <= 38;
	     {1'd0,  6'd55}: s1rd2 <= 39;
	     {1'd0,  6'd56}: s1rd2 <= 40;
	     {1'd0,  6'd57}: s1rd2 <= 41;
	     {1'd0,  6'd58}: s1rd2 <= 42;
	     {1'd0,  6'd59}: s1rd2 <= 43;
	     {1'd0,  6'd60}: s1rd2 <= 44;
	     {1'd0,  6'd61}: s1rd2 <= 45;
	     {1'd0,  6'd62}: s1rd2 <= 46;
	     {1'd0,  6'd63}: s1rd2 <= 47;
      endcase      
   end

// synthesis attribute rom_style of s1rd2 is "distributed"
   always @(posedge clk) begin
      case({tm19_d, s1rdloc})
	     {1'd0,  6'd0}: s1rd3 <= 0;
	     {1'd0,  6'd1}: s1rd3 <= 1;
	     {1'd0,  6'd2}: s1rd3 <= 2;
	     {1'd0,  6'd3}: s1rd3 <= 3;
	     {1'd0,  6'd4}: s1rd3 <= 4;
	     {1'd0,  6'd5}: s1rd3 <= 5;
	     {1'd0,  6'd6}: s1rd3 <= 6;
	     {1'd0,  6'd7}: s1rd3 <= 7;
	     {1'd0,  6'd8}: s1rd3 <= 8;
	     {1'd0,  6'd9}: s1rd3 <= 9;
	     {1'd0,  6'd10}: s1rd3 <= 10;
	     {1'd0,  6'd11}: s1rd3 <= 11;
	     {1'd0,  6'd12}: s1rd3 <= 12;
	     {1'd0,  6'd13}: s1rd3 <= 13;
	     {1'd0,  6'd14}: s1rd3 <= 14;
	     {1'd0,  6'd15}: s1rd3 <= 15;
	     {1'd0,  6'd16}: s1rd3 <= 16;
	     {1'd0,  6'd17}: s1rd3 <= 17;
	     {1'd0,  6'd18}: s1rd3 <= 18;
	     {1'd0,  6'd19}: s1rd3 <= 19;
	     {1'd0,  6'd20}: s1rd3 <= 20;
	     {1'd0,  6'd21}: s1rd3 <= 21;
	     {1'd0,  6'd22}: s1rd3 <= 22;
	     {1'd0,  6'd23}: s1rd3 <= 23;
	     {1'd0,  6'd24}: s1rd3 <= 24;
	     {1'd0,  6'd25}: s1rd3 <= 25;
	     {1'd0,  6'd26}: s1rd3 <= 26;
	     {1'd0,  6'd27}: s1rd3 <= 27;
	     {1'd0,  6'd28}: s1rd3 <= 28;
	     {1'd0,  6'd29}: s1rd3 <= 29;
	     {1'd0,  6'd30}: s1rd3 <= 30;
	     {1'd0,  6'd31}: s1rd3 <= 31;
	     {1'd0,  6'd32}: s1rd3 <= 32;
	     {1'd0,  6'd33}: s1rd3 <= 33;
	     {1'd0,  6'd34}: s1rd3 <= 34;
	     {1'd0,  6'd35}: s1rd3 <= 35;
	     {1'd0,  6'd36}: s1rd3 <= 36;
	     {1'd0,  6'd37}: s1rd3 <= 37;
	     {1'd0,  6'd38}: s1rd3 <= 38;
	     {1'd0,  6'd39}: s1rd3 <= 39;
	     {1'd0,  6'd40}: s1rd3 <= 40;
	     {1'd0,  6'd41}: s1rd3 <= 41;
	     {1'd0,  6'd42}: s1rd3 <= 42;
	     {1'd0,  6'd43}: s1rd3 <= 43;
	     {1'd0,  6'd44}: s1rd3 <= 44;
	     {1'd0,  6'd45}: s1rd3 <= 45;
	     {1'd0,  6'd46}: s1rd3 <= 46;
	     {1'd0,  6'd47}: s1rd3 <= 47;
	     {1'd0,  6'd48}: s1rd3 <= 48;
	     {1'd0,  6'd49}: s1rd3 <= 49;
	     {1'd0,  6'd50}: s1rd3 <= 50;
	     {1'd0,  6'd51}: s1rd3 <= 51;
	     {1'd0,  6'd52}: s1rd3 <= 52;
	     {1'd0,  6'd53}: s1rd3 <= 53;
	     {1'd0,  6'd54}: s1rd3 <= 54;
	     {1'd0,  6'd55}: s1rd3 <= 55;
	     {1'd0,  6'd56}: s1rd3 <= 56;
	     {1'd0,  6'd57}: s1rd3 <= 57;
	     {1'd0,  6'd58}: s1rd3 <= 58;
	     {1'd0,  6'd59}: s1rd3 <= 59;
	     {1'd0,  6'd60}: s1rd3 <= 60;
	     {1'd0,  6'd61}: s1rd3 <= 61;
	     {1'd0,  6'd62}: s1rd3 <= 62;
	     {1'd0,  6'd63}: s1rd3 <= 63;
      endcase      
   end

// synthesis attribute rom_style of s1rd3 is "distributed"
    swNet21901 sw(tm19_d, clk, muxCycle, t0, s0, t1, s1, t2, s2, t3, s3);

   always @(posedge clk) begin
      case({tm19_dd, writeCycle})
	      {1'd0, 6'd0}: s2wr0 <= 48;
	      {1'd0, 6'd1}: s2wr0 <= 49;
	      {1'd0, 6'd2}: s2wr0 <= 50;
	      {1'd0, 6'd3}: s2wr0 <= 51;
	      {1'd0, 6'd4}: s2wr0 <= 52;
	      {1'd0, 6'd5}: s2wr0 <= 53;
	      {1'd0, 6'd6}: s2wr0 <= 54;
	      {1'd0, 6'd7}: s2wr0 <= 55;
	      {1'd0, 6'd8}: s2wr0 <= 56;
	      {1'd0, 6'd9}: s2wr0 <= 57;
	      {1'd0, 6'd10}: s2wr0 <= 58;
	      {1'd0, 6'd11}: s2wr0 <= 59;
	      {1'd0, 6'd12}: s2wr0 <= 60;
	      {1'd0, 6'd13}: s2wr0 <= 61;
	      {1'd0, 6'd14}: s2wr0 <= 62;
	      {1'd0, 6'd15}: s2wr0 <= 63;
	      {1'd0, 6'd16}: s2wr0 <= 32;
	      {1'd0, 6'd17}: s2wr0 <= 33;
	      {1'd0, 6'd18}: s2wr0 <= 34;
	      {1'd0, 6'd19}: s2wr0 <= 35;
	      {1'd0, 6'd20}: s2wr0 <= 36;
	      {1'd0, 6'd21}: s2wr0 <= 37;
	      {1'd0, 6'd22}: s2wr0 <= 38;
	      {1'd0, 6'd23}: s2wr0 <= 39;
	      {1'd0, 6'd24}: s2wr0 <= 40;
	      {1'd0, 6'd25}: s2wr0 <= 41;
	      {1'd0, 6'd26}: s2wr0 <= 42;
	      {1'd0, 6'd27}: s2wr0 <= 43;
	      {1'd0, 6'd28}: s2wr0 <= 44;
	      {1'd0, 6'd29}: s2wr0 <= 45;
	      {1'd0, 6'd30}: s2wr0 <= 46;
	      {1'd0, 6'd31}: s2wr0 <= 47;
	      {1'd0, 6'd32}: s2wr0 <= 16;
	      {1'd0, 6'd33}: s2wr0 <= 17;
	      {1'd0, 6'd34}: s2wr0 <= 18;
	      {1'd0, 6'd35}: s2wr0 <= 19;
	      {1'd0, 6'd36}: s2wr0 <= 20;
	      {1'd0, 6'd37}: s2wr0 <= 21;
	      {1'd0, 6'd38}: s2wr0 <= 22;
	      {1'd0, 6'd39}: s2wr0 <= 23;
	      {1'd0, 6'd40}: s2wr0 <= 24;
	      {1'd0, 6'd41}: s2wr0 <= 25;
	      {1'd0, 6'd42}: s2wr0 <= 26;
	      {1'd0, 6'd43}: s2wr0 <= 27;
	      {1'd0, 6'd44}: s2wr0 <= 28;
	      {1'd0, 6'd45}: s2wr0 <= 29;
	      {1'd0, 6'd46}: s2wr0 <= 30;
	      {1'd0, 6'd47}: s2wr0 <= 31;
	      {1'd0, 6'd48}: s2wr0 <= 0;
	      {1'd0, 6'd49}: s2wr0 <= 1;
	      {1'd0, 6'd50}: s2wr0 <= 2;
	      {1'd0, 6'd51}: s2wr0 <= 3;
	      {1'd0, 6'd52}: s2wr0 <= 4;
	      {1'd0, 6'd53}: s2wr0 <= 5;
	      {1'd0, 6'd54}: s2wr0 <= 6;
	      {1'd0, 6'd55}: s2wr0 <= 7;
	      {1'd0, 6'd56}: s2wr0 <= 8;
	      {1'd0, 6'd57}: s2wr0 <= 9;
	      {1'd0, 6'd58}: s2wr0 <= 10;
	      {1'd0, 6'd59}: s2wr0 <= 11;
	      {1'd0, 6'd60}: s2wr0 <= 12;
	      {1'd0, 6'd61}: s2wr0 <= 13;
	      {1'd0, 6'd62}: s2wr0 <= 14;
	      {1'd0, 6'd63}: s2wr0 <= 15;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr0 is "distributed"
   always @(posedge clk) begin
      case({tm19_dd, writeCycle})
	      {1'd0, 6'd0}: s2wr1 <= 32;
	      {1'd0, 6'd1}: s2wr1 <= 33;
	      {1'd0, 6'd2}: s2wr1 <= 34;
	      {1'd0, 6'd3}: s2wr1 <= 35;
	      {1'd0, 6'd4}: s2wr1 <= 36;
	      {1'd0, 6'd5}: s2wr1 <= 37;
	      {1'd0, 6'd6}: s2wr1 <= 38;
	      {1'd0, 6'd7}: s2wr1 <= 39;
	      {1'd0, 6'd8}: s2wr1 <= 40;
	      {1'd0, 6'd9}: s2wr1 <= 41;
	      {1'd0, 6'd10}: s2wr1 <= 42;
	      {1'd0, 6'd11}: s2wr1 <= 43;
	      {1'd0, 6'd12}: s2wr1 <= 44;
	      {1'd0, 6'd13}: s2wr1 <= 45;
	      {1'd0, 6'd14}: s2wr1 <= 46;
	      {1'd0, 6'd15}: s2wr1 <= 47;
	      {1'd0, 6'd16}: s2wr1 <= 48;
	      {1'd0, 6'd17}: s2wr1 <= 49;
	      {1'd0, 6'd18}: s2wr1 <= 50;
	      {1'd0, 6'd19}: s2wr1 <= 51;
	      {1'd0, 6'd20}: s2wr1 <= 52;
	      {1'd0, 6'd21}: s2wr1 <= 53;
	      {1'd0, 6'd22}: s2wr1 <= 54;
	      {1'd0, 6'd23}: s2wr1 <= 55;
	      {1'd0, 6'd24}: s2wr1 <= 56;
	      {1'd0, 6'd25}: s2wr1 <= 57;
	      {1'd0, 6'd26}: s2wr1 <= 58;
	      {1'd0, 6'd27}: s2wr1 <= 59;
	      {1'd0, 6'd28}: s2wr1 <= 60;
	      {1'd0, 6'd29}: s2wr1 <= 61;
	      {1'd0, 6'd30}: s2wr1 <= 62;
	      {1'd0, 6'd31}: s2wr1 <= 63;
	      {1'd0, 6'd32}: s2wr1 <= 0;
	      {1'd0, 6'd33}: s2wr1 <= 1;
	      {1'd0, 6'd34}: s2wr1 <= 2;
	      {1'd0, 6'd35}: s2wr1 <= 3;
	      {1'd0, 6'd36}: s2wr1 <= 4;
	      {1'd0, 6'd37}: s2wr1 <= 5;
	      {1'd0, 6'd38}: s2wr1 <= 6;
	      {1'd0, 6'd39}: s2wr1 <= 7;
	      {1'd0, 6'd40}: s2wr1 <= 8;
	      {1'd0, 6'd41}: s2wr1 <= 9;
	      {1'd0, 6'd42}: s2wr1 <= 10;
	      {1'd0, 6'd43}: s2wr1 <= 11;
	      {1'd0, 6'd44}: s2wr1 <= 12;
	      {1'd0, 6'd45}: s2wr1 <= 13;
	      {1'd0, 6'd46}: s2wr1 <= 14;
	      {1'd0, 6'd47}: s2wr1 <= 15;
	      {1'd0, 6'd48}: s2wr1 <= 16;
	      {1'd0, 6'd49}: s2wr1 <= 17;
	      {1'd0, 6'd50}: s2wr1 <= 18;
	      {1'd0, 6'd51}: s2wr1 <= 19;
	      {1'd0, 6'd52}: s2wr1 <= 20;
	      {1'd0, 6'd53}: s2wr1 <= 21;
	      {1'd0, 6'd54}: s2wr1 <= 22;
	      {1'd0, 6'd55}: s2wr1 <= 23;
	      {1'd0, 6'd56}: s2wr1 <= 24;
	      {1'd0, 6'd57}: s2wr1 <= 25;
	      {1'd0, 6'd58}: s2wr1 <= 26;
	      {1'd0, 6'd59}: s2wr1 <= 27;
	      {1'd0, 6'd60}: s2wr1 <= 28;
	      {1'd0, 6'd61}: s2wr1 <= 29;
	      {1'd0, 6'd62}: s2wr1 <= 30;
	      {1'd0, 6'd63}: s2wr1 <= 31;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr1 is "distributed"
   always @(posedge clk) begin
      case({tm19_dd, writeCycle})
	      {1'd0, 6'd0}: s2wr2 <= 16;
	      {1'd0, 6'd1}: s2wr2 <= 17;
	      {1'd0, 6'd2}: s2wr2 <= 18;
	      {1'd0, 6'd3}: s2wr2 <= 19;
	      {1'd0, 6'd4}: s2wr2 <= 20;
	      {1'd0, 6'd5}: s2wr2 <= 21;
	      {1'd0, 6'd6}: s2wr2 <= 22;
	      {1'd0, 6'd7}: s2wr2 <= 23;
	      {1'd0, 6'd8}: s2wr2 <= 24;
	      {1'd0, 6'd9}: s2wr2 <= 25;
	      {1'd0, 6'd10}: s2wr2 <= 26;
	      {1'd0, 6'd11}: s2wr2 <= 27;
	      {1'd0, 6'd12}: s2wr2 <= 28;
	      {1'd0, 6'd13}: s2wr2 <= 29;
	      {1'd0, 6'd14}: s2wr2 <= 30;
	      {1'd0, 6'd15}: s2wr2 <= 31;
	      {1'd0, 6'd16}: s2wr2 <= 0;
	      {1'd0, 6'd17}: s2wr2 <= 1;
	      {1'd0, 6'd18}: s2wr2 <= 2;
	      {1'd0, 6'd19}: s2wr2 <= 3;
	      {1'd0, 6'd20}: s2wr2 <= 4;
	      {1'd0, 6'd21}: s2wr2 <= 5;
	      {1'd0, 6'd22}: s2wr2 <= 6;
	      {1'd0, 6'd23}: s2wr2 <= 7;
	      {1'd0, 6'd24}: s2wr2 <= 8;
	      {1'd0, 6'd25}: s2wr2 <= 9;
	      {1'd0, 6'd26}: s2wr2 <= 10;
	      {1'd0, 6'd27}: s2wr2 <= 11;
	      {1'd0, 6'd28}: s2wr2 <= 12;
	      {1'd0, 6'd29}: s2wr2 <= 13;
	      {1'd0, 6'd30}: s2wr2 <= 14;
	      {1'd0, 6'd31}: s2wr2 <= 15;
	      {1'd0, 6'd32}: s2wr2 <= 48;
	      {1'd0, 6'd33}: s2wr2 <= 49;
	      {1'd0, 6'd34}: s2wr2 <= 50;
	      {1'd0, 6'd35}: s2wr2 <= 51;
	      {1'd0, 6'd36}: s2wr2 <= 52;
	      {1'd0, 6'd37}: s2wr2 <= 53;
	      {1'd0, 6'd38}: s2wr2 <= 54;
	      {1'd0, 6'd39}: s2wr2 <= 55;
	      {1'd0, 6'd40}: s2wr2 <= 56;
	      {1'd0, 6'd41}: s2wr2 <= 57;
	      {1'd0, 6'd42}: s2wr2 <= 58;
	      {1'd0, 6'd43}: s2wr2 <= 59;
	      {1'd0, 6'd44}: s2wr2 <= 60;
	      {1'd0, 6'd45}: s2wr2 <= 61;
	      {1'd0, 6'd46}: s2wr2 <= 62;
	      {1'd0, 6'd47}: s2wr2 <= 63;
	      {1'd0, 6'd48}: s2wr2 <= 32;
	      {1'd0, 6'd49}: s2wr2 <= 33;
	      {1'd0, 6'd50}: s2wr2 <= 34;
	      {1'd0, 6'd51}: s2wr2 <= 35;
	      {1'd0, 6'd52}: s2wr2 <= 36;
	      {1'd0, 6'd53}: s2wr2 <= 37;
	      {1'd0, 6'd54}: s2wr2 <= 38;
	      {1'd0, 6'd55}: s2wr2 <= 39;
	      {1'd0, 6'd56}: s2wr2 <= 40;
	      {1'd0, 6'd57}: s2wr2 <= 41;
	      {1'd0, 6'd58}: s2wr2 <= 42;
	      {1'd0, 6'd59}: s2wr2 <= 43;
	      {1'd0, 6'd60}: s2wr2 <= 44;
	      {1'd0, 6'd61}: s2wr2 <= 45;
	      {1'd0, 6'd62}: s2wr2 <= 46;
	      {1'd0, 6'd63}: s2wr2 <= 47;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr2 is "distributed"
   always @(posedge clk) begin
      case({tm19_dd, writeCycle})
	      {1'd0, 6'd0}: s2wr3 <= 0;
	      {1'd0, 6'd1}: s2wr3 <= 1;
	      {1'd0, 6'd2}: s2wr3 <= 2;
	      {1'd0, 6'd3}: s2wr3 <= 3;
	      {1'd0, 6'd4}: s2wr3 <= 4;
	      {1'd0, 6'd5}: s2wr3 <= 5;
	      {1'd0, 6'd6}: s2wr3 <= 6;
	      {1'd0, 6'd7}: s2wr3 <= 7;
	      {1'd0, 6'd8}: s2wr3 <= 8;
	      {1'd0, 6'd9}: s2wr3 <= 9;
	      {1'd0, 6'd10}: s2wr3 <= 10;
	      {1'd0, 6'd11}: s2wr3 <= 11;
	      {1'd0, 6'd12}: s2wr3 <= 12;
	      {1'd0, 6'd13}: s2wr3 <= 13;
	      {1'd0, 6'd14}: s2wr3 <= 14;
	      {1'd0, 6'd15}: s2wr3 <= 15;
	      {1'd0, 6'd16}: s2wr3 <= 16;
	      {1'd0, 6'd17}: s2wr3 <= 17;
	      {1'd0, 6'd18}: s2wr3 <= 18;
	      {1'd0, 6'd19}: s2wr3 <= 19;
	      {1'd0, 6'd20}: s2wr3 <= 20;
	      {1'd0, 6'd21}: s2wr3 <= 21;
	      {1'd0, 6'd22}: s2wr3 <= 22;
	      {1'd0, 6'd23}: s2wr3 <= 23;
	      {1'd0, 6'd24}: s2wr3 <= 24;
	      {1'd0, 6'd25}: s2wr3 <= 25;
	      {1'd0, 6'd26}: s2wr3 <= 26;
	      {1'd0, 6'd27}: s2wr3 <= 27;
	      {1'd0, 6'd28}: s2wr3 <= 28;
	      {1'd0, 6'd29}: s2wr3 <= 29;
	      {1'd0, 6'd30}: s2wr3 <= 30;
	      {1'd0, 6'd31}: s2wr3 <= 31;
	      {1'd0, 6'd32}: s2wr3 <= 32;
	      {1'd0, 6'd33}: s2wr3 <= 33;
	      {1'd0, 6'd34}: s2wr3 <= 34;
	      {1'd0, 6'd35}: s2wr3 <= 35;
	      {1'd0, 6'd36}: s2wr3 <= 36;
	      {1'd0, 6'd37}: s2wr3 <= 37;
	      {1'd0, 6'd38}: s2wr3 <= 38;
	      {1'd0, 6'd39}: s2wr3 <= 39;
	      {1'd0, 6'd40}: s2wr3 <= 40;
	      {1'd0, 6'd41}: s2wr3 <= 41;
	      {1'd0, 6'd42}: s2wr3 <= 42;
	      {1'd0, 6'd43}: s2wr3 <= 43;
	      {1'd0, 6'd44}: s2wr3 <= 44;
	      {1'd0, 6'd45}: s2wr3 <= 45;
	      {1'd0, 6'd46}: s2wr3 <= 46;
	      {1'd0, 6'd47}: s2wr3 <= 47;
	      {1'd0, 6'd48}: s2wr3 <= 48;
	      {1'd0, 6'd49}: s2wr3 <= 49;
	      {1'd0, 6'd50}: s2wr3 <= 50;
	      {1'd0, 6'd51}: s2wr3 <= 51;
	      {1'd0, 6'd52}: s2wr3 <= 52;
	      {1'd0, 6'd53}: s2wr3 <= 53;
	      {1'd0, 6'd54}: s2wr3 <= 54;
	      {1'd0, 6'd55}: s2wr3 <= 55;
	      {1'd0, 6'd56}: s2wr3 <= 56;
	      {1'd0, 6'd57}: s2wr3 <= 57;
	      {1'd0, 6'd58}: s2wr3 <= 58;
	      {1'd0, 6'd59}: s2wr3 <= 59;
	      {1'd0, 6'd60}: s2wr3 <= 60;
	      {1'd0, 6'd61}: s2wr3 <= 61;
	      {1'd0, 6'd62}: s2wr3 <= 62;
	      {1'd0, 6'd63}: s2wr3 <= 63;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr3 is "distributed"
endmodule


// Latency: 8
// Gap: 64
module DirSum_22756(clk, reset, next, next_out,
      X0, Y0,
      X1, Y1,
      X2, Y2,
      X3, Y3,
      X4, Y4,
      X5, Y5,
      X6, Y6,
      X7, Y7);

   output next_out;
   input clk, reset, next;

   reg [5:0] i2;

   input [15:0] X0,
      X1,
      X2,
      X3,
      X4,
      X5,
      X6,
      X7;

   output [15:0] Y0,
      Y1,
      Y2,
      Y3,
      Y4,
      Y5,
      Y6,
      Y7;

   always @(posedge clk) begin
      if (reset == 1) begin
         i2 <= 0;
      end
      else begin
         if (next == 1)
            i2 <= 0;
         else if (i2 == 63)
            i2 <= 0;
         else
            i2 <= i2 + 1;
      end
   end

   codeBlock21906 codeBlockIsnt27430(.clk(clk), .reset(reset), .next_in(next), .next_out(next_out),
.i2_in(i2),
       .X0_in(X0), .Y0(Y0),
       .X1_in(X1), .Y1(Y1),
       .X2_in(X2), .Y2(Y2),
       .X3_in(X3), .Y3(Y3),
       .X4_in(X4), .Y4(Y4),
       .X5_in(X5), .Y5(Y5),
       .X6_in(X6), .Y6(Y6),
       .X7_in(X7), .Y7(Y7));

endmodule

module D20_22292(addr, out, clk);
   input clk;
   output [15:0] out;
   reg [15:0] out, out2, out3;
   input [5:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 16'h0;
      1: out3 <= 16'hfb4b;
      2: out3 <= 16'hf69c;
      3: out3 <= 16'hf1fa;
      4: out3 <= 16'hed6c;
      5: out3 <= 16'he8f7;
      6: out3 <= 16'he4a3;
      7: out3 <= 16'he074;
      8: out3 <= 16'hdc72;
      9: out3 <= 16'hd8a0;
      10: out3 <= 16'hd505;
      11: out3 <= 16'hd1a6;
      12: out3 <= 16'hce87;
      13: out3 <= 16'hcbad;
      14: out3 <= 16'hc91b;
      15: out3 <= 16'hc6d5;
      16: out3 <= 16'hc4df;
      17: out3 <= 16'hc33b;
      18: out3 <= 16'hc1eb;
      19: out3 <= 16'hc0f1;
      20: out3 <= 16'hc04f;
      21: out3 <= 16'hc005;
      22: out3 <= 16'hc014;
      23: out3 <= 16'hc07b;
      24: out3 <= 16'hc13b;
      25: out3 <= 16'hc251;
      26: out3 <= 16'hc3be;
      27: out3 <= 16'hc57e;
      28: out3 <= 16'hc78f;
      29: out3 <= 16'hc9ee;
      30: out3 <= 16'hcc98;
      31: out3 <= 16'hcf8a;
      32: out3 <= 16'hd2bf;
      33: out3 <= 16'hd632;
      34: out3 <= 16'hd9e0;
      35: out3 <= 16'hddc3;
      36: out3 <= 16'he1d5;
      37: out3 <= 16'he611;
      38: out3 <= 16'hea70;
      39: out3 <= 16'heeee;
      40: out3 <= 16'hf384;
      41: out3 <= 16'hf82a;
      42: out3 <= 16'hfcdc;
      43: out3 <= 16'h192;
      44: out3 <= 16'h646;
      45: out3 <= 16'haf1;
      46: out3 <= 16'hf8d;
      47: out3 <= 16'h1413;
      48: out3 <= 16'h187e;
      49: out3 <= 16'h1cc6;
      50: out3 <= 16'h20e7;
      51: out3 <= 16'h24da;
      52: out3 <= 16'h289a;
      53: out3 <= 16'h2c21;
      54: out3 <= 16'h2f6c;
      55: out3 <= 16'h3274;
      56: out3 <= 16'h3537;
      57: out3 <= 16'h37b0;
      58: out3 <= 16'h39db;
      59: out3 <= 16'h3bb6;
      60: out3 <= 16'h3d3f;
      61: out3 <= 16'h3e72;
      62: out3 <= 16'h3f4f;
      63: out3 <= 16'h3fd4;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



module D19_22424(addr, out, clk);
   input clk;
   output [15:0] out;
   reg [15:0] out, out2, out3;
   input [5:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 16'h0;
      1: out3 <= 16'hfcdc;
      2: out3 <= 16'hf9ba;
      3: out3 <= 16'hf69c;
      4: out3 <= 16'hf384;
      5: out3 <= 16'hf073;
      6: out3 <= 16'hed6c;
      7: out3 <= 16'hea70;
      8: out3 <= 16'he782;
      9: out3 <= 16'he4a3;
      10: out3 <= 16'he1d5;
      11: out3 <= 16'hdf19;
      12: out3 <= 16'hdc72;
      13: out3 <= 16'hd9e0;
      14: out3 <= 16'hd766;
      15: out3 <= 16'hd505;
      16: out3 <= 16'hd2bf;
      17: out3 <= 16'hd094;
      18: out3 <= 16'hce87;
      19: out3 <= 16'hcc98;
      20: out3 <= 16'hcac9;
      21: out3 <= 16'hc91b;
      22: out3 <= 16'hc78f;
      23: out3 <= 16'hc625;
      24: out3 <= 16'hc4df;
      25: out3 <= 16'hc3be;
      26: out3 <= 16'hc2c1;
      27: out3 <= 16'hc1eb;
      28: out3 <= 16'hc13b;
      29: out3 <= 16'hc0b1;
      30: out3 <= 16'hc04f;
      31: out3 <= 16'hc014;
      32: out3 <= 16'hc000;
      33: out3 <= 16'hc014;
      34: out3 <= 16'hc04f;
      35: out3 <= 16'hc0b1;
      36: out3 <= 16'hc13b;
      37: out3 <= 16'hc1eb;
      38: out3 <= 16'hc2c1;
      39: out3 <= 16'hc3be;
      40: out3 <= 16'hc4df;
      41: out3 <= 16'hc625;
      42: out3 <= 16'hc78f;
      43: out3 <= 16'hc91b;
      44: out3 <= 16'hcac9;
      45: out3 <= 16'hcc98;
      46: out3 <= 16'hce87;
      47: out3 <= 16'hd094;
      48: out3 <= 16'hd2bf;
      49: out3 <= 16'hd505;
      50: out3 <= 16'hd766;
      51: out3 <= 16'hd9e0;
      52: out3 <= 16'hdc72;
      53: out3 <= 16'hdf19;
      54: out3 <= 16'he1d5;
      55: out3 <= 16'he4a3;
      56: out3 <= 16'he782;
      57: out3 <= 16'hea70;
      58: out3 <= 16'hed6c;
      59: out3 <= 16'hf073;
      60: out3 <= 16'hf384;
      61: out3 <= 16'hf69c;
      62: out3 <= 16'hf9ba;
      63: out3 <= 16'hfcdc;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



module D14_22490(addr, out, clk);
   input clk;
   output [15:0] out;
   reg [15:0] out, out2, out3;
   input [5:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 16'h4000;
      1: out3 <= 16'h3ffb;
      2: out3 <= 16'h3fec;
      3: out3 <= 16'h3fd4;
      4: out3 <= 16'h3fb1;
      5: out3 <= 16'h3f85;
      6: out3 <= 16'h3f4f;
      7: out3 <= 16'h3f0f;
      8: out3 <= 16'h3ec5;
      9: out3 <= 16'h3e72;
      10: out3 <= 16'h3e15;
      11: out3 <= 16'h3daf;
      12: out3 <= 16'h3d3f;
      13: out3 <= 16'h3cc5;
      14: out3 <= 16'h3c42;
      15: out3 <= 16'h3bb6;
      16: out3 <= 16'h3b21;
      17: out3 <= 16'h3a82;
      18: out3 <= 16'h39db;
      19: out3 <= 16'h392b;
      20: out3 <= 16'h3871;
      21: out3 <= 16'h37b0;
      22: out3 <= 16'h36e5;
      23: out3 <= 16'h3612;
      24: out3 <= 16'h3537;
      25: out3 <= 16'h3453;
      26: out3 <= 16'h3368;
      27: out3 <= 16'h3274;
      28: out3 <= 16'h3179;
      29: out3 <= 16'h3076;
      30: out3 <= 16'h2f6c;
      31: out3 <= 16'h2e5a;
      32: out3 <= 16'h2d41;
      33: out3 <= 16'h2c21;
      34: out3 <= 16'h2afb;
      35: out3 <= 16'h29ce;
      36: out3 <= 16'h289a;
      37: out3 <= 16'h2760;
      38: out3 <= 16'h2620;
      39: out3 <= 16'h24da;
      40: out3 <= 16'h238e;
      41: out3 <= 16'h223d;
      42: out3 <= 16'h20e7;
      43: out3 <= 16'h1f8c;
      44: out3 <= 16'h1e2b;
      45: out3 <= 16'h1cc6;
      46: out3 <= 16'h1b5d;
      47: out3 <= 16'h19ef;
      48: out3 <= 16'h187e;
      49: out3 <= 16'h1709;
      50: out3 <= 16'h1590;
      51: out3 <= 16'h1413;
      52: out3 <= 16'h1294;
      53: out3 <= 16'h1112;
      54: out3 <= 16'hf8d;
      55: out3 <= 16'he06;
      56: out3 <= 16'hc7c;
      57: out3 <= 16'haf1;
      58: out3 <= 16'h964;
      59: out3 <= 16'h7d6;
      60: out3 <= 16'h646;
      61: out3 <= 16'h4b5;
      62: out3 <= 16'h324;
      63: out3 <= 16'h192;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



module D18_22556(addr, out, clk);
   input clk;
   output [15:0] out;
   reg [15:0] out, out2, out3;
   input [5:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 16'h0;
      1: out3 <= 16'hfe6e;
      2: out3 <= 16'hfcdc;
      3: out3 <= 16'hfb4b;
      4: out3 <= 16'hf9ba;
      5: out3 <= 16'hf82a;
      6: out3 <= 16'hf69c;
      7: out3 <= 16'hf50f;
      8: out3 <= 16'hf384;
      9: out3 <= 16'hf1fa;
      10: out3 <= 16'hf073;
      11: out3 <= 16'heeee;
      12: out3 <= 16'hed6c;
      13: out3 <= 16'hebed;
      14: out3 <= 16'hea70;
      15: out3 <= 16'he8f7;
      16: out3 <= 16'he782;
      17: out3 <= 16'he611;
      18: out3 <= 16'he4a3;
      19: out3 <= 16'he33a;
      20: out3 <= 16'he1d5;
      21: out3 <= 16'he074;
      22: out3 <= 16'hdf19;
      23: out3 <= 16'hddc3;
      24: out3 <= 16'hdc72;
      25: out3 <= 16'hdb26;
      26: out3 <= 16'hd9e0;
      27: out3 <= 16'hd8a0;
      28: out3 <= 16'hd766;
      29: out3 <= 16'hd632;
      30: out3 <= 16'hd505;
      31: out3 <= 16'hd3df;
      32: out3 <= 16'hd2bf;
      33: out3 <= 16'hd1a6;
      34: out3 <= 16'hd094;
      35: out3 <= 16'hcf8a;
      36: out3 <= 16'hce87;
      37: out3 <= 16'hcd8c;
      38: out3 <= 16'hcc98;
      39: out3 <= 16'hcbad;
      40: out3 <= 16'hcac9;
      41: out3 <= 16'hc9ee;
      42: out3 <= 16'hc91b;
      43: out3 <= 16'hc850;
      44: out3 <= 16'hc78f;
      45: out3 <= 16'hc6d5;
      46: out3 <= 16'hc625;
      47: out3 <= 16'hc57e;
      48: out3 <= 16'hc4df;
      49: out3 <= 16'hc44a;
      50: out3 <= 16'hc3be;
      51: out3 <= 16'hc33b;
      52: out3 <= 16'hc2c1;
      53: out3 <= 16'hc251;
      54: out3 <= 16'hc1eb;
      55: out3 <= 16'hc18e;
      56: out3 <= 16'hc13b;
      57: out3 <= 16'hc0f1;
      58: out3 <= 16'hc0b1;
      59: out3 <= 16'hc07b;
      60: out3 <= 16'hc04f;
      61: out3 <= 16'hc02c;
      62: out3 <= 16'hc014;
      63: out3 <= 16'hc005;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



module D15_22622(addr, out, clk);
   input clk;
   output [15:0] out;
   reg [15:0] out, out2, out3;
   input [5:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 16'h4000;
      1: out3 <= 16'h3fec;
      2: out3 <= 16'h3fb1;
      3: out3 <= 16'h3f4f;
      4: out3 <= 16'h3ec5;
      5: out3 <= 16'h3e15;
      6: out3 <= 16'h3d3f;
      7: out3 <= 16'h3c42;
      8: out3 <= 16'h3b21;
      9: out3 <= 16'h39db;
      10: out3 <= 16'h3871;
      11: out3 <= 16'h36e5;
      12: out3 <= 16'h3537;
      13: out3 <= 16'h3368;
      14: out3 <= 16'h3179;
      15: out3 <= 16'h2f6c;
      16: out3 <= 16'h2d41;
      17: out3 <= 16'h2afb;
      18: out3 <= 16'h289a;
      19: out3 <= 16'h2620;
      20: out3 <= 16'h238e;
      21: out3 <= 16'h20e7;
      22: out3 <= 16'h1e2b;
      23: out3 <= 16'h1b5d;
      24: out3 <= 16'h187e;
      25: out3 <= 16'h1590;
      26: out3 <= 16'h1294;
      27: out3 <= 16'hf8d;
      28: out3 <= 16'hc7c;
      29: out3 <= 16'h964;
      30: out3 <= 16'h646;
      31: out3 <= 16'h324;
      32: out3 <= 16'h0;
      33: out3 <= 16'hfcdc;
      34: out3 <= 16'hf9ba;
      35: out3 <= 16'hf69c;
      36: out3 <= 16'hf384;
      37: out3 <= 16'hf073;
      38: out3 <= 16'hed6c;
      39: out3 <= 16'hea70;
      40: out3 <= 16'he782;
      41: out3 <= 16'he4a3;
      42: out3 <= 16'he1d5;
      43: out3 <= 16'hdf19;
      44: out3 <= 16'hdc72;
      45: out3 <= 16'hd9e0;
      46: out3 <= 16'hd766;
      47: out3 <= 16'hd505;
      48: out3 <= 16'hd2bf;
      49: out3 <= 16'hd094;
      50: out3 <= 16'hce87;
      51: out3 <= 16'hcc98;
      52: out3 <= 16'hcac9;
      53: out3 <= 16'hc91b;
      54: out3 <= 16'hc78f;
      55: out3 <= 16'hc625;
      56: out3 <= 16'hc4df;
      57: out3 <= 16'hc3be;
      58: out3 <= 16'hc2c1;
      59: out3 <= 16'hc1eb;
      60: out3 <= 16'hc13b;
      61: out3 <= 16'hc0b1;
      62: out3 <= 16'hc04f;
      63: out3 <= 16'hc014;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



module D16_22754(addr, out, clk);
   input clk;
   output [15:0] out;
   reg [15:0] out, out2, out3;
   input [5:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 16'h4000;
      1: out3 <= 16'h3fd4;
      2: out3 <= 16'h3f4f;
      3: out3 <= 16'h3e72;
      4: out3 <= 16'h3d3f;
      5: out3 <= 16'h3bb6;
      6: out3 <= 16'h39db;
      7: out3 <= 16'h37b0;
      8: out3 <= 16'h3537;
      9: out3 <= 16'h3274;
      10: out3 <= 16'h2f6c;
      11: out3 <= 16'h2c21;
      12: out3 <= 16'h289a;
      13: out3 <= 16'h24da;
      14: out3 <= 16'h20e7;
      15: out3 <= 16'h1cc6;
      16: out3 <= 16'h187e;
      17: out3 <= 16'h1413;
      18: out3 <= 16'hf8d;
      19: out3 <= 16'haf1;
      20: out3 <= 16'h646;
      21: out3 <= 16'h192;
      22: out3 <= 16'hfcdc;
      23: out3 <= 16'hf82a;
      24: out3 <= 16'hf384;
      25: out3 <= 16'heeee;
      26: out3 <= 16'hea70;
      27: out3 <= 16'he611;
      28: out3 <= 16'he1d5;
      29: out3 <= 16'hddc3;
      30: out3 <= 16'hd9e0;
      31: out3 <= 16'hd632;
      32: out3 <= 16'hd2bf;
      33: out3 <= 16'hcf8a;
      34: out3 <= 16'hcc98;
      35: out3 <= 16'hc9ee;
      36: out3 <= 16'hc78f;
      37: out3 <= 16'hc57e;
      38: out3 <= 16'hc3be;
      39: out3 <= 16'hc251;
      40: out3 <= 16'hc13b;
      41: out3 <= 16'hc07b;
      42: out3 <= 16'hc014;
      43: out3 <= 16'hc005;
      44: out3 <= 16'hc04f;
      45: out3 <= 16'hc0f1;
      46: out3 <= 16'hc1eb;
      47: out3 <= 16'hc33b;
      48: out3 <= 16'hc4df;
      49: out3 <= 16'hc6d5;
      50: out3 <= 16'hc91b;
      51: out3 <= 16'hcbad;
      52: out3 <= 16'hce87;
      53: out3 <= 16'hd1a6;
      54: out3 <= 16'hd505;
      55: out3 <= 16'hd8a0;
      56: out3 <= 16'hdc72;
      57: out3 <= 16'he074;
      58: out3 <= 16'he4a3;
      59: out3 <= 16'he8f7;
      60: out3 <= 16'hed6c;
      61: out3 <= 16'hf1fa;
      62: out3 <= 16'hf69c;
      63: out3 <= 16'hfb4b;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



// Latency: 8
// Gap: 1
module codeBlock21906(clk, reset, next_in, next_out,
   i2_in,
   X0_in, Y0,
   X1_in, Y1,
   X2_in, Y2,
   X3_in, Y3,
   X4_in, Y4,
   X5_in, Y5,
   X6_in, Y6,
   X7_in, Y7);

   output next_out;
   input clk, reset, next_in;

   reg next;
   input [5:0] i2_in;
   reg [5:0] i2;

   input [15:0] X0_in,
      X1_in,
      X2_in,
      X3_in,
      X4_in,
      X5_in,
      X6_in,
      X7_in;

   reg   [15:0] X0,
      X1,
      X2,
      X3,
      X4,
      X5,
      X6,
      X7;

   output [15:0] Y0,
      Y1,
      Y2,
      Y3,
      Y4,
      Y5,
      Y6,
      Y7;

   shiftRegFIFO #(7, 1) shiftFIFO_27433(.X(next), .Y(next_out), .clk(clk));


   wire signed [15:0] a225;
   wire signed [15:0] a202;
   wire signed [15:0] a228;
   wire signed [15:0] a206;
   wire signed [15:0] a229;
   wire signed [15:0] a230;
   wire signed [15:0] a233;
   wire signed [15:0] a234;
   wire signed [15:0] a237;
   wire signed [15:0] a238;
   reg signed [15:0] tm362;
   reg signed [15:0] tm366;
   reg signed [15:0] tm378;
   reg signed [15:0] tm382;
   reg signed [15:0] tm394;
   reg signed [15:0] tm398;
   reg signed [15:0] tm410;
   reg signed [15:0] tm417;
   reg signed [15:0] tm363;
   reg signed [15:0] tm367;
   reg signed [15:0] tm379;
   reg signed [15:0] tm383;
   reg signed [15:0] tm395;
   reg signed [15:0] tm399;
   reg signed [15:0] tm411;
   reg signed [15:0] tm418;
   wire signed [15:0] tm22;
   wire signed [15:0] a207;
   wire signed [15:0] tm23;
   wire signed [15:0] a209;
   wire signed [15:0] tm24;
   wire signed [15:0] a213;
   wire signed [15:0] tm25;
   wire signed [15:0] a215;
   wire signed [15:0] tm26;
   wire signed [15:0] a219;
   wire signed [15:0] tm27;
   wire signed [15:0] a221;
   reg signed [15:0] tm364;
   reg signed [15:0] tm368;
   reg signed [15:0] tm380;
   reg signed [15:0] tm384;
   reg signed [15:0] tm396;
   reg signed [15:0] tm400;
   reg signed [15:0] tm412;
   reg signed [15:0] tm419;
   reg signed [15:0] tm74;
   reg signed [15:0] tm75;
   reg signed [15:0] tm78;
   reg signed [15:0] tm79;
   reg signed [15:0] tm82;
   reg signed [15:0] tm83;
   reg signed [15:0] tm365;
   reg signed [15:0] tm369;
   reg signed [15:0] tm381;
   reg signed [15:0] tm385;
   reg signed [15:0] tm397;
   reg signed [15:0] tm401;
   reg signed [15:0] tm413;
   reg signed [15:0] tm420;
   reg signed [15:0] tm414;
   reg signed [15:0] tm421;
   wire signed [15:0] a208;
   wire signed [15:0] a210;
   wire signed [15:0] a211;
   wire signed [15:0] a212;
   wire signed [15:0] a214;
   wire signed [15:0] a216;
   wire signed [15:0] a217;
   wire signed [15:0] a218;
   wire signed [15:0] a220;
   wire signed [15:0] a222;
   wire signed [15:0] a223;
   wire signed [15:0] a224;
   reg signed [15:0] tm415;
   reg signed [15:0] tm422;
   wire signed [15:0] Y0;
   wire signed [15:0] Y1;
   wire signed [15:0] Y2;
   wire signed [15:0] Y3;
   wire signed [15:0] Y4;
   wire signed [15:0] Y5;
   wire signed [15:0] Y6;
   wire signed [15:0] Y7;
   reg signed [15:0] tm416;
   reg signed [15:0] tm423;


   assign a225 = X0;
   assign a202 = a225;
   assign a228 = X1;
   assign a206 = a228;
   assign a229 = X2;
   assign a230 = X3;
   assign a233 = X4;
   assign a234 = X5;
   assign a237 = X6;
   assign a238 = X7;
   assign a207 = tm22;
   assign a209 = tm23;
   assign a213 = tm24;
   assign a215 = tm25;
   assign a219 = tm26;
   assign a221 = tm27;
   assign Y0 = tm416;
   assign Y1 = tm423;

   D20_22292 instD20inst0_22292(.addr(i2[5:0]), .out(tm27), .clk(clk));

   D19_22424 instD19inst0_22424(.addr(i2[5:0]), .out(tm25), .clk(clk));

   D14_22490 instD14inst0_22490(.addr(i2[5:0]), .out(tm22), .clk(clk));

   D18_22556 instD18inst0_22556(.addr(i2[5:0]), .out(tm23), .clk(clk));

   D15_22622 instD15inst0_22622(.addr(i2[5:0]), .out(tm24), .clk(clk));

   D16_22754 instD16inst0_22754(.addr(i2[5:0]), .out(tm26), .clk(clk));

    multfix #(16, 2) m22005(.a(tm74), .b(tm365), .clk(clk), .q_sc(a208), .q_unsc(), .rst(reset));
    multfix #(16, 2) m22027(.a(tm75), .b(tm369), .clk(clk), .q_sc(a210), .q_unsc(), .rst(reset));
    multfix #(16, 2) m22045(.a(tm75), .b(tm365), .clk(clk), .q_sc(a211), .q_unsc(), .rst(reset));
    multfix #(16, 2) m22056(.a(tm74), .b(tm369), .clk(clk), .q_sc(a212), .q_unsc(), .rst(reset));
    multfix #(16, 2) m22085(.a(tm78), .b(tm381), .clk(clk), .q_sc(a214), .q_unsc(), .rst(reset));
    multfix #(16, 2) m22107(.a(tm79), .b(tm385), .clk(clk), .q_sc(a216), .q_unsc(), .rst(reset));
    multfix #(16, 2) m22125(.a(tm79), .b(tm381), .clk(clk), .q_sc(a217), .q_unsc(), .rst(reset));
    multfix #(16, 2) m22136(.a(tm78), .b(tm385), .clk(clk), .q_sc(a218), .q_unsc(), .rst(reset));
    multfix #(16, 2) m22165(.a(tm82), .b(tm397), .clk(clk), .q_sc(a220), .q_unsc(), .rst(reset));
    multfix #(16, 2) m22187(.a(tm83), .b(tm401), .clk(clk), .q_sc(a222), .q_unsc(), .rst(reset));
    multfix #(16, 2) m22205(.a(tm83), .b(tm397), .clk(clk), .q_sc(a223), .q_unsc(), .rst(reset));
    multfix #(16, 2) m22216(.a(tm82), .b(tm401), .clk(clk), .q_sc(a224), .q_unsc(), .rst(reset));
    subfxp #(16, 1) sub22034(.a(a208), .b(a210), .clk(clk), .q(Y2));    // 6
    addfxp #(16, 1) add22063(.a(a211), .b(a212), .clk(clk), .q(Y3));    // 6
    subfxp #(16, 1) sub22114(.a(a214), .b(a216), .clk(clk), .q(Y4));    // 6
    addfxp #(16, 1) add22143(.a(a217), .b(a218), .clk(clk), .q(Y5));    // 6
    subfxp #(16, 1) sub22194(.a(a220), .b(a222), .clk(clk), .q(Y6));    // 6
    addfxp #(16, 1) add22223(.a(a223), .b(a224), .clk(clk), .q(Y7));    // 6


   always @(posedge clk) begin
      if (reset == 1) begin
         tm74 <= 0;
         tm365 <= 0;
         tm75 <= 0;
         tm369 <= 0;
         tm75 <= 0;
         tm365 <= 0;
         tm74 <= 0;
         tm369 <= 0;
         tm78 <= 0;
         tm381 <= 0;
         tm79 <= 0;
         tm385 <= 0;
         tm79 <= 0;
         tm381 <= 0;
         tm78 <= 0;
         tm385 <= 0;
         tm82 <= 0;
         tm397 <= 0;
         tm83 <= 0;
         tm401 <= 0;
         tm83 <= 0;
         tm397 <= 0;
         tm82 <= 0;
         tm401 <= 0;
      end
      else begin
         i2 <= i2_in;
         X0 <= X0_in;
         X1 <= X1_in;
         X2 <= X2_in;
         X3 <= X3_in;
         X4 <= X4_in;
         X5 <= X5_in;
         X6 <= X6_in;
         X7 <= X7_in;
         next <= next_in;
         tm362 <= a229;
         tm366 <= a230;
         tm378 <= a233;
         tm382 <= a234;
         tm394 <= a237;
         tm398 <= a238;
         tm410 <= a202;
         tm417 <= a206;
         tm363 <= tm362;
         tm367 <= tm366;
         tm379 <= tm378;
         tm383 <= tm382;
         tm395 <= tm394;
         tm399 <= tm398;
         tm411 <= tm410;
         tm418 <= tm417;
         tm364 <= tm363;
         tm368 <= tm367;
         tm380 <= tm379;
         tm384 <= tm383;
         tm396 <= tm395;
         tm400 <= tm399;
         tm412 <= tm411;
         tm419 <= tm418;
         tm74 <= a207;
         tm75 <= a209;
         tm78 <= a213;
         tm79 <= a215;
         tm82 <= a219;
         tm83 <= a221;
         tm365 <= tm364;
         tm369 <= tm368;
         tm381 <= tm380;
         tm385 <= tm384;
         tm397 <= tm396;
         tm401 <= tm400;
         tm413 <= tm412;
         tm420 <= tm419;
         tm414 <= tm413;
         tm421 <= tm420;
         tm415 <= tm414;
         tm422 <= tm421;
         tm416 <= tm415;
         tm423 <= tm422;
      end
   end
endmodule

// Latency: 3
// Gap: 1
module codeBlock22759(clk, reset, next_in, next_out,
   X0_in, Y0,
   X1_in, Y1,
   X2_in, Y2,
   X3_in, Y3,
   X4_in, Y4,
   X5_in, Y5,
   X6_in, Y6,
   X7_in, Y7);

   output next_out;
   input clk, reset, next_in;

   reg next;

   input [15:0] X0_in,
      X1_in,
      X2_in,
      X3_in,
      X4_in,
      X5_in,
      X6_in,
      X7_in;

   reg   [15:0] X0,
      X1,
      X2,
      X3,
      X4,
      X5,
      X6,
      X7;

   output [15:0] Y0,
      Y1,
      Y2,
      Y3,
      Y4,
      Y5,
      Y6,
      Y7;

   shiftRegFIFO #(2, 1) shiftFIFO_27436(.X(next), .Y(next_out), .clk(clk));


   wire signed [15:0] a137;
   wire signed [15:0] a138;
   wire signed [15:0] a139;
   wire signed [15:0] a140;
   wire signed [15:0] a145;
   wire signed [15:0] a146;
   wire signed [15:0] a147;
   wire signed [15:0] a148;
   wire signed [16:0] tm206;
   wire signed [16:0] tm207;
   wire signed [16:0] tm208;
   wire signed [16:0] tm209;
   wire signed [16:0] tm210;
   wire signed [16:0] tm211;
   wire signed [16:0] tm212;
   wire signed [16:0] tm213;
   wire signed [15:0] t241;
   wire signed [15:0] t242;
   wire signed [15:0] t243;
   wire signed [15:0] t244;
   wire signed [15:0] t245;
   wire signed [15:0] t246;
   wire signed [15:0] t247;
   wire signed [15:0] t248;
   wire signed [16:0] tm214;
   wire signed [16:0] tm215;
   wire signed [16:0] tm216;
   wire signed [16:0] tm217;
   wire signed [15:0] Y0;
   wire signed [15:0] Y1;
   wire signed [15:0] Y4;
   wire signed [15:0] Y5;
   wire signed [16:0] tm218;
   wire signed [16:0] tm219;
   wire signed [16:0] tm220;
   wire signed [16:0] tm221;
   wire signed [15:0] Y2;
   wire signed [15:0] Y3;
   wire signed [15:0] Y6;
   wire signed [15:0] Y7;
   wire signed [15:0] t249;
   wire signed [15:0] t250;
   wire signed [15:0] t251;
   wire signed [15:0] t252;
   wire signed [15:0] t253;
   wire signed [15:0] t254;
   wire signed [15:0] t255;
   wire signed [15:0] t256;


   assign a137 = X0;
   assign a138 = X4;
   assign a139 = X1;
   assign a140 = X5;
   assign a145 = X2;
   assign a146 = X6;
   assign a147 = X3;
   assign a148 = X7;
   assign t241 = tm206[16:1];
   assign t242 = tm207[16:1];
   assign t243 = tm208[16:1];
   assign t244 = tm209[16:1];
   assign t245 = tm210[16:1];
   assign t246 = tm211[16:1];
   assign t247 = tm212[16:1];
   assign t248 = tm213[16:1];
   assign Y0 = t249;
   assign Y1 = t250;
   assign Y4 = t251;
   assign Y5 = t252;
   assign Y2 = t253;
   assign Y3 = t254;
   assign Y6 = t255;
   assign Y7 = t256;
   assign t249 = tm214[16:1];
   assign t250 = tm215[16:1];
   assign t251 = tm216[16:1];
   assign t252 = tm217[16:1];
   assign t253 = tm218[16:1];
   assign t254 = tm219[16:1];
   assign t255 = tm220[16:1];
   assign t256 = tm221[16:1];

    addfxp #(17, 1) add22771(.a({{1{a137[15]}}, a137}), .b({{1{a138[15]}}, a138}), .clk(clk), .q(tm206));    // 0
    addfxp #(17, 1) add22786(.a({{1{a139[15]}}, a139}), .b({{1{a140[15]}}, a140}), .clk(clk), .q(tm207));    // 0
    subfxp #(17, 1) sub22801(.a({{1{a137[15]}}, a137}), .b({{1{a138[15]}}, a138}), .clk(clk), .q(tm208));    // 0
    subfxp #(17, 1) sub22816(.a({{1{a139[15]}}, a139}), .b({{1{a140[15]}}, a140}), .clk(clk), .q(tm209));    // 0
    addfxp #(17, 1) add22831(.a({{1{a145[15]}}, a145}), .b({{1{a146[15]}}, a146}), .clk(clk), .q(tm210));    // 0
    addfxp #(17, 1) add22846(.a({{1{a147[15]}}, a147}), .b({{1{a148[15]}}, a148}), .clk(clk), .q(tm211));    // 0
    subfxp #(17, 1) sub22861(.a({{1{a145[15]}}, a145}), .b({{1{a146[15]}}, a146}), .clk(clk), .q(tm212));    // 0
    subfxp #(17, 1) sub22876(.a({{1{a147[15]}}, a147}), .b({{1{a148[15]}}, a148}), .clk(clk), .q(tm213));    // 0
    addfxp #(17, 1) add22883(.a({{1{t241[15]}}, t241}), .b({{1{t245[15]}}, t245}), .clk(clk), .q(tm214));    // 1
    addfxp #(17, 1) add22890(.a({{1{t242[15]}}, t242}), .b({{1{t246[15]}}, t246}), .clk(clk), .q(tm215));    // 1
    subfxp #(17, 1) sub22897(.a({{1{t241[15]}}, t241}), .b({{1{t245[15]}}, t245}), .clk(clk), .q(tm216));    // 1
    subfxp #(17, 1) sub22904(.a({{1{t242[15]}}, t242}), .b({{1{t246[15]}}, t246}), .clk(clk), .q(tm217));    // 1
    addfxp #(17, 1) add22927(.a({{1{t243[15]}}, t243}), .b({{1{t248[15]}}, t248}), .clk(clk), .q(tm218));    // 1
    subfxp #(17, 1) sub22934(.a({{1{t244[15]}}, t244}), .b({{1{t247[15]}}, t247}), .clk(clk), .q(tm219));    // 1
    subfxp #(17, 1) sub22941(.a({{1{t243[15]}}, t243}), .b({{1{t248[15]}}, t248}), .clk(clk), .q(tm220));    // 1
    addfxp #(17, 1) add22948(.a({{1{t244[15]}}, t244}), .b({{1{t247[15]}}, t247}), .clk(clk), .q(tm221));    // 1


   always @(posedge clk) begin
      if (reset == 1) begin
      end
      else begin
         X0 <= X0_in;
         X1 <= X1_in;
         X2 <= X2_in;
         X3 <= X3_in;
         X4 <= X4_in;
         X5 <= X5_in;
         X6 <= X6_in;
         X7 <= X7_in;
         next <= next_in;
      end
   end
endmodule

// Latency: 517
// Gap: 256
module rc22973(clk, reset, next, next_out,
   X0, Y0,
   X1, Y1,
   X2, Y2,
   X3, Y3,
   X4, Y4,
   X5, Y5,
   X6, Y6,
   X7, Y7);

   output next_out;
   input clk, reset, next;

   input [15:0] X0,
      X1,
      X2,
      X3,
      X4,
      X5,
      X6,
      X7;

   output [15:0] Y0,
      Y1,
      Y2,
      Y3,
      Y4,
      Y5,
      Y6,
      Y7;

   wire [31:0] t0;
   wire [31:0] s0;
   assign t0 = {X0, X1};
   wire [31:0] t1;
   wire [31:0] s1;
   assign t1 = {X2, X3};
   wire [31:0] t2;
   wire [31:0] s2;
   assign t2 = {X4, X5};
   wire [31:0] t3;
   wire [31:0] s3;
   assign t3 = {X6, X7};
   assign Y0 = s0[31:16];
   assign Y1 = s0[15:0];
   assign Y2 = s1[31:16];
   assign Y3 = s1[15:0];
   assign Y4 = s2[31:16];
   assign Y5 = s2[15:0];
   assign Y6 = s3[31:16];
   assign Y7 = s3[15:0];

   perm22971 instPerm27437(.x0(t0), .y0(s0),
    .x1(t1), .y1(s1),
    .x2(t2), .y2(s2),
    .x3(t3), .y3(s3),
   .clk(clk), .next(next), .next_out(next_out), .reset(reset)
);



endmodule

module swNet22971(itr, clk, ct
,       x0, y0
,       x1, y1
,       x2, y2
,       x3, y3
);

    parameter width = 32;

    input [7:0] ct;
    input clk;
    input [0:0] itr;
    input [width-1:0] x0;
    output reg [width-1:0] y0;
    input [width-1:0] x1;
    output reg [width-1:0] y1;
    input [width-1:0] x2;
    output reg [width-1:0] y2;
    input [width-1:0] x3;
    output reg [width-1:0] y3;
    wire [width-1:0] t0_0, t0_1, t0_2, t0_3;
    wire [width-1:0] t1_0, t1_1, t1_2, t1_3;
    wire [width-1:0] t2_0, t2_1, t2_2, t2_3;
    reg [width-1:0] t3_0, t3_1, t3_2, t3_3;
    wire [width-1:0] t4_0, t4_1, t4_2, t4_3;
    reg [width-1:0] t5_0, t5_1, t5_2, t5_3;

    reg [3:0] control;

    always @(posedge clk) begin
      case(ct)
        8'd0: control <= 4'b1111;
        8'd1: control <= 4'b1111;
        8'd2: control <= 4'b1111;
        8'd3: control <= 4'b1111;
        8'd4: control <= 4'b1111;
        8'd5: control <= 4'b1111;
        8'd6: control <= 4'b1111;
        8'd7: control <= 4'b1111;
        8'd8: control <= 4'b1111;
        8'd9: control <= 4'b1111;
        8'd10: control <= 4'b1111;
        8'd11: control <= 4'b1111;
        8'd12: control <= 4'b1111;
        8'd13: control <= 4'b1111;
        8'd14: control <= 4'b1111;
        8'd15: control <= 4'b1111;
        8'd16: control <= 4'b1111;
        8'd17: control <= 4'b1111;
        8'd18: control <= 4'b1111;
        8'd19: control <= 4'b1111;
        8'd20: control <= 4'b1111;
        8'd21: control <= 4'b1111;
        8'd22: control <= 4'b1111;
        8'd23: control <= 4'b1111;
        8'd24: control <= 4'b1111;
        8'd25: control <= 4'b1111;
        8'd26: control <= 4'b1111;
        8'd27: control <= 4'b1111;
        8'd28: control <= 4'b1111;
        8'd29: control <= 4'b1111;
        8'd30: control <= 4'b1111;
        8'd31: control <= 4'b1111;
        8'd32: control <= 4'b1111;
        8'd33: control <= 4'b1111;
        8'd34: control <= 4'b1111;
        8'd35: control <= 4'b1111;
        8'd36: control <= 4'b1111;
        8'd37: control <= 4'b1111;
        8'd38: control <= 4'b1111;
        8'd39: control <= 4'b1111;
        8'd40: control <= 4'b1111;
        8'd41: control <= 4'b1111;
        8'd42: control <= 4'b1111;
        8'd43: control <= 4'b1111;
        8'd44: control <= 4'b1111;
        8'd45: control <= 4'b1111;
        8'd46: control <= 4'b1111;
        8'd47: control <= 4'b1111;
        8'd48: control <= 4'b1111;
        8'd49: control <= 4'b1111;
        8'd50: control <= 4'b1111;
        8'd51: control <= 4'b1111;
        8'd52: control <= 4'b1111;
        8'd53: control <= 4'b1111;
        8'd54: control <= 4'b1111;
        8'd55: control <= 4'b1111;
        8'd56: control <= 4'b1111;
        8'd57: control <= 4'b1111;
        8'd58: control <= 4'b1111;
        8'd59: control <= 4'b1111;
        8'd60: control <= 4'b1111;
        8'd61: control <= 4'b1111;
        8'd62: control <= 4'b1111;
        8'd63: control <= 4'b1111;
        8'd64: control <= 4'b0011;
        8'd65: control <= 4'b0011;
        8'd66: control <= 4'b0011;
        8'd67: control <= 4'b0011;
        8'd68: control <= 4'b0011;
        8'd69: control <= 4'b0011;
        8'd70: control <= 4'b0011;
        8'd71: control <= 4'b0011;
        8'd72: control <= 4'b0011;
        8'd73: control <= 4'b0011;
        8'd74: control <= 4'b0011;
        8'd75: control <= 4'b0011;
        8'd76: control <= 4'b0011;
        8'd77: control <= 4'b0011;
        8'd78: control <= 4'b0011;
        8'd79: control <= 4'b0011;
        8'd80: control <= 4'b0011;
        8'd81: control <= 4'b0011;
        8'd82: control <= 4'b0011;
        8'd83: control <= 4'b0011;
        8'd84: control <= 4'b0011;
        8'd85: control <= 4'b0011;
        8'd86: control <= 4'b0011;
        8'd87: control <= 4'b0011;
        8'd88: control <= 4'b0011;
        8'd89: control <= 4'b0011;
        8'd90: control <= 4'b0011;
        8'd91: control <= 4'b0011;
        8'd92: control <= 4'b0011;
        8'd93: control <= 4'b0011;
        8'd94: control <= 4'b0011;
        8'd95: control <= 4'b0011;
        8'd96: control <= 4'b0011;
        8'd97: control <= 4'b0011;
        8'd98: control <= 4'b0011;
        8'd99: control <= 4'b0011;
        8'd100: control <= 4'b0011;
        8'd101: control <= 4'b0011;
        8'd102: control <= 4'b0011;
        8'd103: control <= 4'b0011;
        8'd104: control <= 4'b0011;
        8'd105: control <= 4'b0011;
        8'd106: control <= 4'b0011;
        8'd107: control <= 4'b0011;
        8'd108: control <= 4'b0011;
        8'd109: control <= 4'b0011;
        8'd110: control <= 4'b0011;
        8'd111: control <= 4'b0011;
        8'd112: control <= 4'b0011;
        8'd113: control <= 4'b0011;
        8'd114: control <= 4'b0011;
        8'd115: control <= 4'b0011;
        8'd116: control <= 4'b0011;
        8'd117: control <= 4'b0011;
        8'd118: control <= 4'b0011;
        8'd119: control <= 4'b0011;
        8'd120: control <= 4'b0011;
        8'd121: control <= 4'b0011;
        8'd122: control <= 4'b0011;
        8'd123: control <= 4'b0011;
        8'd124: control <= 4'b0011;
        8'd125: control <= 4'b0011;
        8'd126: control <= 4'b0011;
        8'd127: control <= 4'b0011;
        8'd128: control <= 4'b1100;
        8'd129: control <= 4'b1100;
        8'd130: control <= 4'b1100;
        8'd131: control <= 4'b1100;
        8'd132: control <= 4'b1100;
        8'd133: control <= 4'b1100;
        8'd134: control <= 4'b1100;
        8'd135: control <= 4'b1100;
        8'd136: control <= 4'b1100;
        8'd137: control <= 4'b1100;
        8'd138: control <= 4'b1100;
        8'd139: control <= 4'b1100;
        8'd140: control <= 4'b1100;
        8'd141: control <= 4'b1100;
        8'd142: control <= 4'b1100;
        8'd143: control <= 4'b1100;
        8'd144: control <= 4'b1100;
        8'd145: control <= 4'b1100;
        8'd146: control <= 4'b1100;
        8'd147: control <= 4'b1100;
        8'd148: control <= 4'b1100;
        8'd149: control <= 4'b1100;
        8'd150: control <= 4'b1100;
        8'd151: control <= 4'b1100;
        8'd152: control <= 4'b1100;
        8'd153: control <= 4'b1100;
        8'd154: control <= 4'b1100;
        8'd155: control <= 4'b1100;
        8'd156: control <= 4'b1100;
        8'd157: control <= 4'b1100;
        8'd158: control <= 4'b1100;
        8'd159: control <= 4'b1100;
        8'd160: control <= 4'b1100;
        8'd161: control <= 4'b1100;
        8'd162: control <= 4'b1100;
        8'd163: control <= 4'b1100;
        8'd164: control <= 4'b1100;
        8'd165: control <= 4'b1100;
        8'd166: control <= 4'b1100;
        8'd167: control <= 4'b1100;
        8'd168: control <= 4'b1100;
        8'd169: control <= 4'b1100;
        8'd170: control <= 4'b1100;
        8'd171: control <= 4'b1100;
        8'd172: control <= 4'b1100;
        8'd173: control <= 4'b1100;
        8'd174: control <= 4'b1100;
        8'd175: control <= 4'b1100;
        8'd176: control <= 4'b1100;
        8'd177: control <= 4'b1100;
        8'd178: control <= 4'b1100;
        8'd179: control <= 4'b1100;
        8'd180: control <= 4'b1100;
        8'd181: control <= 4'b1100;
        8'd182: control <= 4'b1100;
        8'd183: control <= 4'b1100;
        8'd184: control <= 4'b1100;
        8'd185: control <= 4'b1100;
        8'd186: control <= 4'b1100;
        8'd187: control <= 4'b1100;
        8'd188: control <= 4'b1100;
        8'd189: control <= 4'b1100;
        8'd190: control <= 4'b1100;
        8'd191: control <= 4'b1100;
        8'd192: control <= 4'b0000;
        8'd193: control <= 4'b0000;
        8'd194: control <= 4'b0000;
        8'd195: control <= 4'b0000;
        8'd196: control <= 4'b0000;
        8'd197: control <= 4'b0000;
        8'd198: control <= 4'b0000;
        8'd199: control <= 4'b0000;
        8'd200: control <= 4'b0000;
        8'd201: control <= 4'b0000;
        8'd202: control <= 4'b0000;
        8'd203: control <= 4'b0000;
        8'd204: control <= 4'b0000;
        8'd205: control <= 4'b0000;
        8'd206: control <= 4'b0000;
        8'd207: control <= 4'b0000;
        8'd208: control <= 4'b0000;
        8'd209: control <= 4'b0000;
        8'd210: control <= 4'b0000;
        8'd211: control <= 4'b0000;
        8'd212: control <= 4'b0000;
        8'd213: control <= 4'b0000;
        8'd214: control <= 4'b0000;
        8'd215: control <= 4'b0000;
        8'd216: control <= 4'b0000;
        8'd217: control <= 4'b0000;
        8'd218: control <= 4'b0000;
        8'd219: control <= 4'b0000;
        8'd220: control <= 4'b0000;
        8'd221: control <= 4'b0000;
        8'd222: control <= 4'b0000;
        8'd223: control <= 4'b0000;
        8'd224: control <= 4'b0000;
        8'd225: control <= 4'b0000;
        8'd226: control <= 4'b0000;
        8'd227: control <= 4'b0000;
        8'd228: control <= 4'b0000;
        8'd229: control <= 4'b0000;
        8'd230: control <= 4'b0000;
        8'd231: control <= 4'b0000;
        8'd232: control <= 4'b0000;
        8'd233: control <= 4'b0000;
        8'd234: control <= 4'b0000;
        8'd235: control <= 4'b0000;
        8'd236: control <= 4'b0000;
        8'd237: control <= 4'b0000;
        8'd238: control <= 4'b0000;
        8'd239: control <= 4'b0000;
        8'd240: control <= 4'b0000;
        8'd241: control <= 4'b0000;
        8'd242: control <= 4'b0000;
        8'd243: control <= 4'b0000;
        8'd244: control <= 4'b0000;
        8'd245: control <= 4'b0000;
        8'd246: control <= 4'b0000;
        8'd247: control <= 4'b0000;
        8'd248: control <= 4'b0000;
        8'd249: control <= 4'b0000;
        8'd250: control <= 4'b0000;
        8'd251: control <= 4'b0000;
        8'd252: control <= 4'b0000;
        8'd253: control <= 4'b0000;
        8'd254: control <= 4'b0000;
        8'd255: control <= 4'b0000;
      endcase
   end

// synthesis attribute rom_style of control is "block"
   reg [3:0] control0;
   reg [3:0] control1;
    always @(posedge clk) begin
       control0 <= control;
        control1 <= control0;
    end
    assign t0_0 = x0;
    assign t0_1 = x2;
    assign t0_2 = x1;
    assign t0_3 = x3;
     assign t1_0 = t0_0;
     assign t1_1 = t0_1;
     assign t1_2 = t0_2;
     assign t1_3 = t0_3;
    assign t2_0 = t1_0;
    assign t2_1 = t1_2;
    assign t2_2 = t1_1;
    assign t2_3 = t1_3;
   always @(posedge clk) begin
         t3_0 <= (control0[3] == 0) ? t2_0 : t2_1;
         t3_1 <= (control0[3] == 0) ? t2_1 : t2_0;
         t3_2 <= (control0[2] == 0) ? t2_2 : t2_3;
         t3_3 <= (control0[2] == 0) ? t2_3 : t2_2;
   end
    assign t4_0 = t3_0;
    assign t4_1 = t3_2;
    assign t4_2 = t3_1;
    assign t4_3 = t3_3;
   always @(posedge clk) begin
         t5_0 <= (control1[1] == 0) ? t4_0 : t4_1;
         t5_1 <= (control1[1] == 0) ? t4_1 : t4_0;
         t5_2 <= (control1[0] == 0) ? t4_2 : t4_3;
         t5_3 <= (control1[0] == 0) ? t4_3 : t4_2;
   end
    always @(posedge clk) begin
        y0 <= t5_0;
        y1 <= t5_2;
        y2 <= t5_1;
        y3 <= t5_3;
    end
endmodule

// Latency: 517
// Gap: 256
module perm22971(clk, next, reset, next_out,
   x0, y0,
   x1, y1,
   x2, y2,
   x3, y3);
   parameter width = 32;

   parameter depth = 256;

   parameter addrbits = 8;

   parameter muxbits = 2;

   input [width-1:0]  x0;
   output [width-1:0]  y0;
   wire [width-1:0]  t0;
   wire [width-1:0]  s0;
   input [width-1:0]  x1;
   output [width-1:0]  y1;
   wire [width-1:0]  t1;
   wire [width-1:0]  s1;
   input [width-1:0]  x2;
   output [width-1:0]  y2;
   wire [width-1:0]  t2;
   wire [width-1:0]  s2;
   input [width-1:0]  x3;
   output [width-1:0]  y3;
   wire [width-1:0]  t3;
   wire [width-1:0]  s3;
   input next, reset, clk;
   output next_out;
   reg [addrbits-1:0] s1rdloc, s2rdloc;

    reg [addrbits-1:0] s1wr0;
   reg [addrbits-1:0] s1rd0, s2wr0, s2rd0;
   reg [addrbits-1:0] s1rd1, s2wr1, s2rd1;
   reg [addrbits-1:0] s1rd2, s2wr2, s2rd2;
   reg [addrbits-1:0] s1rd3, s2wr3, s2rd3;
   reg s1wr_en, state1, state2, state3;
   wire 	      next2, next3, next4;
   reg 		      inFlip0, outFlip0_z, outFlip1;
   wire 	      inFlip1, outFlip0;

   wire [0:0] tm28;
   assign tm28 = 0;

shiftRegFIFO #(4, 1) shiftFIFO_27442(.X(outFlip0), .Y(inFlip1), .clk(clk));
shiftRegFIFO #(1, 1) shiftFIFO_27443(.X(outFlip0_z), .Y(outFlip0), .clk(clk));
//   shiftRegFIFO #(2, 1) inFlip1Reg(outFlip0, inFlip1, clk);
//   shiftRegFIFO #(1, 1) outFlip0Reg(outFlip0_z, outFlip0, clk);
   
   memMod #(depth*2, width, addrbits+1) s1mem0(x0, t0, {inFlip0, s1wr0}, {outFlip0, s1rd0}, s1wr_en, clk);
   memMod #(depth*2, width, addrbits+1) s1mem1(x1, t1, {inFlip0, s1wr0}, {outFlip0, s1rd1}, s1wr_en, clk);
   memMod #(depth*2, width, addrbits+1) s1mem2(x2, t2, {inFlip0, s1wr0}, {outFlip0, s1rd2}, s1wr_en, clk);
   memMod #(depth*2, width, addrbits+1) s1mem3(x3, t3, {inFlip0, s1wr0}, {outFlip0, s1rd3}, s1wr_en, clk);

nextReg #(255, 8) nextReg_27454(.X(next), .Y(next2), .reset(reset), .clk(clk));
shiftRegFIFO #(5, 1) shiftFIFO_27455(.X(next2), .Y(next3), .clk(clk));
nextReg #(256, 8) nextReg_27458(.X(next3), .Y(next4), .reset(reset), .clk(clk));
shiftRegFIFO #(1, 1) shiftFIFO_27459(.X(next4), .Y(next_out), .clk(clk));
shiftRegFIFO #(255, 1) shiftFIFO_27462(.X(tm28), .Y(tm28_d), .clk(clk));
shiftRegFIFO #(4, 1) shiftFIFO_27465(.X(tm28_d), .Y(tm28_dd), .clk(clk));
   
   wire [addrbits-1:0] 	      muxCycle, writeCycle;
assign muxCycle = s1rdloc;
shiftRegFIFO #(4, 8) shiftFIFO_27470(.X(muxCycle), .Y(writeCycle), .clk(clk));
        
   wire 		      readInt, s2wr_en;   
   assign 		      readInt = (state2 == 1);

   shiftRegFIFO #(5, 1) writeIntReg(readInt, s2wr_en, clk);

   memMod #(depth*2, width, addrbits+1) s2mem0(s0, y0, {inFlip1, s2wr0}, {outFlip1, s2rdloc}, s2wr_en, clk);
   memMod #(depth*2, width, addrbits+1) s2mem1(s1, y1, {inFlip1, s2wr1}, {outFlip1, s2rdloc}, s2wr_en, clk);
   memMod #(depth*2, width, addrbits+1) s2mem2(s2, y2, {inFlip1, s2wr2}, {outFlip1, s2rdloc}, s2wr_en, clk);
   memMod #(depth*2, width, addrbits+1) s2mem3(s3, y3, {inFlip1, s2wr3}, {outFlip1, s2rdloc}, s2wr_en, clk);
   always @(posedge clk) begin
      if (reset == 1) begin
	 state1 <= 0;
	 inFlip0 <= 0;	 
	 s1wr0 <= 0;
      end
      else if (next == 1) begin
	 s1wr0 <= 0;
	 state1 <= 1;
	 s1wr_en <= 1;
	 inFlip0 <= (s1wr0 == depth-1) ? ~inFlip0 : inFlip0;
      end
      else begin
	 case(state1)
	   0: begin
	      s1wr0 <= 0;
	      state1 <= 0;
	      s1wr_en <= 0;
	      inFlip0 <= inFlip0;	      
	   end
	   1: begin
	      s1wr0 <= (s1wr0 == depth-1) ? 0 : s1wr0 + 1;
	      state1 <= 1;
         s1wr_en <= 1;
	      inFlip0 <= (s1wr0 == depth-1) ? ~inFlip0 : inFlip0;
	   end
	 endcase
      end      
   end
   
   always @(posedge clk) begin
      if (reset == 1) begin
	       state2 <= 0;
	       outFlip0_z <= 0;	 
      end
      else if (next2 == 1) begin
	       s1rdloc <= 0;
	       state2 <= 1;
	       outFlip0_z <= (s1rdloc == depth-1) ? ~outFlip0_z : outFlip0_z;
      end
      else begin
	 case(state2)
	   0: begin
	      s1rdloc <= 0;
	      state2 <= 0;
	      outFlip0_z <= outFlip0_z;	 
	   end
	   1: begin
	      s1rdloc <= (s1rdloc == depth-1) ? 0 : s1rdloc + 1;
         state2 <= 1;
	      outFlip0_z <= (s1rdloc == depth-1) ? ~outFlip0_z : outFlip0_z;
	   end	     
	 endcase
      end
   end
   
   always @(posedge clk) begin
      if (reset == 1) begin
	 state3 <= 0;
	 outFlip1 <= 0;	 
      end
      else if (next4 == 1) begin
	 s2rdloc <= 0;
	 state3 <= 1;
	 outFlip1 <= (s2rdloc == depth-1) ? ~outFlip1 : outFlip1;	      
      end
      else begin
	 case(state3)
	   0: begin
	      s2rdloc <= 0;
	      state3 <= 0;
	      outFlip1 <= outFlip1;
	   end
	   1: begin
	      s2rdloc <= (s2rdloc == depth-1) ? 0 : s2rdloc + 1;
         state3 <= 1;
	      outFlip1 <= (s2rdloc == depth-1) ? ~outFlip1 : outFlip1;
	   end	     
	 endcase
      end
   end
   always @(posedge clk) begin
      case({tm28_d, s1rdloc})
	     {1'd0,  8'd0}: s1rd0 <= 192;
	     {1'd0,  8'd1}: s1rd0 <= 193;
	     {1'd0,  8'd2}: s1rd0 <= 194;
	     {1'd0,  8'd3}: s1rd0 <= 195;
	     {1'd0,  8'd4}: s1rd0 <= 196;
	     {1'd0,  8'd5}: s1rd0 <= 197;
	     {1'd0,  8'd6}: s1rd0 <= 198;
	     {1'd0,  8'd7}: s1rd0 <= 199;
	     {1'd0,  8'd8}: s1rd0 <= 200;
	     {1'd0,  8'd9}: s1rd0 <= 201;
	     {1'd0,  8'd10}: s1rd0 <= 202;
	     {1'd0,  8'd11}: s1rd0 <= 203;
	     {1'd0,  8'd12}: s1rd0 <= 204;
	     {1'd0,  8'd13}: s1rd0 <= 205;
	     {1'd0,  8'd14}: s1rd0 <= 206;
	     {1'd0,  8'd15}: s1rd0 <= 207;
	     {1'd0,  8'd16}: s1rd0 <= 208;
	     {1'd0,  8'd17}: s1rd0 <= 209;
	     {1'd0,  8'd18}: s1rd0 <= 210;
	     {1'd0,  8'd19}: s1rd0 <= 211;
	     {1'd0,  8'd20}: s1rd0 <= 212;
	     {1'd0,  8'd21}: s1rd0 <= 213;
	     {1'd0,  8'd22}: s1rd0 <= 214;
	     {1'd0,  8'd23}: s1rd0 <= 215;
	     {1'd0,  8'd24}: s1rd0 <= 216;
	     {1'd0,  8'd25}: s1rd0 <= 217;
	     {1'd0,  8'd26}: s1rd0 <= 218;
	     {1'd0,  8'd27}: s1rd0 <= 219;
	     {1'd0,  8'd28}: s1rd0 <= 220;
	     {1'd0,  8'd29}: s1rd0 <= 221;
	     {1'd0,  8'd30}: s1rd0 <= 222;
	     {1'd0,  8'd31}: s1rd0 <= 223;
	     {1'd0,  8'd32}: s1rd0 <= 224;
	     {1'd0,  8'd33}: s1rd0 <= 225;
	     {1'd0,  8'd34}: s1rd0 <= 226;
	     {1'd0,  8'd35}: s1rd0 <= 227;
	     {1'd0,  8'd36}: s1rd0 <= 228;
	     {1'd0,  8'd37}: s1rd0 <= 229;
	     {1'd0,  8'd38}: s1rd0 <= 230;
	     {1'd0,  8'd39}: s1rd0 <= 231;
	     {1'd0,  8'd40}: s1rd0 <= 232;
	     {1'd0,  8'd41}: s1rd0 <= 233;
	     {1'd0,  8'd42}: s1rd0 <= 234;
	     {1'd0,  8'd43}: s1rd0 <= 235;
	     {1'd0,  8'd44}: s1rd0 <= 236;
	     {1'd0,  8'd45}: s1rd0 <= 237;
	     {1'd0,  8'd46}: s1rd0 <= 238;
	     {1'd0,  8'd47}: s1rd0 <= 239;
	     {1'd0,  8'd48}: s1rd0 <= 240;
	     {1'd0,  8'd49}: s1rd0 <= 241;
	     {1'd0,  8'd50}: s1rd0 <= 242;
	     {1'd0,  8'd51}: s1rd0 <= 243;
	     {1'd0,  8'd52}: s1rd0 <= 244;
	     {1'd0,  8'd53}: s1rd0 <= 245;
	     {1'd0,  8'd54}: s1rd0 <= 246;
	     {1'd0,  8'd55}: s1rd0 <= 247;
	     {1'd0,  8'd56}: s1rd0 <= 248;
	     {1'd0,  8'd57}: s1rd0 <= 249;
	     {1'd0,  8'd58}: s1rd0 <= 250;
	     {1'd0,  8'd59}: s1rd0 <= 251;
	     {1'd0,  8'd60}: s1rd0 <= 252;
	     {1'd0,  8'd61}: s1rd0 <= 253;
	     {1'd0,  8'd62}: s1rd0 <= 254;
	     {1'd0,  8'd63}: s1rd0 <= 255;
	     {1'd0,  8'd64}: s1rd0 <= 128;
	     {1'd0,  8'd65}: s1rd0 <= 129;
	     {1'd0,  8'd66}: s1rd0 <= 130;
	     {1'd0,  8'd67}: s1rd0 <= 131;
	     {1'd0,  8'd68}: s1rd0 <= 132;
	     {1'd0,  8'd69}: s1rd0 <= 133;
	     {1'd0,  8'd70}: s1rd0 <= 134;
	     {1'd0,  8'd71}: s1rd0 <= 135;
	     {1'd0,  8'd72}: s1rd0 <= 136;
	     {1'd0,  8'd73}: s1rd0 <= 137;
	     {1'd0,  8'd74}: s1rd0 <= 138;
	     {1'd0,  8'd75}: s1rd0 <= 139;
	     {1'd0,  8'd76}: s1rd0 <= 140;
	     {1'd0,  8'd77}: s1rd0 <= 141;
	     {1'd0,  8'd78}: s1rd0 <= 142;
	     {1'd0,  8'd79}: s1rd0 <= 143;
	     {1'd0,  8'd80}: s1rd0 <= 144;
	     {1'd0,  8'd81}: s1rd0 <= 145;
	     {1'd0,  8'd82}: s1rd0 <= 146;
	     {1'd0,  8'd83}: s1rd0 <= 147;
	     {1'd0,  8'd84}: s1rd0 <= 148;
	     {1'd0,  8'd85}: s1rd0 <= 149;
	     {1'd0,  8'd86}: s1rd0 <= 150;
	     {1'd0,  8'd87}: s1rd0 <= 151;
	     {1'd0,  8'd88}: s1rd0 <= 152;
	     {1'd0,  8'd89}: s1rd0 <= 153;
	     {1'd0,  8'd90}: s1rd0 <= 154;
	     {1'd0,  8'd91}: s1rd0 <= 155;
	     {1'd0,  8'd92}: s1rd0 <= 156;
	     {1'd0,  8'd93}: s1rd0 <= 157;
	     {1'd0,  8'd94}: s1rd0 <= 158;
	     {1'd0,  8'd95}: s1rd0 <= 159;
	     {1'd0,  8'd96}: s1rd0 <= 160;
	     {1'd0,  8'd97}: s1rd0 <= 161;
	     {1'd0,  8'd98}: s1rd0 <= 162;
	     {1'd0,  8'd99}: s1rd0 <= 163;
	     {1'd0,  8'd100}: s1rd0 <= 164;
	     {1'd0,  8'd101}: s1rd0 <= 165;
	     {1'd0,  8'd102}: s1rd0 <= 166;
	     {1'd0,  8'd103}: s1rd0 <= 167;
	     {1'd0,  8'd104}: s1rd0 <= 168;
	     {1'd0,  8'd105}: s1rd0 <= 169;
	     {1'd0,  8'd106}: s1rd0 <= 170;
	     {1'd0,  8'd107}: s1rd0 <= 171;
	     {1'd0,  8'd108}: s1rd0 <= 172;
	     {1'd0,  8'd109}: s1rd0 <= 173;
	     {1'd0,  8'd110}: s1rd0 <= 174;
	     {1'd0,  8'd111}: s1rd0 <= 175;
	     {1'd0,  8'd112}: s1rd0 <= 176;
	     {1'd0,  8'd113}: s1rd0 <= 177;
	     {1'd0,  8'd114}: s1rd0 <= 178;
	     {1'd0,  8'd115}: s1rd0 <= 179;
	     {1'd0,  8'd116}: s1rd0 <= 180;
	     {1'd0,  8'd117}: s1rd0 <= 181;
	     {1'd0,  8'd118}: s1rd0 <= 182;
	     {1'd0,  8'd119}: s1rd0 <= 183;
	     {1'd0,  8'd120}: s1rd0 <= 184;
	     {1'd0,  8'd121}: s1rd0 <= 185;
	     {1'd0,  8'd122}: s1rd0 <= 186;
	     {1'd0,  8'd123}: s1rd0 <= 187;
	     {1'd0,  8'd124}: s1rd0 <= 188;
	     {1'd0,  8'd125}: s1rd0 <= 189;
	     {1'd0,  8'd126}: s1rd0 <= 190;
	     {1'd0,  8'd127}: s1rd0 <= 191;
	     {1'd0,  8'd128}: s1rd0 <= 64;
	     {1'd0,  8'd129}: s1rd0 <= 65;
	     {1'd0,  8'd130}: s1rd0 <= 66;
	     {1'd0,  8'd131}: s1rd0 <= 67;
	     {1'd0,  8'd132}: s1rd0 <= 68;
	     {1'd0,  8'd133}: s1rd0 <= 69;
	     {1'd0,  8'd134}: s1rd0 <= 70;
	     {1'd0,  8'd135}: s1rd0 <= 71;
	     {1'd0,  8'd136}: s1rd0 <= 72;
	     {1'd0,  8'd137}: s1rd0 <= 73;
	     {1'd0,  8'd138}: s1rd0 <= 74;
	     {1'd0,  8'd139}: s1rd0 <= 75;
	     {1'd0,  8'd140}: s1rd0 <= 76;
	     {1'd0,  8'd141}: s1rd0 <= 77;
	     {1'd0,  8'd142}: s1rd0 <= 78;
	     {1'd0,  8'd143}: s1rd0 <= 79;
	     {1'd0,  8'd144}: s1rd0 <= 80;
	     {1'd0,  8'd145}: s1rd0 <= 81;
	     {1'd0,  8'd146}: s1rd0 <= 82;
	     {1'd0,  8'd147}: s1rd0 <= 83;
	     {1'd0,  8'd148}: s1rd0 <= 84;
	     {1'd0,  8'd149}: s1rd0 <= 85;
	     {1'd0,  8'd150}: s1rd0 <= 86;
	     {1'd0,  8'd151}: s1rd0 <= 87;
	     {1'd0,  8'd152}: s1rd0 <= 88;
	     {1'd0,  8'd153}: s1rd0 <= 89;
	     {1'd0,  8'd154}: s1rd0 <= 90;
	     {1'd0,  8'd155}: s1rd0 <= 91;
	     {1'd0,  8'd156}: s1rd0 <= 92;
	     {1'd0,  8'd157}: s1rd0 <= 93;
	     {1'd0,  8'd158}: s1rd0 <= 94;
	     {1'd0,  8'd159}: s1rd0 <= 95;
	     {1'd0,  8'd160}: s1rd0 <= 96;
	     {1'd0,  8'd161}: s1rd0 <= 97;
	     {1'd0,  8'd162}: s1rd0 <= 98;
	     {1'd0,  8'd163}: s1rd0 <= 99;
	     {1'd0,  8'd164}: s1rd0 <= 100;
	     {1'd0,  8'd165}: s1rd0 <= 101;
	     {1'd0,  8'd166}: s1rd0 <= 102;
	     {1'd0,  8'd167}: s1rd0 <= 103;
	     {1'd0,  8'd168}: s1rd0 <= 104;
	     {1'd0,  8'd169}: s1rd0 <= 105;
	     {1'd0,  8'd170}: s1rd0 <= 106;
	     {1'd0,  8'd171}: s1rd0 <= 107;
	     {1'd0,  8'd172}: s1rd0 <= 108;
	     {1'd0,  8'd173}: s1rd0 <= 109;
	     {1'd0,  8'd174}: s1rd0 <= 110;
	     {1'd0,  8'd175}: s1rd0 <= 111;
	     {1'd0,  8'd176}: s1rd0 <= 112;
	     {1'd0,  8'd177}: s1rd0 <= 113;
	     {1'd0,  8'd178}: s1rd0 <= 114;
	     {1'd0,  8'd179}: s1rd0 <= 115;
	     {1'd0,  8'd180}: s1rd0 <= 116;
	     {1'd0,  8'd181}: s1rd0 <= 117;
	     {1'd0,  8'd182}: s1rd0 <= 118;
	     {1'd0,  8'd183}: s1rd0 <= 119;
	     {1'd0,  8'd184}: s1rd0 <= 120;
	     {1'd0,  8'd185}: s1rd0 <= 121;
	     {1'd0,  8'd186}: s1rd0 <= 122;
	     {1'd0,  8'd187}: s1rd0 <= 123;
	     {1'd0,  8'd188}: s1rd0 <= 124;
	     {1'd0,  8'd189}: s1rd0 <= 125;
	     {1'd0,  8'd190}: s1rd0 <= 126;
	     {1'd0,  8'd191}: s1rd0 <= 127;
	     {1'd0,  8'd192}: s1rd0 <= 0;
	     {1'd0,  8'd193}: s1rd0 <= 1;
	     {1'd0,  8'd194}: s1rd0 <= 2;
	     {1'd0,  8'd195}: s1rd0 <= 3;
	     {1'd0,  8'd196}: s1rd0 <= 4;
	     {1'd0,  8'd197}: s1rd0 <= 5;
	     {1'd0,  8'd198}: s1rd0 <= 6;
	     {1'd0,  8'd199}: s1rd0 <= 7;
	     {1'd0,  8'd200}: s1rd0 <= 8;
	     {1'd0,  8'd201}: s1rd0 <= 9;
	     {1'd0,  8'd202}: s1rd0 <= 10;
	     {1'd0,  8'd203}: s1rd0 <= 11;
	     {1'd0,  8'd204}: s1rd0 <= 12;
	     {1'd0,  8'd205}: s1rd0 <= 13;
	     {1'd0,  8'd206}: s1rd0 <= 14;
	     {1'd0,  8'd207}: s1rd0 <= 15;
	     {1'd0,  8'd208}: s1rd0 <= 16;
	     {1'd0,  8'd209}: s1rd0 <= 17;
	     {1'd0,  8'd210}: s1rd0 <= 18;
	     {1'd0,  8'd211}: s1rd0 <= 19;
	     {1'd0,  8'd212}: s1rd0 <= 20;
	     {1'd0,  8'd213}: s1rd0 <= 21;
	     {1'd0,  8'd214}: s1rd0 <= 22;
	     {1'd0,  8'd215}: s1rd0 <= 23;
	     {1'd0,  8'd216}: s1rd0 <= 24;
	     {1'd0,  8'd217}: s1rd0 <= 25;
	     {1'd0,  8'd218}: s1rd0 <= 26;
	     {1'd0,  8'd219}: s1rd0 <= 27;
	     {1'd0,  8'd220}: s1rd0 <= 28;
	     {1'd0,  8'd221}: s1rd0 <= 29;
	     {1'd0,  8'd222}: s1rd0 <= 30;
	     {1'd0,  8'd223}: s1rd0 <= 31;
	     {1'd0,  8'd224}: s1rd0 <= 32;
	     {1'd0,  8'd225}: s1rd0 <= 33;
	     {1'd0,  8'd226}: s1rd0 <= 34;
	     {1'd0,  8'd227}: s1rd0 <= 35;
	     {1'd0,  8'd228}: s1rd0 <= 36;
	     {1'd0,  8'd229}: s1rd0 <= 37;
	     {1'd0,  8'd230}: s1rd0 <= 38;
	     {1'd0,  8'd231}: s1rd0 <= 39;
	     {1'd0,  8'd232}: s1rd0 <= 40;
	     {1'd0,  8'd233}: s1rd0 <= 41;
	     {1'd0,  8'd234}: s1rd0 <= 42;
	     {1'd0,  8'd235}: s1rd0 <= 43;
	     {1'd0,  8'd236}: s1rd0 <= 44;
	     {1'd0,  8'd237}: s1rd0 <= 45;
	     {1'd0,  8'd238}: s1rd0 <= 46;
	     {1'd0,  8'd239}: s1rd0 <= 47;
	     {1'd0,  8'd240}: s1rd0 <= 48;
	     {1'd0,  8'd241}: s1rd0 <= 49;
	     {1'd0,  8'd242}: s1rd0 <= 50;
	     {1'd0,  8'd243}: s1rd0 <= 51;
	     {1'd0,  8'd244}: s1rd0 <= 52;
	     {1'd0,  8'd245}: s1rd0 <= 53;
	     {1'd0,  8'd246}: s1rd0 <= 54;
	     {1'd0,  8'd247}: s1rd0 <= 55;
	     {1'd0,  8'd248}: s1rd0 <= 56;
	     {1'd0,  8'd249}: s1rd0 <= 57;
	     {1'd0,  8'd250}: s1rd0 <= 58;
	     {1'd0,  8'd251}: s1rd0 <= 59;
	     {1'd0,  8'd252}: s1rd0 <= 60;
	     {1'd0,  8'd253}: s1rd0 <= 61;
	     {1'd0,  8'd254}: s1rd0 <= 62;
	     {1'd0,  8'd255}: s1rd0 <= 63;
      endcase      
   end

// synthesis attribute rom_style of s1rd0 is "distributed"
   always @(posedge clk) begin
      case({tm28_d, s1rdloc})
	     {1'd0,  8'd0}: s1rd1 <= 128;
	     {1'd0,  8'd1}: s1rd1 <= 129;
	     {1'd0,  8'd2}: s1rd1 <= 130;
	     {1'd0,  8'd3}: s1rd1 <= 131;
	     {1'd0,  8'd4}: s1rd1 <= 132;
	     {1'd0,  8'd5}: s1rd1 <= 133;
	     {1'd0,  8'd6}: s1rd1 <= 134;
	     {1'd0,  8'd7}: s1rd1 <= 135;
	     {1'd0,  8'd8}: s1rd1 <= 136;
	     {1'd0,  8'd9}: s1rd1 <= 137;
	     {1'd0,  8'd10}: s1rd1 <= 138;
	     {1'd0,  8'd11}: s1rd1 <= 139;
	     {1'd0,  8'd12}: s1rd1 <= 140;
	     {1'd0,  8'd13}: s1rd1 <= 141;
	     {1'd0,  8'd14}: s1rd1 <= 142;
	     {1'd0,  8'd15}: s1rd1 <= 143;
	     {1'd0,  8'd16}: s1rd1 <= 144;
	     {1'd0,  8'd17}: s1rd1 <= 145;
	     {1'd0,  8'd18}: s1rd1 <= 146;
	     {1'd0,  8'd19}: s1rd1 <= 147;
	     {1'd0,  8'd20}: s1rd1 <= 148;
	     {1'd0,  8'd21}: s1rd1 <= 149;
	     {1'd0,  8'd22}: s1rd1 <= 150;
	     {1'd0,  8'd23}: s1rd1 <= 151;
	     {1'd0,  8'd24}: s1rd1 <= 152;
	     {1'd0,  8'd25}: s1rd1 <= 153;
	     {1'd0,  8'd26}: s1rd1 <= 154;
	     {1'd0,  8'd27}: s1rd1 <= 155;
	     {1'd0,  8'd28}: s1rd1 <= 156;
	     {1'd0,  8'd29}: s1rd1 <= 157;
	     {1'd0,  8'd30}: s1rd1 <= 158;
	     {1'd0,  8'd31}: s1rd1 <= 159;
	     {1'd0,  8'd32}: s1rd1 <= 160;
	     {1'd0,  8'd33}: s1rd1 <= 161;
	     {1'd0,  8'd34}: s1rd1 <= 162;
	     {1'd0,  8'd35}: s1rd1 <= 163;
	     {1'd0,  8'd36}: s1rd1 <= 164;
	     {1'd0,  8'd37}: s1rd1 <= 165;
	     {1'd0,  8'd38}: s1rd1 <= 166;
	     {1'd0,  8'd39}: s1rd1 <= 167;
	     {1'd0,  8'd40}: s1rd1 <= 168;
	     {1'd0,  8'd41}: s1rd1 <= 169;
	     {1'd0,  8'd42}: s1rd1 <= 170;
	     {1'd0,  8'd43}: s1rd1 <= 171;
	     {1'd0,  8'd44}: s1rd1 <= 172;
	     {1'd0,  8'd45}: s1rd1 <= 173;
	     {1'd0,  8'd46}: s1rd1 <= 174;
	     {1'd0,  8'd47}: s1rd1 <= 175;
	     {1'd0,  8'd48}: s1rd1 <= 176;
	     {1'd0,  8'd49}: s1rd1 <= 177;
	     {1'd0,  8'd50}: s1rd1 <= 178;
	     {1'd0,  8'd51}: s1rd1 <= 179;
	     {1'd0,  8'd52}: s1rd1 <= 180;
	     {1'd0,  8'd53}: s1rd1 <= 181;
	     {1'd0,  8'd54}: s1rd1 <= 182;
	     {1'd0,  8'd55}: s1rd1 <= 183;
	     {1'd0,  8'd56}: s1rd1 <= 184;
	     {1'd0,  8'd57}: s1rd1 <= 185;
	     {1'd0,  8'd58}: s1rd1 <= 186;
	     {1'd0,  8'd59}: s1rd1 <= 187;
	     {1'd0,  8'd60}: s1rd1 <= 188;
	     {1'd0,  8'd61}: s1rd1 <= 189;
	     {1'd0,  8'd62}: s1rd1 <= 190;
	     {1'd0,  8'd63}: s1rd1 <= 191;
	     {1'd0,  8'd64}: s1rd1 <= 192;
	     {1'd0,  8'd65}: s1rd1 <= 193;
	     {1'd0,  8'd66}: s1rd1 <= 194;
	     {1'd0,  8'd67}: s1rd1 <= 195;
	     {1'd0,  8'd68}: s1rd1 <= 196;
	     {1'd0,  8'd69}: s1rd1 <= 197;
	     {1'd0,  8'd70}: s1rd1 <= 198;
	     {1'd0,  8'd71}: s1rd1 <= 199;
	     {1'd0,  8'd72}: s1rd1 <= 200;
	     {1'd0,  8'd73}: s1rd1 <= 201;
	     {1'd0,  8'd74}: s1rd1 <= 202;
	     {1'd0,  8'd75}: s1rd1 <= 203;
	     {1'd0,  8'd76}: s1rd1 <= 204;
	     {1'd0,  8'd77}: s1rd1 <= 205;
	     {1'd0,  8'd78}: s1rd1 <= 206;
	     {1'd0,  8'd79}: s1rd1 <= 207;
	     {1'd0,  8'd80}: s1rd1 <= 208;
	     {1'd0,  8'd81}: s1rd1 <= 209;
	     {1'd0,  8'd82}: s1rd1 <= 210;
	     {1'd0,  8'd83}: s1rd1 <= 211;
	     {1'd0,  8'd84}: s1rd1 <= 212;
	     {1'd0,  8'd85}: s1rd1 <= 213;
	     {1'd0,  8'd86}: s1rd1 <= 214;
	     {1'd0,  8'd87}: s1rd1 <= 215;
	     {1'd0,  8'd88}: s1rd1 <= 216;
	     {1'd0,  8'd89}: s1rd1 <= 217;
	     {1'd0,  8'd90}: s1rd1 <= 218;
	     {1'd0,  8'd91}: s1rd1 <= 219;
	     {1'd0,  8'd92}: s1rd1 <= 220;
	     {1'd0,  8'd93}: s1rd1 <= 221;
	     {1'd0,  8'd94}: s1rd1 <= 222;
	     {1'd0,  8'd95}: s1rd1 <= 223;
	     {1'd0,  8'd96}: s1rd1 <= 224;
	     {1'd0,  8'd97}: s1rd1 <= 225;
	     {1'd0,  8'd98}: s1rd1 <= 226;
	     {1'd0,  8'd99}: s1rd1 <= 227;
	     {1'd0,  8'd100}: s1rd1 <= 228;
	     {1'd0,  8'd101}: s1rd1 <= 229;
	     {1'd0,  8'd102}: s1rd1 <= 230;
	     {1'd0,  8'd103}: s1rd1 <= 231;
	     {1'd0,  8'd104}: s1rd1 <= 232;
	     {1'd0,  8'd105}: s1rd1 <= 233;
	     {1'd0,  8'd106}: s1rd1 <= 234;
	     {1'd0,  8'd107}: s1rd1 <= 235;
	     {1'd0,  8'd108}: s1rd1 <= 236;
	     {1'd0,  8'd109}: s1rd1 <= 237;
	     {1'd0,  8'd110}: s1rd1 <= 238;
	     {1'd0,  8'd111}: s1rd1 <= 239;
	     {1'd0,  8'd112}: s1rd1 <= 240;
	     {1'd0,  8'd113}: s1rd1 <= 241;
	     {1'd0,  8'd114}: s1rd1 <= 242;
	     {1'd0,  8'd115}: s1rd1 <= 243;
	     {1'd0,  8'd116}: s1rd1 <= 244;
	     {1'd0,  8'd117}: s1rd1 <= 245;
	     {1'd0,  8'd118}: s1rd1 <= 246;
	     {1'd0,  8'd119}: s1rd1 <= 247;
	     {1'd0,  8'd120}: s1rd1 <= 248;
	     {1'd0,  8'd121}: s1rd1 <= 249;
	     {1'd0,  8'd122}: s1rd1 <= 250;
	     {1'd0,  8'd123}: s1rd1 <= 251;
	     {1'd0,  8'd124}: s1rd1 <= 252;
	     {1'd0,  8'd125}: s1rd1 <= 253;
	     {1'd0,  8'd126}: s1rd1 <= 254;
	     {1'd0,  8'd127}: s1rd1 <= 255;
	     {1'd0,  8'd128}: s1rd1 <= 0;
	     {1'd0,  8'd129}: s1rd1 <= 1;
	     {1'd0,  8'd130}: s1rd1 <= 2;
	     {1'd0,  8'd131}: s1rd1 <= 3;
	     {1'd0,  8'd132}: s1rd1 <= 4;
	     {1'd0,  8'd133}: s1rd1 <= 5;
	     {1'd0,  8'd134}: s1rd1 <= 6;
	     {1'd0,  8'd135}: s1rd1 <= 7;
	     {1'd0,  8'd136}: s1rd1 <= 8;
	     {1'd0,  8'd137}: s1rd1 <= 9;
	     {1'd0,  8'd138}: s1rd1 <= 10;
	     {1'd0,  8'd139}: s1rd1 <= 11;
	     {1'd0,  8'd140}: s1rd1 <= 12;
	     {1'd0,  8'd141}: s1rd1 <= 13;
	     {1'd0,  8'd142}: s1rd1 <= 14;
	     {1'd0,  8'd143}: s1rd1 <= 15;
	     {1'd0,  8'd144}: s1rd1 <= 16;
	     {1'd0,  8'd145}: s1rd1 <= 17;
	     {1'd0,  8'd146}: s1rd1 <= 18;
	     {1'd0,  8'd147}: s1rd1 <= 19;
	     {1'd0,  8'd148}: s1rd1 <= 20;
	     {1'd0,  8'd149}: s1rd1 <= 21;
	     {1'd0,  8'd150}: s1rd1 <= 22;
	     {1'd0,  8'd151}: s1rd1 <= 23;
	     {1'd0,  8'd152}: s1rd1 <= 24;
	     {1'd0,  8'd153}: s1rd1 <= 25;
	     {1'd0,  8'd154}: s1rd1 <= 26;
	     {1'd0,  8'd155}: s1rd1 <= 27;
	     {1'd0,  8'd156}: s1rd1 <= 28;
	     {1'd0,  8'd157}: s1rd1 <= 29;
	     {1'd0,  8'd158}: s1rd1 <= 30;
	     {1'd0,  8'd159}: s1rd1 <= 31;
	     {1'd0,  8'd160}: s1rd1 <= 32;
	     {1'd0,  8'd161}: s1rd1 <= 33;
	     {1'd0,  8'd162}: s1rd1 <= 34;
	     {1'd0,  8'd163}: s1rd1 <= 35;
	     {1'd0,  8'd164}: s1rd1 <= 36;
	     {1'd0,  8'd165}: s1rd1 <= 37;
	     {1'd0,  8'd166}: s1rd1 <= 38;
	     {1'd0,  8'd167}: s1rd1 <= 39;
	     {1'd0,  8'd168}: s1rd1 <= 40;
	     {1'd0,  8'd169}: s1rd1 <= 41;
	     {1'd0,  8'd170}: s1rd1 <= 42;
	     {1'd0,  8'd171}: s1rd1 <= 43;
	     {1'd0,  8'd172}: s1rd1 <= 44;
	     {1'd0,  8'd173}: s1rd1 <= 45;
	     {1'd0,  8'd174}: s1rd1 <= 46;
	     {1'd0,  8'd175}: s1rd1 <= 47;
	     {1'd0,  8'd176}: s1rd1 <= 48;
	     {1'd0,  8'd177}: s1rd1 <= 49;
	     {1'd0,  8'd178}: s1rd1 <= 50;
	     {1'd0,  8'd179}: s1rd1 <= 51;
	     {1'd0,  8'd180}: s1rd1 <= 52;
	     {1'd0,  8'd181}: s1rd1 <= 53;
	     {1'd0,  8'd182}: s1rd1 <= 54;
	     {1'd0,  8'd183}: s1rd1 <= 55;
	     {1'd0,  8'd184}: s1rd1 <= 56;
	     {1'd0,  8'd185}: s1rd1 <= 57;
	     {1'd0,  8'd186}: s1rd1 <= 58;
	     {1'd0,  8'd187}: s1rd1 <= 59;
	     {1'd0,  8'd188}: s1rd1 <= 60;
	     {1'd0,  8'd189}: s1rd1 <= 61;
	     {1'd0,  8'd190}: s1rd1 <= 62;
	     {1'd0,  8'd191}: s1rd1 <= 63;
	     {1'd0,  8'd192}: s1rd1 <= 64;
	     {1'd0,  8'd193}: s1rd1 <= 65;
	     {1'd0,  8'd194}: s1rd1 <= 66;
	     {1'd0,  8'd195}: s1rd1 <= 67;
	     {1'd0,  8'd196}: s1rd1 <= 68;
	     {1'd0,  8'd197}: s1rd1 <= 69;
	     {1'd0,  8'd198}: s1rd1 <= 70;
	     {1'd0,  8'd199}: s1rd1 <= 71;
	     {1'd0,  8'd200}: s1rd1 <= 72;
	     {1'd0,  8'd201}: s1rd1 <= 73;
	     {1'd0,  8'd202}: s1rd1 <= 74;
	     {1'd0,  8'd203}: s1rd1 <= 75;
	     {1'd0,  8'd204}: s1rd1 <= 76;
	     {1'd0,  8'd205}: s1rd1 <= 77;
	     {1'd0,  8'd206}: s1rd1 <= 78;
	     {1'd0,  8'd207}: s1rd1 <= 79;
	     {1'd0,  8'd208}: s1rd1 <= 80;
	     {1'd0,  8'd209}: s1rd1 <= 81;
	     {1'd0,  8'd210}: s1rd1 <= 82;
	     {1'd0,  8'd211}: s1rd1 <= 83;
	     {1'd0,  8'd212}: s1rd1 <= 84;
	     {1'd0,  8'd213}: s1rd1 <= 85;
	     {1'd0,  8'd214}: s1rd1 <= 86;
	     {1'd0,  8'd215}: s1rd1 <= 87;
	     {1'd0,  8'd216}: s1rd1 <= 88;
	     {1'd0,  8'd217}: s1rd1 <= 89;
	     {1'd0,  8'd218}: s1rd1 <= 90;
	     {1'd0,  8'd219}: s1rd1 <= 91;
	     {1'd0,  8'd220}: s1rd1 <= 92;
	     {1'd0,  8'd221}: s1rd1 <= 93;
	     {1'd0,  8'd222}: s1rd1 <= 94;
	     {1'd0,  8'd223}: s1rd1 <= 95;
	     {1'd0,  8'd224}: s1rd1 <= 96;
	     {1'd0,  8'd225}: s1rd1 <= 97;
	     {1'd0,  8'd226}: s1rd1 <= 98;
	     {1'd0,  8'd227}: s1rd1 <= 99;
	     {1'd0,  8'd228}: s1rd1 <= 100;
	     {1'd0,  8'd229}: s1rd1 <= 101;
	     {1'd0,  8'd230}: s1rd1 <= 102;
	     {1'd0,  8'd231}: s1rd1 <= 103;
	     {1'd0,  8'd232}: s1rd1 <= 104;
	     {1'd0,  8'd233}: s1rd1 <= 105;
	     {1'd0,  8'd234}: s1rd1 <= 106;
	     {1'd0,  8'd235}: s1rd1 <= 107;
	     {1'd0,  8'd236}: s1rd1 <= 108;
	     {1'd0,  8'd237}: s1rd1 <= 109;
	     {1'd0,  8'd238}: s1rd1 <= 110;
	     {1'd0,  8'd239}: s1rd1 <= 111;
	     {1'd0,  8'd240}: s1rd1 <= 112;
	     {1'd0,  8'd241}: s1rd1 <= 113;
	     {1'd0,  8'd242}: s1rd1 <= 114;
	     {1'd0,  8'd243}: s1rd1 <= 115;
	     {1'd0,  8'd244}: s1rd1 <= 116;
	     {1'd0,  8'd245}: s1rd1 <= 117;
	     {1'd0,  8'd246}: s1rd1 <= 118;
	     {1'd0,  8'd247}: s1rd1 <= 119;
	     {1'd0,  8'd248}: s1rd1 <= 120;
	     {1'd0,  8'd249}: s1rd1 <= 121;
	     {1'd0,  8'd250}: s1rd1 <= 122;
	     {1'd0,  8'd251}: s1rd1 <= 123;
	     {1'd0,  8'd252}: s1rd1 <= 124;
	     {1'd0,  8'd253}: s1rd1 <= 125;
	     {1'd0,  8'd254}: s1rd1 <= 126;
	     {1'd0,  8'd255}: s1rd1 <= 127;
      endcase      
   end

// synthesis attribute rom_style of s1rd1 is "distributed"
   always @(posedge clk) begin
      case({tm28_d, s1rdloc})
	     {1'd0,  8'd0}: s1rd2 <= 64;
	     {1'd0,  8'd1}: s1rd2 <= 65;
	     {1'd0,  8'd2}: s1rd2 <= 66;
	     {1'd0,  8'd3}: s1rd2 <= 67;
	     {1'd0,  8'd4}: s1rd2 <= 68;
	     {1'd0,  8'd5}: s1rd2 <= 69;
	     {1'd0,  8'd6}: s1rd2 <= 70;
	     {1'd0,  8'd7}: s1rd2 <= 71;
	     {1'd0,  8'd8}: s1rd2 <= 72;
	     {1'd0,  8'd9}: s1rd2 <= 73;
	     {1'd0,  8'd10}: s1rd2 <= 74;
	     {1'd0,  8'd11}: s1rd2 <= 75;
	     {1'd0,  8'd12}: s1rd2 <= 76;
	     {1'd0,  8'd13}: s1rd2 <= 77;
	     {1'd0,  8'd14}: s1rd2 <= 78;
	     {1'd0,  8'd15}: s1rd2 <= 79;
	     {1'd0,  8'd16}: s1rd2 <= 80;
	     {1'd0,  8'd17}: s1rd2 <= 81;
	     {1'd0,  8'd18}: s1rd2 <= 82;
	     {1'd0,  8'd19}: s1rd2 <= 83;
	     {1'd0,  8'd20}: s1rd2 <= 84;
	     {1'd0,  8'd21}: s1rd2 <= 85;
	     {1'd0,  8'd22}: s1rd2 <= 86;
	     {1'd0,  8'd23}: s1rd2 <= 87;
	     {1'd0,  8'd24}: s1rd2 <= 88;
	     {1'd0,  8'd25}: s1rd2 <= 89;
	     {1'd0,  8'd26}: s1rd2 <= 90;
	     {1'd0,  8'd27}: s1rd2 <= 91;
	     {1'd0,  8'd28}: s1rd2 <= 92;
	     {1'd0,  8'd29}: s1rd2 <= 93;
	     {1'd0,  8'd30}: s1rd2 <= 94;
	     {1'd0,  8'd31}: s1rd2 <= 95;
	     {1'd0,  8'd32}: s1rd2 <= 96;
	     {1'd0,  8'd33}: s1rd2 <= 97;
	     {1'd0,  8'd34}: s1rd2 <= 98;
	     {1'd0,  8'd35}: s1rd2 <= 99;
	     {1'd0,  8'd36}: s1rd2 <= 100;
	     {1'd0,  8'd37}: s1rd2 <= 101;
	     {1'd0,  8'd38}: s1rd2 <= 102;
	     {1'd0,  8'd39}: s1rd2 <= 103;
	     {1'd0,  8'd40}: s1rd2 <= 104;
	     {1'd0,  8'd41}: s1rd2 <= 105;
	     {1'd0,  8'd42}: s1rd2 <= 106;
	     {1'd0,  8'd43}: s1rd2 <= 107;
	     {1'd0,  8'd44}: s1rd2 <= 108;
	     {1'd0,  8'd45}: s1rd2 <= 109;
	     {1'd0,  8'd46}: s1rd2 <= 110;
	     {1'd0,  8'd47}: s1rd2 <= 111;
	     {1'd0,  8'd48}: s1rd2 <= 112;
	     {1'd0,  8'd49}: s1rd2 <= 113;
	     {1'd0,  8'd50}: s1rd2 <= 114;
	     {1'd0,  8'd51}: s1rd2 <= 115;
	     {1'd0,  8'd52}: s1rd2 <= 116;
	     {1'd0,  8'd53}: s1rd2 <= 117;
	     {1'd0,  8'd54}: s1rd2 <= 118;
	     {1'd0,  8'd55}: s1rd2 <= 119;
	     {1'd0,  8'd56}: s1rd2 <= 120;
	     {1'd0,  8'd57}: s1rd2 <= 121;
	     {1'd0,  8'd58}: s1rd2 <= 122;
	     {1'd0,  8'd59}: s1rd2 <= 123;
	     {1'd0,  8'd60}: s1rd2 <= 124;
	     {1'd0,  8'd61}: s1rd2 <= 125;
	     {1'd0,  8'd62}: s1rd2 <= 126;
	     {1'd0,  8'd63}: s1rd2 <= 127;
	     {1'd0,  8'd64}: s1rd2 <= 0;
	     {1'd0,  8'd65}: s1rd2 <= 1;
	     {1'd0,  8'd66}: s1rd2 <= 2;
	     {1'd0,  8'd67}: s1rd2 <= 3;
	     {1'd0,  8'd68}: s1rd2 <= 4;
	     {1'd0,  8'd69}: s1rd2 <= 5;
	     {1'd0,  8'd70}: s1rd2 <= 6;
	     {1'd0,  8'd71}: s1rd2 <= 7;
	     {1'd0,  8'd72}: s1rd2 <= 8;
	     {1'd0,  8'd73}: s1rd2 <= 9;
	     {1'd0,  8'd74}: s1rd2 <= 10;
	     {1'd0,  8'd75}: s1rd2 <= 11;
	     {1'd0,  8'd76}: s1rd2 <= 12;
	     {1'd0,  8'd77}: s1rd2 <= 13;
	     {1'd0,  8'd78}: s1rd2 <= 14;
	     {1'd0,  8'd79}: s1rd2 <= 15;
	     {1'd0,  8'd80}: s1rd2 <= 16;
	     {1'd0,  8'd81}: s1rd2 <= 17;
	     {1'd0,  8'd82}: s1rd2 <= 18;
	     {1'd0,  8'd83}: s1rd2 <= 19;
	     {1'd0,  8'd84}: s1rd2 <= 20;
	     {1'd0,  8'd85}: s1rd2 <= 21;
	     {1'd0,  8'd86}: s1rd2 <= 22;
	     {1'd0,  8'd87}: s1rd2 <= 23;
	     {1'd0,  8'd88}: s1rd2 <= 24;
	     {1'd0,  8'd89}: s1rd2 <= 25;
	     {1'd0,  8'd90}: s1rd2 <= 26;
	     {1'd0,  8'd91}: s1rd2 <= 27;
	     {1'd0,  8'd92}: s1rd2 <= 28;
	     {1'd0,  8'd93}: s1rd2 <= 29;
	     {1'd0,  8'd94}: s1rd2 <= 30;
	     {1'd0,  8'd95}: s1rd2 <= 31;
	     {1'd0,  8'd96}: s1rd2 <= 32;
	     {1'd0,  8'd97}: s1rd2 <= 33;
	     {1'd0,  8'd98}: s1rd2 <= 34;
	     {1'd0,  8'd99}: s1rd2 <= 35;
	     {1'd0,  8'd100}: s1rd2 <= 36;
	     {1'd0,  8'd101}: s1rd2 <= 37;
	     {1'd0,  8'd102}: s1rd2 <= 38;
	     {1'd0,  8'd103}: s1rd2 <= 39;
	     {1'd0,  8'd104}: s1rd2 <= 40;
	     {1'd0,  8'd105}: s1rd2 <= 41;
	     {1'd0,  8'd106}: s1rd2 <= 42;
	     {1'd0,  8'd107}: s1rd2 <= 43;
	     {1'd0,  8'd108}: s1rd2 <= 44;
	     {1'd0,  8'd109}: s1rd2 <= 45;
	     {1'd0,  8'd110}: s1rd2 <= 46;
	     {1'd0,  8'd111}: s1rd2 <= 47;
	     {1'd0,  8'd112}: s1rd2 <= 48;
	     {1'd0,  8'd113}: s1rd2 <= 49;
	     {1'd0,  8'd114}: s1rd2 <= 50;
	     {1'd0,  8'd115}: s1rd2 <= 51;
	     {1'd0,  8'd116}: s1rd2 <= 52;
	     {1'd0,  8'd117}: s1rd2 <= 53;
	     {1'd0,  8'd118}: s1rd2 <= 54;
	     {1'd0,  8'd119}: s1rd2 <= 55;
	     {1'd0,  8'd120}: s1rd2 <= 56;
	     {1'd0,  8'd121}: s1rd2 <= 57;
	     {1'd0,  8'd122}: s1rd2 <= 58;
	     {1'd0,  8'd123}: s1rd2 <= 59;
	     {1'd0,  8'd124}: s1rd2 <= 60;
	     {1'd0,  8'd125}: s1rd2 <= 61;
	     {1'd0,  8'd126}: s1rd2 <= 62;
	     {1'd0,  8'd127}: s1rd2 <= 63;
	     {1'd0,  8'd128}: s1rd2 <= 192;
	     {1'd0,  8'd129}: s1rd2 <= 193;
	     {1'd0,  8'd130}: s1rd2 <= 194;
	     {1'd0,  8'd131}: s1rd2 <= 195;
	     {1'd0,  8'd132}: s1rd2 <= 196;
	     {1'd0,  8'd133}: s1rd2 <= 197;
	     {1'd0,  8'd134}: s1rd2 <= 198;
	     {1'd0,  8'd135}: s1rd2 <= 199;
	     {1'd0,  8'd136}: s1rd2 <= 200;
	     {1'd0,  8'd137}: s1rd2 <= 201;
	     {1'd0,  8'd138}: s1rd2 <= 202;
	     {1'd0,  8'd139}: s1rd2 <= 203;
	     {1'd0,  8'd140}: s1rd2 <= 204;
	     {1'd0,  8'd141}: s1rd2 <= 205;
	     {1'd0,  8'd142}: s1rd2 <= 206;
	     {1'd0,  8'd143}: s1rd2 <= 207;
	     {1'd0,  8'd144}: s1rd2 <= 208;
	     {1'd0,  8'd145}: s1rd2 <= 209;
	     {1'd0,  8'd146}: s1rd2 <= 210;
	     {1'd0,  8'd147}: s1rd2 <= 211;
	     {1'd0,  8'd148}: s1rd2 <= 212;
	     {1'd0,  8'd149}: s1rd2 <= 213;
	     {1'd0,  8'd150}: s1rd2 <= 214;
	     {1'd0,  8'd151}: s1rd2 <= 215;
	     {1'd0,  8'd152}: s1rd2 <= 216;
	     {1'd0,  8'd153}: s1rd2 <= 217;
	     {1'd0,  8'd154}: s1rd2 <= 218;
	     {1'd0,  8'd155}: s1rd2 <= 219;
	     {1'd0,  8'd156}: s1rd2 <= 220;
	     {1'd0,  8'd157}: s1rd2 <= 221;
	     {1'd0,  8'd158}: s1rd2 <= 222;
	     {1'd0,  8'd159}: s1rd2 <= 223;
	     {1'd0,  8'd160}: s1rd2 <= 224;
	     {1'd0,  8'd161}: s1rd2 <= 225;
	     {1'd0,  8'd162}: s1rd2 <= 226;
	     {1'd0,  8'd163}: s1rd2 <= 227;
	     {1'd0,  8'd164}: s1rd2 <= 228;
	     {1'd0,  8'd165}: s1rd2 <= 229;
	     {1'd0,  8'd166}: s1rd2 <= 230;
	     {1'd0,  8'd167}: s1rd2 <= 231;
	     {1'd0,  8'd168}: s1rd2 <= 232;
	     {1'd0,  8'd169}: s1rd2 <= 233;
	     {1'd0,  8'd170}: s1rd2 <= 234;
	     {1'd0,  8'd171}: s1rd2 <= 235;
	     {1'd0,  8'd172}: s1rd2 <= 236;
	     {1'd0,  8'd173}: s1rd2 <= 237;
	     {1'd0,  8'd174}: s1rd2 <= 238;
	     {1'd0,  8'd175}: s1rd2 <= 239;
	     {1'd0,  8'd176}: s1rd2 <= 240;
	     {1'd0,  8'd177}: s1rd2 <= 241;
	     {1'd0,  8'd178}: s1rd2 <= 242;
	     {1'd0,  8'd179}: s1rd2 <= 243;
	     {1'd0,  8'd180}: s1rd2 <= 244;
	     {1'd0,  8'd181}: s1rd2 <= 245;
	     {1'd0,  8'd182}: s1rd2 <= 246;
	     {1'd0,  8'd183}: s1rd2 <= 247;
	     {1'd0,  8'd184}: s1rd2 <= 248;
	     {1'd0,  8'd185}: s1rd2 <= 249;
	     {1'd0,  8'd186}: s1rd2 <= 250;
	     {1'd0,  8'd187}: s1rd2 <= 251;
	     {1'd0,  8'd188}: s1rd2 <= 252;
	     {1'd0,  8'd189}: s1rd2 <= 253;
	     {1'd0,  8'd190}: s1rd2 <= 254;
	     {1'd0,  8'd191}: s1rd2 <= 255;
	     {1'd0,  8'd192}: s1rd2 <= 128;
	     {1'd0,  8'd193}: s1rd2 <= 129;
	     {1'd0,  8'd194}: s1rd2 <= 130;
	     {1'd0,  8'd195}: s1rd2 <= 131;
	     {1'd0,  8'd196}: s1rd2 <= 132;
	     {1'd0,  8'd197}: s1rd2 <= 133;
	     {1'd0,  8'd198}: s1rd2 <= 134;
	     {1'd0,  8'd199}: s1rd2 <= 135;
	     {1'd0,  8'd200}: s1rd2 <= 136;
	     {1'd0,  8'd201}: s1rd2 <= 137;
	     {1'd0,  8'd202}: s1rd2 <= 138;
	     {1'd0,  8'd203}: s1rd2 <= 139;
	     {1'd0,  8'd204}: s1rd2 <= 140;
	     {1'd0,  8'd205}: s1rd2 <= 141;
	     {1'd0,  8'd206}: s1rd2 <= 142;
	     {1'd0,  8'd207}: s1rd2 <= 143;
	     {1'd0,  8'd208}: s1rd2 <= 144;
	     {1'd0,  8'd209}: s1rd2 <= 145;
	     {1'd0,  8'd210}: s1rd2 <= 146;
	     {1'd0,  8'd211}: s1rd2 <= 147;
	     {1'd0,  8'd212}: s1rd2 <= 148;
	     {1'd0,  8'd213}: s1rd2 <= 149;
	     {1'd0,  8'd214}: s1rd2 <= 150;
	     {1'd0,  8'd215}: s1rd2 <= 151;
	     {1'd0,  8'd216}: s1rd2 <= 152;
	     {1'd0,  8'd217}: s1rd2 <= 153;
	     {1'd0,  8'd218}: s1rd2 <= 154;
	     {1'd0,  8'd219}: s1rd2 <= 155;
	     {1'd0,  8'd220}: s1rd2 <= 156;
	     {1'd0,  8'd221}: s1rd2 <= 157;
	     {1'd0,  8'd222}: s1rd2 <= 158;
	     {1'd0,  8'd223}: s1rd2 <= 159;
	     {1'd0,  8'd224}: s1rd2 <= 160;
	     {1'd0,  8'd225}: s1rd2 <= 161;
	     {1'd0,  8'd226}: s1rd2 <= 162;
	     {1'd0,  8'd227}: s1rd2 <= 163;
	     {1'd0,  8'd228}: s1rd2 <= 164;
	     {1'd0,  8'd229}: s1rd2 <= 165;
	     {1'd0,  8'd230}: s1rd2 <= 166;
	     {1'd0,  8'd231}: s1rd2 <= 167;
	     {1'd0,  8'd232}: s1rd2 <= 168;
	     {1'd0,  8'd233}: s1rd2 <= 169;
	     {1'd0,  8'd234}: s1rd2 <= 170;
	     {1'd0,  8'd235}: s1rd2 <= 171;
	     {1'd0,  8'd236}: s1rd2 <= 172;
	     {1'd0,  8'd237}: s1rd2 <= 173;
	     {1'd0,  8'd238}: s1rd2 <= 174;
	     {1'd0,  8'd239}: s1rd2 <= 175;
	     {1'd0,  8'd240}: s1rd2 <= 176;
	     {1'd0,  8'd241}: s1rd2 <= 177;
	     {1'd0,  8'd242}: s1rd2 <= 178;
	     {1'd0,  8'd243}: s1rd2 <= 179;
	     {1'd0,  8'd244}: s1rd2 <= 180;
	     {1'd0,  8'd245}: s1rd2 <= 181;
	     {1'd0,  8'd246}: s1rd2 <= 182;
	     {1'd0,  8'd247}: s1rd2 <= 183;
	     {1'd0,  8'd248}: s1rd2 <= 184;
	     {1'd0,  8'd249}: s1rd2 <= 185;
	     {1'd0,  8'd250}: s1rd2 <= 186;
	     {1'd0,  8'd251}: s1rd2 <= 187;
	     {1'd0,  8'd252}: s1rd2 <= 188;
	     {1'd0,  8'd253}: s1rd2 <= 189;
	     {1'd0,  8'd254}: s1rd2 <= 190;
	     {1'd0,  8'd255}: s1rd2 <= 191;
      endcase      
   end

// synthesis attribute rom_style of s1rd2 is "distributed"
   always @(posedge clk) begin
      case({tm28_d, s1rdloc})
	     {1'd0,  8'd0}: s1rd3 <= 0;
	     {1'd0,  8'd1}: s1rd3 <= 1;
	     {1'd0,  8'd2}: s1rd3 <= 2;
	     {1'd0,  8'd3}: s1rd3 <= 3;
	     {1'd0,  8'd4}: s1rd3 <= 4;
	     {1'd0,  8'd5}: s1rd3 <= 5;
	     {1'd0,  8'd6}: s1rd3 <= 6;
	     {1'd0,  8'd7}: s1rd3 <= 7;
	     {1'd0,  8'd8}: s1rd3 <= 8;
	     {1'd0,  8'd9}: s1rd3 <= 9;
	     {1'd0,  8'd10}: s1rd3 <= 10;
	     {1'd0,  8'd11}: s1rd3 <= 11;
	     {1'd0,  8'd12}: s1rd3 <= 12;
	     {1'd0,  8'd13}: s1rd3 <= 13;
	     {1'd0,  8'd14}: s1rd3 <= 14;
	     {1'd0,  8'd15}: s1rd3 <= 15;
	     {1'd0,  8'd16}: s1rd3 <= 16;
	     {1'd0,  8'd17}: s1rd3 <= 17;
	     {1'd0,  8'd18}: s1rd3 <= 18;
	     {1'd0,  8'd19}: s1rd3 <= 19;
	     {1'd0,  8'd20}: s1rd3 <= 20;
	     {1'd0,  8'd21}: s1rd3 <= 21;
	     {1'd0,  8'd22}: s1rd3 <= 22;
	     {1'd0,  8'd23}: s1rd3 <= 23;
	     {1'd0,  8'd24}: s1rd3 <= 24;
	     {1'd0,  8'd25}: s1rd3 <= 25;
	     {1'd0,  8'd26}: s1rd3 <= 26;
	     {1'd0,  8'd27}: s1rd3 <= 27;
	     {1'd0,  8'd28}: s1rd3 <= 28;
	     {1'd0,  8'd29}: s1rd3 <= 29;
	     {1'd0,  8'd30}: s1rd3 <= 30;
	     {1'd0,  8'd31}: s1rd3 <= 31;
	     {1'd0,  8'd32}: s1rd3 <= 32;
	     {1'd0,  8'd33}: s1rd3 <= 33;
	     {1'd0,  8'd34}: s1rd3 <= 34;
	     {1'd0,  8'd35}: s1rd3 <= 35;
	     {1'd0,  8'd36}: s1rd3 <= 36;
	     {1'd0,  8'd37}: s1rd3 <= 37;
	     {1'd0,  8'd38}: s1rd3 <= 38;
	     {1'd0,  8'd39}: s1rd3 <= 39;
	     {1'd0,  8'd40}: s1rd3 <= 40;
	     {1'd0,  8'd41}: s1rd3 <= 41;
	     {1'd0,  8'd42}: s1rd3 <= 42;
	     {1'd0,  8'd43}: s1rd3 <= 43;
	     {1'd0,  8'd44}: s1rd3 <= 44;
	     {1'd0,  8'd45}: s1rd3 <= 45;
	     {1'd0,  8'd46}: s1rd3 <= 46;
	     {1'd0,  8'd47}: s1rd3 <= 47;
	     {1'd0,  8'd48}: s1rd3 <= 48;
	     {1'd0,  8'd49}: s1rd3 <= 49;
	     {1'd0,  8'd50}: s1rd3 <= 50;
	     {1'd0,  8'd51}: s1rd3 <= 51;
	     {1'd0,  8'd52}: s1rd3 <= 52;
	     {1'd0,  8'd53}: s1rd3 <= 53;
	     {1'd0,  8'd54}: s1rd3 <= 54;
	     {1'd0,  8'd55}: s1rd3 <= 55;
	     {1'd0,  8'd56}: s1rd3 <= 56;
	     {1'd0,  8'd57}: s1rd3 <= 57;
	     {1'd0,  8'd58}: s1rd3 <= 58;
	     {1'd0,  8'd59}: s1rd3 <= 59;
	     {1'd0,  8'd60}: s1rd3 <= 60;
	     {1'd0,  8'd61}: s1rd3 <= 61;
	     {1'd0,  8'd62}: s1rd3 <= 62;
	     {1'd0,  8'd63}: s1rd3 <= 63;
	     {1'd0,  8'd64}: s1rd3 <= 64;
	     {1'd0,  8'd65}: s1rd3 <= 65;
	     {1'd0,  8'd66}: s1rd3 <= 66;
	     {1'd0,  8'd67}: s1rd3 <= 67;
	     {1'd0,  8'd68}: s1rd3 <= 68;
	     {1'd0,  8'd69}: s1rd3 <= 69;
	     {1'd0,  8'd70}: s1rd3 <= 70;
	     {1'd0,  8'd71}: s1rd3 <= 71;
	     {1'd0,  8'd72}: s1rd3 <= 72;
	     {1'd0,  8'd73}: s1rd3 <= 73;
	     {1'd0,  8'd74}: s1rd3 <= 74;
	     {1'd0,  8'd75}: s1rd3 <= 75;
	     {1'd0,  8'd76}: s1rd3 <= 76;
	     {1'd0,  8'd77}: s1rd3 <= 77;
	     {1'd0,  8'd78}: s1rd3 <= 78;
	     {1'd0,  8'd79}: s1rd3 <= 79;
	     {1'd0,  8'd80}: s1rd3 <= 80;
	     {1'd0,  8'd81}: s1rd3 <= 81;
	     {1'd0,  8'd82}: s1rd3 <= 82;
	     {1'd0,  8'd83}: s1rd3 <= 83;
	     {1'd0,  8'd84}: s1rd3 <= 84;
	     {1'd0,  8'd85}: s1rd3 <= 85;
	     {1'd0,  8'd86}: s1rd3 <= 86;
	     {1'd0,  8'd87}: s1rd3 <= 87;
	     {1'd0,  8'd88}: s1rd3 <= 88;
	     {1'd0,  8'd89}: s1rd3 <= 89;
	     {1'd0,  8'd90}: s1rd3 <= 90;
	     {1'd0,  8'd91}: s1rd3 <= 91;
	     {1'd0,  8'd92}: s1rd3 <= 92;
	     {1'd0,  8'd93}: s1rd3 <= 93;
	     {1'd0,  8'd94}: s1rd3 <= 94;
	     {1'd0,  8'd95}: s1rd3 <= 95;
	     {1'd0,  8'd96}: s1rd3 <= 96;
	     {1'd0,  8'd97}: s1rd3 <= 97;
	     {1'd0,  8'd98}: s1rd3 <= 98;
	     {1'd0,  8'd99}: s1rd3 <= 99;
	     {1'd0,  8'd100}: s1rd3 <= 100;
	     {1'd0,  8'd101}: s1rd3 <= 101;
	     {1'd0,  8'd102}: s1rd3 <= 102;
	     {1'd0,  8'd103}: s1rd3 <= 103;
	     {1'd0,  8'd104}: s1rd3 <= 104;
	     {1'd0,  8'd105}: s1rd3 <= 105;
	     {1'd0,  8'd106}: s1rd3 <= 106;
	     {1'd0,  8'd107}: s1rd3 <= 107;
	     {1'd0,  8'd108}: s1rd3 <= 108;
	     {1'd0,  8'd109}: s1rd3 <= 109;
	     {1'd0,  8'd110}: s1rd3 <= 110;
	     {1'd0,  8'd111}: s1rd3 <= 111;
	     {1'd0,  8'd112}: s1rd3 <= 112;
	     {1'd0,  8'd113}: s1rd3 <= 113;
	     {1'd0,  8'd114}: s1rd3 <= 114;
	     {1'd0,  8'd115}: s1rd3 <= 115;
	     {1'd0,  8'd116}: s1rd3 <= 116;
	     {1'd0,  8'd117}: s1rd3 <= 117;
	     {1'd0,  8'd118}: s1rd3 <= 118;
	     {1'd0,  8'd119}: s1rd3 <= 119;
	     {1'd0,  8'd120}: s1rd3 <= 120;
	     {1'd0,  8'd121}: s1rd3 <= 121;
	     {1'd0,  8'd122}: s1rd3 <= 122;
	     {1'd0,  8'd123}: s1rd3 <= 123;
	     {1'd0,  8'd124}: s1rd3 <= 124;
	     {1'd0,  8'd125}: s1rd3 <= 125;
	     {1'd0,  8'd126}: s1rd3 <= 126;
	     {1'd0,  8'd127}: s1rd3 <= 127;
	     {1'd0,  8'd128}: s1rd3 <= 128;
	     {1'd0,  8'd129}: s1rd3 <= 129;
	     {1'd0,  8'd130}: s1rd3 <= 130;
	     {1'd0,  8'd131}: s1rd3 <= 131;
	     {1'd0,  8'd132}: s1rd3 <= 132;
	     {1'd0,  8'd133}: s1rd3 <= 133;
	     {1'd0,  8'd134}: s1rd3 <= 134;
	     {1'd0,  8'd135}: s1rd3 <= 135;
	     {1'd0,  8'd136}: s1rd3 <= 136;
	     {1'd0,  8'd137}: s1rd3 <= 137;
	     {1'd0,  8'd138}: s1rd3 <= 138;
	     {1'd0,  8'd139}: s1rd3 <= 139;
	     {1'd0,  8'd140}: s1rd3 <= 140;
	     {1'd0,  8'd141}: s1rd3 <= 141;
	     {1'd0,  8'd142}: s1rd3 <= 142;
	     {1'd0,  8'd143}: s1rd3 <= 143;
	     {1'd0,  8'd144}: s1rd3 <= 144;
	     {1'd0,  8'd145}: s1rd3 <= 145;
	     {1'd0,  8'd146}: s1rd3 <= 146;
	     {1'd0,  8'd147}: s1rd3 <= 147;
	     {1'd0,  8'd148}: s1rd3 <= 148;
	     {1'd0,  8'd149}: s1rd3 <= 149;
	     {1'd0,  8'd150}: s1rd3 <= 150;
	     {1'd0,  8'd151}: s1rd3 <= 151;
	     {1'd0,  8'd152}: s1rd3 <= 152;
	     {1'd0,  8'd153}: s1rd3 <= 153;
	     {1'd0,  8'd154}: s1rd3 <= 154;
	     {1'd0,  8'd155}: s1rd3 <= 155;
	     {1'd0,  8'd156}: s1rd3 <= 156;
	     {1'd0,  8'd157}: s1rd3 <= 157;
	     {1'd0,  8'd158}: s1rd3 <= 158;
	     {1'd0,  8'd159}: s1rd3 <= 159;
	     {1'd0,  8'd160}: s1rd3 <= 160;
	     {1'd0,  8'd161}: s1rd3 <= 161;
	     {1'd0,  8'd162}: s1rd3 <= 162;
	     {1'd0,  8'd163}: s1rd3 <= 163;
	     {1'd0,  8'd164}: s1rd3 <= 164;
	     {1'd0,  8'd165}: s1rd3 <= 165;
	     {1'd0,  8'd166}: s1rd3 <= 166;
	     {1'd0,  8'd167}: s1rd3 <= 167;
	     {1'd0,  8'd168}: s1rd3 <= 168;
	     {1'd0,  8'd169}: s1rd3 <= 169;
	     {1'd0,  8'd170}: s1rd3 <= 170;
	     {1'd0,  8'd171}: s1rd3 <= 171;
	     {1'd0,  8'd172}: s1rd3 <= 172;
	     {1'd0,  8'd173}: s1rd3 <= 173;
	     {1'd0,  8'd174}: s1rd3 <= 174;
	     {1'd0,  8'd175}: s1rd3 <= 175;
	     {1'd0,  8'd176}: s1rd3 <= 176;
	     {1'd0,  8'd177}: s1rd3 <= 177;
	     {1'd0,  8'd178}: s1rd3 <= 178;
	     {1'd0,  8'd179}: s1rd3 <= 179;
	     {1'd0,  8'd180}: s1rd3 <= 180;
	     {1'd0,  8'd181}: s1rd3 <= 181;
	     {1'd0,  8'd182}: s1rd3 <= 182;
	     {1'd0,  8'd183}: s1rd3 <= 183;
	     {1'd0,  8'd184}: s1rd3 <= 184;
	     {1'd0,  8'd185}: s1rd3 <= 185;
	     {1'd0,  8'd186}: s1rd3 <= 186;
	     {1'd0,  8'd187}: s1rd3 <= 187;
	     {1'd0,  8'd188}: s1rd3 <= 188;
	     {1'd0,  8'd189}: s1rd3 <= 189;
	     {1'd0,  8'd190}: s1rd3 <= 190;
	     {1'd0,  8'd191}: s1rd3 <= 191;
	     {1'd0,  8'd192}: s1rd3 <= 192;
	     {1'd0,  8'd193}: s1rd3 <= 193;
	     {1'd0,  8'd194}: s1rd3 <= 194;
	     {1'd0,  8'd195}: s1rd3 <= 195;
	     {1'd0,  8'd196}: s1rd3 <= 196;
	     {1'd0,  8'd197}: s1rd3 <= 197;
	     {1'd0,  8'd198}: s1rd3 <= 198;
	     {1'd0,  8'd199}: s1rd3 <= 199;
	     {1'd0,  8'd200}: s1rd3 <= 200;
	     {1'd0,  8'd201}: s1rd3 <= 201;
	     {1'd0,  8'd202}: s1rd3 <= 202;
	     {1'd0,  8'd203}: s1rd3 <= 203;
	     {1'd0,  8'd204}: s1rd3 <= 204;
	     {1'd0,  8'd205}: s1rd3 <= 205;
	     {1'd0,  8'd206}: s1rd3 <= 206;
	     {1'd0,  8'd207}: s1rd3 <= 207;
	     {1'd0,  8'd208}: s1rd3 <= 208;
	     {1'd0,  8'd209}: s1rd3 <= 209;
	     {1'd0,  8'd210}: s1rd3 <= 210;
	     {1'd0,  8'd211}: s1rd3 <= 211;
	     {1'd0,  8'd212}: s1rd3 <= 212;
	     {1'd0,  8'd213}: s1rd3 <= 213;
	     {1'd0,  8'd214}: s1rd3 <= 214;
	     {1'd0,  8'd215}: s1rd3 <= 215;
	     {1'd0,  8'd216}: s1rd3 <= 216;
	     {1'd0,  8'd217}: s1rd3 <= 217;
	     {1'd0,  8'd218}: s1rd3 <= 218;
	     {1'd0,  8'd219}: s1rd3 <= 219;
	     {1'd0,  8'd220}: s1rd3 <= 220;
	     {1'd0,  8'd221}: s1rd3 <= 221;
	     {1'd0,  8'd222}: s1rd3 <= 222;
	     {1'd0,  8'd223}: s1rd3 <= 223;
	     {1'd0,  8'd224}: s1rd3 <= 224;
	     {1'd0,  8'd225}: s1rd3 <= 225;
	     {1'd0,  8'd226}: s1rd3 <= 226;
	     {1'd0,  8'd227}: s1rd3 <= 227;
	     {1'd0,  8'd228}: s1rd3 <= 228;
	     {1'd0,  8'd229}: s1rd3 <= 229;
	     {1'd0,  8'd230}: s1rd3 <= 230;
	     {1'd0,  8'd231}: s1rd3 <= 231;
	     {1'd0,  8'd232}: s1rd3 <= 232;
	     {1'd0,  8'd233}: s1rd3 <= 233;
	     {1'd0,  8'd234}: s1rd3 <= 234;
	     {1'd0,  8'd235}: s1rd3 <= 235;
	     {1'd0,  8'd236}: s1rd3 <= 236;
	     {1'd0,  8'd237}: s1rd3 <= 237;
	     {1'd0,  8'd238}: s1rd3 <= 238;
	     {1'd0,  8'd239}: s1rd3 <= 239;
	     {1'd0,  8'd240}: s1rd3 <= 240;
	     {1'd0,  8'd241}: s1rd3 <= 241;
	     {1'd0,  8'd242}: s1rd3 <= 242;
	     {1'd0,  8'd243}: s1rd3 <= 243;
	     {1'd0,  8'd244}: s1rd3 <= 244;
	     {1'd0,  8'd245}: s1rd3 <= 245;
	     {1'd0,  8'd246}: s1rd3 <= 246;
	     {1'd0,  8'd247}: s1rd3 <= 247;
	     {1'd0,  8'd248}: s1rd3 <= 248;
	     {1'd0,  8'd249}: s1rd3 <= 249;
	     {1'd0,  8'd250}: s1rd3 <= 250;
	     {1'd0,  8'd251}: s1rd3 <= 251;
	     {1'd0,  8'd252}: s1rd3 <= 252;
	     {1'd0,  8'd253}: s1rd3 <= 253;
	     {1'd0,  8'd254}: s1rd3 <= 254;
	     {1'd0,  8'd255}: s1rd3 <= 255;
      endcase      
   end

// synthesis attribute rom_style of s1rd3 is "distributed"
    swNet22971 sw(tm28_d, clk, muxCycle, t0, s0, t1, s1, t2, s2, t3, s3);

   always @(posedge clk) begin
      case({tm28_dd, writeCycle})
	      {1'd0, 8'd0}: s2wr0 <= 192;
	      {1'd0, 8'd1}: s2wr0 <= 193;
	      {1'd0, 8'd2}: s2wr0 <= 194;
	      {1'd0, 8'd3}: s2wr0 <= 195;
	      {1'd0, 8'd4}: s2wr0 <= 196;
	      {1'd0, 8'd5}: s2wr0 <= 197;
	      {1'd0, 8'd6}: s2wr0 <= 198;
	      {1'd0, 8'd7}: s2wr0 <= 199;
	      {1'd0, 8'd8}: s2wr0 <= 200;
	      {1'd0, 8'd9}: s2wr0 <= 201;
	      {1'd0, 8'd10}: s2wr0 <= 202;
	      {1'd0, 8'd11}: s2wr0 <= 203;
	      {1'd0, 8'd12}: s2wr0 <= 204;
	      {1'd0, 8'd13}: s2wr0 <= 205;
	      {1'd0, 8'd14}: s2wr0 <= 206;
	      {1'd0, 8'd15}: s2wr0 <= 207;
	      {1'd0, 8'd16}: s2wr0 <= 208;
	      {1'd0, 8'd17}: s2wr0 <= 209;
	      {1'd0, 8'd18}: s2wr0 <= 210;
	      {1'd0, 8'd19}: s2wr0 <= 211;
	      {1'd0, 8'd20}: s2wr0 <= 212;
	      {1'd0, 8'd21}: s2wr0 <= 213;
	      {1'd0, 8'd22}: s2wr0 <= 214;
	      {1'd0, 8'd23}: s2wr0 <= 215;
	      {1'd0, 8'd24}: s2wr0 <= 216;
	      {1'd0, 8'd25}: s2wr0 <= 217;
	      {1'd0, 8'd26}: s2wr0 <= 218;
	      {1'd0, 8'd27}: s2wr0 <= 219;
	      {1'd0, 8'd28}: s2wr0 <= 220;
	      {1'd0, 8'd29}: s2wr0 <= 221;
	      {1'd0, 8'd30}: s2wr0 <= 222;
	      {1'd0, 8'd31}: s2wr0 <= 223;
	      {1'd0, 8'd32}: s2wr0 <= 224;
	      {1'd0, 8'd33}: s2wr0 <= 225;
	      {1'd0, 8'd34}: s2wr0 <= 226;
	      {1'd0, 8'd35}: s2wr0 <= 227;
	      {1'd0, 8'd36}: s2wr0 <= 228;
	      {1'd0, 8'd37}: s2wr0 <= 229;
	      {1'd0, 8'd38}: s2wr0 <= 230;
	      {1'd0, 8'd39}: s2wr0 <= 231;
	      {1'd0, 8'd40}: s2wr0 <= 232;
	      {1'd0, 8'd41}: s2wr0 <= 233;
	      {1'd0, 8'd42}: s2wr0 <= 234;
	      {1'd0, 8'd43}: s2wr0 <= 235;
	      {1'd0, 8'd44}: s2wr0 <= 236;
	      {1'd0, 8'd45}: s2wr0 <= 237;
	      {1'd0, 8'd46}: s2wr0 <= 238;
	      {1'd0, 8'd47}: s2wr0 <= 239;
	      {1'd0, 8'd48}: s2wr0 <= 240;
	      {1'd0, 8'd49}: s2wr0 <= 241;
	      {1'd0, 8'd50}: s2wr0 <= 242;
	      {1'd0, 8'd51}: s2wr0 <= 243;
	      {1'd0, 8'd52}: s2wr0 <= 244;
	      {1'd0, 8'd53}: s2wr0 <= 245;
	      {1'd0, 8'd54}: s2wr0 <= 246;
	      {1'd0, 8'd55}: s2wr0 <= 247;
	      {1'd0, 8'd56}: s2wr0 <= 248;
	      {1'd0, 8'd57}: s2wr0 <= 249;
	      {1'd0, 8'd58}: s2wr0 <= 250;
	      {1'd0, 8'd59}: s2wr0 <= 251;
	      {1'd0, 8'd60}: s2wr0 <= 252;
	      {1'd0, 8'd61}: s2wr0 <= 253;
	      {1'd0, 8'd62}: s2wr0 <= 254;
	      {1'd0, 8'd63}: s2wr0 <= 255;
	      {1'd0, 8'd64}: s2wr0 <= 128;
	      {1'd0, 8'd65}: s2wr0 <= 129;
	      {1'd0, 8'd66}: s2wr0 <= 130;
	      {1'd0, 8'd67}: s2wr0 <= 131;
	      {1'd0, 8'd68}: s2wr0 <= 132;
	      {1'd0, 8'd69}: s2wr0 <= 133;
	      {1'd0, 8'd70}: s2wr0 <= 134;
	      {1'd0, 8'd71}: s2wr0 <= 135;
	      {1'd0, 8'd72}: s2wr0 <= 136;
	      {1'd0, 8'd73}: s2wr0 <= 137;
	      {1'd0, 8'd74}: s2wr0 <= 138;
	      {1'd0, 8'd75}: s2wr0 <= 139;
	      {1'd0, 8'd76}: s2wr0 <= 140;
	      {1'd0, 8'd77}: s2wr0 <= 141;
	      {1'd0, 8'd78}: s2wr0 <= 142;
	      {1'd0, 8'd79}: s2wr0 <= 143;
	      {1'd0, 8'd80}: s2wr0 <= 144;
	      {1'd0, 8'd81}: s2wr0 <= 145;
	      {1'd0, 8'd82}: s2wr0 <= 146;
	      {1'd0, 8'd83}: s2wr0 <= 147;
	      {1'd0, 8'd84}: s2wr0 <= 148;
	      {1'd0, 8'd85}: s2wr0 <= 149;
	      {1'd0, 8'd86}: s2wr0 <= 150;
	      {1'd0, 8'd87}: s2wr0 <= 151;
	      {1'd0, 8'd88}: s2wr0 <= 152;
	      {1'd0, 8'd89}: s2wr0 <= 153;
	      {1'd0, 8'd90}: s2wr0 <= 154;
	      {1'd0, 8'd91}: s2wr0 <= 155;
	      {1'd0, 8'd92}: s2wr0 <= 156;
	      {1'd0, 8'd93}: s2wr0 <= 157;
	      {1'd0, 8'd94}: s2wr0 <= 158;
	      {1'd0, 8'd95}: s2wr0 <= 159;
	      {1'd0, 8'd96}: s2wr0 <= 160;
	      {1'd0, 8'd97}: s2wr0 <= 161;
	      {1'd0, 8'd98}: s2wr0 <= 162;
	      {1'd0, 8'd99}: s2wr0 <= 163;
	      {1'd0, 8'd100}: s2wr0 <= 164;
	      {1'd0, 8'd101}: s2wr0 <= 165;
	      {1'd0, 8'd102}: s2wr0 <= 166;
	      {1'd0, 8'd103}: s2wr0 <= 167;
	      {1'd0, 8'd104}: s2wr0 <= 168;
	      {1'd0, 8'd105}: s2wr0 <= 169;
	      {1'd0, 8'd106}: s2wr0 <= 170;
	      {1'd0, 8'd107}: s2wr0 <= 171;
	      {1'd0, 8'd108}: s2wr0 <= 172;
	      {1'd0, 8'd109}: s2wr0 <= 173;
	      {1'd0, 8'd110}: s2wr0 <= 174;
	      {1'd0, 8'd111}: s2wr0 <= 175;
	      {1'd0, 8'd112}: s2wr0 <= 176;
	      {1'd0, 8'd113}: s2wr0 <= 177;
	      {1'd0, 8'd114}: s2wr0 <= 178;
	      {1'd0, 8'd115}: s2wr0 <= 179;
	      {1'd0, 8'd116}: s2wr0 <= 180;
	      {1'd0, 8'd117}: s2wr0 <= 181;
	      {1'd0, 8'd118}: s2wr0 <= 182;
	      {1'd0, 8'd119}: s2wr0 <= 183;
	      {1'd0, 8'd120}: s2wr0 <= 184;
	      {1'd0, 8'd121}: s2wr0 <= 185;
	      {1'd0, 8'd122}: s2wr0 <= 186;
	      {1'd0, 8'd123}: s2wr0 <= 187;
	      {1'd0, 8'd124}: s2wr0 <= 188;
	      {1'd0, 8'd125}: s2wr0 <= 189;
	      {1'd0, 8'd126}: s2wr0 <= 190;
	      {1'd0, 8'd127}: s2wr0 <= 191;
	      {1'd0, 8'd128}: s2wr0 <= 64;
	      {1'd0, 8'd129}: s2wr0 <= 65;
	      {1'd0, 8'd130}: s2wr0 <= 66;
	      {1'd0, 8'd131}: s2wr0 <= 67;
	      {1'd0, 8'd132}: s2wr0 <= 68;
	      {1'd0, 8'd133}: s2wr0 <= 69;
	      {1'd0, 8'd134}: s2wr0 <= 70;
	      {1'd0, 8'd135}: s2wr0 <= 71;
	      {1'd0, 8'd136}: s2wr0 <= 72;
	      {1'd0, 8'd137}: s2wr0 <= 73;
	      {1'd0, 8'd138}: s2wr0 <= 74;
	      {1'd0, 8'd139}: s2wr0 <= 75;
	      {1'd0, 8'd140}: s2wr0 <= 76;
	      {1'd0, 8'd141}: s2wr0 <= 77;
	      {1'd0, 8'd142}: s2wr0 <= 78;
	      {1'd0, 8'd143}: s2wr0 <= 79;
	      {1'd0, 8'd144}: s2wr0 <= 80;
	      {1'd0, 8'd145}: s2wr0 <= 81;
	      {1'd0, 8'd146}: s2wr0 <= 82;
	      {1'd0, 8'd147}: s2wr0 <= 83;
	      {1'd0, 8'd148}: s2wr0 <= 84;
	      {1'd0, 8'd149}: s2wr0 <= 85;
	      {1'd0, 8'd150}: s2wr0 <= 86;
	      {1'd0, 8'd151}: s2wr0 <= 87;
	      {1'd0, 8'd152}: s2wr0 <= 88;
	      {1'd0, 8'd153}: s2wr0 <= 89;
	      {1'd0, 8'd154}: s2wr0 <= 90;
	      {1'd0, 8'd155}: s2wr0 <= 91;
	      {1'd0, 8'd156}: s2wr0 <= 92;
	      {1'd0, 8'd157}: s2wr0 <= 93;
	      {1'd0, 8'd158}: s2wr0 <= 94;
	      {1'd0, 8'd159}: s2wr0 <= 95;
	      {1'd0, 8'd160}: s2wr0 <= 96;
	      {1'd0, 8'd161}: s2wr0 <= 97;
	      {1'd0, 8'd162}: s2wr0 <= 98;
	      {1'd0, 8'd163}: s2wr0 <= 99;
	      {1'd0, 8'd164}: s2wr0 <= 100;
	      {1'd0, 8'd165}: s2wr0 <= 101;
	      {1'd0, 8'd166}: s2wr0 <= 102;
	      {1'd0, 8'd167}: s2wr0 <= 103;
	      {1'd0, 8'd168}: s2wr0 <= 104;
	      {1'd0, 8'd169}: s2wr0 <= 105;
	      {1'd0, 8'd170}: s2wr0 <= 106;
	      {1'd0, 8'd171}: s2wr0 <= 107;
	      {1'd0, 8'd172}: s2wr0 <= 108;
	      {1'd0, 8'd173}: s2wr0 <= 109;
	      {1'd0, 8'd174}: s2wr0 <= 110;
	      {1'd0, 8'd175}: s2wr0 <= 111;
	      {1'd0, 8'd176}: s2wr0 <= 112;
	      {1'd0, 8'd177}: s2wr0 <= 113;
	      {1'd0, 8'd178}: s2wr0 <= 114;
	      {1'd0, 8'd179}: s2wr0 <= 115;
	      {1'd0, 8'd180}: s2wr0 <= 116;
	      {1'd0, 8'd181}: s2wr0 <= 117;
	      {1'd0, 8'd182}: s2wr0 <= 118;
	      {1'd0, 8'd183}: s2wr0 <= 119;
	      {1'd0, 8'd184}: s2wr0 <= 120;
	      {1'd0, 8'd185}: s2wr0 <= 121;
	      {1'd0, 8'd186}: s2wr0 <= 122;
	      {1'd0, 8'd187}: s2wr0 <= 123;
	      {1'd0, 8'd188}: s2wr0 <= 124;
	      {1'd0, 8'd189}: s2wr0 <= 125;
	      {1'd0, 8'd190}: s2wr0 <= 126;
	      {1'd0, 8'd191}: s2wr0 <= 127;
	      {1'd0, 8'd192}: s2wr0 <= 0;
	      {1'd0, 8'd193}: s2wr0 <= 1;
	      {1'd0, 8'd194}: s2wr0 <= 2;
	      {1'd0, 8'd195}: s2wr0 <= 3;
	      {1'd0, 8'd196}: s2wr0 <= 4;
	      {1'd0, 8'd197}: s2wr0 <= 5;
	      {1'd0, 8'd198}: s2wr0 <= 6;
	      {1'd0, 8'd199}: s2wr0 <= 7;
	      {1'd0, 8'd200}: s2wr0 <= 8;
	      {1'd0, 8'd201}: s2wr0 <= 9;
	      {1'd0, 8'd202}: s2wr0 <= 10;
	      {1'd0, 8'd203}: s2wr0 <= 11;
	      {1'd0, 8'd204}: s2wr0 <= 12;
	      {1'd0, 8'd205}: s2wr0 <= 13;
	      {1'd0, 8'd206}: s2wr0 <= 14;
	      {1'd0, 8'd207}: s2wr0 <= 15;
	      {1'd0, 8'd208}: s2wr0 <= 16;
	      {1'd0, 8'd209}: s2wr0 <= 17;
	      {1'd0, 8'd210}: s2wr0 <= 18;
	      {1'd0, 8'd211}: s2wr0 <= 19;
	      {1'd0, 8'd212}: s2wr0 <= 20;
	      {1'd0, 8'd213}: s2wr0 <= 21;
	      {1'd0, 8'd214}: s2wr0 <= 22;
	      {1'd0, 8'd215}: s2wr0 <= 23;
	      {1'd0, 8'd216}: s2wr0 <= 24;
	      {1'd0, 8'd217}: s2wr0 <= 25;
	      {1'd0, 8'd218}: s2wr0 <= 26;
	      {1'd0, 8'd219}: s2wr0 <= 27;
	      {1'd0, 8'd220}: s2wr0 <= 28;
	      {1'd0, 8'd221}: s2wr0 <= 29;
	      {1'd0, 8'd222}: s2wr0 <= 30;
	      {1'd0, 8'd223}: s2wr0 <= 31;
	      {1'd0, 8'd224}: s2wr0 <= 32;
	      {1'd0, 8'd225}: s2wr0 <= 33;
	      {1'd0, 8'd226}: s2wr0 <= 34;
	      {1'd0, 8'd227}: s2wr0 <= 35;
	      {1'd0, 8'd228}: s2wr0 <= 36;
	      {1'd0, 8'd229}: s2wr0 <= 37;
	      {1'd0, 8'd230}: s2wr0 <= 38;
	      {1'd0, 8'd231}: s2wr0 <= 39;
	      {1'd0, 8'd232}: s2wr0 <= 40;
	      {1'd0, 8'd233}: s2wr0 <= 41;
	      {1'd0, 8'd234}: s2wr0 <= 42;
	      {1'd0, 8'd235}: s2wr0 <= 43;
	      {1'd0, 8'd236}: s2wr0 <= 44;
	      {1'd0, 8'd237}: s2wr0 <= 45;
	      {1'd0, 8'd238}: s2wr0 <= 46;
	      {1'd0, 8'd239}: s2wr0 <= 47;
	      {1'd0, 8'd240}: s2wr0 <= 48;
	      {1'd0, 8'd241}: s2wr0 <= 49;
	      {1'd0, 8'd242}: s2wr0 <= 50;
	      {1'd0, 8'd243}: s2wr0 <= 51;
	      {1'd0, 8'd244}: s2wr0 <= 52;
	      {1'd0, 8'd245}: s2wr0 <= 53;
	      {1'd0, 8'd246}: s2wr0 <= 54;
	      {1'd0, 8'd247}: s2wr0 <= 55;
	      {1'd0, 8'd248}: s2wr0 <= 56;
	      {1'd0, 8'd249}: s2wr0 <= 57;
	      {1'd0, 8'd250}: s2wr0 <= 58;
	      {1'd0, 8'd251}: s2wr0 <= 59;
	      {1'd0, 8'd252}: s2wr0 <= 60;
	      {1'd0, 8'd253}: s2wr0 <= 61;
	      {1'd0, 8'd254}: s2wr0 <= 62;
	      {1'd0, 8'd255}: s2wr0 <= 63;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr0 is "distributed"
   always @(posedge clk) begin
      case({tm28_dd, writeCycle})
	      {1'd0, 8'd0}: s2wr1 <= 128;
	      {1'd0, 8'd1}: s2wr1 <= 129;
	      {1'd0, 8'd2}: s2wr1 <= 130;
	      {1'd0, 8'd3}: s2wr1 <= 131;
	      {1'd0, 8'd4}: s2wr1 <= 132;
	      {1'd0, 8'd5}: s2wr1 <= 133;
	      {1'd0, 8'd6}: s2wr1 <= 134;
	      {1'd0, 8'd7}: s2wr1 <= 135;
	      {1'd0, 8'd8}: s2wr1 <= 136;
	      {1'd0, 8'd9}: s2wr1 <= 137;
	      {1'd0, 8'd10}: s2wr1 <= 138;
	      {1'd0, 8'd11}: s2wr1 <= 139;
	      {1'd0, 8'd12}: s2wr1 <= 140;
	      {1'd0, 8'd13}: s2wr1 <= 141;
	      {1'd0, 8'd14}: s2wr1 <= 142;
	      {1'd0, 8'd15}: s2wr1 <= 143;
	      {1'd0, 8'd16}: s2wr1 <= 144;
	      {1'd0, 8'd17}: s2wr1 <= 145;
	      {1'd0, 8'd18}: s2wr1 <= 146;
	      {1'd0, 8'd19}: s2wr1 <= 147;
	      {1'd0, 8'd20}: s2wr1 <= 148;
	      {1'd0, 8'd21}: s2wr1 <= 149;
	      {1'd0, 8'd22}: s2wr1 <= 150;
	      {1'd0, 8'd23}: s2wr1 <= 151;
	      {1'd0, 8'd24}: s2wr1 <= 152;
	      {1'd0, 8'd25}: s2wr1 <= 153;
	      {1'd0, 8'd26}: s2wr1 <= 154;
	      {1'd0, 8'd27}: s2wr1 <= 155;
	      {1'd0, 8'd28}: s2wr1 <= 156;
	      {1'd0, 8'd29}: s2wr1 <= 157;
	      {1'd0, 8'd30}: s2wr1 <= 158;
	      {1'd0, 8'd31}: s2wr1 <= 159;
	      {1'd0, 8'd32}: s2wr1 <= 160;
	      {1'd0, 8'd33}: s2wr1 <= 161;
	      {1'd0, 8'd34}: s2wr1 <= 162;
	      {1'd0, 8'd35}: s2wr1 <= 163;
	      {1'd0, 8'd36}: s2wr1 <= 164;
	      {1'd0, 8'd37}: s2wr1 <= 165;
	      {1'd0, 8'd38}: s2wr1 <= 166;
	      {1'd0, 8'd39}: s2wr1 <= 167;
	      {1'd0, 8'd40}: s2wr1 <= 168;
	      {1'd0, 8'd41}: s2wr1 <= 169;
	      {1'd0, 8'd42}: s2wr1 <= 170;
	      {1'd0, 8'd43}: s2wr1 <= 171;
	      {1'd0, 8'd44}: s2wr1 <= 172;
	      {1'd0, 8'd45}: s2wr1 <= 173;
	      {1'd0, 8'd46}: s2wr1 <= 174;
	      {1'd0, 8'd47}: s2wr1 <= 175;
	      {1'd0, 8'd48}: s2wr1 <= 176;
	      {1'd0, 8'd49}: s2wr1 <= 177;
	      {1'd0, 8'd50}: s2wr1 <= 178;
	      {1'd0, 8'd51}: s2wr1 <= 179;
	      {1'd0, 8'd52}: s2wr1 <= 180;
	      {1'd0, 8'd53}: s2wr1 <= 181;
	      {1'd0, 8'd54}: s2wr1 <= 182;
	      {1'd0, 8'd55}: s2wr1 <= 183;
	      {1'd0, 8'd56}: s2wr1 <= 184;
	      {1'd0, 8'd57}: s2wr1 <= 185;
	      {1'd0, 8'd58}: s2wr1 <= 186;
	      {1'd0, 8'd59}: s2wr1 <= 187;
	      {1'd0, 8'd60}: s2wr1 <= 188;
	      {1'd0, 8'd61}: s2wr1 <= 189;
	      {1'd0, 8'd62}: s2wr1 <= 190;
	      {1'd0, 8'd63}: s2wr1 <= 191;
	      {1'd0, 8'd64}: s2wr1 <= 192;
	      {1'd0, 8'd65}: s2wr1 <= 193;
	      {1'd0, 8'd66}: s2wr1 <= 194;
	      {1'd0, 8'd67}: s2wr1 <= 195;
	      {1'd0, 8'd68}: s2wr1 <= 196;
	      {1'd0, 8'd69}: s2wr1 <= 197;
	      {1'd0, 8'd70}: s2wr1 <= 198;
	      {1'd0, 8'd71}: s2wr1 <= 199;
	      {1'd0, 8'd72}: s2wr1 <= 200;
	      {1'd0, 8'd73}: s2wr1 <= 201;
	      {1'd0, 8'd74}: s2wr1 <= 202;
	      {1'd0, 8'd75}: s2wr1 <= 203;
	      {1'd0, 8'd76}: s2wr1 <= 204;
	      {1'd0, 8'd77}: s2wr1 <= 205;
	      {1'd0, 8'd78}: s2wr1 <= 206;
	      {1'd0, 8'd79}: s2wr1 <= 207;
	      {1'd0, 8'd80}: s2wr1 <= 208;
	      {1'd0, 8'd81}: s2wr1 <= 209;
	      {1'd0, 8'd82}: s2wr1 <= 210;
	      {1'd0, 8'd83}: s2wr1 <= 211;
	      {1'd0, 8'd84}: s2wr1 <= 212;
	      {1'd0, 8'd85}: s2wr1 <= 213;
	      {1'd0, 8'd86}: s2wr1 <= 214;
	      {1'd0, 8'd87}: s2wr1 <= 215;
	      {1'd0, 8'd88}: s2wr1 <= 216;
	      {1'd0, 8'd89}: s2wr1 <= 217;
	      {1'd0, 8'd90}: s2wr1 <= 218;
	      {1'd0, 8'd91}: s2wr1 <= 219;
	      {1'd0, 8'd92}: s2wr1 <= 220;
	      {1'd0, 8'd93}: s2wr1 <= 221;
	      {1'd0, 8'd94}: s2wr1 <= 222;
	      {1'd0, 8'd95}: s2wr1 <= 223;
	      {1'd0, 8'd96}: s2wr1 <= 224;
	      {1'd0, 8'd97}: s2wr1 <= 225;
	      {1'd0, 8'd98}: s2wr1 <= 226;
	      {1'd0, 8'd99}: s2wr1 <= 227;
	      {1'd0, 8'd100}: s2wr1 <= 228;
	      {1'd0, 8'd101}: s2wr1 <= 229;
	      {1'd0, 8'd102}: s2wr1 <= 230;
	      {1'd0, 8'd103}: s2wr1 <= 231;
	      {1'd0, 8'd104}: s2wr1 <= 232;
	      {1'd0, 8'd105}: s2wr1 <= 233;
	      {1'd0, 8'd106}: s2wr1 <= 234;
	      {1'd0, 8'd107}: s2wr1 <= 235;
	      {1'd0, 8'd108}: s2wr1 <= 236;
	      {1'd0, 8'd109}: s2wr1 <= 237;
	      {1'd0, 8'd110}: s2wr1 <= 238;
	      {1'd0, 8'd111}: s2wr1 <= 239;
	      {1'd0, 8'd112}: s2wr1 <= 240;
	      {1'd0, 8'd113}: s2wr1 <= 241;
	      {1'd0, 8'd114}: s2wr1 <= 242;
	      {1'd0, 8'd115}: s2wr1 <= 243;
	      {1'd0, 8'd116}: s2wr1 <= 244;
	      {1'd0, 8'd117}: s2wr1 <= 245;
	      {1'd0, 8'd118}: s2wr1 <= 246;
	      {1'd0, 8'd119}: s2wr1 <= 247;
	      {1'd0, 8'd120}: s2wr1 <= 248;
	      {1'd0, 8'd121}: s2wr1 <= 249;
	      {1'd0, 8'd122}: s2wr1 <= 250;
	      {1'd0, 8'd123}: s2wr1 <= 251;
	      {1'd0, 8'd124}: s2wr1 <= 252;
	      {1'd0, 8'd125}: s2wr1 <= 253;
	      {1'd0, 8'd126}: s2wr1 <= 254;
	      {1'd0, 8'd127}: s2wr1 <= 255;
	      {1'd0, 8'd128}: s2wr1 <= 0;
	      {1'd0, 8'd129}: s2wr1 <= 1;
	      {1'd0, 8'd130}: s2wr1 <= 2;
	      {1'd0, 8'd131}: s2wr1 <= 3;
	      {1'd0, 8'd132}: s2wr1 <= 4;
	      {1'd0, 8'd133}: s2wr1 <= 5;
	      {1'd0, 8'd134}: s2wr1 <= 6;
	      {1'd0, 8'd135}: s2wr1 <= 7;
	      {1'd0, 8'd136}: s2wr1 <= 8;
	      {1'd0, 8'd137}: s2wr1 <= 9;
	      {1'd0, 8'd138}: s2wr1 <= 10;
	      {1'd0, 8'd139}: s2wr1 <= 11;
	      {1'd0, 8'd140}: s2wr1 <= 12;
	      {1'd0, 8'd141}: s2wr1 <= 13;
	      {1'd0, 8'd142}: s2wr1 <= 14;
	      {1'd0, 8'd143}: s2wr1 <= 15;
	      {1'd0, 8'd144}: s2wr1 <= 16;
	      {1'd0, 8'd145}: s2wr1 <= 17;
	      {1'd0, 8'd146}: s2wr1 <= 18;
	      {1'd0, 8'd147}: s2wr1 <= 19;
	      {1'd0, 8'd148}: s2wr1 <= 20;
	      {1'd0, 8'd149}: s2wr1 <= 21;
	      {1'd0, 8'd150}: s2wr1 <= 22;
	      {1'd0, 8'd151}: s2wr1 <= 23;
	      {1'd0, 8'd152}: s2wr1 <= 24;
	      {1'd0, 8'd153}: s2wr1 <= 25;
	      {1'd0, 8'd154}: s2wr1 <= 26;
	      {1'd0, 8'd155}: s2wr1 <= 27;
	      {1'd0, 8'd156}: s2wr1 <= 28;
	      {1'd0, 8'd157}: s2wr1 <= 29;
	      {1'd0, 8'd158}: s2wr1 <= 30;
	      {1'd0, 8'd159}: s2wr1 <= 31;
	      {1'd0, 8'd160}: s2wr1 <= 32;
	      {1'd0, 8'd161}: s2wr1 <= 33;
	      {1'd0, 8'd162}: s2wr1 <= 34;
	      {1'd0, 8'd163}: s2wr1 <= 35;
	      {1'd0, 8'd164}: s2wr1 <= 36;
	      {1'd0, 8'd165}: s2wr1 <= 37;
	      {1'd0, 8'd166}: s2wr1 <= 38;
	      {1'd0, 8'd167}: s2wr1 <= 39;
	      {1'd0, 8'd168}: s2wr1 <= 40;
	      {1'd0, 8'd169}: s2wr1 <= 41;
	      {1'd0, 8'd170}: s2wr1 <= 42;
	      {1'd0, 8'd171}: s2wr1 <= 43;
	      {1'd0, 8'd172}: s2wr1 <= 44;
	      {1'd0, 8'd173}: s2wr1 <= 45;
	      {1'd0, 8'd174}: s2wr1 <= 46;
	      {1'd0, 8'd175}: s2wr1 <= 47;
	      {1'd0, 8'd176}: s2wr1 <= 48;
	      {1'd0, 8'd177}: s2wr1 <= 49;
	      {1'd0, 8'd178}: s2wr1 <= 50;
	      {1'd0, 8'd179}: s2wr1 <= 51;
	      {1'd0, 8'd180}: s2wr1 <= 52;
	      {1'd0, 8'd181}: s2wr1 <= 53;
	      {1'd0, 8'd182}: s2wr1 <= 54;
	      {1'd0, 8'd183}: s2wr1 <= 55;
	      {1'd0, 8'd184}: s2wr1 <= 56;
	      {1'd0, 8'd185}: s2wr1 <= 57;
	      {1'd0, 8'd186}: s2wr1 <= 58;
	      {1'd0, 8'd187}: s2wr1 <= 59;
	      {1'd0, 8'd188}: s2wr1 <= 60;
	      {1'd0, 8'd189}: s2wr1 <= 61;
	      {1'd0, 8'd190}: s2wr1 <= 62;
	      {1'd0, 8'd191}: s2wr1 <= 63;
	      {1'd0, 8'd192}: s2wr1 <= 64;
	      {1'd0, 8'd193}: s2wr1 <= 65;
	      {1'd0, 8'd194}: s2wr1 <= 66;
	      {1'd0, 8'd195}: s2wr1 <= 67;
	      {1'd0, 8'd196}: s2wr1 <= 68;
	      {1'd0, 8'd197}: s2wr1 <= 69;
	      {1'd0, 8'd198}: s2wr1 <= 70;
	      {1'd0, 8'd199}: s2wr1 <= 71;
	      {1'd0, 8'd200}: s2wr1 <= 72;
	      {1'd0, 8'd201}: s2wr1 <= 73;
	      {1'd0, 8'd202}: s2wr1 <= 74;
	      {1'd0, 8'd203}: s2wr1 <= 75;
	      {1'd0, 8'd204}: s2wr1 <= 76;
	      {1'd0, 8'd205}: s2wr1 <= 77;
	      {1'd0, 8'd206}: s2wr1 <= 78;
	      {1'd0, 8'd207}: s2wr1 <= 79;
	      {1'd0, 8'd208}: s2wr1 <= 80;
	      {1'd0, 8'd209}: s2wr1 <= 81;
	      {1'd0, 8'd210}: s2wr1 <= 82;
	      {1'd0, 8'd211}: s2wr1 <= 83;
	      {1'd0, 8'd212}: s2wr1 <= 84;
	      {1'd0, 8'd213}: s2wr1 <= 85;
	      {1'd0, 8'd214}: s2wr1 <= 86;
	      {1'd0, 8'd215}: s2wr1 <= 87;
	      {1'd0, 8'd216}: s2wr1 <= 88;
	      {1'd0, 8'd217}: s2wr1 <= 89;
	      {1'd0, 8'd218}: s2wr1 <= 90;
	      {1'd0, 8'd219}: s2wr1 <= 91;
	      {1'd0, 8'd220}: s2wr1 <= 92;
	      {1'd0, 8'd221}: s2wr1 <= 93;
	      {1'd0, 8'd222}: s2wr1 <= 94;
	      {1'd0, 8'd223}: s2wr1 <= 95;
	      {1'd0, 8'd224}: s2wr1 <= 96;
	      {1'd0, 8'd225}: s2wr1 <= 97;
	      {1'd0, 8'd226}: s2wr1 <= 98;
	      {1'd0, 8'd227}: s2wr1 <= 99;
	      {1'd0, 8'd228}: s2wr1 <= 100;
	      {1'd0, 8'd229}: s2wr1 <= 101;
	      {1'd0, 8'd230}: s2wr1 <= 102;
	      {1'd0, 8'd231}: s2wr1 <= 103;
	      {1'd0, 8'd232}: s2wr1 <= 104;
	      {1'd0, 8'd233}: s2wr1 <= 105;
	      {1'd0, 8'd234}: s2wr1 <= 106;
	      {1'd0, 8'd235}: s2wr1 <= 107;
	      {1'd0, 8'd236}: s2wr1 <= 108;
	      {1'd0, 8'd237}: s2wr1 <= 109;
	      {1'd0, 8'd238}: s2wr1 <= 110;
	      {1'd0, 8'd239}: s2wr1 <= 111;
	      {1'd0, 8'd240}: s2wr1 <= 112;
	      {1'd0, 8'd241}: s2wr1 <= 113;
	      {1'd0, 8'd242}: s2wr1 <= 114;
	      {1'd0, 8'd243}: s2wr1 <= 115;
	      {1'd0, 8'd244}: s2wr1 <= 116;
	      {1'd0, 8'd245}: s2wr1 <= 117;
	      {1'd0, 8'd246}: s2wr1 <= 118;
	      {1'd0, 8'd247}: s2wr1 <= 119;
	      {1'd0, 8'd248}: s2wr1 <= 120;
	      {1'd0, 8'd249}: s2wr1 <= 121;
	      {1'd0, 8'd250}: s2wr1 <= 122;
	      {1'd0, 8'd251}: s2wr1 <= 123;
	      {1'd0, 8'd252}: s2wr1 <= 124;
	      {1'd0, 8'd253}: s2wr1 <= 125;
	      {1'd0, 8'd254}: s2wr1 <= 126;
	      {1'd0, 8'd255}: s2wr1 <= 127;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr1 is "distributed"
   always @(posedge clk) begin
      case({tm28_dd, writeCycle})
	      {1'd0, 8'd0}: s2wr2 <= 64;
	      {1'd0, 8'd1}: s2wr2 <= 65;
	      {1'd0, 8'd2}: s2wr2 <= 66;
	      {1'd0, 8'd3}: s2wr2 <= 67;
	      {1'd0, 8'd4}: s2wr2 <= 68;
	      {1'd0, 8'd5}: s2wr2 <= 69;
	      {1'd0, 8'd6}: s2wr2 <= 70;
	      {1'd0, 8'd7}: s2wr2 <= 71;
	      {1'd0, 8'd8}: s2wr2 <= 72;
	      {1'd0, 8'd9}: s2wr2 <= 73;
	      {1'd0, 8'd10}: s2wr2 <= 74;
	      {1'd0, 8'd11}: s2wr2 <= 75;
	      {1'd0, 8'd12}: s2wr2 <= 76;
	      {1'd0, 8'd13}: s2wr2 <= 77;
	      {1'd0, 8'd14}: s2wr2 <= 78;
	      {1'd0, 8'd15}: s2wr2 <= 79;
	      {1'd0, 8'd16}: s2wr2 <= 80;
	      {1'd0, 8'd17}: s2wr2 <= 81;
	      {1'd0, 8'd18}: s2wr2 <= 82;
	      {1'd0, 8'd19}: s2wr2 <= 83;
	      {1'd0, 8'd20}: s2wr2 <= 84;
	      {1'd0, 8'd21}: s2wr2 <= 85;
	      {1'd0, 8'd22}: s2wr2 <= 86;
	      {1'd0, 8'd23}: s2wr2 <= 87;
	      {1'd0, 8'd24}: s2wr2 <= 88;
	      {1'd0, 8'd25}: s2wr2 <= 89;
	      {1'd0, 8'd26}: s2wr2 <= 90;
	      {1'd0, 8'd27}: s2wr2 <= 91;
	      {1'd0, 8'd28}: s2wr2 <= 92;
	      {1'd0, 8'd29}: s2wr2 <= 93;
	      {1'd0, 8'd30}: s2wr2 <= 94;
	      {1'd0, 8'd31}: s2wr2 <= 95;
	      {1'd0, 8'd32}: s2wr2 <= 96;
	      {1'd0, 8'd33}: s2wr2 <= 97;
	      {1'd0, 8'd34}: s2wr2 <= 98;
	      {1'd0, 8'd35}: s2wr2 <= 99;
	      {1'd0, 8'd36}: s2wr2 <= 100;
	      {1'd0, 8'd37}: s2wr2 <= 101;
	      {1'd0, 8'd38}: s2wr2 <= 102;
	      {1'd0, 8'd39}: s2wr2 <= 103;
	      {1'd0, 8'd40}: s2wr2 <= 104;
	      {1'd0, 8'd41}: s2wr2 <= 105;
	      {1'd0, 8'd42}: s2wr2 <= 106;
	      {1'd0, 8'd43}: s2wr2 <= 107;
	      {1'd0, 8'd44}: s2wr2 <= 108;
	      {1'd0, 8'd45}: s2wr2 <= 109;
	      {1'd0, 8'd46}: s2wr2 <= 110;
	      {1'd0, 8'd47}: s2wr2 <= 111;
	      {1'd0, 8'd48}: s2wr2 <= 112;
	      {1'd0, 8'd49}: s2wr2 <= 113;
	      {1'd0, 8'd50}: s2wr2 <= 114;
	      {1'd0, 8'd51}: s2wr2 <= 115;
	      {1'd0, 8'd52}: s2wr2 <= 116;
	      {1'd0, 8'd53}: s2wr2 <= 117;
	      {1'd0, 8'd54}: s2wr2 <= 118;
	      {1'd0, 8'd55}: s2wr2 <= 119;
	      {1'd0, 8'd56}: s2wr2 <= 120;
	      {1'd0, 8'd57}: s2wr2 <= 121;
	      {1'd0, 8'd58}: s2wr2 <= 122;
	      {1'd0, 8'd59}: s2wr2 <= 123;
	      {1'd0, 8'd60}: s2wr2 <= 124;
	      {1'd0, 8'd61}: s2wr2 <= 125;
	      {1'd0, 8'd62}: s2wr2 <= 126;
	      {1'd0, 8'd63}: s2wr2 <= 127;
	      {1'd0, 8'd64}: s2wr2 <= 0;
	      {1'd0, 8'd65}: s2wr2 <= 1;
	      {1'd0, 8'd66}: s2wr2 <= 2;
	      {1'd0, 8'd67}: s2wr2 <= 3;
	      {1'd0, 8'd68}: s2wr2 <= 4;
	      {1'd0, 8'd69}: s2wr2 <= 5;
	      {1'd0, 8'd70}: s2wr2 <= 6;
	      {1'd0, 8'd71}: s2wr2 <= 7;
	      {1'd0, 8'd72}: s2wr2 <= 8;
	      {1'd0, 8'd73}: s2wr2 <= 9;
	      {1'd0, 8'd74}: s2wr2 <= 10;
	      {1'd0, 8'd75}: s2wr2 <= 11;
	      {1'd0, 8'd76}: s2wr2 <= 12;
	      {1'd0, 8'd77}: s2wr2 <= 13;
	      {1'd0, 8'd78}: s2wr2 <= 14;
	      {1'd0, 8'd79}: s2wr2 <= 15;
	      {1'd0, 8'd80}: s2wr2 <= 16;
	      {1'd0, 8'd81}: s2wr2 <= 17;
	      {1'd0, 8'd82}: s2wr2 <= 18;
	      {1'd0, 8'd83}: s2wr2 <= 19;
	      {1'd0, 8'd84}: s2wr2 <= 20;
	      {1'd0, 8'd85}: s2wr2 <= 21;
	      {1'd0, 8'd86}: s2wr2 <= 22;
	      {1'd0, 8'd87}: s2wr2 <= 23;
	      {1'd0, 8'd88}: s2wr2 <= 24;
	      {1'd0, 8'd89}: s2wr2 <= 25;
	      {1'd0, 8'd90}: s2wr2 <= 26;
	      {1'd0, 8'd91}: s2wr2 <= 27;
	      {1'd0, 8'd92}: s2wr2 <= 28;
	      {1'd0, 8'd93}: s2wr2 <= 29;
	      {1'd0, 8'd94}: s2wr2 <= 30;
	      {1'd0, 8'd95}: s2wr2 <= 31;
	      {1'd0, 8'd96}: s2wr2 <= 32;
	      {1'd0, 8'd97}: s2wr2 <= 33;
	      {1'd0, 8'd98}: s2wr2 <= 34;
	      {1'd0, 8'd99}: s2wr2 <= 35;
	      {1'd0, 8'd100}: s2wr2 <= 36;
	      {1'd0, 8'd101}: s2wr2 <= 37;
	      {1'd0, 8'd102}: s2wr2 <= 38;
	      {1'd0, 8'd103}: s2wr2 <= 39;
	      {1'd0, 8'd104}: s2wr2 <= 40;
	      {1'd0, 8'd105}: s2wr2 <= 41;
	      {1'd0, 8'd106}: s2wr2 <= 42;
	      {1'd0, 8'd107}: s2wr2 <= 43;
	      {1'd0, 8'd108}: s2wr2 <= 44;
	      {1'd0, 8'd109}: s2wr2 <= 45;
	      {1'd0, 8'd110}: s2wr2 <= 46;
	      {1'd0, 8'd111}: s2wr2 <= 47;
	      {1'd0, 8'd112}: s2wr2 <= 48;
	      {1'd0, 8'd113}: s2wr2 <= 49;
	      {1'd0, 8'd114}: s2wr2 <= 50;
	      {1'd0, 8'd115}: s2wr2 <= 51;
	      {1'd0, 8'd116}: s2wr2 <= 52;
	      {1'd0, 8'd117}: s2wr2 <= 53;
	      {1'd0, 8'd118}: s2wr2 <= 54;
	      {1'd0, 8'd119}: s2wr2 <= 55;
	      {1'd0, 8'd120}: s2wr2 <= 56;
	      {1'd0, 8'd121}: s2wr2 <= 57;
	      {1'd0, 8'd122}: s2wr2 <= 58;
	      {1'd0, 8'd123}: s2wr2 <= 59;
	      {1'd0, 8'd124}: s2wr2 <= 60;
	      {1'd0, 8'd125}: s2wr2 <= 61;
	      {1'd0, 8'd126}: s2wr2 <= 62;
	      {1'd0, 8'd127}: s2wr2 <= 63;
	      {1'd0, 8'd128}: s2wr2 <= 192;
	      {1'd0, 8'd129}: s2wr2 <= 193;
	      {1'd0, 8'd130}: s2wr2 <= 194;
	      {1'd0, 8'd131}: s2wr2 <= 195;
	      {1'd0, 8'd132}: s2wr2 <= 196;
	      {1'd0, 8'd133}: s2wr2 <= 197;
	      {1'd0, 8'd134}: s2wr2 <= 198;
	      {1'd0, 8'd135}: s2wr2 <= 199;
	      {1'd0, 8'd136}: s2wr2 <= 200;
	      {1'd0, 8'd137}: s2wr2 <= 201;
	      {1'd0, 8'd138}: s2wr2 <= 202;
	      {1'd0, 8'd139}: s2wr2 <= 203;
	      {1'd0, 8'd140}: s2wr2 <= 204;
	      {1'd0, 8'd141}: s2wr2 <= 205;
	      {1'd0, 8'd142}: s2wr2 <= 206;
	      {1'd0, 8'd143}: s2wr2 <= 207;
	      {1'd0, 8'd144}: s2wr2 <= 208;
	      {1'd0, 8'd145}: s2wr2 <= 209;
	      {1'd0, 8'd146}: s2wr2 <= 210;
	      {1'd0, 8'd147}: s2wr2 <= 211;
	      {1'd0, 8'd148}: s2wr2 <= 212;
	      {1'd0, 8'd149}: s2wr2 <= 213;
	      {1'd0, 8'd150}: s2wr2 <= 214;
	      {1'd0, 8'd151}: s2wr2 <= 215;
	      {1'd0, 8'd152}: s2wr2 <= 216;
	      {1'd0, 8'd153}: s2wr2 <= 217;
	      {1'd0, 8'd154}: s2wr2 <= 218;
	      {1'd0, 8'd155}: s2wr2 <= 219;
	      {1'd0, 8'd156}: s2wr2 <= 220;
	      {1'd0, 8'd157}: s2wr2 <= 221;
	      {1'd0, 8'd158}: s2wr2 <= 222;
	      {1'd0, 8'd159}: s2wr2 <= 223;
	      {1'd0, 8'd160}: s2wr2 <= 224;
	      {1'd0, 8'd161}: s2wr2 <= 225;
	      {1'd0, 8'd162}: s2wr2 <= 226;
	      {1'd0, 8'd163}: s2wr2 <= 227;
	      {1'd0, 8'd164}: s2wr2 <= 228;
	      {1'd0, 8'd165}: s2wr2 <= 229;
	      {1'd0, 8'd166}: s2wr2 <= 230;
	      {1'd0, 8'd167}: s2wr2 <= 231;
	      {1'd0, 8'd168}: s2wr2 <= 232;
	      {1'd0, 8'd169}: s2wr2 <= 233;
	      {1'd0, 8'd170}: s2wr2 <= 234;
	      {1'd0, 8'd171}: s2wr2 <= 235;
	      {1'd0, 8'd172}: s2wr2 <= 236;
	      {1'd0, 8'd173}: s2wr2 <= 237;
	      {1'd0, 8'd174}: s2wr2 <= 238;
	      {1'd0, 8'd175}: s2wr2 <= 239;
	      {1'd0, 8'd176}: s2wr2 <= 240;
	      {1'd0, 8'd177}: s2wr2 <= 241;
	      {1'd0, 8'd178}: s2wr2 <= 242;
	      {1'd0, 8'd179}: s2wr2 <= 243;
	      {1'd0, 8'd180}: s2wr2 <= 244;
	      {1'd0, 8'd181}: s2wr2 <= 245;
	      {1'd0, 8'd182}: s2wr2 <= 246;
	      {1'd0, 8'd183}: s2wr2 <= 247;
	      {1'd0, 8'd184}: s2wr2 <= 248;
	      {1'd0, 8'd185}: s2wr2 <= 249;
	      {1'd0, 8'd186}: s2wr2 <= 250;
	      {1'd0, 8'd187}: s2wr2 <= 251;
	      {1'd0, 8'd188}: s2wr2 <= 252;
	      {1'd0, 8'd189}: s2wr2 <= 253;
	      {1'd0, 8'd190}: s2wr2 <= 254;
	      {1'd0, 8'd191}: s2wr2 <= 255;
	      {1'd0, 8'd192}: s2wr2 <= 128;
	      {1'd0, 8'd193}: s2wr2 <= 129;
	      {1'd0, 8'd194}: s2wr2 <= 130;
	      {1'd0, 8'd195}: s2wr2 <= 131;
	      {1'd0, 8'd196}: s2wr2 <= 132;
	      {1'd0, 8'd197}: s2wr2 <= 133;
	      {1'd0, 8'd198}: s2wr2 <= 134;
	      {1'd0, 8'd199}: s2wr2 <= 135;
	      {1'd0, 8'd200}: s2wr2 <= 136;
	      {1'd0, 8'd201}: s2wr2 <= 137;
	      {1'd0, 8'd202}: s2wr2 <= 138;
	      {1'd0, 8'd203}: s2wr2 <= 139;
	      {1'd0, 8'd204}: s2wr2 <= 140;
	      {1'd0, 8'd205}: s2wr2 <= 141;
	      {1'd0, 8'd206}: s2wr2 <= 142;
	      {1'd0, 8'd207}: s2wr2 <= 143;
	      {1'd0, 8'd208}: s2wr2 <= 144;
	      {1'd0, 8'd209}: s2wr2 <= 145;
	      {1'd0, 8'd210}: s2wr2 <= 146;
	      {1'd0, 8'd211}: s2wr2 <= 147;
	      {1'd0, 8'd212}: s2wr2 <= 148;
	      {1'd0, 8'd213}: s2wr2 <= 149;
	      {1'd0, 8'd214}: s2wr2 <= 150;
	      {1'd0, 8'd215}: s2wr2 <= 151;
	      {1'd0, 8'd216}: s2wr2 <= 152;
	      {1'd0, 8'd217}: s2wr2 <= 153;
	      {1'd0, 8'd218}: s2wr2 <= 154;
	      {1'd0, 8'd219}: s2wr2 <= 155;
	      {1'd0, 8'd220}: s2wr2 <= 156;
	      {1'd0, 8'd221}: s2wr2 <= 157;
	      {1'd0, 8'd222}: s2wr2 <= 158;
	      {1'd0, 8'd223}: s2wr2 <= 159;
	      {1'd0, 8'd224}: s2wr2 <= 160;
	      {1'd0, 8'd225}: s2wr2 <= 161;
	      {1'd0, 8'd226}: s2wr2 <= 162;
	      {1'd0, 8'd227}: s2wr2 <= 163;
	      {1'd0, 8'd228}: s2wr2 <= 164;
	      {1'd0, 8'd229}: s2wr2 <= 165;
	      {1'd0, 8'd230}: s2wr2 <= 166;
	      {1'd0, 8'd231}: s2wr2 <= 167;
	      {1'd0, 8'd232}: s2wr2 <= 168;
	      {1'd0, 8'd233}: s2wr2 <= 169;
	      {1'd0, 8'd234}: s2wr2 <= 170;
	      {1'd0, 8'd235}: s2wr2 <= 171;
	      {1'd0, 8'd236}: s2wr2 <= 172;
	      {1'd0, 8'd237}: s2wr2 <= 173;
	      {1'd0, 8'd238}: s2wr2 <= 174;
	      {1'd0, 8'd239}: s2wr2 <= 175;
	      {1'd0, 8'd240}: s2wr2 <= 176;
	      {1'd0, 8'd241}: s2wr2 <= 177;
	      {1'd0, 8'd242}: s2wr2 <= 178;
	      {1'd0, 8'd243}: s2wr2 <= 179;
	      {1'd0, 8'd244}: s2wr2 <= 180;
	      {1'd0, 8'd245}: s2wr2 <= 181;
	      {1'd0, 8'd246}: s2wr2 <= 182;
	      {1'd0, 8'd247}: s2wr2 <= 183;
	      {1'd0, 8'd248}: s2wr2 <= 184;
	      {1'd0, 8'd249}: s2wr2 <= 185;
	      {1'd0, 8'd250}: s2wr2 <= 186;
	      {1'd0, 8'd251}: s2wr2 <= 187;
	      {1'd0, 8'd252}: s2wr2 <= 188;
	      {1'd0, 8'd253}: s2wr2 <= 189;
	      {1'd0, 8'd254}: s2wr2 <= 190;
	      {1'd0, 8'd255}: s2wr2 <= 191;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr2 is "distributed"
   always @(posedge clk) begin
      case({tm28_dd, writeCycle})
	      {1'd0, 8'd0}: s2wr3 <= 0;
	      {1'd0, 8'd1}: s2wr3 <= 1;
	      {1'd0, 8'd2}: s2wr3 <= 2;
	      {1'd0, 8'd3}: s2wr3 <= 3;
	      {1'd0, 8'd4}: s2wr3 <= 4;
	      {1'd0, 8'd5}: s2wr3 <= 5;
	      {1'd0, 8'd6}: s2wr3 <= 6;
	      {1'd0, 8'd7}: s2wr3 <= 7;
	      {1'd0, 8'd8}: s2wr3 <= 8;
	      {1'd0, 8'd9}: s2wr3 <= 9;
	      {1'd0, 8'd10}: s2wr3 <= 10;
	      {1'd0, 8'd11}: s2wr3 <= 11;
	      {1'd0, 8'd12}: s2wr3 <= 12;
	      {1'd0, 8'd13}: s2wr3 <= 13;
	      {1'd0, 8'd14}: s2wr3 <= 14;
	      {1'd0, 8'd15}: s2wr3 <= 15;
	      {1'd0, 8'd16}: s2wr3 <= 16;
	      {1'd0, 8'd17}: s2wr3 <= 17;
	      {1'd0, 8'd18}: s2wr3 <= 18;
	      {1'd0, 8'd19}: s2wr3 <= 19;
	      {1'd0, 8'd20}: s2wr3 <= 20;
	      {1'd0, 8'd21}: s2wr3 <= 21;
	      {1'd0, 8'd22}: s2wr3 <= 22;
	      {1'd0, 8'd23}: s2wr3 <= 23;
	      {1'd0, 8'd24}: s2wr3 <= 24;
	      {1'd0, 8'd25}: s2wr3 <= 25;
	      {1'd0, 8'd26}: s2wr3 <= 26;
	      {1'd0, 8'd27}: s2wr3 <= 27;
	      {1'd0, 8'd28}: s2wr3 <= 28;
	      {1'd0, 8'd29}: s2wr3 <= 29;
	      {1'd0, 8'd30}: s2wr3 <= 30;
	      {1'd0, 8'd31}: s2wr3 <= 31;
	      {1'd0, 8'd32}: s2wr3 <= 32;
	      {1'd0, 8'd33}: s2wr3 <= 33;
	      {1'd0, 8'd34}: s2wr3 <= 34;
	      {1'd0, 8'd35}: s2wr3 <= 35;
	      {1'd0, 8'd36}: s2wr3 <= 36;
	      {1'd0, 8'd37}: s2wr3 <= 37;
	      {1'd0, 8'd38}: s2wr3 <= 38;
	      {1'd0, 8'd39}: s2wr3 <= 39;
	      {1'd0, 8'd40}: s2wr3 <= 40;
	      {1'd0, 8'd41}: s2wr3 <= 41;
	      {1'd0, 8'd42}: s2wr3 <= 42;
	      {1'd0, 8'd43}: s2wr3 <= 43;
	      {1'd0, 8'd44}: s2wr3 <= 44;
	      {1'd0, 8'd45}: s2wr3 <= 45;
	      {1'd0, 8'd46}: s2wr3 <= 46;
	      {1'd0, 8'd47}: s2wr3 <= 47;
	      {1'd0, 8'd48}: s2wr3 <= 48;
	      {1'd0, 8'd49}: s2wr3 <= 49;
	      {1'd0, 8'd50}: s2wr3 <= 50;
	      {1'd0, 8'd51}: s2wr3 <= 51;
	      {1'd0, 8'd52}: s2wr3 <= 52;
	      {1'd0, 8'd53}: s2wr3 <= 53;
	      {1'd0, 8'd54}: s2wr3 <= 54;
	      {1'd0, 8'd55}: s2wr3 <= 55;
	      {1'd0, 8'd56}: s2wr3 <= 56;
	      {1'd0, 8'd57}: s2wr3 <= 57;
	      {1'd0, 8'd58}: s2wr3 <= 58;
	      {1'd0, 8'd59}: s2wr3 <= 59;
	      {1'd0, 8'd60}: s2wr3 <= 60;
	      {1'd0, 8'd61}: s2wr3 <= 61;
	      {1'd0, 8'd62}: s2wr3 <= 62;
	      {1'd0, 8'd63}: s2wr3 <= 63;
	      {1'd0, 8'd64}: s2wr3 <= 64;
	      {1'd0, 8'd65}: s2wr3 <= 65;
	      {1'd0, 8'd66}: s2wr3 <= 66;
	      {1'd0, 8'd67}: s2wr3 <= 67;
	      {1'd0, 8'd68}: s2wr3 <= 68;
	      {1'd0, 8'd69}: s2wr3 <= 69;
	      {1'd0, 8'd70}: s2wr3 <= 70;
	      {1'd0, 8'd71}: s2wr3 <= 71;
	      {1'd0, 8'd72}: s2wr3 <= 72;
	      {1'd0, 8'd73}: s2wr3 <= 73;
	      {1'd0, 8'd74}: s2wr3 <= 74;
	      {1'd0, 8'd75}: s2wr3 <= 75;
	      {1'd0, 8'd76}: s2wr3 <= 76;
	      {1'd0, 8'd77}: s2wr3 <= 77;
	      {1'd0, 8'd78}: s2wr3 <= 78;
	      {1'd0, 8'd79}: s2wr3 <= 79;
	      {1'd0, 8'd80}: s2wr3 <= 80;
	      {1'd0, 8'd81}: s2wr3 <= 81;
	      {1'd0, 8'd82}: s2wr3 <= 82;
	      {1'd0, 8'd83}: s2wr3 <= 83;
	      {1'd0, 8'd84}: s2wr3 <= 84;
	      {1'd0, 8'd85}: s2wr3 <= 85;
	      {1'd0, 8'd86}: s2wr3 <= 86;
	      {1'd0, 8'd87}: s2wr3 <= 87;
	      {1'd0, 8'd88}: s2wr3 <= 88;
	      {1'd0, 8'd89}: s2wr3 <= 89;
	      {1'd0, 8'd90}: s2wr3 <= 90;
	      {1'd0, 8'd91}: s2wr3 <= 91;
	      {1'd0, 8'd92}: s2wr3 <= 92;
	      {1'd0, 8'd93}: s2wr3 <= 93;
	      {1'd0, 8'd94}: s2wr3 <= 94;
	      {1'd0, 8'd95}: s2wr3 <= 95;
	      {1'd0, 8'd96}: s2wr3 <= 96;
	      {1'd0, 8'd97}: s2wr3 <= 97;
	      {1'd0, 8'd98}: s2wr3 <= 98;
	      {1'd0, 8'd99}: s2wr3 <= 99;
	      {1'd0, 8'd100}: s2wr3 <= 100;
	      {1'd0, 8'd101}: s2wr3 <= 101;
	      {1'd0, 8'd102}: s2wr3 <= 102;
	      {1'd0, 8'd103}: s2wr3 <= 103;
	      {1'd0, 8'd104}: s2wr3 <= 104;
	      {1'd0, 8'd105}: s2wr3 <= 105;
	      {1'd0, 8'd106}: s2wr3 <= 106;
	      {1'd0, 8'd107}: s2wr3 <= 107;
	      {1'd0, 8'd108}: s2wr3 <= 108;
	      {1'd0, 8'd109}: s2wr3 <= 109;
	      {1'd0, 8'd110}: s2wr3 <= 110;
	      {1'd0, 8'd111}: s2wr3 <= 111;
	      {1'd0, 8'd112}: s2wr3 <= 112;
	      {1'd0, 8'd113}: s2wr3 <= 113;
	      {1'd0, 8'd114}: s2wr3 <= 114;
	      {1'd0, 8'd115}: s2wr3 <= 115;
	      {1'd0, 8'd116}: s2wr3 <= 116;
	      {1'd0, 8'd117}: s2wr3 <= 117;
	      {1'd0, 8'd118}: s2wr3 <= 118;
	      {1'd0, 8'd119}: s2wr3 <= 119;
	      {1'd0, 8'd120}: s2wr3 <= 120;
	      {1'd0, 8'd121}: s2wr3 <= 121;
	      {1'd0, 8'd122}: s2wr3 <= 122;
	      {1'd0, 8'd123}: s2wr3 <= 123;
	      {1'd0, 8'd124}: s2wr3 <= 124;
	      {1'd0, 8'd125}: s2wr3 <= 125;
	      {1'd0, 8'd126}: s2wr3 <= 126;
	      {1'd0, 8'd127}: s2wr3 <= 127;
	      {1'd0, 8'd128}: s2wr3 <= 128;
	      {1'd0, 8'd129}: s2wr3 <= 129;
	      {1'd0, 8'd130}: s2wr3 <= 130;
	      {1'd0, 8'd131}: s2wr3 <= 131;
	      {1'd0, 8'd132}: s2wr3 <= 132;
	      {1'd0, 8'd133}: s2wr3 <= 133;
	      {1'd0, 8'd134}: s2wr3 <= 134;
	      {1'd0, 8'd135}: s2wr3 <= 135;
	      {1'd0, 8'd136}: s2wr3 <= 136;
	      {1'd0, 8'd137}: s2wr3 <= 137;
	      {1'd0, 8'd138}: s2wr3 <= 138;
	      {1'd0, 8'd139}: s2wr3 <= 139;
	      {1'd0, 8'd140}: s2wr3 <= 140;
	      {1'd0, 8'd141}: s2wr3 <= 141;
	      {1'd0, 8'd142}: s2wr3 <= 142;
	      {1'd0, 8'd143}: s2wr3 <= 143;
	      {1'd0, 8'd144}: s2wr3 <= 144;
	      {1'd0, 8'd145}: s2wr3 <= 145;
	      {1'd0, 8'd146}: s2wr3 <= 146;
	      {1'd0, 8'd147}: s2wr3 <= 147;
	      {1'd0, 8'd148}: s2wr3 <= 148;
	      {1'd0, 8'd149}: s2wr3 <= 149;
	      {1'd0, 8'd150}: s2wr3 <= 150;
	      {1'd0, 8'd151}: s2wr3 <= 151;
	      {1'd0, 8'd152}: s2wr3 <= 152;
	      {1'd0, 8'd153}: s2wr3 <= 153;
	      {1'd0, 8'd154}: s2wr3 <= 154;
	      {1'd0, 8'd155}: s2wr3 <= 155;
	      {1'd0, 8'd156}: s2wr3 <= 156;
	      {1'd0, 8'd157}: s2wr3 <= 157;
	      {1'd0, 8'd158}: s2wr3 <= 158;
	      {1'd0, 8'd159}: s2wr3 <= 159;
	      {1'd0, 8'd160}: s2wr3 <= 160;
	      {1'd0, 8'd161}: s2wr3 <= 161;
	      {1'd0, 8'd162}: s2wr3 <= 162;
	      {1'd0, 8'd163}: s2wr3 <= 163;
	      {1'd0, 8'd164}: s2wr3 <= 164;
	      {1'd0, 8'd165}: s2wr3 <= 165;
	      {1'd0, 8'd166}: s2wr3 <= 166;
	      {1'd0, 8'd167}: s2wr3 <= 167;
	      {1'd0, 8'd168}: s2wr3 <= 168;
	      {1'd0, 8'd169}: s2wr3 <= 169;
	      {1'd0, 8'd170}: s2wr3 <= 170;
	      {1'd0, 8'd171}: s2wr3 <= 171;
	      {1'd0, 8'd172}: s2wr3 <= 172;
	      {1'd0, 8'd173}: s2wr3 <= 173;
	      {1'd0, 8'd174}: s2wr3 <= 174;
	      {1'd0, 8'd175}: s2wr3 <= 175;
	      {1'd0, 8'd176}: s2wr3 <= 176;
	      {1'd0, 8'd177}: s2wr3 <= 177;
	      {1'd0, 8'd178}: s2wr3 <= 178;
	      {1'd0, 8'd179}: s2wr3 <= 179;
	      {1'd0, 8'd180}: s2wr3 <= 180;
	      {1'd0, 8'd181}: s2wr3 <= 181;
	      {1'd0, 8'd182}: s2wr3 <= 182;
	      {1'd0, 8'd183}: s2wr3 <= 183;
	      {1'd0, 8'd184}: s2wr3 <= 184;
	      {1'd0, 8'd185}: s2wr3 <= 185;
	      {1'd0, 8'd186}: s2wr3 <= 186;
	      {1'd0, 8'd187}: s2wr3 <= 187;
	      {1'd0, 8'd188}: s2wr3 <= 188;
	      {1'd0, 8'd189}: s2wr3 <= 189;
	      {1'd0, 8'd190}: s2wr3 <= 190;
	      {1'd0, 8'd191}: s2wr3 <= 191;
	      {1'd0, 8'd192}: s2wr3 <= 192;
	      {1'd0, 8'd193}: s2wr3 <= 193;
	      {1'd0, 8'd194}: s2wr3 <= 194;
	      {1'd0, 8'd195}: s2wr3 <= 195;
	      {1'd0, 8'd196}: s2wr3 <= 196;
	      {1'd0, 8'd197}: s2wr3 <= 197;
	      {1'd0, 8'd198}: s2wr3 <= 198;
	      {1'd0, 8'd199}: s2wr3 <= 199;
	      {1'd0, 8'd200}: s2wr3 <= 200;
	      {1'd0, 8'd201}: s2wr3 <= 201;
	      {1'd0, 8'd202}: s2wr3 <= 202;
	      {1'd0, 8'd203}: s2wr3 <= 203;
	      {1'd0, 8'd204}: s2wr3 <= 204;
	      {1'd0, 8'd205}: s2wr3 <= 205;
	      {1'd0, 8'd206}: s2wr3 <= 206;
	      {1'd0, 8'd207}: s2wr3 <= 207;
	      {1'd0, 8'd208}: s2wr3 <= 208;
	      {1'd0, 8'd209}: s2wr3 <= 209;
	      {1'd0, 8'd210}: s2wr3 <= 210;
	      {1'd0, 8'd211}: s2wr3 <= 211;
	      {1'd0, 8'd212}: s2wr3 <= 212;
	      {1'd0, 8'd213}: s2wr3 <= 213;
	      {1'd0, 8'd214}: s2wr3 <= 214;
	      {1'd0, 8'd215}: s2wr3 <= 215;
	      {1'd0, 8'd216}: s2wr3 <= 216;
	      {1'd0, 8'd217}: s2wr3 <= 217;
	      {1'd0, 8'd218}: s2wr3 <= 218;
	      {1'd0, 8'd219}: s2wr3 <= 219;
	      {1'd0, 8'd220}: s2wr3 <= 220;
	      {1'd0, 8'd221}: s2wr3 <= 221;
	      {1'd0, 8'd222}: s2wr3 <= 222;
	      {1'd0, 8'd223}: s2wr3 <= 223;
	      {1'd0, 8'd224}: s2wr3 <= 224;
	      {1'd0, 8'd225}: s2wr3 <= 225;
	      {1'd0, 8'd226}: s2wr3 <= 226;
	      {1'd0, 8'd227}: s2wr3 <= 227;
	      {1'd0, 8'd228}: s2wr3 <= 228;
	      {1'd0, 8'd229}: s2wr3 <= 229;
	      {1'd0, 8'd230}: s2wr3 <= 230;
	      {1'd0, 8'd231}: s2wr3 <= 231;
	      {1'd0, 8'd232}: s2wr3 <= 232;
	      {1'd0, 8'd233}: s2wr3 <= 233;
	      {1'd0, 8'd234}: s2wr3 <= 234;
	      {1'd0, 8'd235}: s2wr3 <= 235;
	      {1'd0, 8'd236}: s2wr3 <= 236;
	      {1'd0, 8'd237}: s2wr3 <= 237;
	      {1'd0, 8'd238}: s2wr3 <= 238;
	      {1'd0, 8'd239}: s2wr3 <= 239;
	      {1'd0, 8'd240}: s2wr3 <= 240;
	      {1'd0, 8'd241}: s2wr3 <= 241;
	      {1'd0, 8'd242}: s2wr3 <= 242;
	      {1'd0, 8'd243}: s2wr3 <= 243;
	      {1'd0, 8'd244}: s2wr3 <= 244;
	      {1'd0, 8'd245}: s2wr3 <= 245;
	      {1'd0, 8'd246}: s2wr3 <= 246;
	      {1'd0, 8'd247}: s2wr3 <= 247;
	      {1'd0, 8'd248}: s2wr3 <= 248;
	      {1'd0, 8'd249}: s2wr3 <= 249;
	      {1'd0, 8'd250}: s2wr3 <= 250;
	      {1'd0, 8'd251}: s2wr3 <= 251;
	      {1'd0, 8'd252}: s2wr3 <= 252;
	      {1'd0, 8'd253}: s2wr3 <= 253;
	      {1'd0, 8'd254}: s2wr3 <= 254;
	      {1'd0, 8'd255}: s2wr3 <= 255;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr3 is "distributed"
endmodule


// Latency: 8
// Gap: 256
module DirSum_25361(clk, reset, next, next_out,
      X0, Y0,
      X1, Y1,
      X2, Y2,
      X3, Y3,
      X4, Y4,
      X5, Y5,
      X6, Y6,
      X7, Y7);

   output next_out;
   input clk, reset, next;

   reg [7:0] i1;

   input [15:0] X0,
      X1,
      X2,
      X3,
      X4,
      X5,
      X6,
      X7;

   output [15:0] Y0,
      Y1,
      Y2,
      Y3,
      Y4,
      Y5,
      Y6,
      Y7;

   always @(posedge clk) begin
      if (reset == 1) begin
         i1 <= 0;
      end
      else begin
         if (next == 1)
            i1 <= 0;
         else if (i1 == 255)
            i1 <= 0;
         else
            i1 <= i1 + 1;
      end
   end

   codeBlock22975 codeBlockIsnt27475(.clk(clk), .reset(reset), .next_in(next), .next_out(next_out),
.i1_in(i1),
       .X0_in(X0), .Y0(Y0),
       .X1_in(X1), .Y1(Y1),
       .X2_in(X2), .Y2(Y2),
       .X3_in(X3), .Y3(Y3),
       .X4_in(X4), .Y4(Y4),
       .X5_in(X5), .Y5(Y5),
       .X6_in(X6), .Y6(Y6),
       .X7_in(X7), .Y7(Y7));

endmodule

module D4_23553(addr, out, clk);
   input clk;
   output [15:0] out;
   reg [15:0] out, out2, out3;
   input [7:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 16'h4000;
      1: out3 <= 16'h4000;
      2: out3 <= 16'h3fff;
      3: out3 <= 16'h3ffd;
      4: out3 <= 16'h3ffb;
      5: out3 <= 16'h3ff8;
      6: out3 <= 16'h3ff5;
      7: out3 <= 16'h3ff1;
      8: out3 <= 16'h3fec;
      9: out3 <= 16'h3fe7;
      10: out3 <= 16'h3fe1;
      11: out3 <= 16'h3fdb;
      12: out3 <= 16'h3fd4;
      13: out3 <= 16'h3fcc;
      14: out3 <= 16'h3fc4;
      15: out3 <= 16'h3fbb;
      16: out3 <= 16'h3fb1;
      17: out3 <= 16'h3fa7;
      18: out3 <= 16'h3f9c;
      19: out3 <= 16'h3f91;
      20: out3 <= 16'h3f85;
      21: out3 <= 16'h3f78;
      22: out3 <= 16'h3f6b;
      23: out3 <= 16'h3f5d;
      24: out3 <= 16'h3f4f;
      25: out3 <= 16'h3f40;
      26: out3 <= 16'h3f30;
      27: out3 <= 16'h3f20;
      28: out3 <= 16'h3f0f;
      29: out3 <= 16'h3efd;
      30: out3 <= 16'h3eeb;
      31: out3 <= 16'h3ed8;
      32: out3 <= 16'h3ec5;
      33: out3 <= 16'h3eb1;
      34: out3 <= 16'h3e9d;
      35: out3 <= 16'h3e88;
      36: out3 <= 16'h3e72;
      37: out3 <= 16'h3e5c;
      38: out3 <= 16'h3e45;
      39: out3 <= 16'h3e2d;
      40: out3 <= 16'h3e15;
      41: out3 <= 16'h3dfc;
      42: out3 <= 16'h3de3;
      43: out3 <= 16'h3dc9;
      44: out3 <= 16'h3daf;
      45: out3 <= 16'h3d93;
      46: out3 <= 16'h3d78;
      47: out3 <= 16'h3d5b;
      48: out3 <= 16'h3d3f;
      49: out3 <= 16'h3d21;
      50: out3 <= 16'h3d03;
      51: out3 <= 16'h3ce4;
      52: out3 <= 16'h3cc5;
      53: out3 <= 16'h3ca5;
      54: out3 <= 16'h3c85;
      55: out3 <= 16'h3c64;
      56: out3 <= 16'h3c42;
      57: out3 <= 16'h3c20;
      58: out3 <= 16'h3bfd;
      59: out3 <= 16'h3bda;
      60: out3 <= 16'h3bb6;
      61: out3 <= 16'h3b92;
      62: out3 <= 16'h3b6d;
      63: out3 <= 16'h3b47;
      64: out3 <= 16'h3b21;
      65: out3 <= 16'h3afa;
      66: out3 <= 16'h3ad3;
      67: out3 <= 16'h3aab;
      68: out3 <= 16'h3a82;
      69: out3 <= 16'h3a59;
      70: out3 <= 16'h3a30;
      71: out3 <= 16'h3a06;
      72: out3 <= 16'h39db;
      73: out3 <= 16'h39b0;
      74: out3 <= 16'h3984;
      75: out3 <= 16'h3958;
      76: out3 <= 16'h392b;
      77: out3 <= 16'h38fd;
      78: out3 <= 16'h38cf;
      79: out3 <= 16'h38a1;
      80: out3 <= 16'h3871;
      81: out3 <= 16'h3842;
      82: out3 <= 16'h3812;
      83: out3 <= 16'h37e1;
      84: out3 <= 16'h37b0;
      85: out3 <= 16'h377e;
      86: out3 <= 16'h374b;
      87: out3 <= 16'h3718;
      88: out3 <= 16'h36e5;
      89: out3 <= 16'h36b1;
      90: out3 <= 16'h367d;
      91: out3 <= 16'h3648;
      92: out3 <= 16'h3612;
      93: out3 <= 16'h35dc;
      94: out3 <= 16'h35a5;
      95: out3 <= 16'h356e;
      96: out3 <= 16'h3537;
      97: out3 <= 16'h34ff;
      98: out3 <= 16'h34c6;
      99: out3 <= 16'h348d;
      100: out3 <= 16'h3453;
      101: out3 <= 16'h3419;
      102: out3 <= 16'h33df;
      103: out3 <= 16'h33a3;
      104: out3 <= 16'h3368;
      105: out3 <= 16'h332c;
      106: out3 <= 16'h32ef;
      107: out3 <= 16'h32b2;
      108: out3 <= 16'h3274;
      109: out3 <= 16'h3236;
      110: out3 <= 16'h31f8;
      111: out3 <= 16'h31b9;
      112: out3 <= 16'h3179;
      113: out3 <= 16'h3139;
      114: out3 <= 16'h30f9;
      115: out3 <= 16'h30b8;
      116: out3 <= 16'h3076;
      117: out3 <= 16'h3034;
      118: out3 <= 16'h2ff2;
      119: out3 <= 16'h2faf;
      120: out3 <= 16'h2f6c;
      121: out3 <= 16'h2f28;
      122: out3 <= 16'h2ee4;
      123: out3 <= 16'h2e9f;
      124: out3 <= 16'h2e5a;
      125: out3 <= 16'h2e15;
      126: out3 <= 16'h2dcf;
      127: out3 <= 16'h2d88;
      128: out3 <= 16'h2d41;
      129: out3 <= 16'h2cfa;
      130: out3 <= 16'h2cb2;
      131: out3 <= 16'h2c6a;
      132: out3 <= 16'h2c21;
      133: out3 <= 16'h2bd8;
      134: out3 <= 16'h2b8f;
      135: out3 <= 16'h2b45;
      136: out3 <= 16'h2afb;
      137: out3 <= 16'h2ab0;
      138: out3 <= 16'h2a65;
      139: out3 <= 16'h2a1a;
      140: out3 <= 16'h29ce;
      141: out3 <= 16'h2981;
      142: out3 <= 16'h2935;
      143: out3 <= 16'h28e7;
      144: out3 <= 16'h289a;
      145: out3 <= 16'h284c;
      146: out3 <= 16'h27fe;
      147: out3 <= 16'h27af;
      148: out3 <= 16'h2760;
      149: out3 <= 16'h2711;
      150: out3 <= 16'h26c1;
      151: out3 <= 16'h2671;
      152: out3 <= 16'h2620;
      153: out3 <= 16'h25cf;
      154: out3 <= 16'h257e;
      155: out3 <= 16'h252c;
      156: out3 <= 16'h24da;
      157: out3 <= 16'h2488;
      158: out3 <= 16'h2435;
      159: out3 <= 16'h23e2;
      160: out3 <= 16'h238e;
      161: out3 <= 16'h233b;
      162: out3 <= 16'h22e7;
      163: out3 <= 16'h2292;
      164: out3 <= 16'h223d;
      165: out3 <= 16'h21e8;
      166: out3 <= 16'h2193;
      167: out3 <= 16'h213d;
      168: out3 <= 16'h20e7;
      169: out3 <= 16'h2091;
      170: out3 <= 16'h203a;
      171: out3 <= 16'h1fe3;
      172: out3 <= 16'h1f8c;
      173: out3 <= 16'h1f34;
      174: out3 <= 16'h1edc;
      175: out3 <= 16'h1e84;
      176: out3 <= 16'h1e2b;
      177: out3 <= 16'h1dd3;
      178: out3 <= 16'h1d79;
      179: out3 <= 16'h1d20;
      180: out3 <= 16'h1cc6;
      181: out3 <= 16'h1c6c;
      182: out3 <= 16'h1c12;
      183: out3 <= 16'h1bb8;
      184: out3 <= 16'h1b5d;
      185: out3 <= 16'h1b02;
      186: out3 <= 16'h1aa7;
      187: out3 <= 16'h1a4b;
      188: out3 <= 16'h19ef;
      189: out3 <= 16'h1993;
      190: out3 <= 16'h1937;
      191: out3 <= 16'h18db;
      192: out3 <= 16'h187e;
      193: out3 <= 16'h1821;
      194: out3 <= 16'h17c4;
      195: out3 <= 16'h1766;
      196: out3 <= 16'h1709;
      197: out3 <= 16'h16ab;
      198: out3 <= 16'h164c;
      199: out3 <= 16'h15ee;
      200: out3 <= 16'h1590;
      201: out3 <= 16'h1531;
      202: out3 <= 16'h14d2;
      203: out3 <= 16'h1473;
      204: out3 <= 16'h1413;
      205: out3 <= 16'h13b4;
      206: out3 <= 16'h1354;
      207: out3 <= 16'h12f4;
      208: out3 <= 16'h1294;
      209: out3 <= 16'h1234;
      210: out3 <= 16'h11d3;
      211: out3 <= 16'h1173;
      212: out3 <= 16'h1112;
      213: out3 <= 16'h10b1;
      214: out3 <= 16'h1050;
      215: out3 <= 16'hfee;
      216: out3 <= 16'hf8d;
      217: out3 <= 16'hf2b;
      218: out3 <= 16'heca;
      219: out3 <= 16'he68;
      220: out3 <= 16'he06;
      221: out3 <= 16'hda4;
      222: out3 <= 16'hd41;
      223: out3 <= 16'hcdf;
      224: out3 <= 16'hc7c;
      225: out3 <= 16'hc1a;
      226: out3 <= 16'hbb7;
      227: out3 <= 16'hb54;
      228: out3 <= 16'haf1;
      229: out3 <= 16'ha8e;
      230: out3 <= 16'ha2b;
      231: out3 <= 16'h9c7;
      232: out3 <= 16'h964;
      233: out3 <= 16'h901;
      234: out3 <= 16'h89d;
      235: out3 <= 16'h839;
      236: out3 <= 16'h7d6;
      237: out3 <= 16'h772;
      238: out3 <= 16'h70e;
      239: out3 <= 16'h6aa;
      240: out3 <= 16'h646;
      241: out3 <= 16'h5e2;
      242: out3 <= 16'h57e;
      243: out3 <= 16'h51a;
      244: out3 <= 16'h4b5;
      245: out3 <= 16'h451;
      246: out3 <= 16'h3ed;
      247: out3 <= 16'h388;
      248: out3 <= 16'h324;
      249: out3 <= 16'h2c0;
      250: out3 <= 16'h25b;
      251: out3 <= 16'h1f7;
      252: out3 <= 16'h192;
      253: out3 <= 16'h12e;
      254: out3 <= 16'hc9;
      255: out3 <= 16'h65;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



module D9_23811(addr, out, clk);
   input clk;
   output [15:0] out;
   reg [15:0] out, out2, out3;
   input [7:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 16'h0;
      1: out3 <= 16'hff37;
      2: out3 <= 16'hfe6e;
      3: out3 <= 16'hfda5;
      4: out3 <= 16'hfcdc;
      5: out3 <= 16'hfc13;
      6: out3 <= 16'hfb4b;
      7: out3 <= 16'hfa82;
      8: out3 <= 16'hf9ba;
      9: out3 <= 16'hf8f2;
      10: out3 <= 16'hf82a;
      11: out3 <= 16'hf763;
      12: out3 <= 16'hf69c;
      13: out3 <= 16'hf5d5;
      14: out3 <= 16'hf50f;
      15: out3 <= 16'hf449;
      16: out3 <= 16'hf384;
      17: out3 <= 16'hf2bf;
      18: out3 <= 16'hf1fa;
      19: out3 <= 16'hf136;
      20: out3 <= 16'hf073;
      21: out3 <= 16'hefb0;
      22: out3 <= 16'heeee;
      23: out3 <= 16'hee2d;
      24: out3 <= 16'hed6c;
      25: out3 <= 16'hecac;
      26: out3 <= 16'hebed;
      27: out3 <= 16'heb2e;
      28: out3 <= 16'hea70;
      29: out3 <= 16'he9b4;
      30: out3 <= 16'he8f7;
      31: out3 <= 16'he83c;
      32: out3 <= 16'he782;
      33: out3 <= 16'he6c9;
      34: out3 <= 16'he611;
      35: out3 <= 16'he559;
      36: out3 <= 16'he4a3;
      37: out3 <= 16'he3ee;
      38: out3 <= 16'he33a;
      39: out3 <= 16'he287;
      40: out3 <= 16'he1d5;
      41: out3 <= 16'he124;
      42: out3 <= 16'he074;
      43: out3 <= 16'hdfc6;
      44: out3 <= 16'hdf19;
      45: out3 <= 16'hde6d;
      46: out3 <= 16'hddc3;
      47: out3 <= 16'hdd19;
      48: out3 <= 16'hdc72;
      49: out3 <= 16'hdbcb;
      50: out3 <= 16'hdb26;
      51: out3 <= 16'hda82;
      52: out3 <= 16'hd9e0;
      53: out3 <= 16'hd93f;
      54: out3 <= 16'hd8a0;
      55: out3 <= 16'hd802;
      56: out3 <= 16'hd766;
      57: out3 <= 16'hd6cb;
      58: out3 <= 16'hd632;
      59: out3 <= 16'hd59b;
      60: out3 <= 16'hd505;
      61: out3 <= 16'hd471;
      62: out3 <= 16'hd3df;
      63: out3 <= 16'hd34e;
      64: out3 <= 16'hd2bf;
      65: out3 <= 16'hd231;
      66: out3 <= 16'hd1a6;
      67: out3 <= 16'hd11c;
      68: out3 <= 16'hd094;
      69: out3 <= 16'hd00e;
      70: out3 <= 16'hcf8a;
      71: out3 <= 16'hcf07;
      72: out3 <= 16'hce87;
      73: out3 <= 16'hce08;
      74: out3 <= 16'hcd8c;
      75: out3 <= 16'hcd11;
      76: out3 <= 16'hcc98;
      77: out3 <= 16'hcc21;
      78: out3 <= 16'hcbad;
      79: out3 <= 16'hcb3a;
      80: out3 <= 16'hcac9;
      81: out3 <= 16'hca5b;
      82: out3 <= 16'hc9ee;
      83: out3 <= 16'hc983;
      84: out3 <= 16'hc91b;
      85: out3 <= 16'hc8b5;
      86: out3 <= 16'hc850;
      87: out3 <= 16'hc7ee;
      88: out3 <= 16'hc78f;
      89: out3 <= 16'hc731;
      90: out3 <= 16'hc6d5;
      91: out3 <= 16'hc67c;
      92: out3 <= 16'hc625;
      93: out3 <= 16'hc5d0;
      94: out3 <= 16'hc57e;
      95: out3 <= 16'hc52d;
      96: out3 <= 16'hc4df;
      97: out3 <= 16'hc493;
      98: out3 <= 16'hc44a;
      99: out3 <= 16'hc403;
      100: out3 <= 16'hc3be;
      101: out3 <= 16'hc37b;
      102: out3 <= 16'hc33b;
      103: out3 <= 16'hc2fd;
      104: out3 <= 16'hc2c1;
      105: out3 <= 16'hc288;
      106: out3 <= 16'hc251;
      107: out3 <= 16'hc21d;
      108: out3 <= 16'hc1eb;
      109: out3 <= 16'hc1bb;
      110: out3 <= 16'hc18e;
      111: out3 <= 16'hc163;
      112: out3 <= 16'hc13b;
      113: out3 <= 16'hc115;
      114: out3 <= 16'hc0f1;
      115: out3 <= 16'hc0d0;
      116: out3 <= 16'hc0b1;
      117: out3 <= 16'hc095;
      118: out3 <= 16'hc07b;
      119: out3 <= 16'hc064;
      120: out3 <= 16'hc04f;
      121: out3 <= 16'hc03c;
      122: out3 <= 16'hc02c;
      123: out3 <= 16'hc01f;
      124: out3 <= 16'hc014;
      125: out3 <= 16'hc00b;
      126: out3 <= 16'hc005;
      127: out3 <= 16'hc001;
      128: out3 <= 16'hc000;
      129: out3 <= 16'hc001;
      130: out3 <= 16'hc005;
      131: out3 <= 16'hc00b;
      132: out3 <= 16'hc014;
      133: out3 <= 16'hc01f;
      134: out3 <= 16'hc02c;
      135: out3 <= 16'hc03c;
      136: out3 <= 16'hc04f;
      137: out3 <= 16'hc064;
      138: out3 <= 16'hc07b;
      139: out3 <= 16'hc095;
      140: out3 <= 16'hc0b1;
      141: out3 <= 16'hc0d0;
      142: out3 <= 16'hc0f1;
      143: out3 <= 16'hc115;
      144: out3 <= 16'hc13b;
      145: out3 <= 16'hc163;
      146: out3 <= 16'hc18e;
      147: out3 <= 16'hc1bb;
      148: out3 <= 16'hc1eb;
      149: out3 <= 16'hc21d;
      150: out3 <= 16'hc251;
      151: out3 <= 16'hc288;
      152: out3 <= 16'hc2c1;
      153: out3 <= 16'hc2fd;
      154: out3 <= 16'hc33b;
      155: out3 <= 16'hc37b;
      156: out3 <= 16'hc3be;
      157: out3 <= 16'hc403;
      158: out3 <= 16'hc44a;
      159: out3 <= 16'hc493;
      160: out3 <= 16'hc4df;
      161: out3 <= 16'hc52d;
      162: out3 <= 16'hc57e;
      163: out3 <= 16'hc5d0;
      164: out3 <= 16'hc625;
      165: out3 <= 16'hc67c;
      166: out3 <= 16'hc6d5;
      167: out3 <= 16'hc731;
      168: out3 <= 16'hc78f;
      169: out3 <= 16'hc7ee;
      170: out3 <= 16'hc850;
      171: out3 <= 16'hc8b5;
      172: out3 <= 16'hc91b;
      173: out3 <= 16'hc983;
      174: out3 <= 16'hc9ee;
      175: out3 <= 16'hca5b;
      176: out3 <= 16'hcac9;
      177: out3 <= 16'hcb3a;
      178: out3 <= 16'hcbad;
      179: out3 <= 16'hcc21;
      180: out3 <= 16'hcc98;
      181: out3 <= 16'hcd11;
      182: out3 <= 16'hcd8c;
      183: out3 <= 16'hce08;
      184: out3 <= 16'hce87;
      185: out3 <= 16'hcf07;
      186: out3 <= 16'hcf8a;
      187: out3 <= 16'hd00e;
      188: out3 <= 16'hd094;
      189: out3 <= 16'hd11c;
      190: out3 <= 16'hd1a6;
      191: out3 <= 16'hd231;
      192: out3 <= 16'hd2bf;
      193: out3 <= 16'hd34e;
      194: out3 <= 16'hd3df;
      195: out3 <= 16'hd471;
      196: out3 <= 16'hd505;
      197: out3 <= 16'hd59b;
      198: out3 <= 16'hd632;
      199: out3 <= 16'hd6cb;
      200: out3 <= 16'hd766;
      201: out3 <= 16'hd802;
      202: out3 <= 16'hd8a0;
      203: out3 <= 16'hd93f;
      204: out3 <= 16'hd9e0;
      205: out3 <= 16'hda82;
      206: out3 <= 16'hdb26;
      207: out3 <= 16'hdbcb;
      208: out3 <= 16'hdc72;
      209: out3 <= 16'hdd19;
      210: out3 <= 16'hddc3;
      211: out3 <= 16'hde6d;
      212: out3 <= 16'hdf19;
      213: out3 <= 16'hdfc6;
      214: out3 <= 16'he074;
      215: out3 <= 16'he124;
      216: out3 <= 16'he1d5;
      217: out3 <= 16'he287;
      218: out3 <= 16'he33a;
      219: out3 <= 16'he3ee;
      220: out3 <= 16'he4a3;
      221: out3 <= 16'he559;
      222: out3 <= 16'he611;
      223: out3 <= 16'he6c9;
      224: out3 <= 16'he782;
      225: out3 <= 16'he83c;
      226: out3 <= 16'he8f7;
      227: out3 <= 16'he9b4;
      228: out3 <= 16'hea70;
      229: out3 <= 16'heb2e;
      230: out3 <= 16'hebed;
      231: out3 <= 16'hecac;
      232: out3 <= 16'hed6c;
      233: out3 <= 16'hee2d;
      234: out3 <= 16'heeee;
      235: out3 <= 16'hefb0;
      236: out3 <= 16'hf073;
      237: out3 <= 16'hf136;
      238: out3 <= 16'hf1fa;
      239: out3 <= 16'hf2bf;
      240: out3 <= 16'hf384;
      241: out3 <= 16'hf449;
      242: out3 <= 16'hf50f;
      243: out3 <= 16'hf5d5;
      244: out3 <= 16'hf69c;
      245: out3 <= 16'hf763;
      246: out3 <= 16'hf82a;
      247: out3 <= 16'hf8f2;
      248: out3 <= 16'hf9ba;
      249: out3 <= 16'hfa82;
      250: out3 <= 16'hfb4b;
      251: out3 <= 16'hfc13;
      252: out3 <= 16'hfcdc;
      253: out3 <= 16'hfda5;
      254: out3 <= 16'hfe6e;
      255: out3 <= 16'hff37;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



module D5_24069(addr, out, clk);
   input clk;
   output [15:0] out;
   reg [15:0] out, out2, out3;
   input [7:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 16'h4000;
      1: out3 <= 16'h3fff;
      2: out3 <= 16'h3ffb;
      3: out3 <= 16'h3ff5;
      4: out3 <= 16'h3fec;
      5: out3 <= 16'h3fe1;
      6: out3 <= 16'h3fd4;
      7: out3 <= 16'h3fc4;
      8: out3 <= 16'h3fb1;
      9: out3 <= 16'h3f9c;
      10: out3 <= 16'h3f85;
      11: out3 <= 16'h3f6b;
      12: out3 <= 16'h3f4f;
      13: out3 <= 16'h3f30;
      14: out3 <= 16'h3f0f;
      15: out3 <= 16'h3eeb;
      16: out3 <= 16'h3ec5;
      17: out3 <= 16'h3e9d;
      18: out3 <= 16'h3e72;
      19: out3 <= 16'h3e45;
      20: out3 <= 16'h3e15;
      21: out3 <= 16'h3de3;
      22: out3 <= 16'h3daf;
      23: out3 <= 16'h3d78;
      24: out3 <= 16'h3d3f;
      25: out3 <= 16'h3d03;
      26: out3 <= 16'h3cc5;
      27: out3 <= 16'h3c85;
      28: out3 <= 16'h3c42;
      29: out3 <= 16'h3bfd;
      30: out3 <= 16'h3bb6;
      31: out3 <= 16'h3b6d;
      32: out3 <= 16'h3b21;
      33: out3 <= 16'h3ad3;
      34: out3 <= 16'h3a82;
      35: out3 <= 16'h3a30;
      36: out3 <= 16'h39db;
      37: out3 <= 16'h3984;
      38: out3 <= 16'h392b;
      39: out3 <= 16'h38cf;
      40: out3 <= 16'h3871;
      41: out3 <= 16'h3812;
      42: out3 <= 16'h37b0;
      43: out3 <= 16'h374b;
      44: out3 <= 16'h36e5;
      45: out3 <= 16'h367d;
      46: out3 <= 16'h3612;
      47: out3 <= 16'h35a5;
      48: out3 <= 16'h3537;
      49: out3 <= 16'h34c6;
      50: out3 <= 16'h3453;
      51: out3 <= 16'h33df;
      52: out3 <= 16'h3368;
      53: out3 <= 16'h32ef;
      54: out3 <= 16'h3274;
      55: out3 <= 16'h31f8;
      56: out3 <= 16'h3179;
      57: out3 <= 16'h30f9;
      58: out3 <= 16'h3076;
      59: out3 <= 16'h2ff2;
      60: out3 <= 16'h2f6c;
      61: out3 <= 16'h2ee4;
      62: out3 <= 16'h2e5a;
      63: out3 <= 16'h2dcf;
      64: out3 <= 16'h2d41;
      65: out3 <= 16'h2cb2;
      66: out3 <= 16'h2c21;
      67: out3 <= 16'h2b8f;
      68: out3 <= 16'h2afb;
      69: out3 <= 16'h2a65;
      70: out3 <= 16'h29ce;
      71: out3 <= 16'h2935;
      72: out3 <= 16'h289a;
      73: out3 <= 16'h27fe;
      74: out3 <= 16'h2760;
      75: out3 <= 16'h26c1;
      76: out3 <= 16'h2620;
      77: out3 <= 16'h257e;
      78: out3 <= 16'h24da;
      79: out3 <= 16'h2435;
      80: out3 <= 16'h238e;
      81: out3 <= 16'h22e7;
      82: out3 <= 16'h223d;
      83: out3 <= 16'h2193;
      84: out3 <= 16'h20e7;
      85: out3 <= 16'h203a;
      86: out3 <= 16'h1f8c;
      87: out3 <= 16'h1edc;
      88: out3 <= 16'h1e2b;
      89: out3 <= 16'h1d79;
      90: out3 <= 16'h1cc6;
      91: out3 <= 16'h1c12;
      92: out3 <= 16'h1b5d;
      93: out3 <= 16'h1aa7;
      94: out3 <= 16'h19ef;
      95: out3 <= 16'h1937;
      96: out3 <= 16'h187e;
      97: out3 <= 16'h17c4;
      98: out3 <= 16'h1709;
      99: out3 <= 16'h164c;
      100: out3 <= 16'h1590;
      101: out3 <= 16'h14d2;
      102: out3 <= 16'h1413;
      103: out3 <= 16'h1354;
      104: out3 <= 16'h1294;
      105: out3 <= 16'h11d3;
      106: out3 <= 16'h1112;
      107: out3 <= 16'h1050;
      108: out3 <= 16'hf8d;
      109: out3 <= 16'heca;
      110: out3 <= 16'he06;
      111: out3 <= 16'hd41;
      112: out3 <= 16'hc7c;
      113: out3 <= 16'hbb7;
      114: out3 <= 16'haf1;
      115: out3 <= 16'ha2b;
      116: out3 <= 16'h964;
      117: out3 <= 16'h89d;
      118: out3 <= 16'h7d6;
      119: out3 <= 16'h70e;
      120: out3 <= 16'h646;
      121: out3 <= 16'h57e;
      122: out3 <= 16'h4b5;
      123: out3 <= 16'h3ed;
      124: out3 <= 16'h324;
      125: out3 <= 16'h25b;
      126: out3 <= 16'h192;
      127: out3 <= 16'hc9;
      128: out3 <= 16'h0;
      129: out3 <= 16'hff37;
      130: out3 <= 16'hfe6e;
      131: out3 <= 16'hfda5;
      132: out3 <= 16'hfcdc;
      133: out3 <= 16'hfc13;
      134: out3 <= 16'hfb4b;
      135: out3 <= 16'hfa82;
      136: out3 <= 16'hf9ba;
      137: out3 <= 16'hf8f2;
      138: out3 <= 16'hf82a;
      139: out3 <= 16'hf763;
      140: out3 <= 16'hf69c;
      141: out3 <= 16'hf5d5;
      142: out3 <= 16'hf50f;
      143: out3 <= 16'hf449;
      144: out3 <= 16'hf384;
      145: out3 <= 16'hf2bf;
      146: out3 <= 16'hf1fa;
      147: out3 <= 16'hf136;
      148: out3 <= 16'hf073;
      149: out3 <= 16'hefb0;
      150: out3 <= 16'heeee;
      151: out3 <= 16'hee2d;
      152: out3 <= 16'hed6c;
      153: out3 <= 16'hecac;
      154: out3 <= 16'hebed;
      155: out3 <= 16'heb2e;
      156: out3 <= 16'hea70;
      157: out3 <= 16'he9b4;
      158: out3 <= 16'he8f7;
      159: out3 <= 16'he83c;
      160: out3 <= 16'he782;
      161: out3 <= 16'he6c9;
      162: out3 <= 16'he611;
      163: out3 <= 16'he559;
      164: out3 <= 16'he4a3;
      165: out3 <= 16'he3ee;
      166: out3 <= 16'he33a;
      167: out3 <= 16'he287;
      168: out3 <= 16'he1d5;
      169: out3 <= 16'he124;
      170: out3 <= 16'he074;
      171: out3 <= 16'hdfc6;
      172: out3 <= 16'hdf19;
      173: out3 <= 16'hde6d;
      174: out3 <= 16'hddc3;
      175: out3 <= 16'hdd19;
      176: out3 <= 16'hdc72;
      177: out3 <= 16'hdbcb;
      178: out3 <= 16'hdb26;
      179: out3 <= 16'hda82;
      180: out3 <= 16'hd9e0;
      181: out3 <= 16'hd93f;
      182: out3 <= 16'hd8a0;
      183: out3 <= 16'hd802;
      184: out3 <= 16'hd766;
      185: out3 <= 16'hd6cb;
      186: out3 <= 16'hd632;
      187: out3 <= 16'hd59b;
      188: out3 <= 16'hd505;
      189: out3 <= 16'hd471;
      190: out3 <= 16'hd3df;
      191: out3 <= 16'hd34e;
      192: out3 <= 16'hd2bf;
      193: out3 <= 16'hd231;
      194: out3 <= 16'hd1a6;
      195: out3 <= 16'hd11c;
      196: out3 <= 16'hd094;
      197: out3 <= 16'hd00e;
      198: out3 <= 16'hcf8a;
      199: out3 <= 16'hcf07;
      200: out3 <= 16'hce87;
      201: out3 <= 16'hce08;
      202: out3 <= 16'hcd8c;
      203: out3 <= 16'hcd11;
      204: out3 <= 16'hcc98;
      205: out3 <= 16'hcc21;
      206: out3 <= 16'hcbad;
      207: out3 <= 16'hcb3a;
      208: out3 <= 16'hcac9;
      209: out3 <= 16'hca5b;
      210: out3 <= 16'hc9ee;
      211: out3 <= 16'hc983;
      212: out3 <= 16'hc91b;
      213: out3 <= 16'hc8b5;
      214: out3 <= 16'hc850;
      215: out3 <= 16'hc7ee;
      216: out3 <= 16'hc78f;
      217: out3 <= 16'hc731;
      218: out3 <= 16'hc6d5;
      219: out3 <= 16'hc67c;
      220: out3 <= 16'hc625;
      221: out3 <= 16'hc5d0;
      222: out3 <= 16'hc57e;
      223: out3 <= 16'hc52d;
      224: out3 <= 16'hc4df;
      225: out3 <= 16'hc493;
      226: out3 <= 16'hc44a;
      227: out3 <= 16'hc403;
      228: out3 <= 16'hc3be;
      229: out3 <= 16'hc37b;
      230: out3 <= 16'hc33b;
      231: out3 <= 16'hc2fd;
      232: out3 <= 16'hc2c1;
      233: out3 <= 16'hc288;
      234: out3 <= 16'hc251;
      235: out3 <= 16'hc21d;
      236: out3 <= 16'hc1eb;
      237: out3 <= 16'hc1bb;
      238: out3 <= 16'hc18e;
      239: out3 <= 16'hc163;
      240: out3 <= 16'hc13b;
      241: out3 <= 16'hc115;
      242: out3 <= 16'hc0f1;
      243: out3 <= 16'hc0d0;
      244: out3 <= 16'hc0b1;
      245: out3 <= 16'hc095;
      246: out3 <= 16'hc07b;
      247: out3 <= 16'hc064;
      248: out3 <= 16'hc04f;
      249: out3 <= 16'hc03c;
      250: out3 <= 16'hc02c;
      251: out3 <= 16'hc01f;
      252: out3 <= 16'hc014;
      253: out3 <= 16'hc00b;
      254: out3 <= 16'hc005;
      255: out3 <= 16'hc001;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



module D8_24327(addr, out, clk);
   input clk;
   output [15:0] out;
   reg [15:0] out, out2, out3;
   input [7:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 16'h0;
      1: out3 <= 16'hff9b;
      2: out3 <= 16'hff37;
      3: out3 <= 16'hfed2;
      4: out3 <= 16'hfe6e;
      5: out3 <= 16'hfe09;
      6: out3 <= 16'hfda5;
      7: out3 <= 16'hfd40;
      8: out3 <= 16'hfcdc;
      9: out3 <= 16'hfc78;
      10: out3 <= 16'hfc13;
      11: out3 <= 16'hfbaf;
      12: out3 <= 16'hfb4b;
      13: out3 <= 16'hfae6;
      14: out3 <= 16'hfa82;
      15: out3 <= 16'hfa1e;
      16: out3 <= 16'hf9ba;
      17: out3 <= 16'hf956;
      18: out3 <= 16'hf8f2;
      19: out3 <= 16'hf88e;
      20: out3 <= 16'hf82a;
      21: out3 <= 16'hf7c7;
      22: out3 <= 16'hf763;
      23: out3 <= 16'hf6ff;
      24: out3 <= 16'hf69c;
      25: out3 <= 16'hf639;
      26: out3 <= 16'hf5d5;
      27: out3 <= 16'hf572;
      28: out3 <= 16'hf50f;
      29: out3 <= 16'hf4ac;
      30: out3 <= 16'hf449;
      31: out3 <= 16'hf3e6;
      32: out3 <= 16'hf384;
      33: out3 <= 16'hf321;
      34: out3 <= 16'hf2bf;
      35: out3 <= 16'hf25c;
      36: out3 <= 16'hf1fa;
      37: out3 <= 16'hf198;
      38: out3 <= 16'hf136;
      39: out3 <= 16'hf0d5;
      40: out3 <= 16'hf073;
      41: out3 <= 16'hf012;
      42: out3 <= 16'hefb0;
      43: out3 <= 16'hef4f;
      44: out3 <= 16'heeee;
      45: out3 <= 16'hee8d;
      46: out3 <= 16'hee2d;
      47: out3 <= 16'hedcc;
      48: out3 <= 16'hed6c;
      49: out3 <= 16'hed0c;
      50: out3 <= 16'hecac;
      51: out3 <= 16'hec4c;
      52: out3 <= 16'hebed;
      53: out3 <= 16'heb8d;
      54: out3 <= 16'heb2e;
      55: out3 <= 16'heacf;
      56: out3 <= 16'hea70;
      57: out3 <= 16'hea12;
      58: out3 <= 16'he9b4;
      59: out3 <= 16'he955;
      60: out3 <= 16'he8f7;
      61: out3 <= 16'he89a;
      62: out3 <= 16'he83c;
      63: out3 <= 16'he7df;
      64: out3 <= 16'he782;
      65: out3 <= 16'he725;
      66: out3 <= 16'he6c9;
      67: out3 <= 16'he66d;
      68: out3 <= 16'he611;
      69: out3 <= 16'he5b5;
      70: out3 <= 16'he559;
      71: out3 <= 16'he4fe;
      72: out3 <= 16'he4a3;
      73: out3 <= 16'he448;
      74: out3 <= 16'he3ee;
      75: out3 <= 16'he394;
      76: out3 <= 16'he33a;
      77: out3 <= 16'he2e0;
      78: out3 <= 16'he287;
      79: out3 <= 16'he22d;
      80: out3 <= 16'he1d5;
      81: out3 <= 16'he17c;
      82: out3 <= 16'he124;
      83: out3 <= 16'he0cc;
      84: out3 <= 16'he074;
      85: out3 <= 16'he01d;
      86: out3 <= 16'hdfc6;
      87: out3 <= 16'hdf6f;
      88: out3 <= 16'hdf19;
      89: out3 <= 16'hdec3;
      90: out3 <= 16'hde6d;
      91: out3 <= 16'hde18;
      92: out3 <= 16'hddc3;
      93: out3 <= 16'hdd6e;
      94: out3 <= 16'hdd19;
      95: out3 <= 16'hdcc5;
      96: out3 <= 16'hdc72;
      97: out3 <= 16'hdc1e;
      98: out3 <= 16'hdbcb;
      99: out3 <= 16'hdb78;
      100: out3 <= 16'hdb26;
      101: out3 <= 16'hdad4;
      102: out3 <= 16'hda82;
      103: out3 <= 16'hda31;
      104: out3 <= 16'hd9e0;
      105: out3 <= 16'hd98f;
      106: out3 <= 16'hd93f;
      107: out3 <= 16'hd8ef;
      108: out3 <= 16'hd8a0;
      109: out3 <= 16'hd851;
      110: out3 <= 16'hd802;
      111: out3 <= 16'hd7b4;
      112: out3 <= 16'hd766;
      113: out3 <= 16'hd719;
      114: out3 <= 16'hd6cb;
      115: out3 <= 16'hd67f;
      116: out3 <= 16'hd632;
      117: out3 <= 16'hd5e6;
      118: out3 <= 16'hd59b;
      119: out3 <= 16'hd550;
      120: out3 <= 16'hd505;
      121: out3 <= 16'hd4bb;
      122: out3 <= 16'hd471;
      123: out3 <= 16'hd428;
      124: out3 <= 16'hd3df;
      125: out3 <= 16'hd396;
      126: out3 <= 16'hd34e;
      127: out3 <= 16'hd306;
      128: out3 <= 16'hd2bf;
      129: out3 <= 16'hd278;
      130: out3 <= 16'hd231;
      131: out3 <= 16'hd1eb;
      132: out3 <= 16'hd1a6;
      133: out3 <= 16'hd161;
      134: out3 <= 16'hd11c;
      135: out3 <= 16'hd0d8;
      136: out3 <= 16'hd094;
      137: out3 <= 16'hd051;
      138: out3 <= 16'hd00e;
      139: out3 <= 16'hcfcc;
      140: out3 <= 16'hcf8a;
      141: out3 <= 16'hcf48;
      142: out3 <= 16'hcf07;
      143: out3 <= 16'hcec7;
      144: out3 <= 16'hce87;
      145: out3 <= 16'hce47;
      146: out3 <= 16'hce08;
      147: out3 <= 16'hcdca;
      148: out3 <= 16'hcd8c;
      149: out3 <= 16'hcd4e;
      150: out3 <= 16'hcd11;
      151: out3 <= 16'hccd4;
      152: out3 <= 16'hcc98;
      153: out3 <= 16'hcc5d;
      154: out3 <= 16'hcc21;
      155: out3 <= 16'hcbe7;
      156: out3 <= 16'hcbad;
      157: out3 <= 16'hcb73;
      158: out3 <= 16'hcb3a;
      159: out3 <= 16'hcb01;
      160: out3 <= 16'hcac9;
      161: out3 <= 16'hca92;
      162: out3 <= 16'hca5b;
      163: out3 <= 16'hca24;
      164: out3 <= 16'hc9ee;
      165: out3 <= 16'hc9b8;
      166: out3 <= 16'hc983;
      167: out3 <= 16'hc94f;
      168: out3 <= 16'hc91b;
      169: out3 <= 16'hc8e8;
      170: out3 <= 16'hc8b5;
      171: out3 <= 16'hc882;
      172: out3 <= 16'hc850;
      173: out3 <= 16'hc81f;
      174: out3 <= 16'hc7ee;
      175: out3 <= 16'hc7be;
      176: out3 <= 16'hc78f;
      177: out3 <= 16'hc75f;
      178: out3 <= 16'hc731;
      179: out3 <= 16'hc703;
      180: out3 <= 16'hc6d5;
      181: out3 <= 16'hc6a8;
      182: out3 <= 16'hc67c;
      183: out3 <= 16'hc650;
      184: out3 <= 16'hc625;
      185: out3 <= 16'hc5fa;
      186: out3 <= 16'hc5d0;
      187: out3 <= 16'hc5a7;
      188: out3 <= 16'hc57e;
      189: out3 <= 16'hc555;
      190: out3 <= 16'hc52d;
      191: out3 <= 16'hc506;
      192: out3 <= 16'hc4df;
      193: out3 <= 16'hc4b9;
      194: out3 <= 16'hc493;
      195: out3 <= 16'hc46e;
      196: out3 <= 16'hc44a;
      197: out3 <= 16'hc426;
      198: out3 <= 16'hc403;
      199: out3 <= 16'hc3e0;
      200: out3 <= 16'hc3be;
      201: out3 <= 16'hc39c;
      202: out3 <= 16'hc37b;
      203: out3 <= 16'hc35b;
      204: out3 <= 16'hc33b;
      205: out3 <= 16'hc31c;
      206: out3 <= 16'hc2fd;
      207: out3 <= 16'hc2df;
      208: out3 <= 16'hc2c1;
      209: out3 <= 16'hc2a5;
      210: out3 <= 16'hc288;
      211: out3 <= 16'hc26d;
      212: out3 <= 16'hc251;
      213: out3 <= 16'hc237;
      214: out3 <= 16'hc21d;
      215: out3 <= 16'hc204;
      216: out3 <= 16'hc1eb;
      217: out3 <= 16'hc1d3;
      218: out3 <= 16'hc1bb;
      219: out3 <= 16'hc1a4;
      220: out3 <= 16'hc18e;
      221: out3 <= 16'hc178;
      222: out3 <= 16'hc163;
      223: out3 <= 16'hc14f;
      224: out3 <= 16'hc13b;
      225: out3 <= 16'hc128;
      226: out3 <= 16'hc115;
      227: out3 <= 16'hc103;
      228: out3 <= 16'hc0f1;
      229: out3 <= 16'hc0e0;
      230: out3 <= 16'hc0d0;
      231: out3 <= 16'hc0c0;
      232: out3 <= 16'hc0b1;
      233: out3 <= 16'hc0a3;
      234: out3 <= 16'hc095;
      235: out3 <= 16'hc088;
      236: out3 <= 16'hc07b;
      237: out3 <= 16'hc06f;
      238: out3 <= 16'hc064;
      239: out3 <= 16'hc059;
      240: out3 <= 16'hc04f;
      241: out3 <= 16'hc045;
      242: out3 <= 16'hc03c;
      243: out3 <= 16'hc034;
      244: out3 <= 16'hc02c;
      245: out3 <= 16'hc025;
      246: out3 <= 16'hc01f;
      247: out3 <= 16'hc019;
      248: out3 <= 16'hc014;
      249: out3 <= 16'hc00f;
      250: out3 <= 16'hc00b;
      251: out3 <= 16'hc008;
      252: out3 <= 16'hc005;
      253: out3 <= 16'hc003;
      254: out3 <= 16'hc001;
      255: out3 <= 16'hc000;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



module D10_24843(addr, out, clk);
   input clk;
   output [15:0] out;
   reg [15:0] out, out2, out3;
   input [7:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 16'h0;
      1: out3 <= 16'hfed2;
      2: out3 <= 16'hfda5;
      3: out3 <= 16'hfc78;
      4: out3 <= 16'hfb4b;
      5: out3 <= 16'hfa1e;
      6: out3 <= 16'hf8f2;
      7: out3 <= 16'hf7c7;
      8: out3 <= 16'hf69c;
      9: out3 <= 16'hf572;
      10: out3 <= 16'hf449;
      11: out3 <= 16'hf321;
      12: out3 <= 16'hf1fa;
      13: out3 <= 16'hf0d5;
      14: out3 <= 16'hefb0;
      15: out3 <= 16'hee8d;
      16: out3 <= 16'hed6c;
      17: out3 <= 16'hec4c;
      18: out3 <= 16'heb2e;
      19: out3 <= 16'hea12;
      20: out3 <= 16'he8f7;
      21: out3 <= 16'he7df;
      22: out3 <= 16'he6c9;
      23: out3 <= 16'he5b5;
      24: out3 <= 16'he4a3;
      25: out3 <= 16'he394;
      26: out3 <= 16'he287;
      27: out3 <= 16'he17c;
      28: out3 <= 16'he074;
      29: out3 <= 16'hdf6f;
      30: out3 <= 16'hde6d;
      31: out3 <= 16'hdd6e;
      32: out3 <= 16'hdc72;
      33: out3 <= 16'hdb78;
      34: out3 <= 16'hda82;
      35: out3 <= 16'hd98f;
      36: out3 <= 16'hd8a0;
      37: out3 <= 16'hd7b4;
      38: out3 <= 16'hd6cb;
      39: out3 <= 16'hd5e6;
      40: out3 <= 16'hd505;
      41: out3 <= 16'hd428;
      42: out3 <= 16'hd34e;
      43: out3 <= 16'hd278;
      44: out3 <= 16'hd1a6;
      45: out3 <= 16'hd0d8;
      46: out3 <= 16'hd00e;
      47: out3 <= 16'hcf48;
      48: out3 <= 16'hce87;
      49: out3 <= 16'hcdca;
      50: out3 <= 16'hcd11;
      51: out3 <= 16'hcc5d;
      52: out3 <= 16'hcbad;
      53: out3 <= 16'hcb01;
      54: out3 <= 16'hca5b;
      55: out3 <= 16'hc9b8;
      56: out3 <= 16'hc91b;
      57: out3 <= 16'hc882;
      58: out3 <= 16'hc7ee;
      59: out3 <= 16'hc75f;
      60: out3 <= 16'hc6d5;
      61: out3 <= 16'hc650;
      62: out3 <= 16'hc5d0;
      63: out3 <= 16'hc555;
      64: out3 <= 16'hc4df;
      65: out3 <= 16'hc46e;
      66: out3 <= 16'hc403;
      67: out3 <= 16'hc39c;
      68: out3 <= 16'hc33b;
      69: out3 <= 16'hc2df;
      70: out3 <= 16'hc288;
      71: out3 <= 16'hc237;
      72: out3 <= 16'hc1eb;
      73: out3 <= 16'hc1a4;
      74: out3 <= 16'hc163;
      75: out3 <= 16'hc128;
      76: out3 <= 16'hc0f1;
      77: out3 <= 16'hc0c0;
      78: out3 <= 16'hc095;
      79: out3 <= 16'hc06f;
      80: out3 <= 16'hc04f;
      81: out3 <= 16'hc034;
      82: out3 <= 16'hc01f;
      83: out3 <= 16'hc00f;
      84: out3 <= 16'hc005;
      85: out3 <= 16'hc000;
      86: out3 <= 16'hc001;
      87: out3 <= 16'hc008;
      88: out3 <= 16'hc014;
      89: out3 <= 16'hc025;
      90: out3 <= 16'hc03c;
      91: out3 <= 16'hc059;
      92: out3 <= 16'hc07b;
      93: out3 <= 16'hc0a3;
      94: out3 <= 16'hc0d0;
      95: out3 <= 16'hc103;
      96: out3 <= 16'hc13b;
      97: out3 <= 16'hc178;
      98: out3 <= 16'hc1bb;
      99: out3 <= 16'hc204;
      100: out3 <= 16'hc251;
      101: out3 <= 16'hc2a5;
      102: out3 <= 16'hc2fd;
      103: out3 <= 16'hc35b;
      104: out3 <= 16'hc3be;
      105: out3 <= 16'hc426;
      106: out3 <= 16'hc493;
      107: out3 <= 16'hc506;
      108: out3 <= 16'hc57e;
      109: out3 <= 16'hc5fa;
      110: out3 <= 16'hc67c;
      111: out3 <= 16'hc703;
      112: out3 <= 16'hc78f;
      113: out3 <= 16'hc81f;
      114: out3 <= 16'hc8b5;
      115: out3 <= 16'hc94f;
      116: out3 <= 16'hc9ee;
      117: out3 <= 16'hca92;
      118: out3 <= 16'hcb3a;
      119: out3 <= 16'hcbe7;
      120: out3 <= 16'hcc98;
      121: out3 <= 16'hcd4e;
      122: out3 <= 16'hce08;
      123: out3 <= 16'hcec7;
      124: out3 <= 16'hcf8a;
      125: out3 <= 16'hd051;
      126: out3 <= 16'hd11c;
      127: out3 <= 16'hd1eb;
      128: out3 <= 16'hd2bf;
      129: out3 <= 16'hd396;
      130: out3 <= 16'hd471;
      131: out3 <= 16'hd550;
      132: out3 <= 16'hd632;
      133: out3 <= 16'hd719;
      134: out3 <= 16'hd802;
      135: out3 <= 16'hd8ef;
      136: out3 <= 16'hd9e0;
      137: out3 <= 16'hdad4;
      138: out3 <= 16'hdbcb;
      139: out3 <= 16'hdcc5;
      140: out3 <= 16'hddc3;
      141: out3 <= 16'hdec3;
      142: out3 <= 16'hdfc6;
      143: out3 <= 16'he0cc;
      144: out3 <= 16'he1d5;
      145: out3 <= 16'he2e0;
      146: out3 <= 16'he3ee;
      147: out3 <= 16'he4fe;
      148: out3 <= 16'he611;
      149: out3 <= 16'he725;
      150: out3 <= 16'he83c;
      151: out3 <= 16'he955;
      152: out3 <= 16'hea70;
      153: out3 <= 16'heb8d;
      154: out3 <= 16'hecac;
      155: out3 <= 16'hedcc;
      156: out3 <= 16'heeee;
      157: out3 <= 16'hf012;
      158: out3 <= 16'hf136;
      159: out3 <= 16'hf25c;
      160: out3 <= 16'hf384;
      161: out3 <= 16'hf4ac;
      162: out3 <= 16'hf5d5;
      163: out3 <= 16'hf6ff;
      164: out3 <= 16'hf82a;
      165: out3 <= 16'hf956;
      166: out3 <= 16'hfa82;
      167: out3 <= 16'hfbaf;
      168: out3 <= 16'hfcdc;
      169: out3 <= 16'hfe09;
      170: out3 <= 16'hff37;
      171: out3 <= 16'h65;
      172: out3 <= 16'h192;
      173: out3 <= 16'h2c0;
      174: out3 <= 16'h3ed;
      175: out3 <= 16'h51a;
      176: out3 <= 16'h646;
      177: out3 <= 16'h772;
      178: out3 <= 16'h89d;
      179: out3 <= 16'h9c7;
      180: out3 <= 16'haf1;
      181: out3 <= 16'hc1a;
      182: out3 <= 16'hd41;
      183: out3 <= 16'he68;
      184: out3 <= 16'hf8d;
      185: out3 <= 16'h10b1;
      186: out3 <= 16'h11d3;
      187: out3 <= 16'h12f4;
      188: out3 <= 16'h1413;
      189: out3 <= 16'h1531;
      190: out3 <= 16'h164c;
      191: out3 <= 16'h1766;
      192: out3 <= 16'h187e;
      193: out3 <= 16'h1993;
      194: out3 <= 16'h1aa7;
      195: out3 <= 16'h1bb8;
      196: out3 <= 16'h1cc6;
      197: out3 <= 16'h1dd3;
      198: out3 <= 16'h1edc;
      199: out3 <= 16'h1fe3;
      200: out3 <= 16'h20e7;
      201: out3 <= 16'h21e8;
      202: out3 <= 16'h22e7;
      203: out3 <= 16'h23e2;
      204: out3 <= 16'h24da;
      205: out3 <= 16'h25cf;
      206: out3 <= 16'h26c1;
      207: out3 <= 16'h27af;
      208: out3 <= 16'h289a;
      209: out3 <= 16'h2981;
      210: out3 <= 16'h2a65;
      211: out3 <= 16'h2b45;
      212: out3 <= 16'h2c21;
      213: out3 <= 16'h2cfa;
      214: out3 <= 16'h2dcf;
      215: out3 <= 16'h2e9f;
      216: out3 <= 16'h2f6c;
      217: out3 <= 16'h3034;
      218: out3 <= 16'h30f9;
      219: out3 <= 16'h31b9;
      220: out3 <= 16'h3274;
      221: out3 <= 16'h332c;
      222: out3 <= 16'h33df;
      223: out3 <= 16'h348d;
      224: out3 <= 16'h3537;
      225: out3 <= 16'h35dc;
      226: out3 <= 16'h367d;
      227: out3 <= 16'h3718;
      228: out3 <= 16'h37b0;
      229: out3 <= 16'h3842;
      230: out3 <= 16'h38cf;
      231: out3 <= 16'h3958;
      232: out3 <= 16'h39db;
      233: out3 <= 16'h3a59;
      234: out3 <= 16'h3ad3;
      235: out3 <= 16'h3b47;
      236: out3 <= 16'h3bb6;
      237: out3 <= 16'h3c20;
      238: out3 <= 16'h3c85;
      239: out3 <= 16'h3ce4;
      240: out3 <= 16'h3d3f;
      241: out3 <= 16'h3d93;
      242: out3 <= 16'h3de3;
      243: out3 <= 16'h3e2d;
      244: out3 <= 16'h3e72;
      245: out3 <= 16'h3eb1;
      246: out3 <= 16'h3eeb;
      247: out3 <= 16'h3f20;
      248: out3 <= 16'h3f4f;
      249: out3 <= 16'h3f78;
      250: out3 <= 16'h3f9c;
      251: out3 <= 16'h3fbb;
      252: out3 <= 16'h3fd4;
      253: out3 <= 16'h3fe7;
      254: out3 <= 16'h3ff5;
      255: out3 <= 16'h3ffd;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



module D6_25101(addr, out, clk);
   input clk;
   output [15:0] out;
   reg [15:0] out, out2, out3;
   input [7:0] addr;

   always @(posedge clk) begin
      out2 <= out3;
      out <= out2;
   case(addr)
      0: out3 <= 16'h4000;
      1: out3 <= 16'h3ffd;
      2: out3 <= 16'h3ff5;
      3: out3 <= 16'h3fe7;
      4: out3 <= 16'h3fd4;
      5: out3 <= 16'h3fbb;
      6: out3 <= 16'h3f9c;
      7: out3 <= 16'h3f78;
      8: out3 <= 16'h3f4f;
      9: out3 <= 16'h3f20;
      10: out3 <= 16'h3eeb;
      11: out3 <= 16'h3eb1;
      12: out3 <= 16'h3e72;
      13: out3 <= 16'h3e2d;
      14: out3 <= 16'h3de3;
      15: out3 <= 16'h3d93;
      16: out3 <= 16'h3d3f;
      17: out3 <= 16'h3ce4;
      18: out3 <= 16'h3c85;
      19: out3 <= 16'h3c20;
      20: out3 <= 16'h3bb6;
      21: out3 <= 16'h3b47;
      22: out3 <= 16'h3ad3;
      23: out3 <= 16'h3a59;
      24: out3 <= 16'h39db;
      25: out3 <= 16'h3958;
      26: out3 <= 16'h38cf;
      27: out3 <= 16'h3842;
      28: out3 <= 16'h37b0;
      29: out3 <= 16'h3718;
      30: out3 <= 16'h367d;
      31: out3 <= 16'h35dc;
      32: out3 <= 16'h3537;
      33: out3 <= 16'h348d;
      34: out3 <= 16'h33df;
      35: out3 <= 16'h332c;
      36: out3 <= 16'h3274;
      37: out3 <= 16'h31b9;
      38: out3 <= 16'h30f9;
      39: out3 <= 16'h3034;
      40: out3 <= 16'h2f6c;
      41: out3 <= 16'h2e9f;
      42: out3 <= 16'h2dcf;
      43: out3 <= 16'h2cfa;
      44: out3 <= 16'h2c21;
      45: out3 <= 16'h2b45;
      46: out3 <= 16'h2a65;
      47: out3 <= 16'h2981;
      48: out3 <= 16'h289a;
      49: out3 <= 16'h27af;
      50: out3 <= 16'h26c1;
      51: out3 <= 16'h25cf;
      52: out3 <= 16'h24da;
      53: out3 <= 16'h23e2;
      54: out3 <= 16'h22e7;
      55: out3 <= 16'h21e8;
      56: out3 <= 16'h20e7;
      57: out3 <= 16'h1fe3;
      58: out3 <= 16'h1edc;
      59: out3 <= 16'h1dd3;
      60: out3 <= 16'h1cc6;
      61: out3 <= 16'h1bb8;
      62: out3 <= 16'h1aa7;
      63: out3 <= 16'h1993;
      64: out3 <= 16'h187e;
      65: out3 <= 16'h1766;
      66: out3 <= 16'h164c;
      67: out3 <= 16'h1531;
      68: out3 <= 16'h1413;
      69: out3 <= 16'h12f4;
      70: out3 <= 16'h11d3;
      71: out3 <= 16'h10b1;
      72: out3 <= 16'hf8d;
      73: out3 <= 16'he68;
      74: out3 <= 16'hd41;
      75: out3 <= 16'hc1a;
      76: out3 <= 16'haf1;
      77: out3 <= 16'h9c7;
      78: out3 <= 16'h89d;
      79: out3 <= 16'h772;
      80: out3 <= 16'h646;
      81: out3 <= 16'h51a;
      82: out3 <= 16'h3ed;
      83: out3 <= 16'h2c0;
      84: out3 <= 16'h192;
      85: out3 <= 16'h65;
      86: out3 <= 16'hff37;
      87: out3 <= 16'hfe09;
      88: out3 <= 16'hfcdc;
      89: out3 <= 16'hfbaf;
      90: out3 <= 16'hfa82;
      91: out3 <= 16'hf956;
      92: out3 <= 16'hf82a;
      93: out3 <= 16'hf6ff;
      94: out3 <= 16'hf5d5;
      95: out3 <= 16'hf4ac;
      96: out3 <= 16'hf384;
      97: out3 <= 16'hf25c;
      98: out3 <= 16'hf136;
      99: out3 <= 16'hf012;
      100: out3 <= 16'heeee;
      101: out3 <= 16'hedcc;
      102: out3 <= 16'hecac;
      103: out3 <= 16'heb8d;
      104: out3 <= 16'hea70;
      105: out3 <= 16'he955;
      106: out3 <= 16'he83c;
      107: out3 <= 16'he725;
      108: out3 <= 16'he611;
      109: out3 <= 16'he4fe;
      110: out3 <= 16'he3ee;
      111: out3 <= 16'he2e0;
      112: out3 <= 16'he1d5;
      113: out3 <= 16'he0cc;
      114: out3 <= 16'hdfc6;
      115: out3 <= 16'hdec3;
      116: out3 <= 16'hddc3;
      117: out3 <= 16'hdcc5;
      118: out3 <= 16'hdbcb;
      119: out3 <= 16'hdad4;
      120: out3 <= 16'hd9e0;
      121: out3 <= 16'hd8ef;
      122: out3 <= 16'hd802;
      123: out3 <= 16'hd719;
      124: out3 <= 16'hd632;
      125: out3 <= 16'hd550;
      126: out3 <= 16'hd471;
      127: out3 <= 16'hd396;
      128: out3 <= 16'hd2bf;
      129: out3 <= 16'hd1eb;
      130: out3 <= 16'hd11c;
      131: out3 <= 16'hd051;
      132: out3 <= 16'hcf8a;
      133: out3 <= 16'hcec7;
      134: out3 <= 16'hce08;
      135: out3 <= 16'hcd4e;
      136: out3 <= 16'hcc98;
      137: out3 <= 16'hcbe7;
      138: out3 <= 16'hcb3a;
      139: out3 <= 16'hca92;
      140: out3 <= 16'hc9ee;
      141: out3 <= 16'hc94f;
      142: out3 <= 16'hc8b5;
      143: out3 <= 16'hc81f;
      144: out3 <= 16'hc78f;
      145: out3 <= 16'hc703;
      146: out3 <= 16'hc67c;
      147: out3 <= 16'hc5fa;
      148: out3 <= 16'hc57e;
      149: out3 <= 16'hc506;
      150: out3 <= 16'hc493;
      151: out3 <= 16'hc426;
      152: out3 <= 16'hc3be;
      153: out3 <= 16'hc35b;
      154: out3 <= 16'hc2fd;
      155: out3 <= 16'hc2a5;
      156: out3 <= 16'hc251;
      157: out3 <= 16'hc204;
      158: out3 <= 16'hc1bb;
      159: out3 <= 16'hc178;
      160: out3 <= 16'hc13b;
      161: out3 <= 16'hc103;
      162: out3 <= 16'hc0d0;
      163: out3 <= 16'hc0a3;
      164: out3 <= 16'hc07b;
      165: out3 <= 16'hc059;
      166: out3 <= 16'hc03c;
      167: out3 <= 16'hc025;
      168: out3 <= 16'hc014;
      169: out3 <= 16'hc008;
      170: out3 <= 16'hc001;
      171: out3 <= 16'hc000;
      172: out3 <= 16'hc005;
      173: out3 <= 16'hc00f;
      174: out3 <= 16'hc01f;
      175: out3 <= 16'hc034;
      176: out3 <= 16'hc04f;
      177: out3 <= 16'hc06f;
      178: out3 <= 16'hc095;
      179: out3 <= 16'hc0c0;
      180: out3 <= 16'hc0f1;
      181: out3 <= 16'hc128;
      182: out3 <= 16'hc163;
      183: out3 <= 16'hc1a4;
      184: out3 <= 16'hc1eb;
      185: out3 <= 16'hc237;
      186: out3 <= 16'hc288;
      187: out3 <= 16'hc2df;
      188: out3 <= 16'hc33b;
      189: out3 <= 16'hc39c;
      190: out3 <= 16'hc403;
      191: out3 <= 16'hc46e;
      192: out3 <= 16'hc4df;
      193: out3 <= 16'hc555;
      194: out3 <= 16'hc5d0;
      195: out3 <= 16'hc650;
      196: out3 <= 16'hc6d5;
      197: out3 <= 16'hc75f;
      198: out3 <= 16'hc7ee;
      199: out3 <= 16'hc882;
      200: out3 <= 16'hc91b;
      201: out3 <= 16'hc9b8;
      202: out3 <= 16'hca5b;
      203: out3 <= 16'hcb01;
      204: out3 <= 16'hcbad;
      205: out3 <= 16'hcc5d;
      206: out3 <= 16'hcd11;
      207: out3 <= 16'hcdca;
      208: out3 <= 16'hce87;
      209: out3 <= 16'hcf48;
      210: out3 <= 16'hd00e;
      211: out3 <= 16'hd0d8;
      212: out3 <= 16'hd1a6;
      213: out3 <= 16'hd278;
      214: out3 <= 16'hd34e;
      215: out3 <= 16'hd428;
      216: out3 <= 16'hd505;
      217: out3 <= 16'hd5e6;
      218: out3 <= 16'hd6cb;
      219: out3 <= 16'hd7b4;
      220: out3 <= 16'hd8a0;
      221: out3 <= 16'hd98f;
      222: out3 <= 16'hda82;
      223: out3 <= 16'hdb78;
      224: out3 <= 16'hdc72;
      225: out3 <= 16'hdd6e;
      226: out3 <= 16'hde6d;
      227: out3 <= 16'hdf6f;
      228: out3 <= 16'he074;
      229: out3 <= 16'he17c;
      230: out3 <= 16'he287;
      231: out3 <= 16'he394;
      232: out3 <= 16'he4a3;
      233: out3 <= 16'he5b5;
      234: out3 <= 16'he6c9;
      235: out3 <= 16'he7df;
      236: out3 <= 16'he8f7;
      237: out3 <= 16'hea12;
      238: out3 <= 16'heb2e;
      239: out3 <= 16'hec4c;
      240: out3 <= 16'hed6c;
      241: out3 <= 16'hee8d;
      242: out3 <= 16'hefb0;
      243: out3 <= 16'hf0d5;
      244: out3 <= 16'hf1fa;
      245: out3 <= 16'hf321;
      246: out3 <= 16'hf449;
      247: out3 <= 16'hf572;
      248: out3 <= 16'hf69c;
      249: out3 <= 16'hf7c7;
      250: out3 <= 16'hf8f2;
      251: out3 <= 16'hfa1e;
      252: out3 <= 16'hfb4b;
      253: out3 <= 16'hfc78;
      254: out3 <= 16'hfda5;
      255: out3 <= 16'hfed2;
      default: out3 <= 0;
   endcase
   end
// synthesis attribute rom_style of out3 is "distributed"
endmodule



// Latency: 8
// Gap: 1
module codeBlock22975(clk, reset, next_in, next_out,
   i1_in,
   X0_in, Y0,
   X1_in, Y1,
   X2_in, Y2,
   X3_in, Y3,
   X4_in, Y4,
   X5_in, Y5,
   X6_in, Y6,
   X7_in, Y7);

   output next_out;
   input clk, reset, next_in;

   reg next;
   input [7:0] i1_in;
   reg [7:0] i1;

   input [15:0] X0_in,
      X1_in,
      X2_in,
      X3_in,
      X4_in,
      X5_in,
      X6_in,
      X7_in;

   reg   [15:0] X0,
      X1,
      X2,
      X3,
      X4,
      X5,
      X6,
      X7;

   output [15:0] Y0,
      Y1,
      Y2,
      Y3,
      Y4,
      Y5,
      Y6,
      Y7;

   shiftRegFIFO #(7, 1) shiftFIFO_27478(.X(next), .Y(next_out), .clk(clk));


   wire signed [15:0] a105;
   wire signed [15:0] a82;
   wire signed [15:0] a108;
   wire signed [15:0] a86;
   wire signed [15:0] a109;
   wire signed [15:0] a110;
   wire signed [15:0] a113;
   wire signed [15:0] a114;
   wire signed [15:0] a117;
   wire signed [15:0] a118;
   reg signed [15:0] tm424;
   reg signed [15:0] tm428;
   reg signed [15:0] tm440;
   reg signed [15:0] tm444;
   reg signed [15:0] tm456;
   reg signed [15:0] tm460;
   reg signed [15:0] tm472;
   reg signed [15:0] tm479;
   reg signed [15:0] tm425;
   reg signed [15:0] tm429;
   reg signed [15:0] tm441;
   reg signed [15:0] tm445;
   reg signed [15:0] tm457;
   reg signed [15:0] tm461;
   reg signed [15:0] tm473;
   reg signed [15:0] tm480;
   wire signed [15:0] tm31;
   wire signed [15:0] a87;
   wire signed [15:0] tm32;
   wire signed [15:0] a89;
   wire signed [15:0] tm33;
   wire signed [15:0] a93;
   wire signed [15:0] tm34;
   wire signed [15:0] a95;
   wire signed [15:0] tm35;
   wire signed [15:0] a99;
   wire signed [15:0] tm36;
   wire signed [15:0] a101;
   reg signed [15:0] tm426;
   reg signed [15:0] tm430;
   reg signed [15:0] tm442;
   reg signed [15:0] tm446;
   reg signed [15:0] tm458;
   reg signed [15:0] tm462;
   reg signed [15:0] tm474;
   reg signed [15:0] tm481;
   reg signed [15:0] tm90;
   reg signed [15:0] tm91;
   reg signed [15:0] tm94;
   reg signed [15:0] tm95;
   reg signed [15:0] tm98;
   reg signed [15:0] tm99;
   reg signed [15:0] tm427;
   reg signed [15:0] tm431;
   reg signed [15:0] tm443;
   reg signed [15:0] tm447;
   reg signed [15:0] tm459;
   reg signed [15:0] tm463;
   reg signed [15:0] tm475;
   reg signed [15:0] tm482;
   reg signed [15:0] tm476;
   reg signed [15:0] tm483;
   wire signed [15:0] a88;
   wire signed [15:0] a90;
   wire signed [15:0] a91;
   wire signed [15:0] a92;
   wire signed [15:0] a94;
   wire signed [15:0] a96;
   wire signed [15:0] a97;
   wire signed [15:0] a98;
   wire signed [15:0] a100;
   wire signed [15:0] a102;
   wire signed [15:0] a103;
   wire signed [15:0] a104;
   reg signed [15:0] tm477;
   reg signed [15:0] tm484;
   wire signed [15:0] Y0;
   wire signed [15:0] Y1;
   wire signed [15:0] Y2;
   wire signed [15:0] Y3;
   wire signed [15:0] Y4;
   wire signed [15:0] Y5;
   wire signed [15:0] Y6;
   wire signed [15:0] Y7;
   reg signed [15:0] tm478;
   reg signed [15:0] tm485;


   assign a105 = X0;
   assign a82 = a105;
   assign a108 = X1;
   assign a86 = a108;
   assign a109 = X2;
   assign a110 = X3;
   assign a113 = X4;
   assign a114 = X5;
   assign a117 = X6;
   assign a118 = X7;
   assign a87 = tm31;
   assign a89 = tm32;
   assign a93 = tm33;
   assign a95 = tm34;
   assign a99 = tm35;
   assign a101 = tm36;
   assign Y0 = tm478;
   assign Y1 = tm485;

   D4_23553 instD4inst0_23553(.addr(i1[7:0]), .out(tm31), .clk(clk));

   D9_23811 instD9inst0_23811(.addr(i1[7:0]), .out(tm34), .clk(clk));

   D5_24069 instD5inst0_24069(.addr(i1[7:0]), .out(tm33), .clk(clk));

   D8_24327 instD8inst0_24327(.addr(i1[7:0]), .out(tm32), .clk(clk));

   D10_24843 instD10inst0_24843(.addr(i1[7:0]), .out(tm36), .clk(clk));

   D6_25101 instD6inst0_25101(.addr(i1[7:0]), .out(tm35), .clk(clk));

    multfix #(16, 2) m23074(.a(tm90), .b(tm427), .clk(clk), .q_sc(a88), .q_unsc(), .rst(reset));
    multfix #(16, 2) m23096(.a(tm91), .b(tm431), .clk(clk), .q_sc(a90), .q_unsc(), .rst(reset));
    multfix #(16, 2) m23114(.a(tm91), .b(tm427), .clk(clk), .q_sc(a91), .q_unsc(), .rst(reset));
    multfix #(16, 2) m23125(.a(tm90), .b(tm431), .clk(clk), .q_sc(a92), .q_unsc(), .rst(reset));
    multfix #(16, 2) m23154(.a(tm94), .b(tm443), .clk(clk), .q_sc(a94), .q_unsc(), .rst(reset));
    multfix #(16, 2) m23176(.a(tm95), .b(tm447), .clk(clk), .q_sc(a96), .q_unsc(), .rst(reset));
    multfix #(16, 2) m23194(.a(tm95), .b(tm443), .clk(clk), .q_sc(a97), .q_unsc(), .rst(reset));
    multfix #(16, 2) m23205(.a(tm94), .b(tm447), .clk(clk), .q_sc(a98), .q_unsc(), .rst(reset));
    multfix #(16, 2) m23234(.a(tm98), .b(tm459), .clk(clk), .q_sc(a100), .q_unsc(), .rst(reset));
    multfix #(16, 2) m23256(.a(tm99), .b(tm463), .clk(clk), .q_sc(a102), .q_unsc(), .rst(reset));
    multfix #(16, 2) m23274(.a(tm99), .b(tm459), .clk(clk), .q_sc(a103), .q_unsc(), .rst(reset));
    multfix #(16, 2) m23285(.a(tm98), .b(tm463), .clk(clk), .q_sc(a104), .q_unsc(), .rst(reset));
    subfxp #(16, 1) sub23103(.a(a88), .b(a90), .clk(clk), .q(Y2));    // 6
    addfxp #(16, 1) add23132(.a(a91), .b(a92), .clk(clk), .q(Y3));    // 6
    subfxp #(16, 1) sub23183(.a(a94), .b(a96), .clk(clk), .q(Y4));    // 6
    addfxp #(16, 1) add23212(.a(a97), .b(a98), .clk(clk), .q(Y5));    // 6
    subfxp #(16, 1) sub23263(.a(a100), .b(a102), .clk(clk), .q(Y6));    // 6
    addfxp #(16, 1) add23292(.a(a103), .b(a104), .clk(clk), .q(Y7));    // 6


   always @(posedge clk) begin
      if (reset == 1) begin
         tm90 <= 0;
         tm427 <= 0;
         tm91 <= 0;
         tm431 <= 0;
         tm91 <= 0;
         tm427 <= 0;
         tm90 <= 0;
         tm431 <= 0;
         tm94 <= 0;
         tm443 <= 0;
         tm95 <= 0;
         tm447 <= 0;
         tm95 <= 0;
         tm443 <= 0;
         tm94 <= 0;
         tm447 <= 0;
         tm98 <= 0;
         tm459 <= 0;
         tm99 <= 0;
         tm463 <= 0;
         tm99 <= 0;
         tm459 <= 0;
         tm98 <= 0;
         tm463 <= 0;
      end
      else begin
         i1 <= i1_in;
         X0 <= X0_in;
         X1 <= X1_in;
         X2 <= X2_in;
         X3 <= X3_in;
         X4 <= X4_in;
         X5 <= X5_in;
         X6 <= X6_in;
         X7 <= X7_in;
         next <= next_in;
         tm424 <= a109;
         tm428 <= a110;
         tm440 <= a113;
         tm444 <= a114;
         tm456 <= a117;
         tm460 <= a118;
         tm472 <= a82;
         tm479 <= a86;
         tm425 <= tm424;
         tm429 <= tm428;
         tm441 <= tm440;
         tm445 <= tm444;
         tm457 <= tm456;
         tm461 <= tm460;
         tm473 <= tm472;
         tm480 <= tm479;
         tm426 <= tm425;
         tm430 <= tm429;
         tm442 <= tm441;
         tm446 <= tm445;
         tm458 <= tm457;
         tm462 <= tm461;
         tm474 <= tm473;
         tm481 <= tm480;
         tm90 <= a87;
         tm91 <= a89;
         tm94 <= a93;
         tm95 <= a95;
         tm98 <= a99;
         tm99 <= a101;
         tm427 <= tm426;
         tm431 <= tm430;
         tm443 <= tm442;
         tm447 <= tm446;
         tm459 <= tm458;
         tm463 <= tm462;
         tm475 <= tm474;
         tm482 <= tm481;
         tm476 <= tm475;
         tm483 <= tm482;
         tm477 <= tm476;
         tm484 <= tm483;
         tm478 <= tm477;
         tm485 <= tm484;
      end
   end
endmodule

// Latency: 3
// Gap: 1
module codeBlock25364(clk, reset, next_in, next_out,
   X0_in, Y0,
   X1_in, Y1,
   X2_in, Y2,
   X3_in, Y3,
   X4_in, Y4,
   X5_in, Y5,
   X6_in, Y6,
   X7_in, Y7);

   output next_out;
   input clk, reset, next_in;

   reg next;

   input [15:0] X0_in,
      X1_in,
      X2_in,
      X3_in,
      X4_in,
      X5_in,
      X6_in,
      X7_in;

   reg   [15:0] X0,
      X1,
      X2,
      X3,
      X4,
      X5,
      X6,
      X7;

   output [15:0] Y0,
      Y1,
      Y2,
      Y3,
      Y4,
      Y5,
      Y6,
      Y7;

   shiftRegFIFO #(2, 1) shiftFIFO_27481(.X(next), .Y(next_out), .clk(clk));


   wire signed [15:0] a17;
   wire signed [15:0] a18;
   wire signed [15:0] a19;
   wire signed [15:0] a20;
   wire signed [15:0] a25;
   wire signed [15:0] a26;
   wire signed [15:0] a27;
   wire signed [15:0] a28;
   wire signed [16:0] tm222;
   wire signed [16:0] tm223;
   wire signed [16:0] tm224;
   wire signed [16:0] tm225;
   wire signed [16:0] tm226;
   wire signed [16:0] tm227;
   wire signed [16:0] tm228;
   wire signed [16:0] tm229;
   wire signed [15:0] t113;
   wire signed [15:0] t114;
   wire signed [15:0] t115;
   wire signed [15:0] t116;
   wire signed [15:0] t117;
   wire signed [15:0] t118;
   wire signed [15:0] t119;
   wire signed [15:0] t120;
   wire signed [16:0] tm230;
   wire signed [16:0] tm231;
   wire signed [16:0] tm232;
   wire signed [16:0] tm233;
   wire signed [15:0] Y0;
   wire signed [15:0] Y1;
   wire signed [15:0] Y4;
   wire signed [15:0] Y5;
   wire signed [16:0] tm234;
   wire signed [16:0] tm235;
   wire signed [16:0] tm236;
   wire signed [16:0] tm237;
   wire signed [15:0] Y2;
   wire signed [15:0] Y3;
   wire signed [15:0] Y6;
   wire signed [15:0] Y7;
   wire signed [15:0] t121;
   wire signed [15:0] t122;
   wire signed [15:0] t123;
   wire signed [15:0] t124;
   wire signed [15:0] t125;
   wire signed [15:0] t126;
   wire signed [15:0] t127;
   wire signed [15:0] t128;


   assign a17 = X0;
   assign a18 = X4;
   assign a19 = X1;
   assign a20 = X5;
   assign a25 = X2;
   assign a26 = X6;
   assign a27 = X3;
   assign a28 = X7;
   assign t113 = tm222[16:1];
   assign t114 = tm223[16:1];
   assign t115 = tm224[16:1];
   assign t116 = tm225[16:1];
   assign t117 = tm226[16:1];
   assign t118 = tm227[16:1];
   assign t119 = tm228[16:1];
   assign t120 = tm229[16:1];
   assign Y0 = t121;
   assign Y1 = t122;
   assign Y4 = t123;
   assign Y5 = t124;
   assign Y2 = t125;
   assign Y3 = t126;
   assign Y6 = t127;
   assign Y7 = t128;
   assign t121 = tm230[16:1];
   assign t122 = tm231[16:1];
   assign t123 = tm232[16:1];
   assign t124 = tm233[16:1];
   assign t125 = tm234[16:1];
   assign t126 = tm235[16:1];
   assign t127 = tm236[16:1];
   assign t128 = tm237[16:1];

    addfxp #(17, 1) add25376(.a({{1{a17[15]}}, a17}), .b({{1{a18[15]}}, a18}), .clk(clk), .q(tm222));    // 0
    addfxp #(17, 1) add25391(.a({{1{a19[15]}}, a19}), .b({{1{a20[15]}}, a20}), .clk(clk), .q(tm223));    // 0
    subfxp #(17, 1) sub25406(.a({{1{a17[15]}}, a17}), .b({{1{a18[15]}}, a18}), .clk(clk), .q(tm224));    // 0
    subfxp #(17, 1) sub25421(.a({{1{a19[15]}}, a19}), .b({{1{a20[15]}}, a20}), .clk(clk), .q(tm225));    // 0
    addfxp #(17, 1) add25436(.a({{1{a25[15]}}, a25}), .b({{1{a26[15]}}, a26}), .clk(clk), .q(tm226));    // 0
    addfxp #(17, 1) add25451(.a({{1{a27[15]}}, a27}), .b({{1{a28[15]}}, a28}), .clk(clk), .q(tm227));    // 0
    subfxp #(17, 1) sub25466(.a({{1{a25[15]}}, a25}), .b({{1{a26[15]}}, a26}), .clk(clk), .q(tm228));    // 0
    subfxp #(17, 1) sub25481(.a({{1{a27[15]}}, a27}), .b({{1{a28[15]}}, a28}), .clk(clk), .q(tm229));    // 0
    addfxp #(17, 1) add25488(.a({{1{t113[15]}}, t113}), .b({{1{t117[15]}}, t117}), .clk(clk), .q(tm230));    // 1
    addfxp #(17, 1) add25495(.a({{1{t114[15]}}, t114}), .b({{1{t118[15]}}, t118}), .clk(clk), .q(tm231));    // 1
    subfxp #(17, 1) sub25502(.a({{1{t113[15]}}, t113}), .b({{1{t117[15]}}, t117}), .clk(clk), .q(tm232));    // 1
    subfxp #(17, 1) sub25509(.a({{1{t114[15]}}, t114}), .b({{1{t118[15]}}, t118}), .clk(clk), .q(tm233));    // 1
    addfxp #(17, 1) add25532(.a({{1{t115[15]}}, t115}), .b({{1{t120[15]}}, t120}), .clk(clk), .q(tm234));    // 1
    subfxp #(17, 1) sub25539(.a({{1{t116[15]}}, t116}), .b({{1{t119[15]}}, t119}), .clk(clk), .q(tm235));    // 1
    subfxp #(17, 1) sub25546(.a({{1{t115[15]}}, t115}), .b({{1{t120[15]}}, t120}), .clk(clk), .q(tm236));    // 1
    addfxp #(17, 1) add25553(.a({{1{t116[15]}}, t116}), .b({{1{t119[15]}}, t119}), .clk(clk), .q(tm237));    // 1


   always @(posedge clk) begin
      if (reset == 1) begin
      end
      else begin
         X0 <= X0_in;
         X1 <= X1_in;
         X2 <= X2_in;
         X3 <= X3_in;
         X4 <= X4_in;
         X5 <= X5_in;
         X6 <= X6_in;
         X7 <= X7_in;
         next <= next_in;
      end
   end
endmodule

// Latency: 517
// Gap: 256
module rc25578(clk, reset, next, next_out,
   X0, Y0,
   X1, Y1,
   X2, Y2,
   X3, Y3,
   X4, Y4,
   X5, Y5,
   X6, Y6,
   X7, Y7);

   output next_out;
   input clk, reset, next;

   input [15:0] X0,
      X1,
      X2,
      X3,
      X4,
      X5,
      X6,
      X7;

   output [15:0] Y0,
      Y1,
      Y2,
      Y3,
      Y4,
      Y5,
      Y6,
      Y7;

   wire [31:0] t0;
   wire [31:0] s0;
   assign t0 = {X0, X1};
   wire [31:0] t1;
   wire [31:0] s1;
   assign t1 = {X2, X3};
   wire [31:0] t2;
   wire [31:0] s2;
   assign t2 = {X4, X5};
   wire [31:0] t3;
   wire [31:0] s3;
   assign t3 = {X6, X7};
   assign Y0 = s0[31:16];
   assign Y1 = s0[15:0];
   assign Y2 = s1[31:16];
   assign Y3 = s1[15:0];
   assign Y4 = s2[31:16];
   assign Y5 = s2[15:0];
   assign Y6 = s3[31:16];
   assign Y7 = s3[15:0];

   perm25576 instPerm27482(.x0(t0), .y0(s0),
    .x1(t1), .y1(s1),
    .x2(t2), .y2(s2),
    .x3(t3), .y3(s3),
   .clk(clk), .next(next), .next_out(next_out), .reset(reset)
);



endmodule

module swNet25576(itr, clk, ct
,       x0, y0
,       x1, y1
,       x2, y2
,       x3, y3
);

    parameter width = 32;

    input [7:0] ct;
    input clk;
    input [0:0] itr;
    input [width-1:0] x0;
    output reg [width-1:0] y0;
    input [width-1:0] x1;
    output reg [width-1:0] y1;
    input [width-1:0] x2;
    output reg [width-1:0] y2;
    input [width-1:0] x3;
    output reg [width-1:0] y3;
    wire [width-1:0] t0_0, t0_1, t0_2, t0_3;
    wire [width-1:0] t1_0, t1_1, t1_2, t1_3;
    wire [width-1:0] t2_0, t2_1, t2_2, t2_3;
    reg [width-1:0] t3_0, t3_1, t3_2, t3_3;
    wire [width-1:0] t4_0, t4_1, t4_2, t4_3;
    reg [width-1:0] t5_0, t5_1, t5_2, t5_3;

    reg [3:0] control;

    always @(posedge clk) begin
      case(ct)
        8'd0: control <= 4'b1111;
        8'd1: control <= 4'b1111;
        8'd2: control <= 4'b1111;
        8'd3: control <= 4'b1111;
        8'd4: control <= 4'b1111;
        8'd5: control <= 4'b1111;
        8'd6: control <= 4'b1111;
        8'd7: control <= 4'b1111;
        8'd8: control <= 4'b1111;
        8'd9: control <= 4'b1111;
        8'd10: control <= 4'b1111;
        8'd11: control <= 4'b1111;
        8'd12: control <= 4'b1111;
        8'd13: control <= 4'b1111;
        8'd14: control <= 4'b1111;
        8'd15: control <= 4'b1111;
        8'd16: control <= 4'b1111;
        8'd17: control <= 4'b1111;
        8'd18: control <= 4'b1111;
        8'd19: control <= 4'b1111;
        8'd20: control <= 4'b1111;
        8'd21: control <= 4'b1111;
        8'd22: control <= 4'b1111;
        8'd23: control <= 4'b1111;
        8'd24: control <= 4'b1111;
        8'd25: control <= 4'b1111;
        8'd26: control <= 4'b1111;
        8'd27: control <= 4'b1111;
        8'd28: control <= 4'b1111;
        8'd29: control <= 4'b1111;
        8'd30: control <= 4'b1111;
        8'd31: control <= 4'b1111;
        8'd32: control <= 4'b1111;
        8'd33: control <= 4'b1111;
        8'd34: control <= 4'b1111;
        8'd35: control <= 4'b1111;
        8'd36: control <= 4'b1111;
        8'd37: control <= 4'b1111;
        8'd38: control <= 4'b1111;
        8'd39: control <= 4'b1111;
        8'd40: control <= 4'b1111;
        8'd41: control <= 4'b1111;
        8'd42: control <= 4'b1111;
        8'd43: control <= 4'b1111;
        8'd44: control <= 4'b1111;
        8'd45: control <= 4'b1111;
        8'd46: control <= 4'b1111;
        8'd47: control <= 4'b1111;
        8'd48: control <= 4'b1111;
        8'd49: control <= 4'b1111;
        8'd50: control <= 4'b1111;
        8'd51: control <= 4'b1111;
        8'd52: control <= 4'b1111;
        8'd53: control <= 4'b1111;
        8'd54: control <= 4'b1111;
        8'd55: control <= 4'b1111;
        8'd56: control <= 4'b1111;
        8'd57: control <= 4'b1111;
        8'd58: control <= 4'b1111;
        8'd59: control <= 4'b1111;
        8'd60: control <= 4'b1111;
        8'd61: control <= 4'b1111;
        8'd62: control <= 4'b1111;
        8'd63: control <= 4'b1111;
        8'd64: control <= 4'b0011;
        8'd65: control <= 4'b0011;
        8'd66: control <= 4'b0011;
        8'd67: control <= 4'b0011;
        8'd68: control <= 4'b0011;
        8'd69: control <= 4'b0011;
        8'd70: control <= 4'b0011;
        8'd71: control <= 4'b0011;
        8'd72: control <= 4'b0011;
        8'd73: control <= 4'b0011;
        8'd74: control <= 4'b0011;
        8'd75: control <= 4'b0011;
        8'd76: control <= 4'b0011;
        8'd77: control <= 4'b0011;
        8'd78: control <= 4'b0011;
        8'd79: control <= 4'b0011;
        8'd80: control <= 4'b0011;
        8'd81: control <= 4'b0011;
        8'd82: control <= 4'b0011;
        8'd83: control <= 4'b0011;
        8'd84: control <= 4'b0011;
        8'd85: control <= 4'b0011;
        8'd86: control <= 4'b0011;
        8'd87: control <= 4'b0011;
        8'd88: control <= 4'b0011;
        8'd89: control <= 4'b0011;
        8'd90: control <= 4'b0011;
        8'd91: control <= 4'b0011;
        8'd92: control <= 4'b0011;
        8'd93: control <= 4'b0011;
        8'd94: control <= 4'b0011;
        8'd95: control <= 4'b0011;
        8'd96: control <= 4'b0011;
        8'd97: control <= 4'b0011;
        8'd98: control <= 4'b0011;
        8'd99: control <= 4'b0011;
        8'd100: control <= 4'b0011;
        8'd101: control <= 4'b0011;
        8'd102: control <= 4'b0011;
        8'd103: control <= 4'b0011;
        8'd104: control <= 4'b0011;
        8'd105: control <= 4'b0011;
        8'd106: control <= 4'b0011;
        8'd107: control <= 4'b0011;
        8'd108: control <= 4'b0011;
        8'd109: control <= 4'b0011;
        8'd110: control <= 4'b0011;
        8'd111: control <= 4'b0011;
        8'd112: control <= 4'b0011;
        8'd113: control <= 4'b0011;
        8'd114: control <= 4'b0011;
        8'd115: control <= 4'b0011;
        8'd116: control <= 4'b0011;
        8'd117: control <= 4'b0011;
        8'd118: control <= 4'b0011;
        8'd119: control <= 4'b0011;
        8'd120: control <= 4'b0011;
        8'd121: control <= 4'b0011;
        8'd122: control <= 4'b0011;
        8'd123: control <= 4'b0011;
        8'd124: control <= 4'b0011;
        8'd125: control <= 4'b0011;
        8'd126: control <= 4'b0011;
        8'd127: control <= 4'b0011;
        8'd128: control <= 4'b1100;
        8'd129: control <= 4'b1100;
        8'd130: control <= 4'b1100;
        8'd131: control <= 4'b1100;
        8'd132: control <= 4'b1100;
        8'd133: control <= 4'b1100;
        8'd134: control <= 4'b1100;
        8'd135: control <= 4'b1100;
        8'd136: control <= 4'b1100;
        8'd137: control <= 4'b1100;
        8'd138: control <= 4'b1100;
        8'd139: control <= 4'b1100;
        8'd140: control <= 4'b1100;
        8'd141: control <= 4'b1100;
        8'd142: control <= 4'b1100;
        8'd143: control <= 4'b1100;
        8'd144: control <= 4'b1100;
        8'd145: control <= 4'b1100;
        8'd146: control <= 4'b1100;
        8'd147: control <= 4'b1100;
        8'd148: control <= 4'b1100;
        8'd149: control <= 4'b1100;
        8'd150: control <= 4'b1100;
        8'd151: control <= 4'b1100;
        8'd152: control <= 4'b1100;
        8'd153: control <= 4'b1100;
        8'd154: control <= 4'b1100;
        8'd155: control <= 4'b1100;
        8'd156: control <= 4'b1100;
        8'd157: control <= 4'b1100;
        8'd158: control <= 4'b1100;
        8'd159: control <= 4'b1100;
        8'd160: control <= 4'b1100;
        8'd161: control <= 4'b1100;
        8'd162: control <= 4'b1100;
        8'd163: control <= 4'b1100;
        8'd164: control <= 4'b1100;
        8'd165: control <= 4'b1100;
        8'd166: control <= 4'b1100;
        8'd167: control <= 4'b1100;
        8'd168: control <= 4'b1100;
        8'd169: control <= 4'b1100;
        8'd170: control <= 4'b1100;
        8'd171: control <= 4'b1100;
        8'd172: control <= 4'b1100;
        8'd173: control <= 4'b1100;
        8'd174: control <= 4'b1100;
        8'd175: control <= 4'b1100;
        8'd176: control <= 4'b1100;
        8'd177: control <= 4'b1100;
        8'd178: control <= 4'b1100;
        8'd179: control <= 4'b1100;
        8'd180: control <= 4'b1100;
        8'd181: control <= 4'b1100;
        8'd182: control <= 4'b1100;
        8'd183: control <= 4'b1100;
        8'd184: control <= 4'b1100;
        8'd185: control <= 4'b1100;
        8'd186: control <= 4'b1100;
        8'd187: control <= 4'b1100;
        8'd188: control <= 4'b1100;
        8'd189: control <= 4'b1100;
        8'd190: control <= 4'b1100;
        8'd191: control <= 4'b1100;
        8'd192: control <= 4'b0000;
        8'd193: control <= 4'b0000;
        8'd194: control <= 4'b0000;
        8'd195: control <= 4'b0000;
        8'd196: control <= 4'b0000;
        8'd197: control <= 4'b0000;
        8'd198: control <= 4'b0000;
        8'd199: control <= 4'b0000;
        8'd200: control <= 4'b0000;
        8'd201: control <= 4'b0000;
        8'd202: control <= 4'b0000;
        8'd203: control <= 4'b0000;
        8'd204: control <= 4'b0000;
        8'd205: control <= 4'b0000;
        8'd206: control <= 4'b0000;
        8'd207: control <= 4'b0000;
        8'd208: control <= 4'b0000;
        8'd209: control <= 4'b0000;
        8'd210: control <= 4'b0000;
        8'd211: control <= 4'b0000;
        8'd212: control <= 4'b0000;
        8'd213: control <= 4'b0000;
        8'd214: control <= 4'b0000;
        8'd215: control <= 4'b0000;
        8'd216: control <= 4'b0000;
        8'd217: control <= 4'b0000;
        8'd218: control <= 4'b0000;
        8'd219: control <= 4'b0000;
        8'd220: control <= 4'b0000;
        8'd221: control <= 4'b0000;
        8'd222: control <= 4'b0000;
        8'd223: control <= 4'b0000;
        8'd224: control <= 4'b0000;
        8'd225: control <= 4'b0000;
        8'd226: control <= 4'b0000;
        8'd227: control <= 4'b0000;
        8'd228: control <= 4'b0000;
        8'd229: control <= 4'b0000;
        8'd230: control <= 4'b0000;
        8'd231: control <= 4'b0000;
        8'd232: control <= 4'b0000;
        8'd233: control <= 4'b0000;
        8'd234: control <= 4'b0000;
        8'd235: control <= 4'b0000;
        8'd236: control <= 4'b0000;
        8'd237: control <= 4'b0000;
        8'd238: control <= 4'b0000;
        8'd239: control <= 4'b0000;
        8'd240: control <= 4'b0000;
        8'd241: control <= 4'b0000;
        8'd242: control <= 4'b0000;
        8'd243: control <= 4'b0000;
        8'd244: control <= 4'b0000;
        8'd245: control <= 4'b0000;
        8'd246: control <= 4'b0000;
        8'd247: control <= 4'b0000;
        8'd248: control <= 4'b0000;
        8'd249: control <= 4'b0000;
        8'd250: control <= 4'b0000;
        8'd251: control <= 4'b0000;
        8'd252: control <= 4'b0000;
        8'd253: control <= 4'b0000;
        8'd254: control <= 4'b0000;
        8'd255: control <= 4'b0000;
      endcase
   end

// synthesis attribute rom_style of control is "block"
   reg [3:0] control0;
   reg [3:0] control1;
    always @(posedge clk) begin
       control0 <= control;
        control1 <= control0;
    end
    assign t0_0 = x0;
    assign t0_1 = x2;
    assign t0_2 = x1;
    assign t0_3 = x3;
     assign t1_0 = t0_0;
     assign t1_1 = t0_1;
     assign t1_2 = t0_2;
     assign t1_3 = t0_3;
    assign t2_0 = t1_0;
    assign t2_1 = t1_2;
    assign t2_2 = t1_1;
    assign t2_3 = t1_3;
   always @(posedge clk) begin
         t3_0 <= (control0[3] == 0) ? t2_0 : t2_1;
         t3_1 <= (control0[3] == 0) ? t2_1 : t2_0;
         t3_2 <= (control0[2] == 0) ? t2_2 : t2_3;
         t3_3 <= (control0[2] == 0) ? t2_3 : t2_2;
   end
    assign t4_0 = t3_0;
    assign t4_1 = t3_2;
    assign t4_2 = t3_1;
    assign t4_3 = t3_3;
   always @(posedge clk) begin
         t5_0 <= (control1[1] == 0) ? t4_0 : t4_1;
         t5_1 <= (control1[1] == 0) ? t4_1 : t4_0;
         t5_2 <= (control1[0] == 0) ? t4_2 : t4_3;
         t5_3 <= (control1[0] == 0) ? t4_3 : t4_2;
   end
    always @(posedge clk) begin
        y0 <= t5_0;
        y1 <= t5_2;
        y2 <= t5_1;
        y3 <= t5_3;
    end
endmodule

// Latency: 517
// Gap: 256
module perm25576(clk, next, reset, next_out,
   x0, y0,
   x1, y1,
   x2, y2,
   x3, y3);
   parameter width = 32;

   parameter depth = 256;

   parameter addrbits = 8;

   parameter muxbits = 2;

   input [width-1:0]  x0;
   output [width-1:0]  y0;
   wire [width-1:0]  t0;
   wire [width-1:0]  s0;
   input [width-1:0]  x1;
   output [width-1:0]  y1;
   wire [width-1:0]  t1;
   wire [width-1:0]  s1;
   input [width-1:0]  x2;
   output [width-1:0]  y2;
   wire [width-1:0]  t2;
   wire [width-1:0]  s2;
   input [width-1:0]  x3;
   output [width-1:0]  y3;
   wire [width-1:0]  t3;
   wire [width-1:0]  s3;
   input next, reset, clk;
   output next_out;
   reg [addrbits-1:0] s1rdloc, s2rdloc;

    reg [addrbits-1:0] s1wr0;
   reg [addrbits-1:0] s1rd0, s2wr0, s2rd0;
   reg [addrbits-1:0] s1rd1, s2wr1, s2rd1;
   reg [addrbits-1:0] s1rd2, s2wr2, s2rd2;
   reg [addrbits-1:0] s1rd3, s2wr3, s2rd3;
   reg s1wr_en, state1, state2, state3;
   wire 	      next2, next3, next4;
   reg 		      inFlip0, outFlip0_z, outFlip1;
   wire 	      inFlip1, outFlip0;

   wire [0:0] tm37;
   assign tm37 = 0;

shiftRegFIFO #(4, 1) shiftFIFO_27487(.X(outFlip0), .Y(inFlip1), .clk(clk));
shiftRegFIFO #(1, 1) shiftFIFO_27488(.X(outFlip0_z), .Y(outFlip0), .clk(clk));
//   shiftRegFIFO #(2, 1) inFlip1Reg(outFlip0, inFlip1, clk);
//   shiftRegFIFO #(1, 1) outFlip0Reg(outFlip0_z, outFlip0, clk);
   
   memMod #(depth*2, width, addrbits+1) s1mem0(x0, t0, {inFlip0, s1wr0}, {outFlip0, s1rd0}, s1wr_en, clk);
   memMod #(depth*2, width, addrbits+1) s1mem1(x1, t1, {inFlip0, s1wr0}, {outFlip0, s1rd1}, s1wr_en, clk);
   memMod #(depth*2, width, addrbits+1) s1mem2(x2, t2, {inFlip0, s1wr0}, {outFlip0, s1rd2}, s1wr_en, clk);
   memMod #(depth*2, width, addrbits+1) s1mem3(x3, t3, {inFlip0, s1wr0}, {outFlip0, s1rd3}, s1wr_en, clk);

nextReg #(255, 8) nextReg_27499(.X(next), .Y(next2), .reset(reset), .clk(clk));
shiftRegFIFO #(5, 1) shiftFIFO_27500(.X(next2), .Y(next3), .clk(clk));
nextReg #(256, 8) nextReg_27503(.X(next3), .Y(next4), .reset(reset), .clk(clk));
shiftRegFIFO #(1, 1) shiftFIFO_27504(.X(next4), .Y(next_out), .clk(clk));
shiftRegFIFO #(255, 1) shiftFIFO_27507(.X(tm37), .Y(tm37_d), .clk(clk));
shiftRegFIFO #(4, 1) shiftFIFO_27510(.X(tm37_d), .Y(tm37_dd), .clk(clk));
   
   wire [addrbits-1:0] 	      muxCycle, writeCycle;
assign muxCycle = s1rdloc;
shiftRegFIFO #(4, 8) shiftFIFO_27515(.X(muxCycle), .Y(writeCycle), .clk(clk));
        
   wire 		      readInt, s2wr_en;   
   assign 		      readInt = (state2 == 1);

   shiftRegFIFO #(5, 1) writeIntReg(readInt, s2wr_en, clk);

   memMod #(depth*2, width, addrbits+1) s2mem0(s0, y0, {inFlip1, s2wr0}, {outFlip1, s2rdloc}, s2wr_en, clk);
   memMod #(depth*2, width, addrbits+1) s2mem1(s1, y1, {inFlip1, s2wr1}, {outFlip1, s2rdloc}, s2wr_en, clk);
   memMod #(depth*2, width, addrbits+1) s2mem2(s2, y2, {inFlip1, s2wr2}, {outFlip1, s2rdloc}, s2wr_en, clk);
   memMod #(depth*2, width, addrbits+1) s2mem3(s3, y3, {inFlip1, s2wr3}, {outFlip1, s2rdloc}, s2wr_en, clk);
   always @(posedge clk) begin
      if (reset == 1) begin
	 state1 <= 0;
	 inFlip0 <= 0;	 
	 s1wr0 <= 0;
      end
      else if (next == 1) begin
	 s1wr0 <= 0;
	 state1 <= 1;
	 s1wr_en <= 1;
	 inFlip0 <= (s1wr0 == depth-1) ? ~inFlip0 : inFlip0;
      end
      else begin
	 case(state1)
	   0: begin
	      s1wr0 <= 0;
	      state1 <= 0;
	      s1wr_en <= 0;
	      inFlip0 <= inFlip0;	      
	   end
	   1: begin
	      s1wr0 <= (s1wr0 == depth-1) ? 0 : s1wr0 + 1;
	      state1 <= 1;
         s1wr_en <= 1;
	      inFlip0 <= (s1wr0 == depth-1) ? ~inFlip0 : inFlip0;
	   end
	 endcase
      end      
   end
   
   always @(posedge clk) begin
      if (reset == 1) begin
	       state2 <= 0;
	       outFlip0_z <= 0;	 
      end
      else if (next2 == 1) begin
	       s1rdloc <= 0;
	       state2 <= 1;
	       outFlip0_z <= (s1rdloc == depth-1) ? ~outFlip0_z : outFlip0_z;
      end
      else begin
	 case(state2)
	   0: begin
	      s1rdloc <= 0;
	      state2 <= 0;
	      outFlip0_z <= outFlip0_z;	 
	   end
	   1: begin
	      s1rdloc <= (s1rdloc == depth-1) ? 0 : s1rdloc + 1;
         state2 <= 1;
	      outFlip0_z <= (s1rdloc == depth-1) ? ~outFlip0_z : outFlip0_z;
	   end	     
	 endcase
      end
   end
   
   always @(posedge clk) begin
      if (reset == 1) begin
	 state3 <= 0;
	 outFlip1 <= 0;	 
      end
      else if (next4 == 1) begin
	 s2rdloc <= 0;
	 state3 <= 1;
	 outFlip1 <= (s2rdloc == depth-1) ? ~outFlip1 : outFlip1;	      
      end
      else begin
	 case(state3)
	   0: begin
	      s2rdloc <= 0;
	      state3 <= 0;
	      outFlip1 <= outFlip1;
	   end
	   1: begin
	      s2rdloc <= (s2rdloc == depth-1) ? 0 : s2rdloc + 1;
         state3 <= 1;
	      outFlip1 <= (s2rdloc == depth-1) ? ~outFlip1 : outFlip1;
	   end	     
	 endcase
      end
   end
   always @(posedge clk) begin
      case({tm37_d, s1rdloc})
	     {1'd0,  8'd0}: s1rd0 <= 3;
	     {1'd0,  8'd1}: s1rd0 <= 7;
	     {1'd0,  8'd2}: s1rd0 <= 11;
	     {1'd0,  8'd3}: s1rd0 <= 15;
	     {1'd0,  8'd4}: s1rd0 <= 19;
	     {1'd0,  8'd5}: s1rd0 <= 23;
	     {1'd0,  8'd6}: s1rd0 <= 27;
	     {1'd0,  8'd7}: s1rd0 <= 31;
	     {1'd0,  8'd8}: s1rd0 <= 35;
	     {1'd0,  8'd9}: s1rd0 <= 39;
	     {1'd0,  8'd10}: s1rd0 <= 43;
	     {1'd0,  8'd11}: s1rd0 <= 47;
	     {1'd0,  8'd12}: s1rd0 <= 51;
	     {1'd0,  8'd13}: s1rd0 <= 55;
	     {1'd0,  8'd14}: s1rd0 <= 59;
	     {1'd0,  8'd15}: s1rd0 <= 63;
	     {1'd0,  8'd16}: s1rd0 <= 67;
	     {1'd0,  8'd17}: s1rd0 <= 71;
	     {1'd0,  8'd18}: s1rd0 <= 75;
	     {1'd0,  8'd19}: s1rd0 <= 79;
	     {1'd0,  8'd20}: s1rd0 <= 83;
	     {1'd0,  8'd21}: s1rd0 <= 87;
	     {1'd0,  8'd22}: s1rd0 <= 91;
	     {1'd0,  8'd23}: s1rd0 <= 95;
	     {1'd0,  8'd24}: s1rd0 <= 99;
	     {1'd0,  8'd25}: s1rd0 <= 103;
	     {1'd0,  8'd26}: s1rd0 <= 107;
	     {1'd0,  8'd27}: s1rd0 <= 111;
	     {1'd0,  8'd28}: s1rd0 <= 115;
	     {1'd0,  8'd29}: s1rd0 <= 119;
	     {1'd0,  8'd30}: s1rd0 <= 123;
	     {1'd0,  8'd31}: s1rd0 <= 127;
	     {1'd0,  8'd32}: s1rd0 <= 131;
	     {1'd0,  8'd33}: s1rd0 <= 135;
	     {1'd0,  8'd34}: s1rd0 <= 139;
	     {1'd0,  8'd35}: s1rd0 <= 143;
	     {1'd0,  8'd36}: s1rd0 <= 147;
	     {1'd0,  8'd37}: s1rd0 <= 151;
	     {1'd0,  8'd38}: s1rd0 <= 155;
	     {1'd0,  8'd39}: s1rd0 <= 159;
	     {1'd0,  8'd40}: s1rd0 <= 163;
	     {1'd0,  8'd41}: s1rd0 <= 167;
	     {1'd0,  8'd42}: s1rd0 <= 171;
	     {1'd0,  8'd43}: s1rd0 <= 175;
	     {1'd0,  8'd44}: s1rd0 <= 179;
	     {1'd0,  8'd45}: s1rd0 <= 183;
	     {1'd0,  8'd46}: s1rd0 <= 187;
	     {1'd0,  8'd47}: s1rd0 <= 191;
	     {1'd0,  8'd48}: s1rd0 <= 195;
	     {1'd0,  8'd49}: s1rd0 <= 199;
	     {1'd0,  8'd50}: s1rd0 <= 203;
	     {1'd0,  8'd51}: s1rd0 <= 207;
	     {1'd0,  8'd52}: s1rd0 <= 211;
	     {1'd0,  8'd53}: s1rd0 <= 215;
	     {1'd0,  8'd54}: s1rd0 <= 219;
	     {1'd0,  8'd55}: s1rd0 <= 223;
	     {1'd0,  8'd56}: s1rd0 <= 227;
	     {1'd0,  8'd57}: s1rd0 <= 231;
	     {1'd0,  8'd58}: s1rd0 <= 235;
	     {1'd0,  8'd59}: s1rd0 <= 239;
	     {1'd0,  8'd60}: s1rd0 <= 243;
	     {1'd0,  8'd61}: s1rd0 <= 247;
	     {1'd0,  8'd62}: s1rd0 <= 251;
	     {1'd0,  8'd63}: s1rd0 <= 255;
	     {1'd0,  8'd64}: s1rd0 <= 2;
	     {1'd0,  8'd65}: s1rd0 <= 6;
	     {1'd0,  8'd66}: s1rd0 <= 10;
	     {1'd0,  8'd67}: s1rd0 <= 14;
	     {1'd0,  8'd68}: s1rd0 <= 18;
	     {1'd0,  8'd69}: s1rd0 <= 22;
	     {1'd0,  8'd70}: s1rd0 <= 26;
	     {1'd0,  8'd71}: s1rd0 <= 30;
	     {1'd0,  8'd72}: s1rd0 <= 34;
	     {1'd0,  8'd73}: s1rd0 <= 38;
	     {1'd0,  8'd74}: s1rd0 <= 42;
	     {1'd0,  8'd75}: s1rd0 <= 46;
	     {1'd0,  8'd76}: s1rd0 <= 50;
	     {1'd0,  8'd77}: s1rd0 <= 54;
	     {1'd0,  8'd78}: s1rd0 <= 58;
	     {1'd0,  8'd79}: s1rd0 <= 62;
	     {1'd0,  8'd80}: s1rd0 <= 66;
	     {1'd0,  8'd81}: s1rd0 <= 70;
	     {1'd0,  8'd82}: s1rd0 <= 74;
	     {1'd0,  8'd83}: s1rd0 <= 78;
	     {1'd0,  8'd84}: s1rd0 <= 82;
	     {1'd0,  8'd85}: s1rd0 <= 86;
	     {1'd0,  8'd86}: s1rd0 <= 90;
	     {1'd0,  8'd87}: s1rd0 <= 94;
	     {1'd0,  8'd88}: s1rd0 <= 98;
	     {1'd0,  8'd89}: s1rd0 <= 102;
	     {1'd0,  8'd90}: s1rd0 <= 106;
	     {1'd0,  8'd91}: s1rd0 <= 110;
	     {1'd0,  8'd92}: s1rd0 <= 114;
	     {1'd0,  8'd93}: s1rd0 <= 118;
	     {1'd0,  8'd94}: s1rd0 <= 122;
	     {1'd0,  8'd95}: s1rd0 <= 126;
	     {1'd0,  8'd96}: s1rd0 <= 130;
	     {1'd0,  8'd97}: s1rd0 <= 134;
	     {1'd0,  8'd98}: s1rd0 <= 138;
	     {1'd0,  8'd99}: s1rd0 <= 142;
	     {1'd0,  8'd100}: s1rd0 <= 146;
	     {1'd0,  8'd101}: s1rd0 <= 150;
	     {1'd0,  8'd102}: s1rd0 <= 154;
	     {1'd0,  8'd103}: s1rd0 <= 158;
	     {1'd0,  8'd104}: s1rd0 <= 162;
	     {1'd0,  8'd105}: s1rd0 <= 166;
	     {1'd0,  8'd106}: s1rd0 <= 170;
	     {1'd0,  8'd107}: s1rd0 <= 174;
	     {1'd0,  8'd108}: s1rd0 <= 178;
	     {1'd0,  8'd109}: s1rd0 <= 182;
	     {1'd0,  8'd110}: s1rd0 <= 186;
	     {1'd0,  8'd111}: s1rd0 <= 190;
	     {1'd0,  8'd112}: s1rd0 <= 194;
	     {1'd0,  8'd113}: s1rd0 <= 198;
	     {1'd0,  8'd114}: s1rd0 <= 202;
	     {1'd0,  8'd115}: s1rd0 <= 206;
	     {1'd0,  8'd116}: s1rd0 <= 210;
	     {1'd0,  8'd117}: s1rd0 <= 214;
	     {1'd0,  8'd118}: s1rd0 <= 218;
	     {1'd0,  8'd119}: s1rd0 <= 222;
	     {1'd0,  8'd120}: s1rd0 <= 226;
	     {1'd0,  8'd121}: s1rd0 <= 230;
	     {1'd0,  8'd122}: s1rd0 <= 234;
	     {1'd0,  8'd123}: s1rd0 <= 238;
	     {1'd0,  8'd124}: s1rd0 <= 242;
	     {1'd0,  8'd125}: s1rd0 <= 246;
	     {1'd0,  8'd126}: s1rd0 <= 250;
	     {1'd0,  8'd127}: s1rd0 <= 254;
	     {1'd0,  8'd128}: s1rd0 <= 1;
	     {1'd0,  8'd129}: s1rd0 <= 5;
	     {1'd0,  8'd130}: s1rd0 <= 9;
	     {1'd0,  8'd131}: s1rd0 <= 13;
	     {1'd0,  8'd132}: s1rd0 <= 17;
	     {1'd0,  8'd133}: s1rd0 <= 21;
	     {1'd0,  8'd134}: s1rd0 <= 25;
	     {1'd0,  8'd135}: s1rd0 <= 29;
	     {1'd0,  8'd136}: s1rd0 <= 33;
	     {1'd0,  8'd137}: s1rd0 <= 37;
	     {1'd0,  8'd138}: s1rd0 <= 41;
	     {1'd0,  8'd139}: s1rd0 <= 45;
	     {1'd0,  8'd140}: s1rd0 <= 49;
	     {1'd0,  8'd141}: s1rd0 <= 53;
	     {1'd0,  8'd142}: s1rd0 <= 57;
	     {1'd0,  8'd143}: s1rd0 <= 61;
	     {1'd0,  8'd144}: s1rd0 <= 65;
	     {1'd0,  8'd145}: s1rd0 <= 69;
	     {1'd0,  8'd146}: s1rd0 <= 73;
	     {1'd0,  8'd147}: s1rd0 <= 77;
	     {1'd0,  8'd148}: s1rd0 <= 81;
	     {1'd0,  8'd149}: s1rd0 <= 85;
	     {1'd0,  8'd150}: s1rd0 <= 89;
	     {1'd0,  8'd151}: s1rd0 <= 93;
	     {1'd0,  8'd152}: s1rd0 <= 97;
	     {1'd0,  8'd153}: s1rd0 <= 101;
	     {1'd0,  8'd154}: s1rd0 <= 105;
	     {1'd0,  8'd155}: s1rd0 <= 109;
	     {1'd0,  8'd156}: s1rd0 <= 113;
	     {1'd0,  8'd157}: s1rd0 <= 117;
	     {1'd0,  8'd158}: s1rd0 <= 121;
	     {1'd0,  8'd159}: s1rd0 <= 125;
	     {1'd0,  8'd160}: s1rd0 <= 129;
	     {1'd0,  8'd161}: s1rd0 <= 133;
	     {1'd0,  8'd162}: s1rd0 <= 137;
	     {1'd0,  8'd163}: s1rd0 <= 141;
	     {1'd0,  8'd164}: s1rd0 <= 145;
	     {1'd0,  8'd165}: s1rd0 <= 149;
	     {1'd0,  8'd166}: s1rd0 <= 153;
	     {1'd0,  8'd167}: s1rd0 <= 157;
	     {1'd0,  8'd168}: s1rd0 <= 161;
	     {1'd0,  8'd169}: s1rd0 <= 165;
	     {1'd0,  8'd170}: s1rd0 <= 169;
	     {1'd0,  8'd171}: s1rd0 <= 173;
	     {1'd0,  8'd172}: s1rd0 <= 177;
	     {1'd0,  8'd173}: s1rd0 <= 181;
	     {1'd0,  8'd174}: s1rd0 <= 185;
	     {1'd0,  8'd175}: s1rd0 <= 189;
	     {1'd0,  8'd176}: s1rd0 <= 193;
	     {1'd0,  8'd177}: s1rd0 <= 197;
	     {1'd0,  8'd178}: s1rd0 <= 201;
	     {1'd0,  8'd179}: s1rd0 <= 205;
	     {1'd0,  8'd180}: s1rd0 <= 209;
	     {1'd0,  8'd181}: s1rd0 <= 213;
	     {1'd0,  8'd182}: s1rd0 <= 217;
	     {1'd0,  8'd183}: s1rd0 <= 221;
	     {1'd0,  8'd184}: s1rd0 <= 225;
	     {1'd0,  8'd185}: s1rd0 <= 229;
	     {1'd0,  8'd186}: s1rd0 <= 233;
	     {1'd0,  8'd187}: s1rd0 <= 237;
	     {1'd0,  8'd188}: s1rd0 <= 241;
	     {1'd0,  8'd189}: s1rd0 <= 245;
	     {1'd0,  8'd190}: s1rd0 <= 249;
	     {1'd0,  8'd191}: s1rd0 <= 253;
	     {1'd0,  8'd192}: s1rd0 <= 0;
	     {1'd0,  8'd193}: s1rd0 <= 4;
	     {1'd0,  8'd194}: s1rd0 <= 8;
	     {1'd0,  8'd195}: s1rd0 <= 12;
	     {1'd0,  8'd196}: s1rd0 <= 16;
	     {1'd0,  8'd197}: s1rd0 <= 20;
	     {1'd0,  8'd198}: s1rd0 <= 24;
	     {1'd0,  8'd199}: s1rd0 <= 28;
	     {1'd0,  8'd200}: s1rd0 <= 32;
	     {1'd0,  8'd201}: s1rd0 <= 36;
	     {1'd0,  8'd202}: s1rd0 <= 40;
	     {1'd0,  8'd203}: s1rd0 <= 44;
	     {1'd0,  8'd204}: s1rd0 <= 48;
	     {1'd0,  8'd205}: s1rd0 <= 52;
	     {1'd0,  8'd206}: s1rd0 <= 56;
	     {1'd0,  8'd207}: s1rd0 <= 60;
	     {1'd0,  8'd208}: s1rd0 <= 64;
	     {1'd0,  8'd209}: s1rd0 <= 68;
	     {1'd0,  8'd210}: s1rd0 <= 72;
	     {1'd0,  8'd211}: s1rd0 <= 76;
	     {1'd0,  8'd212}: s1rd0 <= 80;
	     {1'd0,  8'd213}: s1rd0 <= 84;
	     {1'd0,  8'd214}: s1rd0 <= 88;
	     {1'd0,  8'd215}: s1rd0 <= 92;
	     {1'd0,  8'd216}: s1rd0 <= 96;
	     {1'd0,  8'd217}: s1rd0 <= 100;
	     {1'd0,  8'd218}: s1rd0 <= 104;
	     {1'd0,  8'd219}: s1rd0 <= 108;
	     {1'd0,  8'd220}: s1rd0 <= 112;
	     {1'd0,  8'd221}: s1rd0 <= 116;
	     {1'd0,  8'd222}: s1rd0 <= 120;
	     {1'd0,  8'd223}: s1rd0 <= 124;
	     {1'd0,  8'd224}: s1rd0 <= 128;
	     {1'd0,  8'd225}: s1rd0 <= 132;
	     {1'd0,  8'd226}: s1rd0 <= 136;
	     {1'd0,  8'd227}: s1rd0 <= 140;
	     {1'd0,  8'd228}: s1rd0 <= 144;
	     {1'd0,  8'd229}: s1rd0 <= 148;
	     {1'd0,  8'd230}: s1rd0 <= 152;
	     {1'd0,  8'd231}: s1rd0 <= 156;
	     {1'd0,  8'd232}: s1rd0 <= 160;
	     {1'd0,  8'd233}: s1rd0 <= 164;
	     {1'd0,  8'd234}: s1rd0 <= 168;
	     {1'd0,  8'd235}: s1rd0 <= 172;
	     {1'd0,  8'd236}: s1rd0 <= 176;
	     {1'd0,  8'd237}: s1rd0 <= 180;
	     {1'd0,  8'd238}: s1rd0 <= 184;
	     {1'd0,  8'd239}: s1rd0 <= 188;
	     {1'd0,  8'd240}: s1rd0 <= 192;
	     {1'd0,  8'd241}: s1rd0 <= 196;
	     {1'd0,  8'd242}: s1rd0 <= 200;
	     {1'd0,  8'd243}: s1rd0 <= 204;
	     {1'd0,  8'd244}: s1rd0 <= 208;
	     {1'd0,  8'd245}: s1rd0 <= 212;
	     {1'd0,  8'd246}: s1rd0 <= 216;
	     {1'd0,  8'd247}: s1rd0 <= 220;
	     {1'd0,  8'd248}: s1rd0 <= 224;
	     {1'd0,  8'd249}: s1rd0 <= 228;
	     {1'd0,  8'd250}: s1rd0 <= 232;
	     {1'd0,  8'd251}: s1rd0 <= 236;
	     {1'd0,  8'd252}: s1rd0 <= 240;
	     {1'd0,  8'd253}: s1rd0 <= 244;
	     {1'd0,  8'd254}: s1rd0 <= 248;
	     {1'd0,  8'd255}: s1rd0 <= 252;
      endcase      
   end

// synthesis attribute rom_style of s1rd0 is "distributed"
   always @(posedge clk) begin
      case({tm37_d, s1rdloc})
	     {1'd0,  8'd0}: s1rd1 <= 2;
	     {1'd0,  8'd1}: s1rd1 <= 6;
	     {1'd0,  8'd2}: s1rd1 <= 10;
	     {1'd0,  8'd3}: s1rd1 <= 14;
	     {1'd0,  8'd4}: s1rd1 <= 18;
	     {1'd0,  8'd5}: s1rd1 <= 22;
	     {1'd0,  8'd6}: s1rd1 <= 26;
	     {1'd0,  8'd7}: s1rd1 <= 30;
	     {1'd0,  8'd8}: s1rd1 <= 34;
	     {1'd0,  8'd9}: s1rd1 <= 38;
	     {1'd0,  8'd10}: s1rd1 <= 42;
	     {1'd0,  8'd11}: s1rd1 <= 46;
	     {1'd0,  8'd12}: s1rd1 <= 50;
	     {1'd0,  8'd13}: s1rd1 <= 54;
	     {1'd0,  8'd14}: s1rd1 <= 58;
	     {1'd0,  8'd15}: s1rd1 <= 62;
	     {1'd0,  8'd16}: s1rd1 <= 66;
	     {1'd0,  8'd17}: s1rd1 <= 70;
	     {1'd0,  8'd18}: s1rd1 <= 74;
	     {1'd0,  8'd19}: s1rd1 <= 78;
	     {1'd0,  8'd20}: s1rd1 <= 82;
	     {1'd0,  8'd21}: s1rd1 <= 86;
	     {1'd0,  8'd22}: s1rd1 <= 90;
	     {1'd0,  8'd23}: s1rd1 <= 94;
	     {1'd0,  8'd24}: s1rd1 <= 98;
	     {1'd0,  8'd25}: s1rd1 <= 102;
	     {1'd0,  8'd26}: s1rd1 <= 106;
	     {1'd0,  8'd27}: s1rd1 <= 110;
	     {1'd0,  8'd28}: s1rd1 <= 114;
	     {1'd0,  8'd29}: s1rd1 <= 118;
	     {1'd0,  8'd30}: s1rd1 <= 122;
	     {1'd0,  8'd31}: s1rd1 <= 126;
	     {1'd0,  8'd32}: s1rd1 <= 130;
	     {1'd0,  8'd33}: s1rd1 <= 134;
	     {1'd0,  8'd34}: s1rd1 <= 138;
	     {1'd0,  8'd35}: s1rd1 <= 142;
	     {1'd0,  8'd36}: s1rd1 <= 146;
	     {1'd0,  8'd37}: s1rd1 <= 150;
	     {1'd0,  8'd38}: s1rd1 <= 154;
	     {1'd0,  8'd39}: s1rd1 <= 158;
	     {1'd0,  8'd40}: s1rd1 <= 162;
	     {1'd0,  8'd41}: s1rd1 <= 166;
	     {1'd0,  8'd42}: s1rd1 <= 170;
	     {1'd0,  8'd43}: s1rd1 <= 174;
	     {1'd0,  8'd44}: s1rd1 <= 178;
	     {1'd0,  8'd45}: s1rd1 <= 182;
	     {1'd0,  8'd46}: s1rd1 <= 186;
	     {1'd0,  8'd47}: s1rd1 <= 190;
	     {1'd0,  8'd48}: s1rd1 <= 194;
	     {1'd0,  8'd49}: s1rd1 <= 198;
	     {1'd0,  8'd50}: s1rd1 <= 202;
	     {1'd0,  8'd51}: s1rd1 <= 206;
	     {1'd0,  8'd52}: s1rd1 <= 210;
	     {1'd0,  8'd53}: s1rd1 <= 214;
	     {1'd0,  8'd54}: s1rd1 <= 218;
	     {1'd0,  8'd55}: s1rd1 <= 222;
	     {1'd0,  8'd56}: s1rd1 <= 226;
	     {1'd0,  8'd57}: s1rd1 <= 230;
	     {1'd0,  8'd58}: s1rd1 <= 234;
	     {1'd0,  8'd59}: s1rd1 <= 238;
	     {1'd0,  8'd60}: s1rd1 <= 242;
	     {1'd0,  8'd61}: s1rd1 <= 246;
	     {1'd0,  8'd62}: s1rd1 <= 250;
	     {1'd0,  8'd63}: s1rd1 <= 254;
	     {1'd0,  8'd64}: s1rd1 <= 3;
	     {1'd0,  8'd65}: s1rd1 <= 7;
	     {1'd0,  8'd66}: s1rd1 <= 11;
	     {1'd0,  8'd67}: s1rd1 <= 15;
	     {1'd0,  8'd68}: s1rd1 <= 19;
	     {1'd0,  8'd69}: s1rd1 <= 23;
	     {1'd0,  8'd70}: s1rd1 <= 27;
	     {1'd0,  8'd71}: s1rd1 <= 31;
	     {1'd0,  8'd72}: s1rd1 <= 35;
	     {1'd0,  8'd73}: s1rd1 <= 39;
	     {1'd0,  8'd74}: s1rd1 <= 43;
	     {1'd0,  8'd75}: s1rd1 <= 47;
	     {1'd0,  8'd76}: s1rd1 <= 51;
	     {1'd0,  8'd77}: s1rd1 <= 55;
	     {1'd0,  8'd78}: s1rd1 <= 59;
	     {1'd0,  8'd79}: s1rd1 <= 63;
	     {1'd0,  8'd80}: s1rd1 <= 67;
	     {1'd0,  8'd81}: s1rd1 <= 71;
	     {1'd0,  8'd82}: s1rd1 <= 75;
	     {1'd0,  8'd83}: s1rd1 <= 79;
	     {1'd0,  8'd84}: s1rd1 <= 83;
	     {1'd0,  8'd85}: s1rd1 <= 87;
	     {1'd0,  8'd86}: s1rd1 <= 91;
	     {1'd0,  8'd87}: s1rd1 <= 95;
	     {1'd0,  8'd88}: s1rd1 <= 99;
	     {1'd0,  8'd89}: s1rd1 <= 103;
	     {1'd0,  8'd90}: s1rd1 <= 107;
	     {1'd0,  8'd91}: s1rd1 <= 111;
	     {1'd0,  8'd92}: s1rd1 <= 115;
	     {1'd0,  8'd93}: s1rd1 <= 119;
	     {1'd0,  8'd94}: s1rd1 <= 123;
	     {1'd0,  8'd95}: s1rd1 <= 127;
	     {1'd0,  8'd96}: s1rd1 <= 131;
	     {1'd0,  8'd97}: s1rd1 <= 135;
	     {1'd0,  8'd98}: s1rd1 <= 139;
	     {1'd0,  8'd99}: s1rd1 <= 143;
	     {1'd0,  8'd100}: s1rd1 <= 147;
	     {1'd0,  8'd101}: s1rd1 <= 151;
	     {1'd0,  8'd102}: s1rd1 <= 155;
	     {1'd0,  8'd103}: s1rd1 <= 159;
	     {1'd0,  8'd104}: s1rd1 <= 163;
	     {1'd0,  8'd105}: s1rd1 <= 167;
	     {1'd0,  8'd106}: s1rd1 <= 171;
	     {1'd0,  8'd107}: s1rd1 <= 175;
	     {1'd0,  8'd108}: s1rd1 <= 179;
	     {1'd0,  8'd109}: s1rd1 <= 183;
	     {1'd0,  8'd110}: s1rd1 <= 187;
	     {1'd0,  8'd111}: s1rd1 <= 191;
	     {1'd0,  8'd112}: s1rd1 <= 195;
	     {1'd0,  8'd113}: s1rd1 <= 199;
	     {1'd0,  8'd114}: s1rd1 <= 203;
	     {1'd0,  8'd115}: s1rd1 <= 207;
	     {1'd0,  8'd116}: s1rd1 <= 211;
	     {1'd0,  8'd117}: s1rd1 <= 215;
	     {1'd0,  8'd118}: s1rd1 <= 219;
	     {1'd0,  8'd119}: s1rd1 <= 223;
	     {1'd0,  8'd120}: s1rd1 <= 227;
	     {1'd0,  8'd121}: s1rd1 <= 231;
	     {1'd0,  8'd122}: s1rd1 <= 235;
	     {1'd0,  8'd123}: s1rd1 <= 239;
	     {1'd0,  8'd124}: s1rd1 <= 243;
	     {1'd0,  8'd125}: s1rd1 <= 247;
	     {1'd0,  8'd126}: s1rd1 <= 251;
	     {1'd0,  8'd127}: s1rd1 <= 255;
	     {1'd0,  8'd128}: s1rd1 <= 0;
	     {1'd0,  8'd129}: s1rd1 <= 4;
	     {1'd0,  8'd130}: s1rd1 <= 8;
	     {1'd0,  8'd131}: s1rd1 <= 12;
	     {1'd0,  8'd132}: s1rd1 <= 16;
	     {1'd0,  8'd133}: s1rd1 <= 20;
	     {1'd0,  8'd134}: s1rd1 <= 24;
	     {1'd0,  8'd135}: s1rd1 <= 28;
	     {1'd0,  8'd136}: s1rd1 <= 32;
	     {1'd0,  8'd137}: s1rd1 <= 36;
	     {1'd0,  8'd138}: s1rd1 <= 40;
	     {1'd0,  8'd139}: s1rd1 <= 44;
	     {1'd0,  8'd140}: s1rd1 <= 48;
	     {1'd0,  8'd141}: s1rd1 <= 52;
	     {1'd0,  8'd142}: s1rd1 <= 56;
	     {1'd0,  8'd143}: s1rd1 <= 60;
	     {1'd0,  8'd144}: s1rd1 <= 64;
	     {1'd0,  8'd145}: s1rd1 <= 68;
	     {1'd0,  8'd146}: s1rd1 <= 72;
	     {1'd0,  8'd147}: s1rd1 <= 76;
	     {1'd0,  8'd148}: s1rd1 <= 80;
	     {1'd0,  8'd149}: s1rd1 <= 84;
	     {1'd0,  8'd150}: s1rd1 <= 88;
	     {1'd0,  8'd151}: s1rd1 <= 92;
	     {1'd0,  8'd152}: s1rd1 <= 96;
	     {1'd0,  8'd153}: s1rd1 <= 100;
	     {1'd0,  8'd154}: s1rd1 <= 104;
	     {1'd0,  8'd155}: s1rd1 <= 108;
	     {1'd0,  8'd156}: s1rd1 <= 112;
	     {1'd0,  8'd157}: s1rd1 <= 116;
	     {1'd0,  8'd158}: s1rd1 <= 120;
	     {1'd0,  8'd159}: s1rd1 <= 124;
	     {1'd0,  8'd160}: s1rd1 <= 128;
	     {1'd0,  8'd161}: s1rd1 <= 132;
	     {1'd0,  8'd162}: s1rd1 <= 136;
	     {1'd0,  8'd163}: s1rd1 <= 140;
	     {1'd0,  8'd164}: s1rd1 <= 144;
	     {1'd0,  8'd165}: s1rd1 <= 148;
	     {1'd0,  8'd166}: s1rd1 <= 152;
	     {1'd0,  8'd167}: s1rd1 <= 156;
	     {1'd0,  8'd168}: s1rd1 <= 160;
	     {1'd0,  8'd169}: s1rd1 <= 164;
	     {1'd0,  8'd170}: s1rd1 <= 168;
	     {1'd0,  8'd171}: s1rd1 <= 172;
	     {1'd0,  8'd172}: s1rd1 <= 176;
	     {1'd0,  8'd173}: s1rd1 <= 180;
	     {1'd0,  8'd174}: s1rd1 <= 184;
	     {1'd0,  8'd175}: s1rd1 <= 188;
	     {1'd0,  8'd176}: s1rd1 <= 192;
	     {1'd0,  8'd177}: s1rd1 <= 196;
	     {1'd0,  8'd178}: s1rd1 <= 200;
	     {1'd0,  8'd179}: s1rd1 <= 204;
	     {1'd0,  8'd180}: s1rd1 <= 208;
	     {1'd0,  8'd181}: s1rd1 <= 212;
	     {1'd0,  8'd182}: s1rd1 <= 216;
	     {1'd0,  8'd183}: s1rd1 <= 220;
	     {1'd0,  8'd184}: s1rd1 <= 224;
	     {1'd0,  8'd185}: s1rd1 <= 228;
	     {1'd0,  8'd186}: s1rd1 <= 232;
	     {1'd0,  8'd187}: s1rd1 <= 236;
	     {1'd0,  8'd188}: s1rd1 <= 240;
	     {1'd0,  8'd189}: s1rd1 <= 244;
	     {1'd0,  8'd190}: s1rd1 <= 248;
	     {1'd0,  8'd191}: s1rd1 <= 252;
	     {1'd0,  8'd192}: s1rd1 <= 1;
	     {1'd0,  8'd193}: s1rd1 <= 5;
	     {1'd0,  8'd194}: s1rd1 <= 9;
	     {1'd0,  8'd195}: s1rd1 <= 13;
	     {1'd0,  8'd196}: s1rd1 <= 17;
	     {1'd0,  8'd197}: s1rd1 <= 21;
	     {1'd0,  8'd198}: s1rd1 <= 25;
	     {1'd0,  8'd199}: s1rd1 <= 29;
	     {1'd0,  8'd200}: s1rd1 <= 33;
	     {1'd0,  8'd201}: s1rd1 <= 37;
	     {1'd0,  8'd202}: s1rd1 <= 41;
	     {1'd0,  8'd203}: s1rd1 <= 45;
	     {1'd0,  8'd204}: s1rd1 <= 49;
	     {1'd0,  8'd205}: s1rd1 <= 53;
	     {1'd0,  8'd206}: s1rd1 <= 57;
	     {1'd0,  8'd207}: s1rd1 <= 61;
	     {1'd0,  8'd208}: s1rd1 <= 65;
	     {1'd0,  8'd209}: s1rd1 <= 69;
	     {1'd0,  8'd210}: s1rd1 <= 73;
	     {1'd0,  8'd211}: s1rd1 <= 77;
	     {1'd0,  8'd212}: s1rd1 <= 81;
	     {1'd0,  8'd213}: s1rd1 <= 85;
	     {1'd0,  8'd214}: s1rd1 <= 89;
	     {1'd0,  8'd215}: s1rd1 <= 93;
	     {1'd0,  8'd216}: s1rd1 <= 97;
	     {1'd0,  8'd217}: s1rd1 <= 101;
	     {1'd0,  8'd218}: s1rd1 <= 105;
	     {1'd0,  8'd219}: s1rd1 <= 109;
	     {1'd0,  8'd220}: s1rd1 <= 113;
	     {1'd0,  8'd221}: s1rd1 <= 117;
	     {1'd0,  8'd222}: s1rd1 <= 121;
	     {1'd0,  8'd223}: s1rd1 <= 125;
	     {1'd0,  8'd224}: s1rd1 <= 129;
	     {1'd0,  8'd225}: s1rd1 <= 133;
	     {1'd0,  8'd226}: s1rd1 <= 137;
	     {1'd0,  8'd227}: s1rd1 <= 141;
	     {1'd0,  8'd228}: s1rd1 <= 145;
	     {1'd0,  8'd229}: s1rd1 <= 149;
	     {1'd0,  8'd230}: s1rd1 <= 153;
	     {1'd0,  8'd231}: s1rd1 <= 157;
	     {1'd0,  8'd232}: s1rd1 <= 161;
	     {1'd0,  8'd233}: s1rd1 <= 165;
	     {1'd0,  8'd234}: s1rd1 <= 169;
	     {1'd0,  8'd235}: s1rd1 <= 173;
	     {1'd0,  8'd236}: s1rd1 <= 177;
	     {1'd0,  8'd237}: s1rd1 <= 181;
	     {1'd0,  8'd238}: s1rd1 <= 185;
	     {1'd0,  8'd239}: s1rd1 <= 189;
	     {1'd0,  8'd240}: s1rd1 <= 193;
	     {1'd0,  8'd241}: s1rd1 <= 197;
	     {1'd0,  8'd242}: s1rd1 <= 201;
	     {1'd0,  8'd243}: s1rd1 <= 205;
	     {1'd0,  8'd244}: s1rd1 <= 209;
	     {1'd0,  8'd245}: s1rd1 <= 213;
	     {1'd0,  8'd246}: s1rd1 <= 217;
	     {1'd0,  8'd247}: s1rd1 <= 221;
	     {1'd0,  8'd248}: s1rd1 <= 225;
	     {1'd0,  8'd249}: s1rd1 <= 229;
	     {1'd0,  8'd250}: s1rd1 <= 233;
	     {1'd0,  8'd251}: s1rd1 <= 237;
	     {1'd0,  8'd252}: s1rd1 <= 241;
	     {1'd0,  8'd253}: s1rd1 <= 245;
	     {1'd0,  8'd254}: s1rd1 <= 249;
	     {1'd0,  8'd255}: s1rd1 <= 253;
      endcase      
   end

// synthesis attribute rom_style of s1rd1 is "distributed"
   always @(posedge clk) begin
      case({tm37_d, s1rdloc})
	     {1'd0,  8'd0}: s1rd2 <= 1;
	     {1'd0,  8'd1}: s1rd2 <= 5;
	     {1'd0,  8'd2}: s1rd2 <= 9;
	     {1'd0,  8'd3}: s1rd2 <= 13;
	     {1'd0,  8'd4}: s1rd2 <= 17;
	     {1'd0,  8'd5}: s1rd2 <= 21;
	     {1'd0,  8'd6}: s1rd2 <= 25;
	     {1'd0,  8'd7}: s1rd2 <= 29;
	     {1'd0,  8'd8}: s1rd2 <= 33;
	     {1'd0,  8'd9}: s1rd2 <= 37;
	     {1'd0,  8'd10}: s1rd2 <= 41;
	     {1'd0,  8'd11}: s1rd2 <= 45;
	     {1'd0,  8'd12}: s1rd2 <= 49;
	     {1'd0,  8'd13}: s1rd2 <= 53;
	     {1'd0,  8'd14}: s1rd2 <= 57;
	     {1'd0,  8'd15}: s1rd2 <= 61;
	     {1'd0,  8'd16}: s1rd2 <= 65;
	     {1'd0,  8'd17}: s1rd2 <= 69;
	     {1'd0,  8'd18}: s1rd2 <= 73;
	     {1'd0,  8'd19}: s1rd2 <= 77;
	     {1'd0,  8'd20}: s1rd2 <= 81;
	     {1'd0,  8'd21}: s1rd2 <= 85;
	     {1'd0,  8'd22}: s1rd2 <= 89;
	     {1'd0,  8'd23}: s1rd2 <= 93;
	     {1'd0,  8'd24}: s1rd2 <= 97;
	     {1'd0,  8'd25}: s1rd2 <= 101;
	     {1'd0,  8'd26}: s1rd2 <= 105;
	     {1'd0,  8'd27}: s1rd2 <= 109;
	     {1'd0,  8'd28}: s1rd2 <= 113;
	     {1'd0,  8'd29}: s1rd2 <= 117;
	     {1'd0,  8'd30}: s1rd2 <= 121;
	     {1'd0,  8'd31}: s1rd2 <= 125;
	     {1'd0,  8'd32}: s1rd2 <= 129;
	     {1'd0,  8'd33}: s1rd2 <= 133;
	     {1'd0,  8'd34}: s1rd2 <= 137;
	     {1'd0,  8'd35}: s1rd2 <= 141;
	     {1'd0,  8'd36}: s1rd2 <= 145;
	     {1'd0,  8'd37}: s1rd2 <= 149;
	     {1'd0,  8'd38}: s1rd2 <= 153;
	     {1'd0,  8'd39}: s1rd2 <= 157;
	     {1'd0,  8'd40}: s1rd2 <= 161;
	     {1'd0,  8'd41}: s1rd2 <= 165;
	     {1'd0,  8'd42}: s1rd2 <= 169;
	     {1'd0,  8'd43}: s1rd2 <= 173;
	     {1'd0,  8'd44}: s1rd2 <= 177;
	     {1'd0,  8'd45}: s1rd2 <= 181;
	     {1'd0,  8'd46}: s1rd2 <= 185;
	     {1'd0,  8'd47}: s1rd2 <= 189;
	     {1'd0,  8'd48}: s1rd2 <= 193;
	     {1'd0,  8'd49}: s1rd2 <= 197;
	     {1'd0,  8'd50}: s1rd2 <= 201;
	     {1'd0,  8'd51}: s1rd2 <= 205;
	     {1'd0,  8'd52}: s1rd2 <= 209;
	     {1'd0,  8'd53}: s1rd2 <= 213;
	     {1'd0,  8'd54}: s1rd2 <= 217;
	     {1'd0,  8'd55}: s1rd2 <= 221;
	     {1'd0,  8'd56}: s1rd2 <= 225;
	     {1'd0,  8'd57}: s1rd2 <= 229;
	     {1'd0,  8'd58}: s1rd2 <= 233;
	     {1'd0,  8'd59}: s1rd2 <= 237;
	     {1'd0,  8'd60}: s1rd2 <= 241;
	     {1'd0,  8'd61}: s1rd2 <= 245;
	     {1'd0,  8'd62}: s1rd2 <= 249;
	     {1'd0,  8'd63}: s1rd2 <= 253;
	     {1'd0,  8'd64}: s1rd2 <= 0;
	     {1'd0,  8'd65}: s1rd2 <= 4;
	     {1'd0,  8'd66}: s1rd2 <= 8;
	     {1'd0,  8'd67}: s1rd2 <= 12;
	     {1'd0,  8'd68}: s1rd2 <= 16;
	     {1'd0,  8'd69}: s1rd2 <= 20;
	     {1'd0,  8'd70}: s1rd2 <= 24;
	     {1'd0,  8'd71}: s1rd2 <= 28;
	     {1'd0,  8'd72}: s1rd2 <= 32;
	     {1'd0,  8'd73}: s1rd2 <= 36;
	     {1'd0,  8'd74}: s1rd2 <= 40;
	     {1'd0,  8'd75}: s1rd2 <= 44;
	     {1'd0,  8'd76}: s1rd2 <= 48;
	     {1'd0,  8'd77}: s1rd2 <= 52;
	     {1'd0,  8'd78}: s1rd2 <= 56;
	     {1'd0,  8'd79}: s1rd2 <= 60;
	     {1'd0,  8'd80}: s1rd2 <= 64;
	     {1'd0,  8'd81}: s1rd2 <= 68;
	     {1'd0,  8'd82}: s1rd2 <= 72;
	     {1'd0,  8'd83}: s1rd2 <= 76;
	     {1'd0,  8'd84}: s1rd2 <= 80;
	     {1'd0,  8'd85}: s1rd2 <= 84;
	     {1'd0,  8'd86}: s1rd2 <= 88;
	     {1'd0,  8'd87}: s1rd2 <= 92;
	     {1'd0,  8'd88}: s1rd2 <= 96;
	     {1'd0,  8'd89}: s1rd2 <= 100;
	     {1'd0,  8'd90}: s1rd2 <= 104;
	     {1'd0,  8'd91}: s1rd2 <= 108;
	     {1'd0,  8'd92}: s1rd2 <= 112;
	     {1'd0,  8'd93}: s1rd2 <= 116;
	     {1'd0,  8'd94}: s1rd2 <= 120;
	     {1'd0,  8'd95}: s1rd2 <= 124;
	     {1'd0,  8'd96}: s1rd2 <= 128;
	     {1'd0,  8'd97}: s1rd2 <= 132;
	     {1'd0,  8'd98}: s1rd2 <= 136;
	     {1'd0,  8'd99}: s1rd2 <= 140;
	     {1'd0,  8'd100}: s1rd2 <= 144;
	     {1'd0,  8'd101}: s1rd2 <= 148;
	     {1'd0,  8'd102}: s1rd2 <= 152;
	     {1'd0,  8'd103}: s1rd2 <= 156;
	     {1'd0,  8'd104}: s1rd2 <= 160;
	     {1'd0,  8'd105}: s1rd2 <= 164;
	     {1'd0,  8'd106}: s1rd2 <= 168;
	     {1'd0,  8'd107}: s1rd2 <= 172;
	     {1'd0,  8'd108}: s1rd2 <= 176;
	     {1'd0,  8'd109}: s1rd2 <= 180;
	     {1'd0,  8'd110}: s1rd2 <= 184;
	     {1'd0,  8'd111}: s1rd2 <= 188;
	     {1'd0,  8'd112}: s1rd2 <= 192;
	     {1'd0,  8'd113}: s1rd2 <= 196;
	     {1'd0,  8'd114}: s1rd2 <= 200;
	     {1'd0,  8'd115}: s1rd2 <= 204;
	     {1'd0,  8'd116}: s1rd2 <= 208;
	     {1'd0,  8'd117}: s1rd2 <= 212;
	     {1'd0,  8'd118}: s1rd2 <= 216;
	     {1'd0,  8'd119}: s1rd2 <= 220;
	     {1'd0,  8'd120}: s1rd2 <= 224;
	     {1'd0,  8'd121}: s1rd2 <= 228;
	     {1'd0,  8'd122}: s1rd2 <= 232;
	     {1'd0,  8'd123}: s1rd2 <= 236;
	     {1'd0,  8'd124}: s1rd2 <= 240;
	     {1'd0,  8'd125}: s1rd2 <= 244;
	     {1'd0,  8'd126}: s1rd2 <= 248;
	     {1'd0,  8'd127}: s1rd2 <= 252;
	     {1'd0,  8'd128}: s1rd2 <= 3;
	     {1'd0,  8'd129}: s1rd2 <= 7;
	     {1'd0,  8'd130}: s1rd2 <= 11;
	     {1'd0,  8'd131}: s1rd2 <= 15;
	     {1'd0,  8'd132}: s1rd2 <= 19;
	     {1'd0,  8'd133}: s1rd2 <= 23;
	     {1'd0,  8'd134}: s1rd2 <= 27;
	     {1'd0,  8'd135}: s1rd2 <= 31;
	     {1'd0,  8'd136}: s1rd2 <= 35;
	     {1'd0,  8'd137}: s1rd2 <= 39;
	     {1'd0,  8'd138}: s1rd2 <= 43;
	     {1'd0,  8'd139}: s1rd2 <= 47;
	     {1'd0,  8'd140}: s1rd2 <= 51;
	     {1'd0,  8'd141}: s1rd2 <= 55;
	     {1'd0,  8'd142}: s1rd2 <= 59;
	     {1'd0,  8'd143}: s1rd2 <= 63;
	     {1'd0,  8'd144}: s1rd2 <= 67;
	     {1'd0,  8'd145}: s1rd2 <= 71;
	     {1'd0,  8'd146}: s1rd2 <= 75;
	     {1'd0,  8'd147}: s1rd2 <= 79;
	     {1'd0,  8'd148}: s1rd2 <= 83;
	     {1'd0,  8'd149}: s1rd2 <= 87;
	     {1'd0,  8'd150}: s1rd2 <= 91;
	     {1'd0,  8'd151}: s1rd2 <= 95;
	     {1'd0,  8'd152}: s1rd2 <= 99;
	     {1'd0,  8'd153}: s1rd2 <= 103;
	     {1'd0,  8'd154}: s1rd2 <= 107;
	     {1'd0,  8'd155}: s1rd2 <= 111;
	     {1'd0,  8'd156}: s1rd2 <= 115;
	     {1'd0,  8'd157}: s1rd2 <= 119;
	     {1'd0,  8'd158}: s1rd2 <= 123;
	     {1'd0,  8'd159}: s1rd2 <= 127;
	     {1'd0,  8'd160}: s1rd2 <= 131;
	     {1'd0,  8'd161}: s1rd2 <= 135;
	     {1'd0,  8'd162}: s1rd2 <= 139;
	     {1'd0,  8'd163}: s1rd2 <= 143;
	     {1'd0,  8'd164}: s1rd2 <= 147;
	     {1'd0,  8'd165}: s1rd2 <= 151;
	     {1'd0,  8'd166}: s1rd2 <= 155;
	     {1'd0,  8'd167}: s1rd2 <= 159;
	     {1'd0,  8'd168}: s1rd2 <= 163;
	     {1'd0,  8'd169}: s1rd2 <= 167;
	     {1'd0,  8'd170}: s1rd2 <= 171;
	     {1'd0,  8'd171}: s1rd2 <= 175;
	     {1'd0,  8'd172}: s1rd2 <= 179;
	     {1'd0,  8'd173}: s1rd2 <= 183;
	     {1'd0,  8'd174}: s1rd2 <= 187;
	     {1'd0,  8'd175}: s1rd2 <= 191;
	     {1'd0,  8'd176}: s1rd2 <= 195;
	     {1'd0,  8'd177}: s1rd2 <= 199;
	     {1'd0,  8'd178}: s1rd2 <= 203;
	     {1'd0,  8'd179}: s1rd2 <= 207;
	     {1'd0,  8'd180}: s1rd2 <= 211;
	     {1'd0,  8'd181}: s1rd2 <= 215;
	     {1'd0,  8'd182}: s1rd2 <= 219;
	     {1'd0,  8'd183}: s1rd2 <= 223;
	     {1'd0,  8'd184}: s1rd2 <= 227;
	     {1'd0,  8'd185}: s1rd2 <= 231;
	     {1'd0,  8'd186}: s1rd2 <= 235;
	     {1'd0,  8'd187}: s1rd2 <= 239;
	     {1'd0,  8'd188}: s1rd2 <= 243;
	     {1'd0,  8'd189}: s1rd2 <= 247;
	     {1'd0,  8'd190}: s1rd2 <= 251;
	     {1'd0,  8'd191}: s1rd2 <= 255;
	     {1'd0,  8'd192}: s1rd2 <= 2;
	     {1'd0,  8'd193}: s1rd2 <= 6;
	     {1'd0,  8'd194}: s1rd2 <= 10;
	     {1'd0,  8'd195}: s1rd2 <= 14;
	     {1'd0,  8'd196}: s1rd2 <= 18;
	     {1'd0,  8'd197}: s1rd2 <= 22;
	     {1'd0,  8'd198}: s1rd2 <= 26;
	     {1'd0,  8'd199}: s1rd2 <= 30;
	     {1'd0,  8'd200}: s1rd2 <= 34;
	     {1'd0,  8'd201}: s1rd2 <= 38;
	     {1'd0,  8'd202}: s1rd2 <= 42;
	     {1'd0,  8'd203}: s1rd2 <= 46;
	     {1'd0,  8'd204}: s1rd2 <= 50;
	     {1'd0,  8'd205}: s1rd2 <= 54;
	     {1'd0,  8'd206}: s1rd2 <= 58;
	     {1'd0,  8'd207}: s1rd2 <= 62;
	     {1'd0,  8'd208}: s1rd2 <= 66;
	     {1'd0,  8'd209}: s1rd2 <= 70;
	     {1'd0,  8'd210}: s1rd2 <= 74;
	     {1'd0,  8'd211}: s1rd2 <= 78;
	     {1'd0,  8'd212}: s1rd2 <= 82;
	     {1'd0,  8'd213}: s1rd2 <= 86;
	     {1'd0,  8'd214}: s1rd2 <= 90;
	     {1'd0,  8'd215}: s1rd2 <= 94;
	     {1'd0,  8'd216}: s1rd2 <= 98;
	     {1'd0,  8'd217}: s1rd2 <= 102;
	     {1'd0,  8'd218}: s1rd2 <= 106;
	     {1'd0,  8'd219}: s1rd2 <= 110;
	     {1'd0,  8'd220}: s1rd2 <= 114;
	     {1'd0,  8'd221}: s1rd2 <= 118;
	     {1'd0,  8'd222}: s1rd2 <= 122;
	     {1'd0,  8'd223}: s1rd2 <= 126;
	     {1'd0,  8'd224}: s1rd2 <= 130;
	     {1'd0,  8'd225}: s1rd2 <= 134;
	     {1'd0,  8'd226}: s1rd2 <= 138;
	     {1'd0,  8'd227}: s1rd2 <= 142;
	     {1'd0,  8'd228}: s1rd2 <= 146;
	     {1'd0,  8'd229}: s1rd2 <= 150;
	     {1'd0,  8'd230}: s1rd2 <= 154;
	     {1'd0,  8'd231}: s1rd2 <= 158;
	     {1'd0,  8'd232}: s1rd2 <= 162;
	     {1'd0,  8'd233}: s1rd2 <= 166;
	     {1'd0,  8'd234}: s1rd2 <= 170;
	     {1'd0,  8'd235}: s1rd2 <= 174;
	     {1'd0,  8'd236}: s1rd2 <= 178;
	     {1'd0,  8'd237}: s1rd2 <= 182;
	     {1'd0,  8'd238}: s1rd2 <= 186;
	     {1'd0,  8'd239}: s1rd2 <= 190;
	     {1'd0,  8'd240}: s1rd2 <= 194;
	     {1'd0,  8'd241}: s1rd2 <= 198;
	     {1'd0,  8'd242}: s1rd2 <= 202;
	     {1'd0,  8'd243}: s1rd2 <= 206;
	     {1'd0,  8'd244}: s1rd2 <= 210;
	     {1'd0,  8'd245}: s1rd2 <= 214;
	     {1'd0,  8'd246}: s1rd2 <= 218;
	     {1'd0,  8'd247}: s1rd2 <= 222;
	     {1'd0,  8'd248}: s1rd2 <= 226;
	     {1'd0,  8'd249}: s1rd2 <= 230;
	     {1'd0,  8'd250}: s1rd2 <= 234;
	     {1'd0,  8'd251}: s1rd2 <= 238;
	     {1'd0,  8'd252}: s1rd2 <= 242;
	     {1'd0,  8'd253}: s1rd2 <= 246;
	     {1'd0,  8'd254}: s1rd2 <= 250;
	     {1'd0,  8'd255}: s1rd2 <= 254;
      endcase      
   end

// synthesis attribute rom_style of s1rd2 is "distributed"
   always @(posedge clk) begin
      case({tm37_d, s1rdloc})
	     {1'd0,  8'd0}: s1rd3 <= 0;
	     {1'd0,  8'd1}: s1rd3 <= 4;
	     {1'd0,  8'd2}: s1rd3 <= 8;
	     {1'd0,  8'd3}: s1rd3 <= 12;
	     {1'd0,  8'd4}: s1rd3 <= 16;
	     {1'd0,  8'd5}: s1rd3 <= 20;
	     {1'd0,  8'd6}: s1rd3 <= 24;
	     {1'd0,  8'd7}: s1rd3 <= 28;
	     {1'd0,  8'd8}: s1rd3 <= 32;
	     {1'd0,  8'd9}: s1rd3 <= 36;
	     {1'd0,  8'd10}: s1rd3 <= 40;
	     {1'd0,  8'd11}: s1rd3 <= 44;
	     {1'd0,  8'd12}: s1rd3 <= 48;
	     {1'd0,  8'd13}: s1rd3 <= 52;
	     {1'd0,  8'd14}: s1rd3 <= 56;
	     {1'd0,  8'd15}: s1rd3 <= 60;
	     {1'd0,  8'd16}: s1rd3 <= 64;
	     {1'd0,  8'd17}: s1rd3 <= 68;
	     {1'd0,  8'd18}: s1rd3 <= 72;
	     {1'd0,  8'd19}: s1rd3 <= 76;
	     {1'd0,  8'd20}: s1rd3 <= 80;
	     {1'd0,  8'd21}: s1rd3 <= 84;
	     {1'd0,  8'd22}: s1rd3 <= 88;
	     {1'd0,  8'd23}: s1rd3 <= 92;
	     {1'd0,  8'd24}: s1rd3 <= 96;
	     {1'd0,  8'd25}: s1rd3 <= 100;
	     {1'd0,  8'd26}: s1rd3 <= 104;
	     {1'd0,  8'd27}: s1rd3 <= 108;
	     {1'd0,  8'd28}: s1rd3 <= 112;
	     {1'd0,  8'd29}: s1rd3 <= 116;
	     {1'd0,  8'd30}: s1rd3 <= 120;
	     {1'd0,  8'd31}: s1rd3 <= 124;
	     {1'd0,  8'd32}: s1rd3 <= 128;
	     {1'd0,  8'd33}: s1rd3 <= 132;
	     {1'd0,  8'd34}: s1rd3 <= 136;
	     {1'd0,  8'd35}: s1rd3 <= 140;
	     {1'd0,  8'd36}: s1rd3 <= 144;
	     {1'd0,  8'd37}: s1rd3 <= 148;
	     {1'd0,  8'd38}: s1rd3 <= 152;
	     {1'd0,  8'd39}: s1rd3 <= 156;
	     {1'd0,  8'd40}: s1rd3 <= 160;
	     {1'd0,  8'd41}: s1rd3 <= 164;
	     {1'd0,  8'd42}: s1rd3 <= 168;
	     {1'd0,  8'd43}: s1rd3 <= 172;
	     {1'd0,  8'd44}: s1rd3 <= 176;
	     {1'd0,  8'd45}: s1rd3 <= 180;
	     {1'd0,  8'd46}: s1rd3 <= 184;
	     {1'd0,  8'd47}: s1rd3 <= 188;
	     {1'd0,  8'd48}: s1rd3 <= 192;
	     {1'd0,  8'd49}: s1rd3 <= 196;
	     {1'd0,  8'd50}: s1rd3 <= 200;
	     {1'd0,  8'd51}: s1rd3 <= 204;
	     {1'd0,  8'd52}: s1rd3 <= 208;
	     {1'd0,  8'd53}: s1rd3 <= 212;
	     {1'd0,  8'd54}: s1rd3 <= 216;
	     {1'd0,  8'd55}: s1rd3 <= 220;
	     {1'd0,  8'd56}: s1rd3 <= 224;
	     {1'd0,  8'd57}: s1rd3 <= 228;
	     {1'd0,  8'd58}: s1rd3 <= 232;
	     {1'd0,  8'd59}: s1rd3 <= 236;
	     {1'd0,  8'd60}: s1rd3 <= 240;
	     {1'd0,  8'd61}: s1rd3 <= 244;
	     {1'd0,  8'd62}: s1rd3 <= 248;
	     {1'd0,  8'd63}: s1rd3 <= 252;
	     {1'd0,  8'd64}: s1rd3 <= 1;
	     {1'd0,  8'd65}: s1rd3 <= 5;
	     {1'd0,  8'd66}: s1rd3 <= 9;
	     {1'd0,  8'd67}: s1rd3 <= 13;
	     {1'd0,  8'd68}: s1rd3 <= 17;
	     {1'd0,  8'd69}: s1rd3 <= 21;
	     {1'd0,  8'd70}: s1rd3 <= 25;
	     {1'd0,  8'd71}: s1rd3 <= 29;
	     {1'd0,  8'd72}: s1rd3 <= 33;
	     {1'd0,  8'd73}: s1rd3 <= 37;
	     {1'd0,  8'd74}: s1rd3 <= 41;
	     {1'd0,  8'd75}: s1rd3 <= 45;
	     {1'd0,  8'd76}: s1rd3 <= 49;
	     {1'd0,  8'd77}: s1rd3 <= 53;
	     {1'd0,  8'd78}: s1rd3 <= 57;
	     {1'd0,  8'd79}: s1rd3 <= 61;
	     {1'd0,  8'd80}: s1rd3 <= 65;
	     {1'd0,  8'd81}: s1rd3 <= 69;
	     {1'd0,  8'd82}: s1rd3 <= 73;
	     {1'd0,  8'd83}: s1rd3 <= 77;
	     {1'd0,  8'd84}: s1rd3 <= 81;
	     {1'd0,  8'd85}: s1rd3 <= 85;
	     {1'd0,  8'd86}: s1rd3 <= 89;
	     {1'd0,  8'd87}: s1rd3 <= 93;
	     {1'd0,  8'd88}: s1rd3 <= 97;
	     {1'd0,  8'd89}: s1rd3 <= 101;
	     {1'd0,  8'd90}: s1rd3 <= 105;
	     {1'd0,  8'd91}: s1rd3 <= 109;
	     {1'd0,  8'd92}: s1rd3 <= 113;
	     {1'd0,  8'd93}: s1rd3 <= 117;
	     {1'd0,  8'd94}: s1rd3 <= 121;
	     {1'd0,  8'd95}: s1rd3 <= 125;
	     {1'd0,  8'd96}: s1rd3 <= 129;
	     {1'd0,  8'd97}: s1rd3 <= 133;
	     {1'd0,  8'd98}: s1rd3 <= 137;
	     {1'd0,  8'd99}: s1rd3 <= 141;
	     {1'd0,  8'd100}: s1rd3 <= 145;
	     {1'd0,  8'd101}: s1rd3 <= 149;
	     {1'd0,  8'd102}: s1rd3 <= 153;
	     {1'd0,  8'd103}: s1rd3 <= 157;
	     {1'd0,  8'd104}: s1rd3 <= 161;
	     {1'd0,  8'd105}: s1rd3 <= 165;
	     {1'd0,  8'd106}: s1rd3 <= 169;
	     {1'd0,  8'd107}: s1rd3 <= 173;
	     {1'd0,  8'd108}: s1rd3 <= 177;
	     {1'd0,  8'd109}: s1rd3 <= 181;
	     {1'd0,  8'd110}: s1rd3 <= 185;
	     {1'd0,  8'd111}: s1rd3 <= 189;
	     {1'd0,  8'd112}: s1rd3 <= 193;
	     {1'd0,  8'd113}: s1rd3 <= 197;
	     {1'd0,  8'd114}: s1rd3 <= 201;
	     {1'd0,  8'd115}: s1rd3 <= 205;
	     {1'd0,  8'd116}: s1rd3 <= 209;
	     {1'd0,  8'd117}: s1rd3 <= 213;
	     {1'd0,  8'd118}: s1rd3 <= 217;
	     {1'd0,  8'd119}: s1rd3 <= 221;
	     {1'd0,  8'd120}: s1rd3 <= 225;
	     {1'd0,  8'd121}: s1rd3 <= 229;
	     {1'd0,  8'd122}: s1rd3 <= 233;
	     {1'd0,  8'd123}: s1rd3 <= 237;
	     {1'd0,  8'd124}: s1rd3 <= 241;
	     {1'd0,  8'd125}: s1rd3 <= 245;
	     {1'd0,  8'd126}: s1rd3 <= 249;
	     {1'd0,  8'd127}: s1rd3 <= 253;
	     {1'd0,  8'd128}: s1rd3 <= 2;
	     {1'd0,  8'd129}: s1rd3 <= 6;
	     {1'd0,  8'd130}: s1rd3 <= 10;
	     {1'd0,  8'd131}: s1rd3 <= 14;
	     {1'd0,  8'd132}: s1rd3 <= 18;
	     {1'd0,  8'd133}: s1rd3 <= 22;
	     {1'd0,  8'd134}: s1rd3 <= 26;
	     {1'd0,  8'd135}: s1rd3 <= 30;
	     {1'd0,  8'd136}: s1rd3 <= 34;
	     {1'd0,  8'd137}: s1rd3 <= 38;
	     {1'd0,  8'd138}: s1rd3 <= 42;
	     {1'd0,  8'd139}: s1rd3 <= 46;
	     {1'd0,  8'd140}: s1rd3 <= 50;
	     {1'd0,  8'd141}: s1rd3 <= 54;
	     {1'd0,  8'd142}: s1rd3 <= 58;
	     {1'd0,  8'd143}: s1rd3 <= 62;
	     {1'd0,  8'd144}: s1rd3 <= 66;
	     {1'd0,  8'd145}: s1rd3 <= 70;
	     {1'd0,  8'd146}: s1rd3 <= 74;
	     {1'd0,  8'd147}: s1rd3 <= 78;
	     {1'd0,  8'd148}: s1rd3 <= 82;
	     {1'd0,  8'd149}: s1rd3 <= 86;
	     {1'd0,  8'd150}: s1rd3 <= 90;
	     {1'd0,  8'd151}: s1rd3 <= 94;
	     {1'd0,  8'd152}: s1rd3 <= 98;
	     {1'd0,  8'd153}: s1rd3 <= 102;
	     {1'd0,  8'd154}: s1rd3 <= 106;
	     {1'd0,  8'd155}: s1rd3 <= 110;
	     {1'd0,  8'd156}: s1rd3 <= 114;
	     {1'd0,  8'd157}: s1rd3 <= 118;
	     {1'd0,  8'd158}: s1rd3 <= 122;
	     {1'd0,  8'd159}: s1rd3 <= 126;
	     {1'd0,  8'd160}: s1rd3 <= 130;
	     {1'd0,  8'd161}: s1rd3 <= 134;
	     {1'd0,  8'd162}: s1rd3 <= 138;
	     {1'd0,  8'd163}: s1rd3 <= 142;
	     {1'd0,  8'd164}: s1rd3 <= 146;
	     {1'd0,  8'd165}: s1rd3 <= 150;
	     {1'd0,  8'd166}: s1rd3 <= 154;
	     {1'd0,  8'd167}: s1rd3 <= 158;
	     {1'd0,  8'd168}: s1rd3 <= 162;
	     {1'd0,  8'd169}: s1rd3 <= 166;
	     {1'd0,  8'd170}: s1rd3 <= 170;
	     {1'd0,  8'd171}: s1rd3 <= 174;
	     {1'd0,  8'd172}: s1rd3 <= 178;
	     {1'd0,  8'd173}: s1rd3 <= 182;
	     {1'd0,  8'd174}: s1rd3 <= 186;
	     {1'd0,  8'd175}: s1rd3 <= 190;
	     {1'd0,  8'd176}: s1rd3 <= 194;
	     {1'd0,  8'd177}: s1rd3 <= 198;
	     {1'd0,  8'd178}: s1rd3 <= 202;
	     {1'd0,  8'd179}: s1rd3 <= 206;
	     {1'd0,  8'd180}: s1rd3 <= 210;
	     {1'd0,  8'd181}: s1rd3 <= 214;
	     {1'd0,  8'd182}: s1rd3 <= 218;
	     {1'd0,  8'd183}: s1rd3 <= 222;
	     {1'd0,  8'd184}: s1rd3 <= 226;
	     {1'd0,  8'd185}: s1rd3 <= 230;
	     {1'd0,  8'd186}: s1rd3 <= 234;
	     {1'd0,  8'd187}: s1rd3 <= 238;
	     {1'd0,  8'd188}: s1rd3 <= 242;
	     {1'd0,  8'd189}: s1rd3 <= 246;
	     {1'd0,  8'd190}: s1rd3 <= 250;
	     {1'd0,  8'd191}: s1rd3 <= 254;
	     {1'd0,  8'd192}: s1rd3 <= 3;
	     {1'd0,  8'd193}: s1rd3 <= 7;
	     {1'd0,  8'd194}: s1rd3 <= 11;
	     {1'd0,  8'd195}: s1rd3 <= 15;
	     {1'd0,  8'd196}: s1rd3 <= 19;
	     {1'd0,  8'd197}: s1rd3 <= 23;
	     {1'd0,  8'd198}: s1rd3 <= 27;
	     {1'd0,  8'd199}: s1rd3 <= 31;
	     {1'd0,  8'd200}: s1rd3 <= 35;
	     {1'd0,  8'd201}: s1rd3 <= 39;
	     {1'd0,  8'd202}: s1rd3 <= 43;
	     {1'd0,  8'd203}: s1rd3 <= 47;
	     {1'd0,  8'd204}: s1rd3 <= 51;
	     {1'd0,  8'd205}: s1rd3 <= 55;
	     {1'd0,  8'd206}: s1rd3 <= 59;
	     {1'd0,  8'd207}: s1rd3 <= 63;
	     {1'd0,  8'd208}: s1rd3 <= 67;
	     {1'd0,  8'd209}: s1rd3 <= 71;
	     {1'd0,  8'd210}: s1rd3 <= 75;
	     {1'd0,  8'd211}: s1rd3 <= 79;
	     {1'd0,  8'd212}: s1rd3 <= 83;
	     {1'd0,  8'd213}: s1rd3 <= 87;
	     {1'd0,  8'd214}: s1rd3 <= 91;
	     {1'd0,  8'd215}: s1rd3 <= 95;
	     {1'd0,  8'd216}: s1rd3 <= 99;
	     {1'd0,  8'd217}: s1rd3 <= 103;
	     {1'd0,  8'd218}: s1rd3 <= 107;
	     {1'd0,  8'd219}: s1rd3 <= 111;
	     {1'd0,  8'd220}: s1rd3 <= 115;
	     {1'd0,  8'd221}: s1rd3 <= 119;
	     {1'd0,  8'd222}: s1rd3 <= 123;
	     {1'd0,  8'd223}: s1rd3 <= 127;
	     {1'd0,  8'd224}: s1rd3 <= 131;
	     {1'd0,  8'd225}: s1rd3 <= 135;
	     {1'd0,  8'd226}: s1rd3 <= 139;
	     {1'd0,  8'd227}: s1rd3 <= 143;
	     {1'd0,  8'd228}: s1rd3 <= 147;
	     {1'd0,  8'd229}: s1rd3 <= 151;
	     {1'd0,  8'd230}: s1rd3 <= 155;
	     {1'd0,  8'd231}: s1rd3 <= 159;
	     {1'd0,  8'd232}: s1rd3 <= 163;
	     {1'd0,  8'd233}: s1rd3 <= 167;
	     {1'd0,  8'd234}: s1rd3 <= 171;
	     {1'd0,  8'd235}: s1rd3 <= 175;
	     {1'd0,  8'd236}: s1rd3 <= 179;
	     {1'd0,  8'd237}: s1rd3 <= 183;
	     {1'd0,  8'd238}: s1rd3 <= 187;
	     {1'd0,  8'd239}: s1rd3 <= 191;
	     {1'd0,  8'd240}: s1rd3 <= 195;
	     {1'd0,  8'd241}: s1rd3 <= 199;
	     {1'd0,  8'd242}: s1rd3 <= 203;
	     {1'd0,  8'd243}: s1rd3 <= 207;
	     {1'd0,  8'd244}: s1rd3 <= 211;
	     {1'd0,  8'd245}: s1rd3 <= 215;
	     {1'd0,  8'd246}: s1rd3 <= 219;
	     {1'd0,  8'd247}: s1rd3 <= 223;
	     {1'd0,  8'd248}: s1rd3 <= 227;
	     {1'd0,  8'd249}: s1rd3 <= 231;
	     {1'd0,  8'd250}: s1rd3 <= 235;
	     {1'd0,  8'd251}: s1rd3 <= 239;
	     {1'd0,  8'd252}: s1rd3 <= 243;
	     {1'd0,  8'd253}: s1rd3 <= 247;
	     {1'd0,  8'd254}: s1rd3 <= 251;
	     {1'd0,  8'd255}: s1rd3 <= 255;
      endcase      
   end

// synthesis attribute rom_style of s1rd3 is "distributed"
    swNet25576 sw(tm37_d, clk, muxCycle, t0, s0, t1, s1, t2, s2, t3, s3);

   always @(posedge clk) begin
      case({tm37_dd, writeCycle})
	      {1'd0, 8'd0}: s2wr0 <= 192;
	      {1'd0, 8'd1}: s2wr0 <= 193;
	      {1'd0, 8'd2}: s2wr0 <= 194;
	      {1'd0, 8'd3}: s2wr0 <= 195;
	      {1'd0, 8'd4}: s2wr0 <= 196;
	      {1'd0, 8'd5}: s2wr0 <= 197;
	      {1'd0, 8'd6}: s2wr0 <= 198;
	      {1'd0, 8'd7}: s2wr0 <= 199;
	      {1'd0, 8'd8}: s2wr0 <= 200;
	      {1'd0, 8'd9}: s2wr0 <= 201;
	      {1'd0, 8'd10}: s2wr0 <= 202;
	      {1'd0, 8'd11}: s2wr0 <= 203;
	      {1'd0, 8'd12}: s2wr0 <= 204;
	      {1'd0, 8'd13}: s2wr0 <= 205;
	      {1'd0, 8'd14}: s2wr0 <= 206;
	      {1'd0, 8'd15}: s2wr0 <= 207;
	      {1'd0, 8'd16}: s2wr0 <= 208;
	      {1'd0, 8'd17}: s2wr0 <= 209;
	      {1'd0, 8'd18}: s2wr0 <= 210;
	      {1'd0, 8'd19}: s2wr0 <= 211;
	      {1'd0, 8'd20}: s2wr0 <= 212;
	      {1'd0, 8'd21}: s2wr0 <= 213;
	      {1'd0, 8'd22}: s2wr0 <= 214;
	      {1'd0, 8'd23}: s2wr0 <= 215;
	      {1'd0, 8'd24}: s2wr0 <= 216;
	      {1'd0, 8'd25}: s2wr0 <= 217;
	      {1'd0, 8'd26}: s2wr0 <= 218;
	      {1'd0, 8'd27}: s2wr0 <= 219;
	      {1'd0, 8'd28}: s2wr0 <= 220;
	      {1'd0, 8'd29}: s2wr0 <= 221;
	      {1'd0, 8'd30}: s2wr0 <= 222;
	      {1'd0, 8'd31}: s2wr0 <= 223;
	      {1'd0, 8'd32}: s2wr0 <= 224;
	      {1'd0, 8'd33}: s2wr0 <= 225;
	      {1'd0, 8'd34}: s2wr0 <= 226;
	      {1'd0, 8'd35}: s2wr0 <= 227;
	      {1'd0, 8'd36}: s2wr0 <= 228;
	      {1'd0, 8'd37}: s2wr0 <= 229;
	      {1'd0, 8'd38}: s2wr0 <= 230;
	      {1'd0, 8'd39}: s2wr0 <= 231;
	      {1'd0, 8'd40}: s2wr0 <= 232;
	      {1'd0, 8'd41}: s2wr0 <= 233;
	      {1'd0, 8'd42}: s2wr0 <= 234;
	      {1'd0, 8'd43}: s2wr0 <= 235;
	      {1'd0, 8'd44}: s2wr0 <= 236;
	      {1'd0, 8'd45}: s2wr0 <= 237;
	      {1'd0, 8'd46}: s2wr0 <= 238;
	      {1'd0, 8'd47}: s2wr0 <= 239;
	      {1'd0, 8'd48}: s2wr0 <= 240;
	      {1'd0, 8'd49}: s2wr0 <= 241;
	      {1'd0, 8'd50}: s2wr0 <= 242;
	      {1'd0, 8'd51}: s2wr0 <= 243;
	      {1'd0, 8'd52}: s2wr0 <= 244;
	      {1'd0, 8'd53}: s2wr0 <= 245;
	      {1'd0, 8'd54}: s2wr0 <= 246;
	      {1'd0, 8'd55}: s2wr0 <= 247;
	      {1'd0, 8'd56}: s2wr0 <= 248;
	      {1'd0, 8'd57}: s2wr0 <= 249;
	      {1'd0, 8'd58}: s2wr0 <= 250;
	      {1'd0, 8'd59}: s2wr0 <= 251;
	      {1'd0, 8'd60}: s2wr0 <= 252;
	      {1'd0, 8'd61}: s2wr0 <= 253;
	      {1'd0, 8'd62}: s2wr0 <= 254;
	      {1'd0, 8'd63}: s2wr0 <= 255;
	      {1'd0, 8'd64}: s2wr0 <= 128;
	      {1'd0, 8'd65}: s2wr0 <= 129;
	      {1'd0, 8'd66}: s2wr0 <= 130;
	      {1'd0, 8'd67}: s2wr0 <= 131;
	      {1'd0, 8'd68}: s2wr0 <= 132;
	      {1'd0, 8'd69}: s2wr0 <= 133;
	      {1'd0, 8'd70}: s2wr0 <= 134;
	      {1'd0, 8'd71}: s2wr0 <= 135;
	      {1'd0, 8'd72}: s2wr0 <= 136;
	      {1'd0, 8'd73}: s2wr0 <= 137;
	      {1'd0, 8'd74}: s2wr0 <= 138;
	      {1'd0, 8'd75}: s2wr0 <= 139;
	      {1'd0, 8'd76}: s2wr0 <= 140;
	      {1'd0, 8'd77}: s2wr0 <= 141;
	      {1'd0, 8'd78}: s2wr0 <= 142;
	      {1'd0, 8'd79}: s2wr0 <= 143;
	      {1'd0, 8'd80}: s2wr0 <= 144;
	      {1'd0, 8'd81}: s2wr0 <= 145;
	      {1'd0, 8'd82}: s2wr0 <= 146;
	      {1'd0, 8'd83}: s2wr0 <= 147;
	      {1'd0, 8'd84}: s2wr0 <= 148;
	      {1'd0, 8'd85}: s2wr0 <= 149;
	      {1'd0, 8'd86}: s2wr0 <= 150;
	      {1'd0, 8'd87}: s2wr0 <= 151;
	      {1'd0, 8'd88}: s2wr0 <= 152;
	      {1'd0, 8'd89}: s2wr0 <= 153;
	      {1'd0, 8'd90}: s2wr0 <= 154;
	      {1'd0, 8'd91}: s2wr0 <= 155;
	      {1'd0, 8'd92}: s2wr0 <= 156;
	      {1'd0, 8'd93}: s2wr0 <= 157;
	      {1'd0, 8'd94}: s2wr0 <= 158;
	      {1'd0, 8'd95}: s2wr0 <= 159;
	      {1'd0, 8'd96}: s2wr0 <= 160;
	      {1'd0, 8'd97}: s2wr0 <= 161;
	      {1'd0, 8'd98}: s2wr0 <= 162;
	      {1'd0, 8'd99}: s2wr0 <= 163;
	      {1'd0, 8'd100}: s2wr0 <= 164;
	      {1'd0, 8'd101}: s2wr0 <= 165;
	      {1'd0, 8'd102}: s2wr0 <= 166;
	      {1'd0, 8'd103}: s2wr0 <= 167;
	      {1'd0, 8'd104}: s2wr0 <= 168;
	      {1'd0, 8'd105}: s2wr0 <= 169;
	      {1'd0, 8'd106}: s2wr0 <= 170;
	      {1'd0, 8'd107}: s2wr0 <= 171;
	      {1'd0, 8'd108}: s2wr0 <= 172;
	      {1'd0, 8'd109}: s2wr0 <= 173;
	      {1'd0, 8'd110}: s2wr0 <= 174;
	      {1'd0, 8'd111}: s2wr0 <= 175;
	      {1'd0, 8'd112}: s2wr0 <= 176;
	      {1'd0, 8'd113}: s2wr0 <= 177;
	      {1'd0, 8'd114}: s2wr0 <= 178;
	      {1'd0, 8'd115}: s2wr0 <= 179;
	      {1'd0, 8'd116}: s2wr0 <= 180;
	      {1'd0, 8'd117}: s2wr0 <= 181;
	      {1'd0, 8'd118}: s2wr0 <= 182;
	      {1'd0, 8'd119}: s2wr0 <= 183;
	      {1'd0, 8'd120}: s2wr0 <= 184;
	      {1'd0, 8'd121}: s2wr0 <= 185;
	      {1'd0, 8'd122}: s2wr0 <= 186;
	      {1'd0, 8'd123}: s2wr0 <= 187;
	      {1'd0, 8'd124}: s2wr0 <= 188;
	      {1'd0, 8'd125}: s2wr0 <= 189;
	      {1'd0, 8'd126}: s2wr0 <= 190;
	      {1'd0, 8'd127}: s2wr0 <= 191;
	      {1'd0, 8'd128}: s2wr0 <= 64;
	      {1'd0, 8'd129}: s2wr0 <= 65;
	      {1'd0, 8'd130}: s2wr0 <= 66;
	      {1'd0, 8'd131}: s2wr0 <= 67;
	      {1'd0, 8'd132}: s2wr0 <= 68;
	      {1'd0, 8'd133}: s2wr0 <= 69;
	      {1'd0, 8'd134}: s2wr0 <= 70;
	      {1'd0, 8'd135}: s2wr0 <= 71;
	      {1'd0, 8'd136}: s2wr0 <= 72;
	      {1'd0, 8'd137}: s2wr0 <= 73;
	      {1'd0, 8'd138}: s2wr0 <= 74;
	      {1'd0, 8'd139}: s2wr0 <= 75;
	      {1'd0, 8'd140}: s2wr0 <= 76;
	      {1'd0, 8'd141}: s2wr0 <= 77;
	      {1'd0, 8'd142}: s2wr0 <= 78;
	      {1'd0, 8'd143}: s2wr0 <= 79;
	      {1'd0, 8'd144}: s2wr0 <= 80;
	      {1'd0, 8'd145}: s2wr0 <= 81;
	      {1'd0, 8'd146}: s2wr0 <= 82;
	      {1'd0, 8'd147}: s2wr0 <= 83;
	      {1'd0, 8'd148}: s2wr0 <= 84;
	      {1'd0, 8'd149}: s2wr0 <= 85;
	      {1'd0, 8'd150}: s2wr0 <= 86;
	      {1'd0, 8'd151}: s2wr0 <= 87;
	      {1'd0, 8'd152}: s2wr0 <= 88;
	      {1'd0, 8'd153}: s2wr0 <= 89;
	      {1'd0, 8'd154}: s2wr0 <= 90;
	      {1'd0, 8'd155}: s2wr0 <= 91;
	      {1'd0, 8'd156}: s2wr0 <= 92;
	      {1'd0, 8'd157}: s2wr0 <= 93;
	      {1'd0, 8'd158}: s2wr0 <= 94;
	      {1'd0, 8'd159}: s2wr0 <= 95;
	      {1'd0, 8'd160}: s2wr0 <= 96;
	      {1'd0, 8'd161}: s2wr0 <= 97;
	      {1'd0, 8'd162}: s2wr0 <= 98;
	      {1'd0, 8'd163}: s2wr0 <= 99;
	      {1'd0, 8'd164}: s2wr0 <= 100;
	      {1'd0, 8'd165}: s2wr0 <= 101;
	      {1'd0, 8'd166}: s2wr0 <= 102;
	      {1'd0, 8'd167}: s2wr0 <= 103;
	      {1'd0, 8'd168}: s2wr0 <= 104;
	      {1'd0, 8'd169}: s2wr0 <= 105;
	      {1'd0, 8'd170}: s2wr0 <= 106;
	      {1'd0, 8'd171}: s2wr0 <= 107;
	      {1'd0, 8'd172}: s2wr0 <= 108;
	      {1'd0, 8'd173}: s2wr0 <= 109;
	      {1'd0, 8'd174}: s2wr0 <= 110;
	      {1'd0, 8'd175}: s2wr0 <= 111;
	      {1'd0, 8'd176}: s2wr0 <= 112;
	      {1'd0, 8'd177}: s2wr0 <= 113;
	      {1'd0, 8'd178}: s2wr0 <= 114;
	      {1'd0, 8'd179}: s2wr0 <= 115;
	      {1'd0, 8'd180}: s2wr0 <= 116;
	      {1'd0, 8'd181}: s2wr0 <= 117;
	      {1'd0, 8'd182}: s2wr0 <= 118;
	      {1'd0, 8'd183}: s2wr0 <= 119;
	      {1'd0, 8'd184}: s2wr0 <= 120;
	      {1'd0, 8'd185}: s2wr0 <= 121;
	      {1'd0, 8'd186}: s2wr0 <= 122;
	      {1'd0, 8'd187}: s2wr0 <= 123;
	      {1'd0, 8'd188}: s2wr0 <= 124;
	      {1'd0, 8'd189}: s2wr0 <= 125;
	      {1'd0, 8'd190}: s2wr0 <= 126;
	      {1'd0, 8'd191}: s2wr0 <= 127;
	      {1'd0, 8'd192}: s2wr0 <= 0;
	      {1'd0, 8'd193}: s2wr0 <= 1;
	      {1'd0, 8'd194}: s2wr0 <= 2;
	      {1'd0, 8'd195}: s2wr0 <= 3;
	      {1'd0, 8'd196}: s2wr0 <= 4;
	      {1'd0, 8'd197}: s2wr0 <= 5;
	      {1'd0, 8'd198}: s2wr0 <= 6;
	      {1'd0, 8'd199}: s2wr0 <= 7;
	      {1'd0, 8'd200}: s2wr0 <= 8;
	      {1'd0, 8'd201}: s2wr0 <= 9;
	      {1'd0, 8'd202}: s2wr0 <= 10;
	      {1'd0, 8'd203}: s2wr0 <= 11;
	      {1'd0, 8'd204}: s2wr0 <= 12;
	      {1'd0, 8'd205}: s2wr0 <= 13;
	      {1'd0, 8'd206}: s2wr0 <= 14;
	      {1'd0, 8'd207}: s2wr0 <= 15;
	      {1'd0, 8'd208}: s2wr0 <= 16;
	      {1'd0, 8'd209}: s2wr0 <= 17;
	      {1'd0, 8'd210}: s2wr0 <= 18;
	      {1'd0, 8'd211}: s2wr0 <= 19;
	      {1'd0, 8'd212}: s2wr0 <= 20;
	      {1'd0, 8'd213}: s2wr0 <= 21;
	      {1'd0, 8'd214}: s2wr0 <= 22;
	      {1'd0, 8'd215}: s2wr0 <= 23;
	      {1'd0, 8'd216}: s2wr0 <= 24;
	      {1'd0, 8'd217}: s2wr0 <= 25;
	      {1'd0, 8'd218}: s2wr0 <= 26;
	      {1'd0, 8'd219}: s2wr0 <= 27;
	      {1'd0, 8'd220}: s2wr0 <= 28;
	      {1'd0, 8'd221}: s2wr0 <= 29;
	      {1'd0, 8'd222}: s2wr0 <= 30;
	      {1'd0, 8'd223}: s2wr0 <= 31;
	      {1'd0, 8'd224}: s2wr0 <= 32;
	      {1'd0, 8'd225}: s2wr0 <= 33;
	      {1'd0, 8'd226}: s2wr0 <= 34;
	      {1'd0, 8'd227}: s2wr0 <= 35;
	      {1'd0, 8'd228}: s2wr0 <= 36;
	      {1'd0, 8'd229}: s2wr0 <= 37;
	      {1'd0, 8'd230}: s2wr0 <= 38;
	      {1'd0, 8'd231}: s2wr0 <= 39;
	      {1'd0, 8'd232}: s2wr0 <= 40;
	      {1'd0, 8'd233}: s2wr0 <= 41;
	      {1'd0, 8'd234}: s2wr0 <= 42;
	      {1'd0, 8'd235}: s2wr0 <= 43;
	      {1'd0, 8'd236}: s2wr0 <= 44;
	      {1'd0, 8'd237}: s2wr0 <= 45;
	      {1'd0, 8'd238}: s2wr0 <= 46;
	      {1'd0, 8'd239}: s2wr0 <= 47;
	      {1'd0, 8'd240}: s2wr0 <= 48;
	      {1'd0, 8'd241}: s2wr0 <= 49;
	      {1'd0, 8'd242}: s2wr0 <= 50;
	      {1'd0, 8'd243}: s2wr0 <= 51;
	      {1'd0, 8'd244}: s2wr0 <= 52;
	      {1'd0, 8'd245}: s2wr0 <= 53;
	      {1'd0, 8'd246}: s2wr0 <= 54;
	      {1'd0, 8'd247}: s2wr0 <= 55;
	      {1'd0, 8'd248}: s2wr0 <= 56;
	      {1'd0, 8'd249}: s2wr0 <= 57;
	      {1'd0, 8'd250}: s2wr0 <= 58;
	      {1'd0, 8'd251}: s2wr0 <= 59;
	      {1'd0, 8'd252}: s2wr0 <= 60;
	      {1'd0, 8'd253}: s2wr0 <= 61;
	      {1'd0, 8'd254}: s2wr0 <= 62;
	      {1'd0, 8'd255}: s2wr0 <= 63;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr0 is "distributed"
   always @(posedge clk) begin
      case({tm37_dd, writeCycle})
	      {1'd0, 8'd0}: s2wr1 <= 128;
	      {1'd0, 8'd1}: s2wr1 <= 129;
	      {1'd0, 8'd2}: s2wr1 <= 130;
	      {1'd0, 8'd3}: s2wr1 <= 131;
	      {1'd0, 8'd4}: s2wr1 <= 132;
	      {1'd0, 8'd5}: s2wr1 <= 133;
	      {1'd0, 8'd6}: s2wr1 <= 134;
	      {1'd0, 8'd7}: s2wr1 <= 135;
	      {1'd0, 8'd8}: s2wr1 <= 136;
	      {1'd0, 8'd9}: s2wr1 <= 137;
	      {1'd0, 8'd10}: s2wr1 <= 138;
	      {1'd0, 8'd11}: s2wr1 <= 139;
	      {1'd0, 8'd12}: s2wr1 <= 140;
	      {1'd0, 8'd13}: s2wr1 <= 141;
	      {1'd0, 8'd14}: s2wr1 <= 142;
	      {1'd0, 8'd15}: s2wr1 <= 143;
	      {1'd0, 8'd16}: s2wr1 <= 144;
	      {1'd0, 8'd17}: s2wr1 <= 145;
	      {1'd0, 8'd18}: s2wr1 <= 146;
	      {1'd0, 8'd19}: s2wr1 <= 147;
	      {1'd0, 8'd20}: s2wr1 <= 148;
	      {1'd0, 8'd21}: s2wr1 <= 149;
	      {1'd0, 8'd22}: s2wr1 <= 150;
	      {1'd0, 8'd23}: s2wr1 <= 151;
	      {1'd0, 8'd24}: s2wr1 <= 152;
	      {1'd0, 8'd25}: s2wr1 <= 153;
	      {1'd0, 8'd26}: s2wr1 <= 154;
	      {1'd0, 8'd27}: s2wr1 <= 155;
	      {1'd0, 8'd28}: s2wr1 <= 156;
	      {1'd0, 8'd29}: s2wr1 <= 157;
	      {1'd0, 8'd30}: s2wr1 <= 158;
	      {1'd0, 8'd31}: s2wr1 <= 159;
	      {1'd0, 8'd32}: s2wr1 <= 160;
	      {1'd0, 8'd33}: s2wr1 <= 161;
	      {1'd0, 8'd34}: s2wr1 <= 162;
	      {1'd0, 8'd35}: s2wr1 <= 163;
	      {1'd0, 8'd36}: s2wr1 <= 164;
	      {1'd0, 8'd37}: s2wr1 <= 165;
	      {1'd0, 8'd38}: s2wr1 <= 166;
	      {1'd0, 8'd39}: s2wr1 <= 167;
	      {1'd0, 8'd40}: s2wr1 <= 168;
	      {1'd0, 8'd41}: s2wr1 <= 169;
	      {1'd0, 8'd42}: s2wr1 <= 170;
	      {1'd0, 8'd43}: s2wr1 <= 171;
	      {1'd0, 8'd44}: s2wr1 <= 172;
	      {1'd0, 8'd45}: s2wr1 <= 173;
	      {1'd0, 8'd46}: s2wr1 <= 174;
	      {1'd0, 8'd47}: s2wr1 <= 175;
	      {1'd0, 8'd48}: s2wr1 <= 176;
	      {1'd0, 8'd49}: s2wr1 <= 177;
	      {1'd0, 8'd50}: s2wr1 <= 178;
	      {1'd0, 8'd51}: s2wr1 <= 179;
	      {1'd0, 8'd52}: s2wr1 <= 180;
	      {1'd0, 8'd53}: s2wr1 <= 181;
	      {1'd0, 8'd54}: s2wr1 <= 182;
	      {1'd0, 8'd55}: s2wr1 <= 183;
	      {1'd0, 8'd56}: s2wr1 <= 184;
	      {1'd0, 8'd57}: s2wr1 <= 185;
	      {1'd0, 8'd58}: s2wr1 <= 186;
	      {1'd0, 8'd59}: s2wr1 <= 187;
	      {1'd0, 8'd60}: s2wr1 <= 188;
	      {1'd0, 8'd61}: s2wr1 <= 189;
	      {1'd0, 8'd62}: s2wr1 <= 190;
	      {1'd0, 8'd63}: s2wr1 <= 191;
	      {1'd0, 8'd64}: s2wr1 <= 192;
	      {1'd0, 8'd65}: s2wr1 <= 193;
	      {1'd0, 8'd66}: s2wr1 <= 194;
	      {1'd0, 8'd67}: s2wr1 <= 195;
	      {1'd0, 8'd68}: s2wr1 <= 196;
	      {1'd0, 8'd69}: s2wr1 <= 197;
	      {1'd0, 8'd70}: s2wr1 <= 198;
	      {1'd0, 8'd71}: s2wr1 <= 199;
	      {1'd0, 8'd72}: s2wr1 <= 200;
	      {1'd0, 8'd73}: s2wr1 <= 201;
	      {1'd0, 8'd74}: s2wr1 <= 202;
	      {1'd0, 8'd75}: s2wr1 <= 203;
	      {1'd0, 8'd76}: s2wr1 <= 204;
	      {1'd0, 8'd77}: s2wr1 <= 205;
	      {1'd0, 8'd78}: s2wr1 <= 206;
	      {1'd0, 8'd79}: s2wr1 <= 207;
	      {1'd0, 8'd80}: s2wr1 <= 208;
	      {1'd0, 8'd81}: s2wr1 <= 209;
	      {1'd0, 8'd82}: s2wr1 <= 210;
	      {1'd0, 8'd83}: s2wr1 <= 211;
	      {1'd0, 8'd84}: s2wr1 <= 212;
	      {1'd0, 8'd85}: s2wr1 <= 213;
	      {1'd0, 8'd86}: s2wr1 <= 214;
	      {1'd0, 8'd87}: s2wr1 <= 215;
	      {1'd0, 8'd88}: s2wr1 <= 216;
	      {1'd0, 8'd89}: s2wr1 <= 217;
	      {1'd0, 8'd90}: s2wr1 <= 218;
	      {1'd0, 8'd91}: s2wr1 <= 219;
	      {1'd0, 8'd92}: s2wr1 <= 220;
	      {1'd0, 8'd93}: s2wr1 <= 221;
	      {1'd0, 8'd94}: s2wr1 <= 222;
	      {1'd0, 8'd95}: s2wr1 <= 223;
	      {1'd0, 8'd96}: s2wr1 <= 224;
	      {1'd0, 8'd97}: s2wr1 <= 225;
	      {1'd0, 8'd98}: s2wr1 <= 226;
	      {1'd0, 8'd99}: s2wr1 <= 227;
	      {1'd0, 8'd100}: s2wr1 <= 228;
	      {1'd0, 8'd101}: s2wr1 <= 229;
	      {1'd0, 8'd102}: s2wr1 <= 230;
	      {1'd0, 8'd103}: s2wr1 <= 231;
	      {1'd0, 8'd104}: s2wr1 <= 232;
	      {1'd0, 8'd105}: s2wr1 <= 233;
	      {1'd0, 8'd106}: s2wr1 <= 234;
	      {1'd0, 8'd107}: s2wr1 <= 235;
	      {1'd0, 8'd108}: s2wr1 <= 236;
	      {1'd0, 8'd109}: s2wr1 <= 237;
	      {1'd0, 8'd110}: s2wr1 <= 238;
	      {1'd0, 8'd111}: s2wr1 <= 239;
	      {1'd0, 8'd112}: s2wr1 <= 240;
	      {1'd0, 8'd113}: s2wr1 <= 241;
	      {1'd0, 8'd114}: s2wr1 <= 242;
	      {1'd0, 8'd115}: s2wr1 <= 243;
	      {1'd0, 8'd116}: s2wr1 <= 244;
	      {1'd0, 8'd117}: s2wr1 <= 245;
	      {1'd0, 8'd118}: s2wr1 <= 246;
	      {1'd0, 8'd119}: s2wr1 <= 247;
	      {1'd0, 8'd120}: s2wr1 <= 248;
	      {1'd0, 8'd121}: s2wr1 <= 249;
	      {1'd0, 8'd122}: s2wr1 <= 250;
	      {1'd0, 8'd123}: s2wr1 <= 251;
	      {1'd0, 8'd124}: s2wr1 <= 252;
	      {1'd0, 8'd125}: s2wr1 <= 253;
	      {1'd0, 8'd126}: s2wr1 <= 254;
	      {1'd0, 8'd127}: s2wr1 <= 255;
	      {1'd0, 8'd128}: s2wr1 <= 0;
	      {1'd0, 8'd129}: s2wr1 <= 1;
	      {1'd0, 8'd130}: s2wr1 <= 2;
	      {1'd0, 8'd131}: s2wr1 <= 3;
	      {1'd0, 8'd132}: s2wr1 <= 4;
	      {1'd0, 8'd133}: s2wr1 <= 5;
	      {1'd0, 8'd134}: s2wr1 <= 6;
	      {1'd0, 8'd135}: s2wr1 <= 7;
	      {1'd0, 8'd136}: s2wr1 <= 8;
	      {1'd0, 8'd137}: s2wr1 <= 9;
	      {1'd0, 8'd138}: s2wr1 <= 10;
	      {1'd0, 8'd139}: s2wr1 <= 11;
	      {1'd0, 8'd140}: s2wr1 <= 12;
	      {1'd0, 8'd141}: s2wr1 <= 13;
	      {1'd0, 8'd142}: s2wr1 <= 14;
	      {1'd0, 8'd143}: s2wr1 <= 15;
	      {1'd0, 8'd144}: s2wr1 <= 16;
	      {1'd0, 8'd145}: s2wr1 <= 17;
	      {1'd0, 8'd146}: s2wr1 <= 18;
	      {1'd0, 8'd147}: s2wr1 <= 19;
	      {1'd0, 8'd148}: s2wr1 <= 20;
	      {1'd0, 8'd149}: s2wr1 <= 21;
	      {1'd0, 8'd150}: s2wr1 <= 22;
	      {1'd0, 8'd151}: s2wr1 <= 23;
	      {1'd0, 8'd152}: s2wr1 <= 24;
	      {1'd0, 8'd153}: s2wr1 <= 25;
	      {1'd0, 8'd154}: s2wr1 <= 26;
	      {1'd0, 8'd155}: s2wr1 <= 27;
	      {1'd0, 8'd156}: s2wr1 <= 28;
	      {1'd0, 8'd157}: s2wr1 <= 29;
	      {1'd0, 8'd158}: s2wr1 <= 30;
	      {1'd0, 8'd159}: s2wr1 <= 31;
	      {1'd0, 8'd160}: s2wr1 <= 32;
	      {1'd0, 8'd161}: s2wr1 <= 33;
	      {1'd0, 8'd162}: s2wr1 <= 34;
	      {1'd0, 8'd163}: s2wr1 <= 35;
	      {1'd0, 8'd164}: s2wr1 <= 36;
	      {1'd0, 8'd165}: s2wr1 <= 37;
	      {1'd0, 8'd166}: s2wr1 <= 38;
	      {1'd0, 8'd167}: s2wr1 <= 39;
	      {1'd0, 8'd168}: s2wr1 <= 40;
	      {1'd0, 8'd169}: s2wr1 <= 41;
	      {1'd0, 8'd170}: s2wr1 <= 42;
	      {1'd0, 8'd171}: s2wr1 <= 43;
	      {1'd0, 8'd172}: s2wr1 <= 44;
	      {1'd0, 8'd173}: s2wr1 <= 45;
	      {1'd0, 8'd174}: s2wr1 <= 46;
	      {1'd0, 8'd175}: s2wr1 <= 47;
	      {1'd0, 8'd176}: s2wr1 <= 48;
	      {1'd0, 8'd177}: s2wr1 <= 49;
	      {1'd0, 8'd178}: s2wr1 <= 50;
	      {1'd0, 8'd179}: s2wr1 <= 51;
	      {1'd0, 8'd180}: s2wr1 <= 52;
	      {1'd0, 8'd181}: s2wr1 <= 53;
	      {1'd0, 8'd182}: s2wr1 <= 54;
	      {1'd0, 8'd183}: s2wr1 <= 55;
	      {1'd0, 8'd184}: s2wr1 <= 56;
	      {1'd0, 8'd185}: s2wr1 <= 57;
	      {1'd0, 8'd186}: s2wr1 <= 58;
	      {1'd0, 8'd187}: s2wr1 <= 59;
	      {1'd0, 8'd188}: s2wr1 <= 60;
	      {1'd0, 8'd189}: s2wr1 <= 61;
	      {1'd0, 8'd190}: s2wr1 <= 62;
	      {1'd0, 8'd191}: s2wr1 <= 63;
	      {1'd0, 8'd192}: s2wr1 <= 64;
	      {1'd0, 8'd193}: s2wr1 <= 65;
	      {1'd0, 8'd194}: s2wr1 <= 66;
	      {1'd0, 8'd195}: s2wr1 <= 67;
	      {1'd0, 8'd196}: s2wr1 <= 68;
	      {1'd0, 8'd197}: s2wr1 <= 69;
	      {1'd0, 8'd198}: s2wr1 <= 70;
	      {1'd0, 8'd199}: s2wr1 <= 71;
	      {1'd0, 8'd200}: s2wr1 <= 72;
	      {1'd0, 8'd201}: s2wr1 <= 73;
	      {1'd0, 8'd202}: s2wr1 <= 74;
	      {1'd0, 8'd203}: s2wr1 <= 75;
	      {1'd0, 8'd204}: s2wr1 <= 76;
	      {1'd0, 8'd205}: s2wr1 <= 77;
	      {1'd0, 8'd206}: s2wr1 <= 78;
	      {1'd0, 8'd207}: s2wr1 <= 79;
	      {1'd0, 8'd208}: s2wr1 <= 80;
	      {1'd0, 8'd209}: s2wr1 <= 81;
	      {1'd0, 8'd210}: s2wr1 <= 82;
	      {1'd0, 8'd211}: s2wr1 <= 83;
	      {1'd0, 8'd212}: s2wr1 <= 84;
	      {1'd0, 8'd213}: s2wr1 <= 85;
	      {1'd0, 8'd214}: s2wr1 <= 86;
	      {1'd0, 8'd215}: s2wr1 <= 87;
	      {1'd0, 8'd216}: s2wr1 <= 88;
	      {1'd0, 8'd217}: s2wr1 <= 89;
	      {1'd0, 8'd218}: s2wr1 <= 90;
	      {1'd0, 8'd219}: s2wr1 <= 91;
	      {1'd0, 8'd220}: s2wr1 <= 92;
	      {1'd0, 8'd221}: s2wr1 <= 93;
	      {1'd0, 8'd222}: s2wr1 <= 94;
	      {1'd0, 8'd223}: s2wr1 <= 95;
	      {1'd0, 8'd224}: s2wr1 <= 96;
	      {1'd0, 8'd225}: s2wr1 <= 97;
	      {1'd0, 8'd226}: s2wr1 <= 98;
	      {1'd0, 8'd227}: s2wr1 <= 99;
	      {1'd0, 8'd228}: s2wr1 <= 100;
	      {1'd0, 8'd229}: s2wr1 <= 101;
	      {1'd0, 8'd230}: s2wr1 <= 102;
	      {1'd0, 8'd231}: s2wr1 <= 103;
	      {1'd0, 8'd232}: s2wr1 <= 104;
	      {1'd0, 8'd233}: s2wr1 <= 105;
	      {1'd0, 8'd234}: s2wr1 <= 106;
	      {1'd0, 8'd235}: s2wr1 <= 107;
	      {1'd0, 8'd236}: s2wr1 <= 108;
	      {1'd0, 8'd237}: s2wr1 <= 109;
	      {1'd0, 8'd238}: s2wr1 <= 110;
	      {1'd0, 8'd239}: s2wr1 <= 111;
	      {1'd0, 8'd240}: s2wr1 <= 112;
	      {1'd0, 8'd241}: s2wr1 <= 113;
	      {1'd0, 8'd242}: s2wr1 <= 114;
	      {1'd0, 8'd243}: s2wr1 <= 115;
	      {1'd0, 8'd244}: s2wr1 <= 116;
	      {1'd0, 8'd245}: s2wr1 <= 117;
	      {1'd0, 8'd246}: s2wr1 <= 118;
	      {1'd0, 8'd247}: s2wr1 <= 119;
	      {1'd0, 8'd248}: s2wr1 <= 120;
	      {1'd0, 8'd249}: s2wr1 <= 121;
	      {1'd0, 8'd250}: s2wr1 <= 122;
	      {1'd0, 8'd251}: s2wr1 <= 123;
	      {1'd0, 8'd252}: s2wr1 <= 124;
	      {1'd0, 8'd253}: s2wr1 <= 125;
	      {1'd0, 8'd254}: s2wr1 <= 126;
	      {1'd0, 8'd255}: s2wr1 <= 127;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr1 is "distributed"
   always @(posedge clk) begin
      case({tm37_dd, writeCycle})
	      {1'd0, 8'd0}: s2wr2 <= 64;
	      {1'd0, 8'd1}: s2wr2 <= 65;
	      {1'd0, 8'd2}: s2wr2 <= 66;
	      {1'd0, 8'd3}: s2wr2 <= 67;
	      {1'd0, 8'd4}: s2wr2 <= 68;
	      {1'd0, 8'd5}: s2wr2 <= 69;
	      {1'd0, 8'd6}: s2wr2 <= 70;
	      {1'd0, 8'd7}: s2wr2 <= 71;
	      {1'd0, 8'd8}: s2wr2 <= 72;
	      {1'd0, 8'd9}: s2wr2 <= 73;
	      {1'd0, 8'd10}: s2wr2 <= 74;
	      {1'd0, 8'd11}: s2wr2 <= 75;
	      {1'd0, 8'd12}: s2wr2 <= 76;
	      {1'd0, 8'd13}: s2wr2 <= 77;
	      {1'd0, 8'd14}: s2wr2 <= 78;
	      {1'd0, 8'd15}: s2wr2 <= 79;
	      {1'd0, 8'd16}: s2wr2 <= 80;
	      {1'd0, 8'd17}: s2wr2 <= 81;
	      {1'd0, 8'd18}: s2wr2 <= 82;
	      {1'd0, 8'd19}: s2wr2 <= 83;
	      {1'd0, 8'd20}: s2wr2 <= 84;
	      {1'd0, 8'd21}: s2wr2 <= 85;
	      {1'd0, 8'd22}: s2wr2 <= 86;
	      {1'd0, 8'd23}: s2wr2 <= 87;
	      {1'd0, 8'd24}: s2wr2 <= 88;
	      {1'd0, 8'd25}: s2wr2 <= 89;
	      {1'd0, 8'd26}: s2wr2 <= 90;
	      {1'd0, 8'd27}: s2wr2 <= 91;
	      {1'd0, 8'd28}: s2wr2 <= 92;
	      {1'd0, 8'd29}: s2wr2 <= 93;
	      {1'd0, 8'd30}: s2wr2 <= 94;
	      {1'd0, 8'd31}: s2wr2 <= 95;
	      {1'd0, 8'd32}: s2wr2 <= 96;
	      {1'd0, 8'd33}: s2wr2 <= 97;
	      {1'd0, 8'd34}: s2wr2 <= 98;
	      {1'd0, 8'd35}: s2wr2 <= 99;
	      {1'd0, 8'd36}: s2wr2 <= 100;
	      {1'd0, 8'd37}: s2wr2 <= 101;
	      {1'd0, 8'd38}: s2wr2 <= 102;
	      {1'd0, 8'd39}: s2wr2 <= 103;
	      {1'd0, 8'd40}: s2wr2 <= 104;
	      {1'd0, 8'd41}: s2wr2 <= 105;
	      {1'd0, 8'd42}: s2wr2 <= 106;
	      {1'd0, 8'd43}: s2wr2 <= 107;
	      {1'd0, 8'd44}: s2wr2 <= 108;
	      {1'd0, 8'd45}: s2wr2 <= 109;
	      {1'd0, 8'd46}: s2wr2 <= 110;
	      {1'd0, 8'd47}: s2wr2 <= 111;
	      {1'd0, 8'd48}: s2wr2 <= 112;
	      {1'd0, 8'd49}: s2wr2 <= 113;
	      {1'd0, 8'd50}: s2wr2 <= 114;
	      {1'd0, 8'd51}: s2wr2 <= 115;
	      {1'd0, 8'd52}: s2wr2 <= 116;
	      {1'd0, 8'd53}: s2wr2 <= 117;
	      {1'd0, 8'd54}: s2wr2 <= 118;
	      {1'd0, 8'd55}: s2wr2 <= 119;
	      {1'd0, 8'd56}: s2wr2 <= 120;
	      {1'd0, 8'd57}: s2wr2 <= 121;
	      {1'd0, 8'd58}: s2wr2 <= 122;
	      {1'd0, 8'd59}: s2wr2 <= 123;
	      {1'd0, 8'd60}: s2wr2 <= 124;
	      {1'd0, 8'd61}: s2wr2 <= 125;
	      {1'd0, 8'd62}: s2wr2 <= 126;
	      {1'd0, 8'd63}: s2wr2 <= 127;
	      {1'd0, 8'd64}: s2wr2 <= 0;
	      {1'd0, 8'd65}: s2wr2 <= 1;
	      {1'd0, 8'd66}: s2wr2 <= 2;
	      {1'd0, 8'd67}: s2wr2 <= 3;
	      {1'd0, 8'd68}: s2wr2 <= 4;
	      {1'd0, 8'd69}: s2wr2 <= 5;
	      {1'd0, 8'd70}: s2wr2 <= 6;
	      {1'd0, 8'd71}: s2wr2 <= 7;
	      {1'd0, 8'd72}: s2wr2 <= 8;
	      {1'd0, 8'd73}: s2wr2 <= 9;
	      {1'd0, 8'd74}: s2wr2 <= 10;
	      {1'd0, 8'd75}: s2wr2 <= 11;
	      {1'd0, 8'd76}: s2wr2 <= 12;
	      {1'd0, 8'd77}: s2wr2 <= 13;
	      {1'd0, 8'd78}: s2wr2 <= 14;
	      {1'd0, 8'd79}: s2wr2 <= 15;
	      {1'd0, 8'd80}: s2wr2 <= 16;
	      {1'd0, 8'd81}: s2wr2 <= 17;
	      {1'd0, 8'd82}: s2wr2 <= 18;
	      {1'd0, 8'd83}: s2wr2 <= 19;
	      {1'd0, 8'd84}: s2wr2 <= 20;
	      {1'd0, 8'd85}: s2wr2 <= 21;
	      {1'd0, 8'd86}: s2wr2 <= 22;
	      {1'd0, 8'd87}: s2wr2 <= 23;
	      {1'd0, 8'd88}: s2wr2 <= 24;
	      {1'd0, 8'd89}: s2wr2 <= 25;
	      {1'd0, 8'd90}: s2wr2 <= 26;
	      {1'd0, 8'd91}: s2wr2 <= 27;
	      {1'd0, 8'd92}: s2wr2 <= 28;
	      {1'd0, 8'd93}: s2wr2 <= 29;
	      {1'd0, 8'd94}: s2wr2 <= 30;
	      {1'd0, 8'd95}: s2wr2 <= 31;
	      {1'd0, 8'd96}: s2wr2 <= 32;
	      {1'd0, 8'd97}: s2wr2 <= 33;
	      {1'd0, 8'd98}: s2wr2 <= 34;
	      {1'd0, 8'd99}: s2wr2 <= 35;
	      {1'd0, 8'd100}: s2wr2 <= 36;
	      {1'd0, 8'd101}: s2wr2 <= 37;
	      {1'd0, 8'd102}: s2wr2 <= 38;
	      {1'd0, 8'd103}: s2wr2 <= 39;
	      {1'd0, 8'd104}: s2wr2 <= 40;
	      {1'd0, 8'd105}: s2wr2 <= 41;
	      {1'd0, 8'd106}: s2wr2 <= 42;
	      {1'd0, 8'd107}: s2wr2 <= 43;
	      {1'd0, 8'd108}: s2wr2 <= 44;
	      {1'd0, 8'd109}: s2wr2 <= 45;
	      {1'd0, 8'd110}: s2wr2 <= 46;
	      {1'd0, 8'd111}: s2wr2 <= 47;
	      {1'd0, 8'd112}: s2wr2 <= 48;
	      {1'd0, 8'd113}: s2wr2 <= 49;
	      {1'd0, 8'd114}: s2wr2 <= 50;
	      {1'd0, 8'd115}: s2wr2 <= 51;
	      {1'd0, 8'd116}: s2wr2 <= 52;
	      {1'd0, 8'd117}: s2wr2 <= 53;
	      {1'd0, 8'd118}: s2wr2 <= 54;
	      {1'd0, 8'd119}: s2wr2 <= 55;
	      {1'd0, 8'd120}: s2wr2 <= 56;
	      {1'd0, 8'd121}: s2wr2 <= 57;
	      {1'd0, 8'd122}: s2wr2 <= 58;
	      {1'd0, 8'd123}: s2wr2 <= 59;
	      {1'd0, 8'd124}: s2wr2 <= 60;
	      {1'd0, 8'd125}: s2wr2 <= 61;
	      {1'd0, 8'd126}: s2wr2 <= 62;
	      {1'd0, 8'd127}: s2wr2 <= 63;
	      {1'd0, 8'd128}: s2wr2 <= 192;
	      {1'd0, 8'd129}: s2wr2 <= 193;
	      {1'd0, 8'd130}: s2wr2 <= 194;
	      {1'd0, 8'd131}: s2wr2 <= 195;
	      {1'd0, 8'd132}: s2wr2 <= 196;
	      {1'd0, 8'd133}: s2wr2 <= 197;
	      {1'd0, 8'd134}: s2wr2 <= 198;
	      {1'd0, 8'd135}: s2wr2 <= 199;
	      {1'd0, 8'd136}: s2wr2 <= 200;
	      {1'd0, 8'd137}: s2wr2 <= 201;
	      {1'd0, 8'd138}: s2wr2 <= 202;
	      {1'd0, 8'd139}: s2wr2 <= 203;
	      {1'd0, 8'd140}: s2wr2 <= 204;
	      {1'd0, 8'd141}: s2wr2 <= 205;
	      {1'd0, 8'd142}: s2wr2 <= 206;
	      {1'd0, 8'd143}: s2wr2 <= 207;
	      {1'd0, 8'd144}: s2wr2 <= 208;
	      {1'd0, 8'd145}: s2wr2 <= 209;
	      {1'd0, 8'd146}: s2wr2 <= 210;
	      {1'd0, 8'd147}: s2wr2 <= 211;
	      {1'd0, 8'd148}: s2wr2 <= 212;
	      {1'd0, 8'd149}: s2wr2 <= 213;
	      {1'd0, 8'd150}: s2wr2 <= 214;
	      {1'd0, 8'd151}: s2wr2 <= 215;
	      {1'd0, 8'd152}: s2wr2 <= 216;
	      {1'd0, 8'd153}: s2wr2 <= 217;
	      {1'd0, 8'd154}: s2wr2 <= 218;
	      {1'd0, 8'd155}: s2wr2 <= 219;
	      {1'd0, 8'd156}: s2wr2 <= 220;
	      {1'd0, 8'd157}: s2wr2 <= 221;
	      {1'd0, 8'd158}: s2wr2 <= 222;
	      {1'd0, 8'd159}: s2wr2 <= 223;
	      {1'd0, 8'd160}: s2wr2 <= 224;
	      {1'd0, 8'd161}: s2wr2 <= 225;
	      {1'd0, 8'd162}: s2wr2 <= 226;
	      {1'd0, 8'd163}: s2wr2 <= 227;
	      {1'd0, 8'd164}: s2wr2 <= 228;
	      {1'd0, 8'd165}: s2wr2 <= 229;
	      {1'd0, 8'd166}: s2wr2 <= 230;
	      {1'd0, 8'd167}: s2wr2 <= 231;
	      {1'd0, 8'd168}: s2wr2 <= 232;
	      {1'd0, 8'd169}: s2wr2 <= 233;
	      {1'd0, 8'd170}: s2wr2 <= 234;
	      {1'd0, 8'd171}: s2wr2 <= 235;
	      {1'd0, 8'd172}: s2wr2 <= 236;
	      {1'd0, 8'd173}: s2wr2 <= 237;
	      {1'd0, 8'd174}: s2wr2 <= 238;
	      {1'd0, 8'd175}: s2wr2 <= 239;
	      {1'd0, 8'd176}: s2wr2 <= 240;
	      {1'd0, 8'd177}: s2wr2 <= 241;
	      {1'd0, 8'd178}: s2wr2 <= 242;
	      {1'd0, 8'd179}: s2wr2 <= 243;
	      {1'd0, 8'd180}: s2wr2 <= 244;
	      {1'd0, 8'd181}: s2wr2 <= 245;
	      {1'd0, 8'd182}: s2wr2 <= 246;
	      {1'd0, 8'd183}: s2wr2 <= 247;
	      {1'd0, 8'd184}: s2wr2 <= 248;
	      {1'd0, 8'd185}: s2wr2 <= 249;
	      {1'd0, 8'd186}: s2wr2 <= 250;
	      {1'd0, 8'd187}: s2wr2 <= 251;
	      {1'd0, 8'd188}: s2wr2 <= 252;
	      {1'd0, 8'd189}: s2wr2 <= 253;
	      {1'd0, 8'd190}: s2wr2 <= 254;
	      {1'd0, 8'd191}: s2wr2 <= 255;
	      {1'd0, 8'd192}: s2wr2 <= 128;
	      {1'd0, 8'd193}: s2wr2 <= 129;
	      {1'd0, 8'd194}: s2wr2 <= 130;
	      {1'd0, 8'd195}: s2wr2 <= 131;
	      {1'd0, 8'd196}: s2wr2 <= 132;
	      {1'd0, 8'd197}: s2wr2 <= 133;
	      {1'd0, 8'd198}: s2wr2 <= 134;
	      {1'd0, 8'd199}: s2wr2 <= 135;
	      {1'd0, 8'd200}: s2wr2 <= 136;
	      {1'd0, 8'd201}: s2wr2 <= 137;
	      {1'd0, 8'd202}: s2wr2 <= 138;
	      {1'd0, 8'd203}: s2wr2 <= 139;
	      {1'd0, 8'd204}: s2wr2 <= 140;
	      {1'd0, 8'd205}: s2wr2 <= 141;
	      {1'd0, 8'd206}: s2wr2 <= 142;
	      {1'd0, 8'd207}: s2wr2 <= 143;
	      {1'd0, 8'd208}: s2wr2 <= 144;
	      {1'd0, 8'd209}: s2wr2 <= 145;
	      {1'd0, 8'd210}: s2wr2 <= 146;
	      {1'd0, 8'd211}: s2wr2 <= 147;
	      {1'd0, 8'd212}: s2wr2 <= 148;
	      {1'd0, 8'd213}: s2wr2 <= 149;
	      {1'd0, 8'd214}: s2wr2 <= 150;
	      {1'd0, 8'd215}: s2wr2 <= 151;
	      {1'd0, 8'd216}: s2wr2 <= 152;
	      {1'd0, 8'd217}: s2wr2 <= 153;
	      {1'd0, 8'd218}: s2wr2 <= 154;
	      {1'd0, 8'd219}: s2wr2 <= 155;
	      {1'd0, 8'd220}: s2wr2 <= 156;
	      {1'd0, 8'd221}: s2wr2 <= 157;
	      {1'd0, 8'd222}: s2wr2 <= 158;
	      {1'd0, 8'd223}: s2wr2 <= 159;
	      {1'd0, 8'd224}: s2wr2 <= 160;
	      {1'd0, 8'd225}: s2wr2 <= 161;
	      {1'd0, 8'd226}: s2wr2 <= 162;
	      {1'd0, 8'd227}: s2wr2 <= 163;
	      {1'd0, 8'd228}: s2wr2 <= 164;
	      {1'd0, 8'd229}: s2wr2 <= 165;
	      {1'd0, 8'd230}: s2wr2 <= 166;
	      {1'd0, 8'd231}: s2wr2 <= 167;
	      {1'd0, 8'd232}: s2wr2 <= 168;
	      {1'd0, 8'd233}: s2wr2 <= 169;
	      {1'd0, 8'd234}: s2wr2 <= 170;
	      {1'd0, 8'd235}: s2wr2 <= 171;
	      {1'd0, 8'd236}: s2wr2 <= 172;
	      {1'd0, 8'd237}: s2wr2 <= 173;
	      {1'd0, 8'd238}: s2wr2 <= 174;
	      {1'd0, 8'd239}: s2wr2 <= 175;
	      {1'd0, 8'd240}: s2wr2 <= 176;
	      {1'd0, 8'd241}: s2wr2 <= 177;
	      {1'd0, 8'd242}: s2wr2 <= 178;
	      {1'd0, 8'd243}: s2wr2 <= 179;
	      {1'd0, 8'd244}: s2wr2 <= 180;
	      {1'd0, 8'd245}: s2wr2 <= 181;
	      {1'd0, 8'd246}: s2wr2 <= 182;
	      {1'd0, 8'd247}: s2wr2 <= 183;
	      {1'd0, 8'd248}: s2wr2 <= 184;
	      {1'd0, 8'd249}: s2wr2 <= 185;
	      {1'd0, 8'd250}: s2wr2 <= 186;
	      {1'd0, 8'd251}: s2wr2 <= 187;
	      {1'd0, 8'd252}: s2wr2 <= 188;
	      {1'd0, 8'd253}: s2wr2 <= 189;
	      {1'd0, 8'd254}: s2wr2 <= 190;
	      {1'd0, 8'd255}: s2wr2 <= 191;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr2 is "distributed"
   always @(posedge clk) begin
      case({tm37_dd, writeCycle})
	      {1'd0, 8'd0}: s2wr3 <= 0;
	      {1'd0, 8'd1}: s2wr3 <= 1;
	      {1'd0, 8'd2}: s2wr3 <= 2;
	      {1'd0, 8'd3}: s2wr3 <= 3;
	      {1'd0, 8'd4}: s2wr3 <= 4;
	      {1'd0, 8'd5}: s2wr3 <= 5;
	      {1'd0, 8'd6}: s2wr3 <= 6;
	      {1'd0, 8'd7}: s2wr3 <= 7;
	      {1'd0, 8'd8}: s2wr3 <= 8;
	      {1'd0, 8'd9}: s2wr3 <= 9;
	      {1'd0, 8'd10}: s2wr3 <= 10;
	      {1'd0, 8'd11}: s2wr3 <= 11;
	      {1'd0, 8'd12}: s2wr3 <= 12;
	      {1'd0, 8'd13}: s2wr3 <= 13;
	      {1'd0, 8'd14}: s2wr3 <= 14;
	      {1'd0, 8'd15}: s2wr3 <= 15;
	      {1'd0, 8'd16}: s2wr3 <= 16;
	      {1'd0, 8'd17}: s2wr3 <= 17;
	      {1'd0, 8'd18}: s2wr3 <= 18;
	      {1'd0, 8'd19}: s2wr3 <= 19;
	      {1'd0, 8'd20}: s2wr3 <= 20;
	      {1'd0, 8'd21}: s2wr3 <= 21;
	      {1'd0, 8'd22}: s2wr3 <= 22;
	      {1'd0, 8'd23}: s2wr3 <= 23;
	      {1'd0, 8'd24}: s2wr3 <= 24;
	      {1'd0, 8'd25}: s2wr3 <= 25;
	      {1'd0, 8'd26}: s2wr3 <= 26;
	      {1'd0, 8'd27}: s2wr3 <= 27;
	      {1'd0, 8'd28}: s2wr3 <= 28;
	      {1'd0, 8'd29}: s2wr3 <= 29;
	      {1'd0, 8'd30}: s2wr3 <= 30;
	      {1'd0, 8'd31}: s2wr3 <= 31;
	      {1'd0, 8'd32}: s2wr3 <= 32;
	      {1'd0, 8'd33}: s2wr3 <= 33;
	      {1'd0, 8'd34}: s2wr3 <= 34;
	      {1'd0, 8'd35}: s2wr3 <= 35;
	      {1'd0, 8'd36}: s2wr3 <= 36;
	      {1'd0, 8'd37}: s2wr3 <= 37;
	      {1'd0, 8'd38}: s2wr3 <= 38;
	      {1'd0, 8'd39}: s2wr3 <= 39;
	      {1'd0, 8'd40}: s2wr3 <= 40;
	      {1'd0, 8'd41}: s2wr3 <= 41;
	      {1'd0, 8'd42}: s2wr3 <= 42;
	      {1'd0, 8'd43}: s2wr3 <= 43;
	      {1'd0, 8'd44}: s2wr3 <= 44;
	      {1'd0, 8'd45}: s2wr3 <= 45;
	      {1'd0, 8'd46}: s2wr3 <= 46;
	      {1'd0, 8'd47}: s2wr3 <= 47;
	      {1'd0, 8'd48}: s2wr3 <= 48;
	      {1'd0, 8'd49}: s2wr3 <= 49;
	      {1'd0, 8'd50}: s2wr3 <= 50;
	      {1'd0, 8'd51}: s2wr3 <= 51;
	      {1'd0, 8'd52}: s2wr3 <= 52;
	      {1'd0, 8'd53}: s2wr3 <= 53;
	      {1'd0, 8'd54}: s2wr3 <= 54;
	      {1'd0, 8'd55}: s2wr3 <= 55;
	      {1'd0, 8'd56}: s2wr3 <= 56;
	      {1'd0, 8'd57}: s2wr3 <= 57;
	      {1'd0, 8'd58}: s2wr3 <= 58;
	      {1'd0, 8'd59}: s2wr3 <= 59;
	      {1'd0, 8'd60}: s2wr3 <= 60;
	      {1'd0, 8'd61}: s2wr3 <= 61;
	      {1'd0, 8'd62}: s2wr3 <= 62;
	      {1'd0, 8'd63}: s2wr3 <= 63;
	      {1'd0, 8'd64}: s2wr3 <= 64;
	      {1'd0, 8'd65}: s2wr3 <= 65;
	      {1'd0, 8'd66}: s2wr3 <= 66;
	      {1'd0, 8'd67}: s2wr3 <= 67;
	      {1'd0, 8'd68}: s2wr3 <= 68;
	      {1'd0, 8'd69}: s2wr3 <= 69;
	      {1'd0, 8'd70}: s2wr3 <= 70;
	      {1'd0, 8'd71}: s2wr3 <= 71;
	      {1'd0, 8'd72}: s2wr3 <= 72;
	      {1'd0, 8'd73}: s2wr3 <= 73;
	      {1'd0, 8'd74}: s2wr3 <= 74;
	      {1'd0, 8'd75}: s2wr3 <= 75;
	      {1'd0, 8'd76}: s2wr3 <= 76;
	      {1'd0, 8'd77}: s2wr3 <= 77;
	      {1'd0, 8'd78}: s2wr3 <= 78;
	      {1'd0, 8'd79}: s2wr3 <= 79;
	      {1'd0, 8'd80}: s2wr3 <= 80;
	      {1'd0, 8'd81}: s2wr3 <= 81;
	      {1'd0, 8'd82}: s2wr3 <= 82;
	      {1'd0, 8'd83}: s2wr3 <= 83;
	      {1'd0, 8'd84}: s2wr3 <= 84;
	      {1'd0, 8'd85}: s2wr3 <= 85;
	      {1'd0, 8'd86}: s2wr3 <= 86;
	      {1'd0, 8'd87}: s2wr3 <= 87;
	      {1'd0, 8'd88}: s2wr3 <= 88;
	      {1'd0, 8'd89}: s2wr3 <= 89;
	      {1'd0, 8'd90}: s2wr3 <= 90;
	      {1'd0, 8'd91}: s2wr3 <= 91;
	      {1'd0, 8'd92}: s2wr3 <= 92;
	      {1'd0, 8'd93}: s2wr3 <= 93;
	      {1'd0, 8'd94}: s2wr3 <= 94;
	      {1'd0, 8'd95}: s2wr3 <= 95;
	      {1'd0, 8'd96}: s2wr3 <= 96;
	      {1'd0, 8'd97}: s2wr3 <= 97;
	      {1'd0, 8'd98}: s2wr3 <= 98;
	      {1'd0, 8'd99}: s2wr3 <= 99;
	      {1'd0, 8'd100}: s2wr3 <= 100;
	      {1'd0, 8'd101}: s2wr3 <= 101;
	      {1'd0, 8'd102}: s2wr3 <= 102;
	      {1'd0, 8'd103}: s2wr3 <= 103;
	      {1'd0, 8'd104}: s2wr3 <= 104;
	      {1'd0, 8'd105}: s2wr3 <= 105;
	      {1'd0, 8'd106}: s2wr3 <= 106;
	      {1'd0, 8'd107}: s2wr3 <= 107;
	      {1'd0, 8'd108}: s2wr3 <= 108;
	      {1'd0, 8'd109}: s2wr3 <= 109;
	      {1'd0, 8'd110}: s2wr3 <= 110;
	      {1'd0, 8'd111}: s2wr3 <= 111;
	      {1'd0, 8'd112}: s2wr3 <= 112;
	      {1'd0, 8'd113}: s2wr3 <= 113;
	      {1'd0, 8'd114}: s2wr3 <= 114;
	      {1'd0, 8'd115}: s2wr3 <= 115;
	      {1'd0, 8'd116}: s2wr3 <= 116;
	      {1'd0, 8'd117}: s2wr3 <= 117;
	      {1'd0, 8'd118}: s2wr3 <= 118;
	      {1'd0, 8'd119}: s2wr3 <= 119;
	      {1'd0, 8'd120}: s2wr3 <= 120;
	      {1'd0, 8'd121}: s2wr3 <= 121;
	      {1'd0, 8'd122}: s2wr3 <= 122;
	      {1'd0, 8'd123}: s2wr3 <= 123;
	      {1'd0, 8'd124}: s2wr3 <= 124;
	      {1'd0, 8'd125}: s2wr3 <= 125;
	      {1'd0, 8'd126}: s2wr3 <= 126;
	      {1'd0, 8'd127}: s2wr3 <= 127;
	      {1'd0, 8'd128}: s2wr3 <= 128;
	      {1'd0, 8'd129}: s2wr3 <= 129;
	      {1'd0, 8'd130}: s2wr3 <= 130;
	      {1'd0, 8'd131}: s2wr3 <= 131;
	      {1'd0, 8'd132}: s2wr3 <= 132;
	      {1'd0, 8'd133}: s2wr3 <= 133;
	      {1'd0, 8'd134}: s2wr3 <= 134;
	      {1'd0, 8'd135}: s2wr3 <= 135;
	      {1'd0, 8'd136}: s2wr3 <= 136;
	      {1'd0, 8'd137}: s2wr3 <= 137;
	      {1'd0, 8'd138}: s2wr3 <= 138;
	      {1'd0, 8'd139}: s2wr3 <= 139;
	      {1'd0, 8'd140}: s2wr3 <= 140;
	      {1'd0, 8'd141}: s2wr3 <= 141;
	      {1'd0, 8'd142}: s2wr3 <= 142;
	      {1'd0, 8'd143}: s2wr3 <= 143;
	      {1'd0, 8'd144}: s2wr3 <= 144;
	      {1'd0, 8'd145}: s2wr3 <= 145;
	      {1'd0, 8'd146}: s2wr3 <= 146;
	      {1'd0, 8'd147}: s2wr3 <= 147;
	      {1'd0, 8'd148}: s2wr3 <= 148;
	      {1'd0, 8'd149}: s2wr3 <= 149;
	      {1'd0, 8'd150}: s2wr3 <= 150;
	      {1'd0, 8'd151}: s2wr3 <= 151;
	      {1'd0, 8'd152}: s2wr3 <= 152;
	      {1'd0, 8'd153}: s2wr3 <= 153;
	      {1'd0, 8'd154}: s2wr3 <= 154;
	      {1'd0, 8'd155}: s2wr3 <= 155;
	      {1'd0, 8'd156}: s2wr3 <= 156;
	      {1'd0, 8'd157}: s2wr3 <= 157;
	      {1'd0, 8'd158}: s2wr3 <= 158;
	      {1'd0, 8'd159}: s2wr3 <= 159;
	      {1'd0, 8'd160}: s2wr3 <= 160;
	      {1'd0, 8'd161}: s2wr3 <= 161;
	      {1'd0, 8'd162}: s2wr3 <= 162;
	      {1'd0, 8'd163}: s2wr3 <= 163;
	      {1'd0, 8'd164}: s2wr3 <= 164;
	      {1'd0, 8'd165}: s2wr3 <= 165;
	      {1'd0, 8'd166}: s2wr3 <= 166;
	      {1'd0, 8'd167}: s2wr3 <= 167;
	      {1'd0, 8'd168}: s2wr3 <= 168;
	      {1'd0, 8'd169}: s2wr3 <= 169;
	      {1'd0, 8'd170}: s2wr3 <= 170;
	      {1'd0, 8'd171}: s2wr3 <= 171;
	      {1'd0, 8'd172}: s2wr3 <= 172;
	      {1'd0, 8'd173}: s2wr3 <= 173;
	      {1'd0, 8'd174}: s2wr3 <= 174;
	      {1'd0, 8'd175}: s2wr3 <= 175;
	      {1'd0, 8'd176}: s2wr3 <= 176;
	      {1'd0, 8'd177}: s2wr3 <= 177;
	      {1'd0, 8'd178}: s2wr3 <= 178;
	      {1'd0, 8'd179}: s2wr3 <= 179;
	      {1'd0, 8'd180}: s2wr3 <= 180;
	      {1'd0, 8'd181}: s2wr3 <= 181;
	      {1'd0, 8'd182}: s2wr3 <= 182;
	      {1'd0, 8'd183}: s2wr3 <= 183;
	      {1'd0, 8'd184}: s2wr3 <= 184;
	      {1'd0, 8'd185}: s2wr3 <= 185;
	      {1'd0, 8'd186}: s2wr3 <= 186;
	      {1'd0, 8'd187}: s2wr3 <= 187;
	      {1'd0, 8'd188}: s2wr3 <= 188;
	      {1'd0, 8'd189}: s2wr3 <= 189;
	      {1'd0, 8'd190}: s2wr3 <= 190;
	      {1'd0, 8'd191}: s2wr3 <= 191;
	      {1'd0, 8'd192}: s2wr3 <= 192;
	      {1'd0, 8'd193}: s2wr3 <= 193;
	      {1'd0, 8'd194}: s2wr3 <= 194;
	      {1'd0, 8'd195}: s2wr3 <= 195;
	      {1'd0, 8'd196}: s2wr3 <= 196;
	      {1'd0, 8'd197}: s2wr3 <= 197;
	      {1'd0, 8'd198}: s2wr3 <= 198;
	      {1'd0, 8'd199}: s2wr3 <= 199;
	      {1'd0, 8'd200}: s2wr3 <= 200;
	      {1'd0, 8'd201}: s2wr3 <= 201;
	      {1'd0, 8'd202}: s2wr3 <= 202;
	      {1'd0, 8'd203}: s2wr3 <= 203;
	      {1'd0, 8'd204}: s2wr3 <= 204;
	      {1'd0, 8'd205}: s2wr3 <= 205;
	      {1'd0, 8'd206}: s2wr3 <= 206;
	      {1'd0, 8'd207}: s2wr3 <= 207;
	      {1'd0, 8'd208}: s2wr3 <= 208;
	      {1'd0, 8'd209}: s2wr3 <= 209;
	      {1'd0, 8'd210}: s2wr3 <= 210;
	      {1'd0, 8'd211}: s2wr3 <= 211;
	      {1'd0, 8'd212}: s2wr3 <= 212;
	      {1'd0, 8'd213}: s2wr3 <= 213;
	      {1'd0, 8'd214}: s2wr3 <= 214;
	      {1'd0, 8'd215}: s2wr3 <= 215;
	      {1'd0, 8'd216}: s2wr3 <= 216;
	      {1'd0, 8'd217}: s2wr3 <= 217;
	      {1'd0, 8'd218}: s2wr3 <= 218;
	      {1'd0, 8'd219}: s2wr3 <= 219;
	      {1'd0, 8'd220}: s2wr3 <= 220;
	      {1'd0, 8'd221}: s2wr3 <= 221;
	      {1'd0, 8'd222}: s2wr3 <= 222;
	      {1'd0, 8'd223}: s2wr3 <= 223;
	      {1'd0, 8'd224}: s2wr3 <= 224;
	      {1'd0, 8'd225}: s2wr3 <= 225;
	      {1'd0, 8'd226}: s2wr3 <= 226;
	      {1'd0, 8'd227}: s2wr3 <= 227;
	      {1'd0, 8'd228}: s2wr3 <= 228;
	      {1'd0, 8'd229}: s2wr3 <= 229;
	      {1'd0, 8'd230}: s2wr3 <= 230;
	      {1'd0, 8'd231}: s2wr3 <= 231;
	      {1'd0, 8'd232}: s2wr3 <= 232;
	      {1'd0, 8'd233}: s2wr3 <= 233;
	      {1'd0, 8'd234}: s2wr3 <= 234;
	      {1'd0, 8'd235}: s2wr3 <= 235;
	      {1'd0, 8'd236}: s2wr3 <= 236;
	      {1'd0, 8'd237}: s2wr3 <= 237;
	      {1'd0, 8'd238}: s2wr3 <= 238;
	      {1'd0, 8'd239}: s2wr3 <= 239;
	      {1'd0, 8'd240}: s2wr3 <= 240;
	      {1'd0, 8'd241}: s2wr3 <= 241;
	      {1'd0, 8'd242}: s2wr3 <= 242;
	      {1'd0, 8'd243}: s2wr3 <= 243;
	      {1'd0, 8'd244}: s2wr3 <= 244;
	      {1'd0, 8'd245}: s2wr3 <= 245;
	      {1'd0, 8'd246}: s2wr3 <= 246;
	      {1'd0, 8'd247}: s2wr3 <= 247;
	      {1'd0, 8'd248}: s2wr3 <= 248;
	      {1'd0, 8'd249}: s2wr3 <= 249;
	      {1'd0, 8'd250}: s2wr3 <= 250;
	      {1'd0, 8'd251}: s2wr3 <= 251;
	      {1'd0, 8'd252}: s2wr3 <= 252;
	      {1'd0, 8'd253}: s2wr3 <= 253;
	      {1'd0, 8'd254}: s2wr3 <= 254;
	      {1'd0, 8'd255}: s2wr3 <= 255;
      endcase // case(writeCycle)
   end // always @ (posedge clk)

// synthesis attribute rom_style of s2wr3 is "distributed"
endmodule



						module multfix(clk, rst, a, b, q_sc, q_unsc);
						   parameter WIDTH=35, CYCLES=6;

						   input signed [WIDTH-1:0]    a,b;
						   output [WIDTH-1:0]          q_sc;
						   output [WIDTH-1:0]              q_unsc;

						   input                       clk, rst;
						   
						   reg signed [2*WIDTH-1:0]    q[CYCLES-1:0];
						   wire signed [2*WIDTH-1:0]   res;   
						   integer                     i;

						   assign                      res = q[CYCLES-1];   
						   
						   assign                      q_unsc = res[WIDTH-1:0];
						   assign                      q_sc = {res[2*WIDTH-1], res[2*WIDTH-4:WIDTH-2]};
						      
						   always @(posedge clk) begin
						      q[0] <= a * b;
						      for (i = 1; i < CYCLES; i=i+1) begin
						         q[i] <= q[i-1];
						      end
						   end
						                  
						endmodule 
module addfxp(a, b, q, clk);

   parameter width = 16, cycles=1;
   
   input signed [width-1:0]  a, b;
   input                     clk;   
   output signed [width-1:0] q;
   reg signed [width-1:0]    res[cycles-1:0];

   assign                    q = res[cycles-1];
   
   integer                   i;   
   
   always @(posedge clk) begin
     res[0] <= a+b;
      for (i=1; i < cycles; i = i+1)
        res[i] <= res[i-1];
      
   end
   
endmodule

module subfxp(a, b, q, clk);

   parameter width = 16, cycles=1;
   
   input signed [width-1:0]  a, b;
   input                     clk;   
   output signed [width-1:0] q;
   reg signed [width-1:0]    res[cycles-1:0];

   assign                    q = res[cycles-1];
   
   integer                   i;   
   
   always @(posedge clk) begin
     res[0] <= a-b;
      for (i=1; i < cycles; i = i+1)
        res[i] <= res[i-1];
      
   end
  
endmodule